
dry2:     file format elf64-littleriscv


Disassembly of section .text:

0000000000010000 <_ftext>:
_ftext():
   10000:	00015197          	auipc	gp,0x15
   10004:	c4018193          	addi	gp,gp,-960 # 24c40 <_gp>
   10008:	00014297          	auipc	t0,0x14
   1000c:	53028293          	addi	t0,t0,1328 # 24538 <Reg>
   10010:	00017317          	auipc	t1,0x17
   10014:	e0830313          	addi	t1,t1,-504 # 26e18 <_end>
   10018:	0002b023          	sd	zero,0(t0)
   1001c:	00828293          	addi	t0,t0,8
   10020:	fe62ece3          	bltu	t0,t1,10018 <_ftext+0x18>
   10024:	00001517          	auipc	a0,0x1
   10028:	bd450513          	addi	a0,a0,-1068 # 10bf8 <__libc_fini_array>
   1002c:	389000ef          	jal	10bb4 <atexit>
   10030:	425000ef          	jal	10c54 <__libc_init_array>
   10034:	00012503          	lw	a0,0(sp)
   10038:	00810593          	addi	a1,sp,8
   1003c:	00000613          	li	a2,0
   10040:	288000ef          	jal	102c8 <main>
   10044:	3850006f          	j	10bc8 <exit>

0000000000010048 <_fini>:
_init():
   10048:	00008067          	ret

000000000001004c <deregister_tm_clones>:
deregister_tm_clones():
   1004c:	00024537          	lui	a0,0x24
   10050:	000247b7          	lui	a5,0x24
   10054:	43850713          	addi	a4,a0,1080 # 24438 <__TMC_END__>
   10058:	43f78793          	addi	a5,a5,1087 # 2443f <__TMC_END__+0x7>
   1005c:	40e787b3          	sub	a5,a5,a4
   10060:	00e00713          	li	a4,14
   10064:	00f77c63          	bleu	a5,a4,1007c <deregister_tm_clones+0x30>
   10068:	00000337          	lui	t1,0x0
   1006c:	00030313          	mv	t1,t1
   10070:	00030663          	beqz	t1,1007c <deregister_tm_clones+0x30>
   10074:	43850513          	addi	a0,a0,1080
   10078:	00030067          	jr	t1
   1007c:	00008067          	ret

0000000000010080 <register_tm_clones>:
register_tm_clones():
   10080:	00024537          	lui	a0,0x24
   10084:	000247b7          	lui	a5,0x24
   10088:	43850593          	addi	a1,a0,1080 # 24438 <__TMC_END__>
   1008c:	43878793          	addi	a5,a5,1080 # 24438 <__TMC_END__>
   10090:	40b787b3          	sub	a5,a5,a1
   10094:	4037d793          	srai	a5,a5,0x3
   10098:	03f7d593          	srli	a1,a5,0x3f
   1009c:	00f585b3          	add	a1,a1,a5
   100a0:	4015d593          	srai	a1,a1,0x1
   100a4:	00058c63          	beqz	a1,100bc <register_tm_clones+0x3c>
   100a8:	00000337          	lui	t1,0x0
   100ac:	00030313          	mv	t1,t1
   100b0:	00030663          	beqz	t1,100bc <register_tm_clones+0x3c>
   100b4:	43850513          	addi	a0,a0,1080
   100b8:	00030067          	jr	t1
   100bc:	00008067          	ret

00000000000100c0 <__do_global_dtors_aux>:
__do_global_dtors_aux():
   100c0:	ff010113          	addi	sp,sp,-16
   100c4:	00813023          	sd	s0,0(sp)
   100c8:	9301c783          	lbu	a5,-1744(gp) # 24570 <_bss_start>
   100cc:	00113423          	sd	ra,8(sp)
   100d0:	02079663          	bnez	a5,100fc <__do_global_dtors_aux+0x3c>
   100d4:	f79ff0ef          	jal	1004c <deregister_tm_clones>
   100d8:	000007b7          	lui	a5,0x0
   100dc:	00078793          	mv	a5,a5
   100e0:	00078a63          	beqz	a5,100f4 <__do_global_dtors_aux+0x34>
   100e4:	00022537          	lui	a0,0x22
   100e8:	c5050513          	addi	a0,a0,-944 # 21c50 <__fini_array_end>
   100ec:	ffff0317          	auipc	t1,0xffff0
   100f0:	f14300e7          	jalr	t1,-236 # 0 <_ftext-0x10000>
   100f4:	00100793          	li	a5,1
   100f8:	92f18823          	sb	a5,-1744(gp) # 24570 <_bss_start>
   100fc:	00813083          	ld	ra,8(sp)
   10100:	00013403          	ld	s0,0(sp)
   10104:	01010113          	addi	sp,sp,16
   10108:	00008067          	ret

000000000001010c <frame_dummy>:
frame_dummy():
   1010c:	ff010113          	addi	sp,sp,-16
   10110:	000007b7          	lui	a5,0x0
   10114:	00113423          	sd	ra,8(sp)
   10118:	00078793          	mv	a5,a5
   1011c:	00078c63          	beqz	a5,10134 <frame_dummy+0x28>
   10120:	00022537          	lui	a0,0x22
   10124:	93818593          	addi	a1,gp,-1736 # 24578 <object.3092>
   10128:	c5050513          	addi	a0,a0,-944 # 21c50 <__fini_array_end>
   1012c:	ffff0317          	auipc	t1,0xffff0
   10130:	ed4300e7          	jalr	t1,-300 # 0 <_ftext-0x10000>
   10134:	000237b7          	lui	a5,0x23
   10138:	43078513          	addi	a0,a5,1072 # 23430 <__JCR_END__>
   1013c:	00053783          	ld	a5,0(a0)
   10140:	00079863          	bnez	a5,10150 <frame_dummy+0x44>
   10144:	00813083          	ld	ra,8(sp)
   10148:	01010113          	addi	sp,sp,16
   1014c:	f35ff06f          	j	10080 <register_tm_clones>
   10150:	000007b7          	lui	a5,0x0
   10154:	00078793          	mv	a5,a5
   10158:	fe0786e3          	beqz	a5,10144 <frame_dummy+0x38>
   1015c:	000780e7          	jalr	a5
   10160:	fe5ff06f          	j	10144 <frame_dummy+0x38>

0000000000010164 <Proc_2>:
Proc_2():
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:338
  One_Fifty  Int_Loc;  
  Enumeration   Enum_Loc;

  Int_Loc = *Int_Par_Ref + 10;
  do /* executed once */
    if (Ch_1_Glob == 'A')
   10164:	000277b7          	lui	a5,0x27
   10168:	d1c7c703          	lbu	a4,-740(a5) # 26d1c <Ch_1_Glob>
   1016c:	04100793          	li	a5,65
   10170:	00f71e63          	bne	a4,a5,1018c <Proc_2+0x28>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:342
      /* then, executed */
    {
      Int_Loc -= 1;
      *Int_Par_Ref = Int_Loc - Int_Glob;
   10174:	00052783          	lw	a5,0(a0)
   10178:	0097879b          	addiw	a5,a5,9
   1017c:	00027737          	lui	a4,0x27
   10180:	d1872703          	lw	a4,-744(a4) # 26d18 <Int_Glob>
   10184:	40e787bb          	subw	a5,a5,a4
   10188:	00f52023          	sw	a5,0(a0)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:346
      Enum_Loc = Ident_1;
    } /* if */
  while (Enum_Loc != Ident_1); /* true */
} /* Proc_2 */
   1018c:	00008067          	ret

0000000000010190 <Proc_3>:
Proc_3():
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:356
    /* executed once */
    /* Ptr_Ref_Par becomes Ptr_Glob */

Rec_Pointer *Ptr_Ref_Par;

{
   10190:	ff010113          	addi	sp,sp,-16
   10194:	00113423          	sd	ra,8(sp)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:357
  if (Ptr_Glob != Null)
   10198:	000277b7          	lui	a5,0x27
   1019c:	d207b783          	ld	a5,-736(a5) # 26d20 <Ptr_Glob>
   101a0:	00078663          	beqz	a5,101ac <Proc_3+0x1c>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:359
    /* then, executed */
    *Ptr_Ref_Par = Ptr_Glob->Ptr_Comp;
   101a4:	0007b783          	ld	a5,0(a5)
   101a8:	00f53023          	sd	a5,0(a0)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:360
  Proc_7 (10, Int_Glob, &Ptr_Glob->variant.var_1.Int_Comp);
   101ac:	000277b7          	lui	a5,0x27
   101b0:	d207b603          	ld	a2,-736(a5) # 26d20 <Ptr_Glob>
   101b4:	01060613          	addi	a2,a2,16
   101b8:	000277b7          	lui	a5,0x27
   101bc:	d187a583          	lw	a1,-744(a5) # 26d18 <Int_Glob>
   101c0:	00a00513          	li	a0,10
   101c4:	0ad000ef          	jal	10a70 <Proc_7>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:361
} /* Proc_3 */
   101c8:	00813083          	ld	ra,8(sp)
   101cc:	01010113          	addi	sp,sp,16
   101d0:	00008067          	ret

00000000000101d4 <Proc_1>:
Proc_1():
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:297
Proc_1 (Ptr_Val_Par)
/******************/

REG Rec_Pointer Ptr_Val_Par;
    /* executed once */
{
   101d4:	fe010113          	addi	sp,sp,-32
   101d8:	00113c23          	sd	ra,24(sp)
   101dc:	00813823          	sd	s0,16(sp)
   101e0:	00913423          	sd	s1,8(sp)
   101e4:	00050493          	mv	s1,a0
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:298
  REG Rec_Pointer Next_Record = Ptr_Val_Par->Ptr_Comp;  
   101e8:	00053403          	ld	s0,0(a0)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:303
                                        /* == Ptr_Glob_Next */
  /* Local variable, initialized with Ptr_Val_Par->Ptr_Comp,    */
  /* corresponds to "rename" in Ada, "with" in Pascal           */
  
  structassign (*Ptr_Val_Par->Ptr_Comp, *Ptr_Glob); 
   101ec:	03800613          	li	a2,56
   101f0:	000277b7          	lui	a5,0x27
   101f4:	d207b583          	ld	a1,-736(a5) # 26d20 <Ptr_Glob>
   101f8:	00040513          	mv	a0,s0
   101fc:	7d8000ef          	jal	109d4 <memcpy>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:304
  Ptr_Val_Par->variant.var_1.Int_Comp = 5;
   10200:	00500793          	li	a5,5
   10204:	00f4a823          	sw	a5,16(s1)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:306
  Next_Record->variant.var_1.Int_Comp 
        = Ptr_Val_Par->variant.var_1.Int_Comp;
   10208:	00f42823          	sw	a5,16(s0)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:307
  Next_Record->Ptr_Comp = Ptr_Val_Par->Ptr_Comp;
   1020c:	0004b783          	ld	a5,0(s1)
   10210:	00f43023          	sd	a5,0(s0)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:308
  Proc_3 (&Next_Record->Ptr_Comp);
   10214:	00040513          	mv	a0,s0
   10218:	f79ff0ef          	jal	10190 <Proc_3>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:311
    /* Ptr_Val_Par->Ptr_Comp->Ptr_Comp 
                        == Ptr_Glob->Ptr_Comp */
  if (Next_Record->Discr == Ident_1)
   1021c:	00842783          	lw	a5,8(s0)
   10220:	02079e63          	bnez	a5,1025c <Proc_1+0x88>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:314
    /* then, executed */
  {
    Next_Record->variant.var_1.Int_Comp = 6;
   10224:	00600793          	li	a5,6
   10228:	00f42823          	sw	a5,16(s0)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:315
    Proc_6 (Ptr_Val_Par->variant.var_1.Enum_Comp, 
   1022c:	00c40593          	addi	a1,s0,12
   10230:	00c4a503          	lw	a0,12(s1)
   10234:	7c8000ef          	jal	109fc <Proc_6>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:317
           &Next_Record->variant.var_1.Enum_Comp);
    Next_Record->Ptr_Comp = Ptr_Glob->Ptr_Comp;
   10238:	000277b7          	lui	a5,0x27
   1023c:	d207b783          	ld	a5,-736(a5) # 26d20 <Ptr_Glob>
   10240:	0007b783          	ld	a5,0(a5)
   10244:	00f43023          	sd	a5,0(s0)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:318
    Proc_7 (Next_Record->variant.var_1.Int_Comp, 10, 
   10248:	01040613          	addi	a2,s0,16
   1024c:	00a00593          	li	a1,10
   10250:	01042503          	lw	a0,16(s0)
   10254:	01d000ef          	jal	10a70 <Proc_7>
   10258:	0140006f          	j	1026c <Proc_1+0x98>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:322
           &Next_Record->variant.var_1.Int_Comp);
  }
  else /* not executed */
    structassign (*Ptr_Val_Par, *Ptr_Val_Par->Ptr_Comp);
   1025c:	03800613          	li	a2,56
   10260:	0004b583          	ld	a1,0(s1)
   10264:	00048513          	mv	a0,s1
   10268:	76c000ef          	jal	109d4 <memcpy>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:323
} /* Proc_1 */
   1026c:	01813083          	ld	ra,24(sp)
   10270:	01013403          	ld	s0,16(sp)
   10274:	00813483          	ld	s1,8(sp)
   10278:	02010113          	addi	sp,sp,32
   1027c:	00008067          	ret

0000000000010280 <Proc_4>:
Proc_4():
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:371
    /* executed once */
{
  Boolean Bool_Loc;

  Bool_Loc = Ch_1_Glob == 'A';
  Bool_Glob = Bool_Loc | Bool_Glob;
   10280:	000276b7          	lui	a3,0x27
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:370
/*******/
    /* executed once */
{
  Boolean Bool_Loc;

  Bool_Loc = Ch_1_Glob == 'A';
   10284:	000277b7          	lui	a5,0x27
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:371
  Bool_Glob = Bool_Loc | Bool_Glob;
   10288:	d1c7c783          	lbu	a5,-740(a5) # 26d1c <Ch_1_Glob>
   1028c:	fbf7879b          	addiw	a5,a5,-65
   10290:	0017b793          	seqz	a5,a5
   10294:	df06a703          	lw	a4,-528(a3) # 26df0 <Bool_Glob>
   10298:	00e7e7b3          	or	a5,a5,a4
   1029c:	def6a823          	sw	a5,-528(a3)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:372
  Ch_2_Glob = 'B';
   102a0:	04200713          	li	a4,66
   102a4:	000277b7          	lui	a5,0x27
   102a8:	d0e78ea3          	sb	a4,-739(a5) # 26d1d <Ch_2_Glob>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:373
} /* Proc_4 */
   102ac:	00008067          	ret

00000000000102b0 <Proc_5>:
Proc_5():
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:380

Proc_5 () /* without parameters */
/*******/
    /* executed once */
{
  Ch_1_Glob = 'A';
   102b0:	04100713          	li	a4,65
   102b4:	000277b7          	lui	a5,0x27
   102b8:	d0e78e23          	sb	a4,-740(a5) # 26d1c <Ch_1_Glob>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:381
  Bool_Glob = false;
   102bc:	000277b7          	lui	a5,0x27
   102c0:	de07a823          	sw	zero,-528(a5) # 26df0 <Bool_Glob>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:382
} /* Proc_5 */
   102c4:	00008067          	ret

00000000000102c8 <main>:
main():
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:78
main ()
/*****/

  /* main program, corresponds to procedures        */
  /* Main and Proc_0 in the Ada version             */
{
   102c8:	f3010113          	addi	sp,sp,-208
   102cc:	0c113423          	sd	ra,200(sp)
   102d0:	0c813023          	sd	s0,192(sp)
   102d4:	0a913c23          	sd	s1,184(sp)
   102d8:	0b213823          	sd	s2,176(sp)
   102dc:	0b313423          	sd	s3,168(sp)
   102e0:	0b413023          	sd	s4,160(sp)
   102e4:	09513c23          	sd	s5,152(sp)
   102e8:	09613823          	sd	s6,144(sp)
   102ec:	09713423          	sd	s7,136(sp)
   102f0:	09813023          	sd	s8,128(sp)
   102f4:	07913c23          	sd	s9,120(sp)
   102f8:	07a13823          	sd	s10,112(sp)
   102fc:	07b13423          	sd	s11,104(sp)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:91
  REG   int             Run_Index;
  REG   int             Number_Of_Runs;

  /* Initializations */

  Next_Ptr_Glob = (Rec_Pointer) malloc (sizeof (Rec_Type));
   10300:	03800513          	li	a0,56
   10304:	1f1000ef          	jal	10cf4 <malloc>
   10308:	000274b7          	lui	s1,0x27
   1030c:	d0a4b823          	sd	a0,-752(s1) # 26d10 <Next_Ptr_Glob>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:92
  Ptr_Glob = (Rec_Pointer) malloc (sizeof (Rec_Type));
   10310:	03800513          	li	a0,56
   10314:	1e1000ef          	jal	10cf4 <malloc>
   10318:	000277b7          	lui	a5,0x27
   1031c:	d2a7b023          	sd	a0,-736(a5) # 26d20 <Ptr_Glob>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:94

  Ptr_Glob->Ptr_Comp                    = Next_Ptr_Glob;
   10320:	d104b703          	ld	a4,-752(s1)
   10324:	00e53023          	sd	a4,0(a0)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:95
  Ptr_Glob->Discr                       = Ident_1;
   10328:	d207b503          	ld	a0,-736(a5)
   1032c:	00052423          	sw	zero,8(a0)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:96
  Ptr_Glob->variant.var_1.Enum_Comp     = Ident_3;
   10330:	00200793          	li	a5,2
   10334:	00f52623          	sw	a5,12(a0)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:97
  Ptr_Glob->variant.var_1.Int_Comp      = 40;
   10338:	02800793          	li	a5,40
   1033c:	00f52823          	sw	a5,16(a0)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:98
  strcpy (Ptr_Glob->variant.var_1.Str_Comp, 
   10340:	01f00613          	li	a2,31
   10344:	000215b7          	lui	a1,0x21
   10348:	50058593          	addi	a1,a1,1280 # 21500 <zeroes.4123+0x10>
   1034c:	01450513          	addi	a0,a0,20
   10350:	684000ef          	jal	109d4 <memcpy>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:100
          "DHRYSTONE PROGRAM, SOME STRING");
  strcpy (Str_1_Loc, "DHRYSTONE PROGRAM, 1'ST STRING");
   10354:	000227b7          	lui	a5,0x22
   10358:	b287b703          	ld	a4,-1240(a5) # 21b28 <zeroes.4123+0x638>
   1035c:	02e13823          	sd	a4,48(sp)
   10360:	b2878793          	addi	a5,a5,-1240
   10364:	0087b703          	ld	a4,8(a5)
   10368:	02e13c23          	sd	a4,56(sp)
   1036c:	0107b703          	ld	a4,16(a5)
   10370:	04e13023          	sd	a4,64(sp)
   10374:	0187a703          	lw	a4,24(a5)
   10378:	04e12423          	sw	a4,72(sp)
   1037c:	01c7d703          	lhu	a4,28(a5)
   10380:	04e11623          	sh	a4,76(sp)
   10384:	01e7c783          	lbu	a5,30(a5)
   10388:	04f10723          	sb	a5,78(sp)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:102

  Arr_2_Glob [8][7] = 10;
   1038c:	00a00493          	li	s1,10
   10390:	0091aa23          	sw	s1,20(gp) # 24c54 <_gp+0x14>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:108
        /* Was missing in published program. Without this statement,    */
        /* Arr_2_Glob [8][7] would have an undefined value.             */
        /* Warning: With 16-Bit processors and Number_Of_Runs > 32000,  */
        /* overflow may occur for this array element.                   */

  printf ("\n");
   10394:	00048513          	mv	a0,s1
   10398:	188010ef          	jal	11520 <putchar>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:109
  printf ("Dhrystone Benchmark, Version 2.1 (Language: C)\n");
   1039c:	00021537          	lui	a0,0x21
   103a0:	52050513          	addi	a0,a0,1312 # 21520 <zeroes.4123+0x30>
   103a4:	3a0010ef          	jal	11744 <puts>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:110
  printf ("\n");
   103a8:	00048513          	mv	a0,s1
   103ac:	174010ef          	jal	11520 <putchar>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:111
  if (Reg)
   103b0:	8f81a783          	lw	a5,-1800(gp) # 24538 <Reg>
   103b4:	00078e63          	beqz	a5,103d0 <main+0x108>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:113
  {
    printf ("Program compiled with 'register' attribute\n");
   103b8:	00021537          	lui	a0,0x21
   103bc:	55050513          	addi	a0,a0,1360 # 21550 <zeroes.4123+0x60>
   103c0:	384010ef          	jal	11744 <puts>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:114
    printf ("\n");
   103c4:	00048513          	mv	a0,s1
   103c8:	158010ef          	jal	11520 <putchar>
   103cc:	0180006f          	j	103e4 <main+0x11c>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:118
  }
  else
  {
    printf ("Program compiled without 'register' attribute\n");
   103d0:	00021537          	lui	a0,0x21
   103d4:	58050513          	addi	a0,a0,1408 # 21580 <zeroes.4123+0x90>
   103d8:	36c010ef          	jal	11744 <puts>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:119
    printf ("\n");
   103dc:	00a00513          	li	a0,10
   103e0:	140010ef          	jal	11520 <putchar>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:121
  }
  printf ("Please give the number of runs through the benchmark: ");
   103e4:	00021537          	lui	a0,0x21
   103e8:	5b050513          	addi	a0,a0,1456 # 215b0 <zeroes.4123+0xc0>
   103ec:	0dc010ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:124
  {
    int n;
    scanf ("%d", &n);
   103f0:	00c10593          	addi	a1,sp,12
   103f4:	00021537          	lui	a0,0x21
   103f8:	5e850513          	addi	a0,a0,1512 # 215e8 <zeroes.4123+0xf8>
   103fc:	354010ef          	jal	11750 <scanf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:125
    Number_Of_Runs = n;
   10400:	00c12c83          	lw	s9,12(sp)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:127
  }
  printf ("\n");
   10404:	00a00513          	li	a0,10
   10408:	118010ef          	jal	11520 <putchar>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:129

  printf ("Execution starts, %d runs through Dhrystone\n", Number_Of_Runs);
   1040c:	000c8593          	mv	a1,s9
   10410:	00021537          	lui	a0,0x21
   10414:	5f050513          	addi	a0,a0,1520 # 215f0 <zeroes.4123+0x100>
   10418:	0b0010ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:136
  /***************/
  /* Start timer */
  /***************/
 
#ifdef TIMES
  times (&time_info);
   1041c:	000274b7          	lui	s1,0x27
   10420:	df848513          	addi	a0,s1,-520 # 26df8 <time_info>
   10424:	7f90f0ef          	jal	2041c <times>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:137
  Begin_Time = (long) time_info.tms_utime;
   10428:	df84b703          	ld	a4,-520(s1)
   1042c:	9ae1b823          	sd	a4,-1616(gp) # 245f0 <Begin_Time>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:146
#endif
#ifdef MSC_CLOCK
  Begin_Time = clock();
#endif

  for (Run_Index = 1; Run_Index <= Number_Of_Runs; ++Run_Index)
   10430:	19905a63          	blez	s9,105c4 <main+0x2fc>
   10434:	00100a13          	li	s4,1
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:154
    Proc_5();
    Proc_4();
      /* Ch_1_Glob == 'A', Ch_2_Glob == 'B', Bool_Glob == true */
    Int_1_Loc = 2;
    Int_2_Loc = 3;
    strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 2'ND STRING");
   10438:	00022d37          	lui	s10,0x22
   1043c:	b48d3d83          	ld	s11,-1208(s10) # 21b48 <zeroes.4123+0x658>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:162
      /* Bool_Glob == 1 */
    while (Int_1_Loc < Int_2_Loc)  /* loop body executed once */
    {
      Int_3_Loc = 5 * Int_1_Loc - Int_2_Loc;
        /* Int_3_Loc == 7 */
      Proc_7 (Int_1_Loc, Int_2_Loc, &Int_3_Loc);
   10440:	00300493          	li	s1,3
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:177
    {
      if (Enum_Loc == Func_1 (Ch_Index, 'C'))
          /* then, not executed */
        {
        Proc_6 (Ident_1, &Enum_Loc);
        strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 3'RD STRING");
   10444:	00022bb7          	lui	s7,0x22
   10448:	b68bbc03          	ld	s8,-1176(s7) # 21b68 <zeroes.4123+0x678>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:149
#endif

  for (Run_Index = 1; Run_Index <= Number_Of_Runs; ++Run_Index)
  {

    Proc_5();
   1044c:	e65ff0ef          	jal	102b0 <Proc_5>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:150
    Proc_4();
   10450:	e31ff0ef          	jal	10280 <Proc_4>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:152
      /* Ch_1_Glob == 'A', Ch_2_Glob == 'B', Bool_Glob == true */
    Int_1_Loc = 2;
   10454:	00200413          	li	s0,2
   10458:	04812e23          	sw	s0,92(sp)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:154
    Int_2_Loc = 3;
    strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 2'ND STRING");
   1045c:	01b13823          	sd	s11,16(sp)
   10460:	b48d0793          	addi	a5,s10,-1208
   10464:	0087b703          	ld	a4,8(a5)
   10468:	00e13c23          	sd	a4,24(sp)
   1046c:	0107b703          	ld	a4,16(a5)
   10470:	02e13023          	sd	a4,32(sp)
   10474:	0187a703          	lw	a4,24(a5)
   10478:	02e12423          	sw	a4,40(sp)
   1047c:	01c7d703          	lhu	a4,28(a5)
   10480:	02e11623          	sh	a4,44(sp)
   10484:	01e7c783          	lbu	a5,30(a5)
   10488:	02f10723          	sb	a5,46(sp)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:155
    Enum_Loc = Ident_2;
   1048c:	00100793          	li	a5,1
   10490:	04f12a23          	sw	a5,84(sp)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:156
    Bool_Glob = ! Func_2 (Str_1_Loc, Str_2_Loc);
   10494:	01010593          	addi	a1,sp,16
   10498:	03010513          	addi	a0,sp,48
   1049c:	69c000ef          	jal	10b38 <Func_2>
   104a0:	00153513          	seqz	a0,a0
   104a4:	000277b7          	lui	a5,0x27
   104a8:	dea7a823          	sw	a0,-528(a5) # 26df0 <Bool_Glob>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:158
      /* Bool_Glob == 1 */
    while (Int_1_Loc < Int_2_Loc)  /* loop body executed once */
   104ac:	05c12503          	lw	a0,92(sp)
   104b0:	02a44863          	blt	s0,a0,104e0 <main+0x218>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:160
    {
      Int_3_Loc = 5 * Int_1_Loc - Int_2_Loc;
   104b4:	0025179b          	slliw	a5,a0,0x2
   104b8:	00a787bb          	addw	a5,a5,a0
   104bc:	ffd7879b          	addiw	a5,a5,-3
   104c0:	04f12c23          	sw	a5,88(sp)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:162
        /* Int_3_Loc == 7 */
      Proc_7 (Int_1_Loc, Int_2_Loc, &Int_3_Loc);
   104c4:	05810613          	addi	a2,sp,88
   104c8:	00048593          	mv	a1,s1
   104cc:	5a4000ef          	jal	10a70 <Proc_7>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:164
        /* Int_3_Loc == 7 */
      Int_1_Loc += 1;
   104d0:	05c12503          	lw	a0,92(sp)
   104d4:	0015051b          	addiw	a0,a0,1
   104d8:	04a12e23          	sw	a0,92(sp)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:158
    Int_2_Loc = 3;
    strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 2'ND STRING");
    Enum_Loc = Ident_2;
    Bool_Glob = ! Func_2 (Str_1_Loc, Str_2_Loc);
      /* Bool_Glob == 1 */
    while (Int_1_Loc < Int_2_Loc)  /* loop body executed once */
   104dc:	fca45ce3          	ble	a0,s0,104b4 <main+0x1ec>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:167
      Proc_7 (Int_1_Loc, Int_2_Loc, &Int_3_Loc);
        /* Int_3_Loc == 7 */
      Int_1_Loc += 1;
    } /* while */
      /* Int_1_Loc == 3, Int_2_Loc == 3, Int_3_Loc == 7 */
    Proc_8 (Arr_1_Glob, Arr_2_Glob, Int_1_Loc, Int_3_Loc);
   104e0:	05812683          	lw	a3,88(sp)
   104e4:	00050613          	mv	a2,a0
   104e8:	9b818593          	addi	a1,gp,-1608 # 245f8 <Arr_2_Glob>
   104ec:	000277b7          	lui	a5,0x27
   104f0:	d2878513          	addi	a0,a5,-728 # 26d28 <Arr_1_Glob>
   104f4:	58c000ef          	jal	10a80 <Proc_8>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:169
      /* Int_Glob == 5 */
    Proc_1 (Ptr_Glob);
   104f8:	000277b7          	lui	a5,0x27
   104fc:	d207b503          	ld	a0,-736(a5) # 26d20 <Ptr_Glob>
   10500:	cd5ff0ef          	jal	101d4 <Proc_1>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:170
    for (Ch_Index = 'A'; Ch_Index <= Ch_2_Glob; ++Ch_Index)
   10504:	000277b7          	lui	a5,0x27
   10508:	d1d7c703          	lbu	a4,-739(a5) # 26d1d <Ch_2_Glob>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:153

    Proc_5();
    Proc_4();
      /* Ch_1_Glob == 'A', Ch_2_Glob == 'B', Bool_Glob == true */
    Int_1_Loc = 2;
    Int_2_Loc = 3;
   1050c:	00048a93          	mv	s5,s1
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:170
    } /* while */
      /* Int_1_Loc == 3, Int_2_Loc == 3, Int_3_Loc == 7 */
    Proc_8 (Arr_1_Glob, Arr_2_Glob, Int_1_Loc, Int_3_Loc);
      /* Int_Glob == 5 */
    Proc_1 (Ptr_Glob);
    for (Ch_Index = 'A'; Ch_Index <= Ch_2_Glob; ++Ch_Index)
   10510:	04000793          	li	a5,64
   10514:	06e7fe63          	bleu	a4,a5,10590 <main+0x2c8>
   10518:	04100413          	li	s0,65
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:173
                             /* loop body executed twice */
    {
      if (Enum_Loc == Func_1 (Ch_Index, 'C'))
   1051c:	04300993          	li	s3,67
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:179
          /* then, not executed */
        {
        Proc_6 (Ident_1, &Enum_Loc);
        strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 3'RD STRING");
        Int_2_Loc = Run_Index;
        Int_Glob = Run_Index;
   10520:	00027b37          	lui	s6,0x27
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:170
    } /* while */
      /* Int_1_Loc == 3, Int_2_Loc == 3, Int_3_Loc == 7 */
    Proc_8 (Arr_1_Glob, Arr_2_Glob, Int_1_Loc, Int_3_Loc);
      /* Int_Glob == 5 */
    Proc_1 (Ptr_Glob);
    for (Ch_Index = 'A'; Ch_Index <= Ch_2_Glob; ++Ch_Index)
   10524:	00027937          	lui	s2,0x27
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:173
                             /* loop body executed twice */
    {
      if (Enum_Loc == Func_1 (Ch_Index, 'C'))
   10528:	00098593          	mv	a1,s3
   1052c:	00040513          	mv	a0,s0
   10530:	5e4000ef          	jal	10b14 <Func_1>
   10534:	05412783          	lw	a5,84(sp)
   10538:	04f51463          	bne	a0,a5,10580 <main+0x2b8>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:176
          /* then, not executed */
        {
        Proc_6 (Ident_1, &Enum_Loc);
   1053c:	05410593          	addi	a1,sp,84
   10540:	00000513          	li	a0,0
   10544:	4b8000ef          	jal	109fc <Proc_6>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:177
        strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 3'RD STRING");
   10548:	01813823          	sd	s8,16(sp)
   1054c:	b68b8793          	addi	a5,s7,-1176
   10550:	0087b703          	ld	a4,8(a5)
   10554:	00e13c23          	sd	a4,24(sp)
   10558:	0107b703          	ld	a4,16(a5)
   1055c:	02e13023          	sd	a4,32(sp)
   10560:	0187a703          	lw	a4,24(a5)
   10564:	02e12423          	sw	a4,40(sp)
   10568:	01c7d703          	lhu	a4,28(a5)
   1056c:	02e11623          	sh	a4,44(sp)
   10570:	01e7c783          	lbu	a5,30(a5)
   10574:	02f10723          	sb	a5,46(sp)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:179
        Int_2_Loc = Run_Index;
        Int_Glob = Run_Index;
   10578:	d14b2c23          	sw	s4,-744(s6) # 26d18 <Int_Glob>
   1057c:	000a0a93          	mv	s5,s4
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:170 (discriminator 2)
    } /* while */
      /* Int_1_Loc == 3, Int_2_Loc == 3, Int_3_Loc == 7 */
    Proc_8 (Arr_1_Glob, Arr_2_Glob, Int_1_Loc, Int_3_Loc);
      /* Int_Glob == 5 */
    Proc_1 (Ptr_Glob);
    for (Ch_Index = 'A'; Ch_Index <= Ch_2_Glob; ++Ch_Index)
   10580:	0014041b          	addiw	s0,s0,1
   10584:	0ff47413          	andi	s0,s0,255
   10588:	d1d94783          	lbu	a5,-739(s2) # 26d1d <Ch_2_Glob>
   1058c:	f887fee3          	bleu	s0,a5,10528 <main+0x260>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:183
        Int_2_Loc = Run_Index;
        Int_Glob = Run_Index;
        }
    }
      /* Int_1_Loc == 3, Int_2_Loc == 3, Int_3_Loc == 7 */
    Int_2_Loc = Int_2_Loc * Int_1_Loc;
   10590:	05c12783          	lw	a5,92(sp)
   10594:	02fa8abb          	mulw	s5,s5,a5
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:184
    Int_1_Loc = Int_2_Loc / Int_3_Loc;
   10598:	05812903          	lw	s2,88(sp)
   1059c:	032ac43b          	divw	s0,s5,s2
   105a0:	04812e23          	sw	s0,92(sp)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:187
    Int_2_Loc = 7 * (Int_2_Loc - Int_3_Loc) - Int_1_Loc;
      /* Int_1_Loc == 1, Int_2_Loc == 13, Int_3_Loc == 7 */
    Proc_2 (&Int_1_Loc);
   105a4:	05c10513          	addi	a0,sp,92
   105a8:	bbdff0ef          	jal	10164 <Proc_2>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:146
#endif
#ifdef MSC_CLOCK
  Begin_Time = clock();
#endif

  for (Run_Index = 1; Run_Index <= Number_Of_Runs; ++Run_Index)
   105ac:	001a0a1b          	addiw	s4,s4,1
   105b0:	e94cdee3          	ble	s4,s9,1044c <main+0x184>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:185
        }
    }
      /* Int_1_Loc == 3, Int_2_Loc == 3, Int_3_Loc == 7 */
    Int_2_Loc = Int_2_Loc * Int_1_Loc;
    Int_1_Loc = Int_2_Loc / Int_3_Loc;
    Int_2_Loc = 7 * (Int_2_Loc - Int_3_Loc) - Int_1_Loc;
   105b4:	412a8abb          	subw	s5,s5,s2
   105b8:	003a979b          	slliw	a5,s5,0x3
   105bc:	41578abb          	subw	s5,a5,s5
   105c0:	408a843b          	subw	s0,s5,s0
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:197
  /**************/
  /* Stop timer */
  /**************/
  
#ifdef TIMES
  times (&time_info);
   105c4:	000274b7          	lui	s1,0x27
   105c8:	df848513          	addi	a0,s1,-520 # 26df8 <time_info>
   105cc:	6510f0ef          	jal	2041c <times>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:198
  End_Time = (long) time_info.tms_utime;
   105d0:	000279b7          	lui	s3,0x27
   105d4:	df84b783          	ld	a5,-520(s1)
   105d8:	d0f9b423          	sd	a5,-760(s3) # 26d08 <End_Time>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:207
#endif
#ifdef MSC_CLOCK
  End_Time = clock();
#endif

  printf ("Execution ends\n");
   105dc:	00021537          	lui	a0,0x21
   105e0:	62050513          	addi	a0,a0,1568 # 21620 <zeroes.4123+0x130>
   105e4:	160010ef          	jal	11744 <puts>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:208
  printf ("\n");
   105e8:	00a00513          	li	a0,10
   105ec:	735000ef          	jal	11520 <putchar>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:209
  printf ("Final values of the variables used in the benchmark:\n");
   105f0:	00021537          	lui	a0,0x21
   105f4:	63050513          	addi	a0,a0,1584 # 21630 <zeroes.4123+0x140>
   105f8:	14c010ef          	jal	11744 <puts>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:210
  printf ("\n");
   105fc:	00a00513          	li	a0,10
   10600:	721000ef          	jal	11520 <putchar>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:211
  printf ("Int_Glob:            %d\n", Int_Glob);
   10604:	000277b7          	lui	a5,0x27
   10608:	d187a583          	lw	a1,-744(a5) # 26d18 <Int_Glob>
   1060c:	00021537          	lui	a0,0x21
   10610:	66850513          	addi	a0,a0,1640 # 21668 <zeroes.4123+0x178>
   10614:	6b5000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:212
  printf ("        should be:   %d\n", 5);
   10618:	00500593          	li	a1,5
   1061c:	000214b7          	lui	s1,0x21
   10620:	68848513          	addi	a0,s1,1672 # 21688 <zeroes.4123+0x198>
   10624:	6a5000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:213
  printf ("Bool_Glob:           %d\n", Bool_Glob);
   10628:	000277b7          	lui	a5,0x27
   1062c:	df07a583          	lw	a1,-528(a5) # 26df0 <Bool_Glob>
   10630:	00021537          	lui	a0,0x21
   10634:	6a850513          	addi	a0,a0,1704 # 216a8 <zeroes.4123+0x1b8>
   10638:	691000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:214
  printf ("        should be:   %d\n", 1);
   1063c:	00100593          	li	a1,1
   10640:	68848513          	addi	a0,s1,1672
   10644:	685000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:215
  printf ("Ch_1_Glob:           %c\n", Ch_1_Glob);
   10648:	000277b7          	lui	a5,0x27
   1064c:	d1c7c583          	lbu	a1,-740(a5) # 26d1c <Ch_1_Glob>
   10650:	00021537          	lui	a0,0x21
   10654:	6c850513          	addi	a0,a0,1736 # 216c8 <zeroes.4123+0x1d8>
   10658:	671000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:216
  printf ("        should be:   %c\n", 'A');
   1065c:	04100593          	li	a1,65
   10660:	00021937          	lui	s2,0x21
   10664:	6e890513          	addi	a0,s2,1768 # 216e8 <zeroes.4123+0x1f8>
   10668:	661000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:217
  printf ("Ch_2_Glob:           %c\n", Ch_2_Glob);
   1066c:	000277b7          	lui	a5,0x27
   10670:	d1d7c583          	lbu	a1,-739(a5) # 26d1d <Ch_2_Glob>
   10674:	00021537          	lui	a0,0x21
   10678:	70850513          	addi	a0,a0,1800 # 21708 <zeroes.4123+0x218>
   1067c:	64d000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:218
  printf ("        should be:   %c\n", 'B');
   10680:	04200593          	li	a1,66
   10684:	6e890513          	addi	a0,s2,1768
   10688:	641000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:219
  printf ("Arr_1_Glob[8]:       %d\n", Arr_1_Glob[8]);
   1068c:	000277b7          	lui	a5,0x27
   10690:	d487a583          	lw	a1,-696(a5) # 26d48 <Arr_1_Glob+0x20>
   10694:	00021537          	lui	a0,0x21
   10698:	72850513          	addi	a0,a0,1832 # 21728 <zeroes.4123+0x238>
   1069c:	62d000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:220
  printf ("        should be:   %d\n", 7);
   106a0:	00700593          	li	a1,7
   106a4:	68848513          	addi	a0,s1,1672
   106a8:	621000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:221
  printf ("Arr_2_Glob[8][7]:    %d\n", Arr_2_Glob[8][7]);
   106ac:	0141a583          	lw	a1,20(gp) # 24c54 <_gp+0x14>
   106b0:	00021537          	lui	a0,0x21
   106b4:	74850513          	addi	a0,a0,1864 # 21748 <zeroes.4123+0x258>
   106b8:	611000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:222
  printf ("        should be:   Number_Of_Runs + 10\n");
   106bc:	00021537          	lui	a0,0x21
   106c0:	76850513          	addi	a0,a0,1896 # 21768 <zeroes.4123+0x278>
   106c4:	080010ef          	jal	11744 <puts>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:223
  printf ("Ptr_Glob->\n");
   106c8:	00021537          	lui	a0,0x21
   106cc:	79850513          	addi	a0,a0,1944 # 21798 <zeroes.4123+0x2a8>
   106d0:	074010ef          	jal	11744 <puts>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:224
  printf ("  Ptr_Comp:          %d\n", (int) Ptr_Glob->Ptr_Comp);
   106d4:	00027937          	lui	s2,0x27
   106d8:	d2093783          	ld	a5,-736(s2) # 26d20 <Ptr_Glob>
   106dc:	0007a583          	lw	a1,0(a5)
   106e0:	00021d37          	lui	s10,0x21
   106e4:	7a8d0513          	addi	a0,s10,1960 # 217a8 <zeroes.4123+0x2b8>
   106e8:	5e1000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:225
  printf ("        should be:   (implementation-dependent)\n");
   106ec:	00021537          	lui	a0,0x21
   106f0:	7c850513          	addi	a0,a0,1992 # 217c8 <zeroes.4123+0x2d8>
   106f4:	050010ef          	jal	11744 <puts>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:226
  printf ("  Discr:             %d\n", Ptr_Glob->Discr);
   106f8:	d2093783          	ld	a5,-736(s2)
   106fc:	0087a583          	lw	a1,8(a5)
   10700:	00021c37          	lui	s8,0x21
   10704:	7f8c0513          	addi	a0,s8,2040 # 217f8 <zeroes.4123+0x308>
   10708:	5c1000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:227
  printf ("        should be:   %d\n", 0);
   1070c:	00000593          	li	a1,0
   10710:	68848513          	addi	a0,s1,1672
   10714:	5b5000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:228
  printf ("  Enum_Comp:         %d\n", Ptr_Glob->variant.var_1.Enum_Comp);
   10718:	d2093783          	ld	a5,-736(s2)
   1071c:	00c7a583          	lw	a1,12(a5)
   10720:	00022bb7          	lui	s7,0x22
   10724:	818b8513          	addi	a0,s7,-2024 # 21818 <zeroes.4123+0x328>
   10728:	5a1000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:229
  printf ("        should be:   %d\n", 2);
   1072c:	00200593          	li	a1,2
   10730:	68848513          	addi	a0,s1,1672
   10734:	595000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:230
  printf ("  Int_Comp:          %d\n", Ptr_Glob->variant.var_1.Int_Comp);
   10738:	d2093783          	ld	a5,-736(s2)
   1073c:	0107a583          	lw	a1,16(a5)
   10740:	00022b37          	lui	s6,0x22
   10744:	838b0513          	addi	a0,s6,-1992 # 21838 <zeroes.4123+0x348>
   10748:	581000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:231
  printf ("        should be:   %d\n", 17);
   1074c:	01100593          	li	a1,17
   10750:	68848513          	addi	a0,s1,1672
   10754:	575000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:232
  printf ("  Str_Comp:          %s\n", Ptr_Glob->variant.var_1.Str_Comp);
   10758:	d2093583          	ld	a1,-736(s2)
   1075c:	01458593          	addi	a1,a1,20
   10760:	00022ab7          	lui	s5,0x22
   10764:	858a8513          	addi	a0,s5,-1960 # 21858 <zeroes.4123+0x368>
   10768:	561000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:233
  printf ("        should be:   DHRYSTONE PROGRAM, SOME STRING\n");
   1076c:	00022a37          	lui	s4,0x22
   10770:	878a0513          	addi	a0,s4,-1928 # 21878 <zeroes.4123+0x388>
   10774:	7d1000ef          	jal	11744 <puts>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:234
  printf ("Next_Ptr_Glob->\n");
   10778:	00022537          	lui	a0,0x22
   1077c:	8b050513          	addi	a0,a0,-1872 # 218b0 <zeroes.4123+0x3c0>
   10780:	7c5000ef          	jal	11744 <puts>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:235
  printf ("  Ptr_Comp:          %d\n", (int) Next_Ptr_Glob->Ptr_Comp);
   10784:	00027937          	lui	s2,0x27
   10788:	d1093783          	ld	a5,-752(s2) # 26d10 <Next_Ptr_Glob>
   1078c:	0007a583          	lw	a1,0(a5)
   10790:	7a8d0513          	addi	a0,s10,1960
   10794:	535000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:236
  printf ("        should be:   (implementation-dependent), same as above\n");
   10798:	00022537          	lui	a0,0x22
   1079c:	8c050513          	addi	a0,a0,-1856 # 218c0 <zeroes.4123+0x3d0>
   107a0:	7a5000ef          	jal	11744 <puts>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:237
  printf ("  Discr:             %d\n", Next_Ptr_Glob->Discr);
   107a4:	d1093783          	ld	a5,-752(s2)
   107a8:	0087a583          	lw	a1,8(a5)
   107ac:	7f8c0513          	addi	a0,s8,2040
   107b0:	519000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:238
  printf ("        should be:   %d\n", 0);
   107b4:	00000593          	li	a1,0
   107b8:	68848513          	addi	a0,s1,1672
   107bc:	50d000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:239
  printf ("  Enum_Comp:         %d\n", Next_Ptr_Glob->variant.var_1.Enum_Comp);
   107c0:	d1093783          	ld	a5,-752(s2)
   107c4:	00c7a583          	lw	a1,12(a5)
   107c8:	818b8513          	addi	a0,s7,-2024
   107cc:	4fd000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:240
  printf ("        should be:   %d\n", 1);
   107d0:	00100593          	li	a1,1
   107d4:	68848513          	addi	a0,s1,1672
   107d8:	4f1000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:241
  printf ("  Int_Comp:          %d\n", Next_Ptr_Glob->variant.var_1.Int_Comp);
   107dc:	d1093783          	ld	a5,-752(s2)
   107e0:	0107a583          	lw	a1,16(a5)
   107e4:	838b0513          	addi	a0,s6,-1992
   107e8:	4e1000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:242
  printf ("        should be:   %d\n", 18);
   107ec:	01200593          	li	a1,18
   107f0:	68848513          	addi	a0,s1,1672
   107f4:	4d5000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:243
  printf ("  Str_Comp:          %s\n",
   107f8:	d1093583          	ld	a1,-752(s2)
   107fc:	01458593          	addi	a1,a1,20
   10800:	858a8513          	addi	a0,s5,-1960
   10804:	4c5000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:245
                                Next_Ptr_Glob->variant.var_1.Str_Comp);
  printf ("        should be:   DHRYSTONE PROGRAM, SOME STRING\n");
   10808:	878a0513          	addi	a0,s4,-1928
   1080c:	739000ef          	jal	11744 <puts>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:246
  printf ("Int_1_Loc:           %d\n", Int_1_Loc);
   10810:	05c12583          	lw	a1,92(sp)
   10814:	00022537          	lui	a0,0x22
   10818:	90050513          	addi	a0,a0,-1792 # 21900 <zeroes.4123+0x410>
   1081c:	4ad000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:247
  printf ("        should be:   %d\n", 5);
   10820:	00500593          	li	a1,5
   10824:	68848513          	addi	a0,s1,1672
   10828:	4a1000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:248
  printf ("Int_2_Loc:           %d\n", Int_2_Loc);
   1082c:	00040593          	mv	a1,s0
   10830:	00022537          	lui	a0,0x22
   10834:	92050513          	addi	a0,a0,-1760 # 21920 <zeroes.4123+0x430>
   10838:	491000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:249
  printf ("        should be:   %d\n", 13);
   1083c:	00d00593          	li	a1,13
   10840:	68848513          	addi	a0,s1,1672
   10844:	485000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:250
  printf ("Int_3_Loc:           %d\n", Int_3_Loc);
   10848:	05812583          	lw	a1,88(sp)
   1084c:	00022537          	lui	a0,0x22
   10850:	94050513          	addi	a0,a0,-1728 # 21940 <zeroes.4123+0x450>
   10854:	475000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:251
  printf ("        should be:   %d\n", 7);
   10858:	00700593          	li	a1,7
   1085c:	68848513          	addi	a0,s1,1672
   10860:	469000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:252
  printf ("Enum_Loc:            %d\n", Enum_Loc);
   10864:	05412583          	lw	a1,84(sp)
   10868:	00022537          	lui	a0,0x22
   1086c:	96050513          	addi	a0,a0,-1696 # 21960 <zeroes.4123+0x470>
   10870:	459000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:253
  printf ("        should be:   %d\n", 1);
   10874:	00100593          	li	a1,1
   10878:	68848513          	addi	a0,s1,1672
   1087c:	44d000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:254
  printf ("Str_1_Loc:           %s\n", Str_1_Loc);
   10880:	03010593          	addi	a1,sp,48
   10884:	00022537          	lui	a0,0x22
   10888:	98050513          	addi	a0,a0,-1664 # 21980 <zeroes.4123+0x490>
   1088c:	43d000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:255
  printf ("        should be:   DHRYSTONE PROGRAM, 1'ST STRING\n");
   10890:	00022537          	lui	a0,0x22
   10894:	9a050513          	addi	a0,a0,-1632 # 219a0 <zeroes.4123+0x4b0>
   10898:	6ad000ef          	jal	11744 <puts>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:256
  printf ("Str_2_Loc:           %s\n", Str_2_Loc);
   1089c:	01010593          	addi	a1,sp,16
   108a0:	00022537          	lui	a0,0x22
   108a4:	9d850513          	addi	a0,a0,-1576 # 219d8 <zeroes.4123+0x4e8>
   108a8:	421000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:257
  printf ("        should be:   DHRYSTONE PROGRAM, 2'ND STRING\n");
   108ac:	00022537          	lui	a0,0x22
   108b0:	9f850513          	addi	a0,a0,-1544 # 219f8 <zeroes.4123+0x508>
   108b4:	691000ef          	jal	11744 <puts>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:258
  printf ("\n");
   108b8:	00a00513          	li	a0,10
   108bc:	465000ef          	jal	11520 <putchar>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:260

  User_Time = End_Time - Begin_Time;
   108c0:	d089b783          	ld	a5,-760(s3)
   108c4:	9b01b583          	ld	a1,-1616(gp) # 245f0 <Begin_Time>
   108c8:	40b785b3          	sub	a1,a5,a1
   108cc:	9ab1b423          	sd	a1,-1624(gp) # 245e8 <User_Time>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:262

  if (User_Time < Too_Small_Time)
   108d0:	07700793          	li	a5,119
   108d4:	02b7c463          	blt	a5,a1,108fc <main+0x634>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:264
  {
    printf ("Measured time too small to obtain meaningful results\n");
   108d8:	00022537          	lui	a0,0x22
   108dc:	a3050513          	addi	a0,a0,-1488 # 21a30 <zeroes.4123+0x540>
   108e0:	665000ef          	jal	11744 <puts>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:265
    printf ("Please increase number of runs\n");
   108e4:	00022537          	lui	a0,0x22
   108e8:	a6850513          	addi	a0,a0,-1432 # 21a68 <zeroes.4123+0x578>
   108ec:	659000ef          	jal	11744 <puts>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:266
    printf ("\n");
   108f0:	00a00513          	li	a0,10
   108f4:	42d000ef          	jal	11520 <putchar>
   108f8:	09c0006f          	j	10994 <main+0x6cc>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:275
#ifdef TIME
    Microseconds = (float) User_Time * Mic_secs_Per_Second 
                        / (float) Number_Of_Runs;
    Dhrystones_Per_Second = (float) Number_Of_Runs / (float) User_Time;
#else
    Microseconds = (float) User_Time * Mic_secs_Per_Second 
   108fc:	d025f6d3          	fcvt.s.l	fa3,a1
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:276
                        / ((float) HZ * ((float) Number_Of_Runs));
   10900:	d00cf7d3          	fcvt.s.w	fa5,s9
   10904:	000247b7          	lui	a5,0x24
   10908:	4907a707          	flw	fa4,1168(a5) # 24490 <__wctomb+0x10>
   1090c:	10e7f753          	fmul.s	fa4,fa5,fa4
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:275
#ifdef TIME
    Microseconds = (float) User_Time * Mic_secs_Per_Second 
                        / (float) Number_Of_Runs;
    Dhrystones_Per_Second = (float) Number_Of_Runs / (float) User_Time;
#else
    Microseconds = (float) User_Time * Mic_secs_Per_Second 
   10910:	420687d3          	fcvt.d.s	fa5,fa3
   10914:	000247b7          	lui	a5,0x24
   10918:	4887b607          	fld	fa2,1160(a5) # 24488 <__wctomb+0x8>
   1091c:	12c7f7d3          	fmul.d	fa5,fa5,fa2
   10920:	42070653          	fcvt.d.s	fa2,fa4
   10924:	1ac7f7d3          	fdiv.d	fa5,fa5,fa2
   10928:	4017f7d3          	fcvt.s.d	fa5,fa5
   1092c:	9af1a027          	fsw	fa5,-1632(gp) # 245e0 <Microseconds>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:277
                        / ((float) HZ * ((float) Number_Of_Runs));
    Dhrystones_Per_Second = ((float) HZ * (float) Number_Of_Runs)
   10930:	18d77753          	fdiv.s	fa4,fa4,fa3
   10934:	9ae1a227          	fsw	fa4,-1628(gp) # 245e4 <Dhrystones_Per_Second>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:280
                        / (float) User_Time;
#endif
	printf ("User_Time(long%lx) = %f, Number_of_Runs(int%d)=%f\n", User_Time, Number_Of_Runs);//debug
   10938:	000c8613          	mv	a2,s9
   1093c:	00022537          	lui	a0,0x22
   10940:	a8850513          	addi	a0,a0,-1400 # 21a88 <zeroes.4123+0x598>
   10944:	385000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:282

	printf ("Microseconds for one run through Dhrystone: ");
   10948:	00022537          	lui	a0,0x22
   1094c:	ac050513          	addi	a0,a0,-1344 # 21ac0 <zeroes.4123+0x5d0>
   10950:	379000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:283
    printf ("%6.1f \n", Microseconds);
   10954:	9a01a787          	flw	fa5,-1632(gp) # 245e0 <Microseconds>
   10958:	00022437          	lui	s0,0x22
   1095c:	420787d3          	fcvt.d.s	fa5,fa5
   10960:	e20785d3          	fmv.x.d	a1,fa5
   10964:	af040513          	addi	a0,s0,-1296 # 21af0 <zeroes.4123+0x600>
   10968:	361000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:284
    printf ("Dhrystones per Second:                      ");
   1096c:	00022537          	lui	a0,0x22
   10970:	af850513          	addi	a0,a0,-1288 # 21af8 <zeroes.4123+0x608>
   10974:	355000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:285
    printf ("%6.1f \n", Dhrystones_Per_Second);
   10978:	9a41a787          	flw	fa5,-1628(gp) # 245e4 <Dhrystones_Per_Second>
   1097c:	420787d3          	fcvt.d.s	fa5,fa5
   10980:	e20785d3          	fmv.x.d	a1,fa5
   10984:	af040513          	addi	a0,s0,-1296
   10988:	341000ef          	jal	114c8 <printf>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:286
    printf ("\n");
   1098c:	00a00513          	li	a0,10
   10990:	391000ef          	jal	11520 <putchar>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:289
  }
  
}
   10994:	00000513          	li	a0,0
   10998:	0c813083          	ld	ra,200(sp)
   1099c:	0c013403          	ld	s0,192(sp)
   109a0:	0b813483          	ld	s1,184(sp)
   109a4:	0b013903          	ld	s2,176(sp)
   109a8:	0a813983          	ld	s3,168(sp)
   109ac:	0a013a03          	ld	s4,160(sp)
   109b0:	09813a83          	ld	s5,152(sp)
   109b4:	09013b03          	ld	s6,144(sp)
   109b8:	08813b83          	ld	s7,136(sp)
   109bc:	08013c03          	ld	s8,128(sp)
   109c0:	07813c83          	ld	s9,120(sp)
   109c4:	07013d03          	ld	s10,112(sp)
   109c8:	06813d83          	ld	s11,104(sp)
   109cc:	0d010113          	addi	sp,sp,208
   109d0:	00008067          	ret

00000000000109d4 <memcpy>:
memcpy():
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:393
memcpy (d, s, l)
register char   *d;
register char   *s;
register int    l;
{
        while (l--) *d++ = *s++;
   109d4:	fff6079b          	addiw	a5,a2,-1
   109d8:	02060063          	beqz	a2,109f8 <memcpy+0x24>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:393 (discriminator 2)
   109dc:	fff00693          	li	a3,-1
   109e0:	00150513          	addi	a0,a0,1
   109e4:	00158593          	addi	a1,a1,1
   109e8:	fff5c703          	lbu	a4,-1(a1)
   109ec:	fee50fa3          	sb	a4,-1(a0)
   109f0:	fff7879b          	addiw	a5,a5,-1
   109f4:	fed796e3          	bne	a5,a3,109e0 <memcpy+0xc>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_1.c:394
}
   109f8:	00008067          	ret

00000000000109fc <Proc_6>:
Proc_6():
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:39

Enumeration  Enum_Val_Par;
Enumeration *Enum_Ref_Par;
{
  *Enum_Ref_Par = Enum_Val_Par;
  if (! Func_3 (Enum_Val_Par))
   109fc:	00200793          	li	a5,2
   10a00:	04f50c63          	beq	a0,a5,10a58 <Proc_6+0x5c>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:41
    /* then, not executed */
    *Enum_Ref_Par = Ident_4;
   10a04:	00300793          	li	a5,3
   10a08:	00f5a023          	sw	a5,0(a1)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:42
  switch (Enum_Val_Par)
   10a0c:	00100793          	li	a5,1
   10a10:	02f50263          	beq	a0,a5,10a34 <Proc_6+0x38>
   10a14:	00050c63          	beqz	a0,10a2c <Proc_6+0x30>
   10a18:	00200793          	li	a5,2
   10a1c:	02f50e63          	beq	a0,a5,10a58 <Proc_6+0x5c>
   10a20:	00400793          	li	a5,4
   10a24:	04f50063          	beq	a0,a5,10a64 <Proc_6+0x68>
   10a28:	00008067          	ret
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:45
  {
    case Ident_1: 
      *Enum_Ref_Par = Ident_1;
   10a2c:	0005a023          	sw	zero,0(a1)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:46
      break;
   10a30:	00008067          	ret
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:48
    case Ident_2: 
      if (Int_Glob > 100)
   10a34:	000277b7          	lui	a5,0x27
   10a38:	d187a703          	lw	a4,-744(a5) # 26d18 <Int_Glob>
   10a3c:	06400793          	li	a5,100
   10a40:	00e7d663          	ble	a4,a5,10a4c <Proc_6+0x50>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:50
        /* then */
      *Enum_Ref_Par = Ident_1;
   10a44:	0005a023          	sw	zero,0(a1)
   10a48:	00008067          	ret
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:51
      else *Enum_Ref_Par = Ident_4;
   10a4c:	00300793          	li	a5,3
   10a50:	00f5a023          	sw	a5,0(a1)
   10a54:	00008067          	ret
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:54
      break;
    case Ident_3: /* executed */
      *Enum_Ref_Par = Ident_2;
   10a58:	00100793          	li	a5,1
   10a5c:	00f5a023          	sw	a5,0(a1)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:55
      break;
   10a60:	00008067          	ret
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:58
    case Ident_4: break;
    case Ident_5: 
      *Enum_Ref_Par = Ident_3;
   10a64:	00200793          	li	a5,2
   10a68:	00f5a023          	sw	a5,0(a1)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:61
      break;
  } /* switch */
} /* Proc_6 */
   10a6c:	00008067          	ret

0000000000010a70 <Proc_7>:
Proc_7():
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:80
One_Fifty      *Int_Par_Ref;
{
  One_Fifty Int_Loc;

  Int_Loc = Int_1_Par_Val + 2;
  *Int_Par_Ref = Int_2_Par_Val + Int_Loc;
   10a70:	0025051b          	addiw	a0,a0,2
   10a74:	00b505bb          	addw	a1,a0,a1
   10a78:	00b62023          	sw	a1,0(a2)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:81
} /* Proc_7 */
   10a7c:	00008067          	ret

0000000000010a80 <Proc_8>:
Proc_8():
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:97
int             Int_2_Par_Val;
{
  REG One_Fifty Int_Index;
  REG One_Fifty Int_Loc;

  Int_Loc = Int_1_Par_Val + 5;
   10a80:	0056081b          	addiw	a6,a2,5
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:98
  Arr_1_Par_Ref [Int_Loc] = Int_2_Par_Val;
   10a84:	00080313          	mv	t1,a6
   10a88:	00231793          	slli	a5,t1,0x2
   10a8c:	00f50533          	add	a0,a0,a5
   10a90:	00d52023          	sw	a3,0(a0)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:99
  Arr_1_Par_Ref [Int_Loc+1] = Arr_1_Par_Ref [Int_Loc];
   10a94:	00d52223          	sw	a3,4(a0)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:100
  Arr_1_Par_Ref [Int_Loc+30] = Int_Loc;
   10a98:	07052c23          	sw	a6,120(a0)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:101
  for (Int_Index = Int_Loc; Int_Index <= Int_Loc+1; ++Int_Index)
   10a9c:	0066089b          	addiw	a7,a2,6
   10aa0:	0308c463          	blt	a7,a6,10ac8 <Proc_8+0x48>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:102
    Arr_2_Par_Ref [Int_Loc] [Int_Index] = Int_Loc;
   10aa4:	0c800693          	li	a3,200
   10aa8:	02d306b3          	mul	a3,t1,a3
   10aac:	00d586b3          	add	a3,a1,a3
   10ab0:	00080713          	mv	a4,a6
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:102 (discriminator 3)
   10ab4:	00271793          	slli	a5,a4,0x2
   10ab8:	00f687b3          	add	a5,a3,a5
   10abc:	0107a023          	sw	a6,0(a5)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:101

  Int_Loc = Int_1_Par_Val + 5;
  Arr_1_Par_Ref [Int_Loc] = Int_2_Par_Val;
  Arr_1_Par_Ref [Int_Loc+1] = Arr_1_Par_Ref [Int_Loc];
  Arr_1_Par_Ref [Int_Loc+30] = Int_Loc;
  for (Int_Index = Int_Loc; Int_Index <= Int_Loc+1; ++Int_Index)
   10ac0:	0017071b          	addiw	a4,a4,1
   10ac4:	fee8d8e3          	ble	a4,a7,10ab4 <Proc_8+0x34>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:103
    Arr_2_Par_Ref [Int_Loc] [Int_Index] = Int_Loc;
  Arr_2_Par_Ref [Int_Loc] [Int_Loc-1] += 1;
   10ac8:	0c800793          	li	a5,200
   10acc:	02f30333          	mul	t1,t1,a5
   10ad0:	00261793          	slli	a5,a2,0x2
   10ad4:	006787b3          	add	a5,a5,t1
   10ad8:	00f587b3          	add	a5,a1,a5
   10adc:	0107a703          	lw	a4,16(a5)
   10ae0:	0017071b          	addiw	a4,a4,1
   10ae4:	00e7a823          	sw	a4,16(a5)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:104
  Arr_2_Par_Ref [Int_Loc+20] [Int_Loc] = Arr_1_Par_Ref [Int_Loc];
   10ae8:	00052703          	lw	a4,0(a0)
   10aec:	00658333          	add	t1,a1,t1
   10af0:	000017b7          	lui	a5,0x1
   10af4:	00678333          	add	t1,a5,t1
   10af8:	00281813          	slli	a6,a6,0x2
   10afc:	01030833          	add	a6,t1,a6
   10b00:	fae82023          	sw	a4,-96(a6)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:105
  Int_Glob = 5;
   10b04:	00500713          	li	a4,5
   10b08:	000277b7          	lui	a5,0x27
   10b0c:	d0e7ac23          	sw	a4,-744(a5) # 26d18 <Int_Glob>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:106
} /* Proc_8 */
   10b10:	00008067          	ret

0000000000010b14 <Func_1>:
Func_1():
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:118
    /* second call:     Ch_1_Par_Val == 'A', Ch_2_Par_Val == 'C'    */
    /* third call:      Ch_1_Par_Val == 'B', Ch_2_Par_Val == 'C'    */

Capital_Letter   Ch_1_Par_Val;
Capital_Letter   Ch_2_Par_Val;
{
   10b14:	0ff57513          	andi	a0,a0,255
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:124
  Capital_Letter        Ch_1_Loc;
  Capital_Letter        Ch_2_Loc;

  Ch_1_Loc = Ch_1_Par_Val;
  Ch_2_Loc = Ch_1_Loc;
  if (Ch_2_Loc != Ch_2_Par_Val)
   10b18:	0ff5f593          	andi	a1,a1,255
   10b1c:	00b51a63          	bne	a0,a1,10b30 <Func_1+0x1c>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:129
    /* then, executed */
    return (Ident_1);
  else  /* not executed */
  {
    Ch_1_Glob = Ch_1_Loc;
   10b20:	000277b7          	lui	a5,0x27
   10b24:	d0a78e23          	sb	a0,-740(a5) # 26d1c <Ch_1_Glob>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:130
    return (Ident_2);
   10b28:	00100513          	li	a0,1
   10b2c:	00008067          	ret
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:126

  Ch_1_Loc = Ch_1_Par_Val;
  Ch_2_Loc = Ch_1_Loc;
  if (Ch_2_Loc != Ch_2_Par_Val)
    /* then, executed */
    return (Ident_1);
   10b30:	00000513          	li	a0,0
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:132
  else  /* not executed */
  {
    Ch_1_Glob = Ch_1_Loc;
    return (Ident_2);
   }
} /* Func_1 */
   10b34:	00008067          	ret

0000000000010b38 <Func_2>:
Func_2():
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:143
    /* Str_1_Par_Ref == "DHRYSTONE PROGRAM, 1'ST STRING" */
    /* Str_2_Par_Ref == "DHRYSTONE PROGRAM, 2'ND STRING" */

Str_30  Str_1_Par_Ref;
Str_30  Str_2_Par_Ref;
{
   10b38:	ff010113          	addi	sp,sp,-16
   10b3c:	00113423          	sd	ra,8(sp)
   10b40:	00813023          	sd	s0,0(sp)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:147
  REG One_Thirty        Int_Loc;
      Capital_Letter    Ch_Loc;

  Int_Loc = 2;
   10b44:	00200413          	li	s0,2
Func_1():
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:129
  if (Ch_2_Loc != Ch_2_Par_Val)
    /* then, executed */
    return (Ident_1);
  else  /* not executed */
  {
    Ch_1_Glob = Ch_1_Loc;
   10b48:	00027637          	lui	a2,0x27
Func_2():
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:148
{
  REG One_Thirty        Int_Loc;
      Capital_Letter    Ch_Loc;

  Int_Loc = 2;
  while (Int_Loc <= 2) /* loop body executed once */
   10b4c:	00040693          	mv	a3,s0
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:149
    if (Func_1 (Str_1_Par_Ref[Int_Loc],
   10b50:	00850733          	add	a4,a0,s0
   10b54:	00074703          	lbu	a4,0(a4)
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:150
                Str_2_Par_Ref[Int_Loc+1]) == Ident_1)
   10b58:	008587b3          	add	a5,a1,s0
Func_1():
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:124
  Capital_Letter        Ch_1_Loc;
  Capital_Letter        Ch_2_Loc;

  Ch_1_Loc = Ch_1_Par_Val;
  Ch_2_Loc = Ch_1_Loc;
  if (Ch_2_Loc != Ch_2_Par_Val)
   10b5c:	0017c783          	lbu	a5,1(a5)
   10b60:	02e79863          	bne	a5,a4,10b90 <Func_2+0x58>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:129
    /* then, executed */
    return (Ident_1);
  else  /* not executed */
  {
    Ch_1_Glob = Ch_1_Loc;
   10b64:	d0e60e23          	sb	a4,-740(a2) # 26d1c <Ch_1_Glob>
Func_2():
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:148
{
  REG One_Thirty        Int_Loc;
      Capital_Letter    Ch_Loc;

  Int_Loc = 2;
  while (Int_Loc <= 2) /* loop body executed once */
   10b68:	fe86d4e3          	ble	s0,a3,10b50 <Func_2+0x18>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:164
  if (Ch_Loc == 'R')
    /* then, not executed */
    return (true);
  else /* executed */
  {
    if (strcmp (Str_1_Par_Ref, Str_2_Par_Ref) > 0)
   10b6c:	479000ef          	jal	117e4 <strcmp>
   10b70:	00a05c63          	blez	a0,10b88 <Func_2+0x50>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:168
      /* then, not executed */
    {
      Int_Loc += 7;
      Int_Glob = Int_Loc;
   10b74:	0074041b          	addiw	s0,s0,7
   10b78:	000277b7          	lui	a5,0x27
   10b7c:	d087ac23          	sw	s0,-744(a5) # 26d18 <Int_Glob>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:169
      return (true);
   10b80:	00100513          	li	a0,1
   10b84:	0140006f          	j	10b98 <Func_2+0x60>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:172
    }
    else /* executed */
      return (false);
   10b88:	00000513          	li	a0,0
   10b8c:	00c0006f          	j	10b98 <Func_2+0x60>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:154
    if (Func_1 (Str_1_Par_Ref[Int_Loc],
                Str_2_Par_Ref[Int_Loc+1]) == Ident_1)
      /* then, executed */
    {
      Ch_Loc = 'A';
      Int_Loc += 1;
   10b90:	0014041b          	addiw	s0,s0,1
   10b94:	fd5ff06f          	j	10b68 <Func_2+0x30>
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:174
      return (true);
    }
    else /* executed */
      return (false);
  } /* if Ch_Loc */
} /* Func_2 */
   10b98:	00813083          	ld	ra,8(sp)
   10b9c:	00013403          	ld	s0,0(sp)
   10ba0:	01010113          	addi	sp,sp,16
   10ba4:	00008067          	ret

0000000000010ba8 <Func_3>:
Func_3():
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:182
Boolean Func_3 (Enum_Par_Val)
/***************************/
    /* executed once        */
    /* Enum_Par_Val == Ident_3 */
Enumeration Enum_Par_Val;
{
   10ba8:	ffe5051b          	addiw	a0,a0,-2
/home/nancy/riscv-tools/sim/test/stdtest/dhry2.1/dhry_2.c:191
  if (Enum_Loc == Ident_3)
    /* then, executed */
    return (true);
  else /* not executed */
    return (false);
} /* Func_3 */
   10bac:	00153513          	seqz	a0,a0
   10bb0:	00008067          	ret

0000000000010bb4 <atexit>:
atexit():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/atexit.c:65
int
_DEFUN (atexit,
	(fn),
	_VOID _EXFNPTR(fn, (_VOID)))
{
  return __register_exitproc (__et_atexit, fn, NULL, NULL);
   10bb4:	00050593          	mv	a1,a0
   10bb8:	00000693          	li	a3,0
   10bbc:	00000613          	li	a2,0
   10bc0:	00000513          	li	a0,0
   10bc4:	00c0406f          	j	14bd0 <__register_exitproc>

0000000000010bc8 <exit>:
exit():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/exit.c:60
 */

void
_DEFUN (exit, (code),
	int code)
{
   10bc8:	ff010113          	addi	sp,sp,-16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/exit.c:66
#ifdef _LITE_EXIT
  /* Refer to comments in __atexit.c for more details of lite exit.  */
  void __call_exitprocs _PARAMS ((int, _PTR)) __attribute__((weak));
  if (__call_exitprocs)
#endif
    __call_exitprocs (code, NULL);
   10bcc:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/exit.c:60
 */

void
_DEFUN (exit, (code),
	int code)
{
   10bd0:	00813023          	sd	s0,0(sp)
   10bd4:	00113423          	sd	ra,8(sp)
   10bd8:	00050413          	mv	s0,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/exit.c:66
#ifdef _LITE_EXIT
  /* Refer to comments in __atexit.c for more details of lite exit.  */
  void __call_exitprocs _PARAMS ((int, _PTR)) __attribute__((weak));
  if (__call_exitprocs)
#endif
    __call_exitprocs (code, NULL);
   10bdc:	104040ef          	jal	14ce0 <__call_exitprocs>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/exit.c:68

  if (_GLOBAL_REENT->__cleanup)
   10be0:	8081b503          	ld	a0,-2040(gp) # 24448 <_global_impure_ptr>
   10be4:	05853783          	ld	a5,88(a0)
   10be8:	00078463          	beqz	a5,10bf0 <exit+0x28>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/exit.c:69
    (*_GLOBAL_REENT->__cleanup) (_GLOBAL_REENT);
   10bec:	000780e7          	jalr	a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/exit.c:70
  _exit (code);
   10bf0:	00040513          	mv	a0,s0
   10bf4:	1810f0ef          	jal	20574 <_exit>

0000000000010bf8 <__libc_fini_array>:
__libc_fini_array():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/fini.c:25
extern void _fini (void);

/* Run all the cleanup routines.  */
void
__libc_fini_array (void)
{
   10bf8:	fe010113          	addi	sp,sp,-32
   10bfc:	00813823          	sd	s0,16(sp)
   10c00:	00913423          	sd	s1,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/fini.c:29
  size_t count;
  size_t i;
  
  count = __fini_array_end - __fini_array_start;
   10c04:	00022437          	lui	s0,0x22
   10c08:	000224b7          	lui	s1,0x22
   10c0c:	c4848493          	addi	s1,s1,-952 # 21c48 <__init_array_end>
   10c10:	c5040413          	addi	s0,s0,-944 # 21c50 <__fini_array_end>
   10c14:	40940433          	sub	s0,s0,s1
   10c18:	ff840793          	addi	a5,s0,-8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/fini.c:25
extern void _fini (void);

/* Run all the cleanup routines.  */
void
__libc_fini_array (void)
{
   10c1c:	00113c23          	sd	ra,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/fini.c:29
  size_t count;
  size_t i;
  
  count = __fini_array_end - __fini_array_start;
   10c20:	40345413          	srai	s0,s0,0x3
   10c24:	009784b3          	add	s1,a5,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/fini.c:30
  for (i = count; i > 0; i--)
   10c28:	00040c63          	beqz	s0,10c40 <__libc_fini_array+0x48>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/fini.c:31 (discriminator 3)
    __fini_array_start[i-1] ();
   10c2c:	0004b783          	ld	a5,0(s1)
   10c30:	fff40413          	addi	s0,s0,-1
   10c34:	ff848493          	addi	s1,s1,-8
   10c38:	000780e7          	jalr	a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/fini.c:30
{
  size_t count;
  size_t i;
  
  count = __fini_array_end - __fini_array_start;
  for (i = count; i > 0; i--)
   10c3c:	fe0418e3          	bnez	s0,10c2c <__libc_fini_array+0x34>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/fini.c:34
    __fini_array_start[i-1] ();

  _fini ();
}
   10c40:	01813083          	ld	ra,24(sp)
   10c44:	01013403          	ld	s0,16(sp)
   10c48:	00813483          	ld	s1,8(sp)
   10c4c:	02010113          	addi	sp,sp,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/fini.c:33
  
  count = __fini_array_end - __fini_array_start;
  for (i = count; i > 0; i--)
    __fini_array_start[i-1] ();

  _fini ();
   10c50:	bf8ff06f          	j	10048 <_fini>

0000000000010c54 <__libc_init_array>:
__libc_init_array():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/init.c:29
extern void _init (void);

/* Iterate over all the init routines.  */
void
__libc_init_array (void)
{
   10c54:	fe010113          	addi	sp,sp,-32
   10c58:	00813823          	sd	s0,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/init.c:33
  size_t count;
  size_t i;

  count = __preinit_array_end - __preinit_array_start;
   10c5c:	000227b7          	lui	a5,0x22
   10c60:	00022437          	lui	s0,0x22
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/init.c:29
extern void _init (void);

/* Iterate over all the init routines.  */
void
__libc_init_array (void)
{
   10c64:	01213023          	sd	s2,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/init.c:33
  size_t count;
  size_t i;

  count = __preinit_array_end - __preinit_array_start;
   10c68:	c4078793          	addi	a5,a5,-960 # 21c40 <_etext>
   10c6c:	c4040913          	addi	s2,s0,-960 # 21c40 <_etext>
   10c70:	41278933          	sub	s2,a5,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/init.c:29
extern void _init (void);

/* Iterate over all the init routines.  */
void
__libc_init_array (void)
{
   10c74:	00913423          	sd	s1,8(sp)
   10c78:	00113c23          	sd	ra,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/init.c:33
  size_t count;
  size_t i;

  count = __preinit_array_end - __preinit_array_start;
   10c7c:	40395913          	srai	s2,s2,0x3
   10c80:	c4040413          	addi	s0,s0,-960
   10c84:	00000493          	li	s1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/init.c:34
  for (i = 0; i < count; i++)
   10c88:	00090c63          	beqz	s2,10ca0 <__libc_init_array+0x4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/init.c:35 (discriminator 3)
    __preinit_array_start[i] ();
   10c8c:	00043783          	ld	a5,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/init.c:34
{
  size_t count;
  size_t i;

  count = __preinit_array_end - __preinit_array_start;
  for (i = 0; i < count; i++)
   10c90:	00148493          	addi	s1,s1,1
   10c94:	00840413          	addi	s0,s0,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/init.c:35
    __preinit_array_start[i] ();
   10c98:	000780e7          	jalr	a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/init.c:34
{
  size_t count;
  size_t i;

  count = __preinit_array_end - __preinit_array_start;
  for (i = 0; i < count; i++)
   10c9c:	fe9918e3          	bne	s2,s1,10c8c <__libc_init_array+0x38>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/init.c:37
    __preinit_array_start[i] ();

  _init ();
   10ca0:	ba8ff0ef          	jal	10048 <_fini>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/init.c:39

  count = __init_array_end - __init_array_start;
   10ca4:	00022437          	lui	s0,0x22
   10ca8:	000227b7          	lui	a5,0x22
   10cac:	c4040913          	addi	s2,s0,-960 # 21c40 <_etext>
   10cb0:	c4878793          	addi	a5,a5,-952 # 21c48 <__init_array_end>
   10cb4:	41278933          	sub	s2,a5,s2
   10cb8:	40395913          	srai	s2,s2,0x3
   10cbc:	c4040413          	addi	s0,s0,-960
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/init.c:40
  for (i = 0; i < count; i++)
   10cc0:	00000493          	li	s1,0
   10cc4:	00090c63          	beqz	s2,10cdc <__libc_init_array+0x88>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/init.c:41 (discriminator 3)
    __init_array_start[i] ();
   10cc8:	00043783          	ld	a5,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/init.c:40
    __preinit_array_start[i] ();

  _init ();

  count = __init_array_end - __init_array_start;
  for (i = 0; i < count; i++)
   10ccc:	00148493          	addi	s1,s1,1
   10cd0:	00840413          	addi	s0,s0,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/init.c:41
    __init_array_start[i] ();
   10cd4:	000780e7          	jalr	a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/init.c:40
    __preinit_array_start[i] ();

  _init ();

  count = __init_array_end - __init_array_start;
  for (i = 0; i < count; i++)
   10cd8:	fe9918e3          	bne	s2,s1,10cc8 <__libc_init_array+0x74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/misc/init.c:42
    __init_array_start[i] ();
}
   10cdc:	01813083          	ld	ra,24(sp)
   10ce0:	01013403          	ld	s0,16(sp)
   10ce4:	00813483          	ld	s1,8(sp)
   10ce8:	00013903          	ld	s2,0(sp)
   10cec:	02010113          	addi	sp,sp,32
   10cf0:	00008067          	ret

0000000000010cf4 <malloc>:
malloc():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/malloc.c:215

_PTR
_DEFUN (malloc, (nbytes),
	size_t nbytes)		/* get a block */
{
  return _malloc_r (_REENT, nbytes);
   10cf4:	00050593          	mv	a1,a0
   10cf8:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
   10cfc:	0100006f          	j	10d0c <_malloc_r>

0000000000010d00 <free>:
free():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/malloc.c:222

void
_DEFUN (free, (aptr),
	_PTR aptr)
{
  _free_r (_REENT, aptr);
   10d00:	00050593          	mv	a1,a0
   10d04:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
   10d08:	62d0506f          	j	16b34 <_free_r>

0000000000010d0c <_malloc_r>:
_malloc_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2328
#if __STD_C
Void_t* mALLOc(RARG size_t bytes)
#else
Void_t* mALLOc(RARG bytes) RDECL size_t bytes;
#endif
{
   10d0c:	fa010113          	addi	sp,sp,-96
   10d10:	04913423          	sd	s1,72(sp)
   10d14:	03313c23          	sd	s3,56(sp)
   10d18:	04113c23          	sd	ra,88(sp)
   10d1c:	04813823          	sd	s0,80(sp)
   10d20:	05213023          	sd	s2,64(sp)
   10d24:	03413823          	sd	s4,48(sp)
   10d28:	03513423          	sd	s5,40(sp)
   10d2c:	03613023          	sd	s6,32(sp)
   10d30:	01713c23          	sd	s7,24(sp)
   10d34:	01813823          	sd	s8,16(sp)
   10d38:	01913423          	sd	s9,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2348
  int       startidx;                /* first bin of a traversed block */
  mchunkptr fwd;                     /* misc temp for linking */
  mchunkptr bck;                     /* misc temp for linking */
  mbinptr q;                         /* misc temp */

  INTERNAL_SIZE_T nb  = request2size(bytes);  /* padded request size; */
   10d3c:	01758493          	addi	s1,a1,23
   10d40:	02e00793          	li	a5,46
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2328
#if __STD_C
Void_t* mALLOc(RARG size_t bytes)
#else
Void_t* mALLOc(RARG bytes) RDECL size_t bytes;
#endif
{
   10d44:	00050993          	mv	s3,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2348
  int       startidx;                /* first bin of a traversed block */
  mchunkptr fwd;                     /* misc temp for linking */
  mchunkptr bck;                     /* misc temp for linking */
  mbinptr q;                         /* misc temp */

  INTERNAL_SIZE_T nb  = request2size(bytes);  /* padded request size; */
   10d48:	1c97fa63          	bleu	s1,a5,10f1c <_malloc_r+0x210>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2351 (discriminator 1)

  /* Check for overflow and just fail, if so. */
  if (nb > INT_MAX || nb < bytes)
   10d4c:	800007b7          	lui	a5,0x80000
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2348
  int       startidx;                /* first bin of a traversed block */
  mchunkptr fwd;                     /* misc temp for linking */
  mchunkptr bck;                     /* misc temp for linking */
  mbinptr q;                         /* misc temp */

  INTERNAL_SIZE_T nb  = request2size(bytes);  /* padded request size; */
   10d50:	ff04f493          	andi	s1,s1,-16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2351

  /* Check for overflow and just fail, if so. */
  if (nb > INT_MAX || nb < bytes)
   10d54:	fff7c793          	not	a5,a5
   10d58:	2497ee63          	bltu	a5,s1,10fb4 <_malloc_r+0x2a8>
   10d5c:	24b4ec63          	bltu	s1,a1,10fb4 <_malloc_r+0x2a8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2357
  {
    RERRNO = ENOMEM;
    return 0;
  }

  MALLOC_LOCK;
   10d60:	71c000ef          	jal	1147c <__malloc_lock>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2361

  /* Check for exact match in a bin */

  if (is_small_request(nb))  /* Faster version for small requests */
   10d64:	1f700793          	li	a5,503
   10d68:	7097f063          	bleu	s1,a5,11468 <_malloc_r+0x75c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2393
    idx += 2; /* Set for bin scan below. We've already scanned 2 bins. */

  }
  else
  {
    idx = bin_index(nb);
   10d6c:	0094d793          	srli	a5,s1,0x9
   10d70:	08000693          	li	a3,128
   10d74:	04000513          	li	a0,64
   10d78:	03f00593          	li	a1,63
   10d7c:	24079463          	bnez	a5,10fc4 <_malloc_r+0x2b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2394 (discriminator 24)
    bin = bin_at(idx);
   10d80:	00024937          	lui	s2,0x24
   10d84:	b8890913          	addi	s2,s2,-1144 # 23b88 <__malloc_av_>
   10d88:	00369693          	slli	a3,a3,0x3
   10d8c:	00d906b3          	add	a3,s2,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2396

    for (victim = last(bin); victim != bin; victim = victim->bk)
   10d90:	0086b403          	ld	s0,8(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2394

  }
  else
  {
    idx = bin_index(nb);
    bin = bin_at(idx);
   10d94:	ff068693          	addi	a3,a3,-16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2396

    for (victim = last(bin); victim != bin; victim = victim->bk)
   10d98:	24868663          	beq	a3,s0,10fe4 <_malloc_r+0x2d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2398
    {
      victim_size = chunksize(victim);
   10d9c:	00843783          	ld	a5,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2401
      remainder_size = long_sub_size_t(victim_size, nb);
      
      if (remainder_size >= (long)MINSIZE) /* too big */
   10da0:	01f00613          	li	a2,31
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2398
    idx = bin_index(nb);
    bin = bin_at(idx);

    for (victim = last(bin); victim != bin; victim = victim->bk)
    {
      victim_size = chunksize(victim);
   10da4:	ffc7f793          	andi	a5,a5,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2399
      remainder_size = long_sub_size_t(victim_size, nb);
   10da8:	40978733          	sub	a4,a5,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2401
      
      if (remainder_size >= (long)MINSIZE) /* too big */
   10dac:	02e64063          	blt	a2,a4,10dcc <_malloc_r+0xc0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2407
      {
        --idx; /* adjust to rescan below after checking last remainder */
        break;   
      }

      else if (remainder_size >= 0) /* exact fit */
   10db0:	22075e63          	bgez	a4,10fec <_malloc_r+0x2e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2396 (discriminator 2)
  else
  {
    idx = bin_index(nb);
    bin = bin_at(idx);

    for (victim = last(bin); victim != bin; victim = victim->bk)
   10db4:	01843403          	ld	s0,24(s0)
   10db8:	22868663          	beq	a3,s0,10fe4 <_malloc_r+0x2d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2398
    {
      victim_size = chunksize(victim);
   10dbc:	00843783          	ld	a5,8(s0)
   10dc0:	ffc7f793          	andi	a5,a5,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2399
      remainder_size = long_sub_size_t(victim_size, nb);
   10dc4:	40978733          	sub	a4,a5,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2401
      
      if (remainder_size >= (long)MINSIZE) /* too big */
   10dc8:	fee654e3          	ble	a4,a2,10db0 <_malloc_r+0xa4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2404
      {
        --idx; /* adjust to rescan below after checking last remainder */
        break;   
   10dcc:	00058693          	mv	a3,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2423

  }

  /* Try to use the last split-off remainder */

  if ( (victim = last_remainder->fd) != last_remainder)
   10dd0:	02093403          	ld	s0,32(s2)
   10dd4:	01090813          	addi	a6,s2,16
   10dd8:	47040a63          	beq	s0,a6,1124c <_malloc_r+0x540>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2425
  {
    victim_size = chunksize(victim);
   10ddc:	00843783          	ld	a5,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2428
    remainder_size = long_sub_size_t(victim_size, nb);

    if (remainder_size >= (long)MINSIZE) /* re-split */
   10de0:	01f00613          	li	a2,31
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2425

  /* Try to use the last split-off remainder */

  if ( (victim = last_remainder->fd) != last_remainder)
  {
    victim_size = chunksize(victim);
   10de4:	ffc7f793          	andi	a5,a5,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2426
    remainder_size = long_sub_size_t(victim_size, nb);
   10de8:	40978733          	sub	a4,a5,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2428

    if (remainder_size >= (long)MINSIZE) /* re-split */
   10dec:	44e64a63          	blt	a2,a4,11240 <_malloc_r+0x534>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2440
      check_malloced_chunk(victim, nb);
      MALLOC_UNLOCK;
      return chunk2mem(victim);
    }

    clear_last_remainder;
   10df0:	03093423          	sd	a6,40(s2)
   10df4:	03093023          	sd	a6,32(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2442

    if (remainder_size >= 0)  /* exhaust */
   10df8:	20075063          	bgez	a4,10ff8 <_malloc_r+0x2ec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2452
      return chunk2mem(victim);
    }

    /* Else place in bin */

    frontlink(victim, victim_size, remainder_index, bck, fwd);
   10dfc:	1ff00713          	li	a4,511
   10e00:	3cf76c63          	bltu	a4,a5,111d8 <_malloc_r+0x4cc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2452 (discriminator 1)
   10e04:	0037d793          	srli	a5,a5,0x3
   10e08:	0007879b          	sext.w	a5,a5
   10e0c:	0017861b          	addiw	a2,a5,1
   10e10:	0016161b          	slliw	a2,a2,0x1
   10e14:	00361613          	slli	a2,a2,0x3
   10e18:	00893703          	ld	a4,8(s2)
   10e1c:	00c90633          	add	a2,s2,a2
   10e20:	00063503          	ld	a0,0(a2)
   10e24:	4027d79b          	sraiw	a5,a5,0x2
   10e28:	00100593          	li	a1,1
   10e2c:	00f597b3          	sll	a5,a1,a5
   10e30:	00e7e7b3          	or	a5,a5,a4
   10e34:	ff060713          	addi	a4,a2,-16
   10e38:	00e43c23          	sd	a4,24(s0)
   10e3c:	00a43823          	sd	a0,16(s0)
   10e40:	00f93423          	sd	a5,8(s2)
   10e44:	00863023          	sd	s0,0(a2)
   10e48:	00853c23          	sd	s0,24(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2460
  /* 
     If there are any possibly nonempty big-enough blocks, 
     search for best fitting chunk by scanning bins in blockwidth units.
  */

  if ( (block = idx2binblock(idx)) <= binblocks)  
   10e4c:	4026d61b          	sraiw	a2,a3,0x2
   10e50:	00100713          	li	a4,1
   10e54:	00c71633          	sll	a2,a4,a2
   10e58:	1cc7e063          	bltu	a5,a2,11018 <_malloc_r+0x30c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2465
  {

    /* Get to the first marked block */

    if ( (block & binblocks) == 0) 
   10e5c:	00f67733          	and	a4,a2,a5
   10e60:	02071463          	bnez	a4,10e88 <_malloc_r+0x17c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2469
    {
      /* force to an even block boundary */
      idx = (idx & ~(BINBLOCKWIDTH - 1)) + BINBLOCKWIDTH;
      block <<= 1;
   10e64:	00161613          	slli	a2,a2,0x1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2468
    /* Get to the first marked block */

    if ( (block & binblocks) == 0) 
    {
      /* force to an even block boundary */
      idx = (idx & ~(BINBLOCKWIDTH - 1)) + BINBLOCKWIDTH;
   10e68:	ffc6f693          	andi	a3,a3,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2470
      block <<= 1;
      while ((block & binblocks) == 0)
   10e6c:	00f67733          	and	a4,a2,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2468
    /* Get to the first marked block */

    if ( (block & binblocks) == 0) 
    {
      /* force to an even block boundary */
      idx = (idx & ~(BINBLOCKWIDTH - 1)) + BINBLOCKWIDTH;
   10e70:	0046869b          	addiw	a3,a3,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2470
      block <<= 1;
      while ((block & binblocks) == 0)
   10e74:	00071a63          	bnez	a4,10e88 <_malloc_r+0x17c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2473
      {
        idx += BINBLOCKWIDTH;
        block <<= 1;
   10e78:	00161613          	slli	a2,a2,0x1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2470
    if ( (block & binblocks) == 0) 
    {
      /* force to an even block boundary */
      idx = (idx & ~(BINBLOCKWIDTH - 1)) + BINBLOCKWIDTH;
      block <<= 1;
      while ((block & binblocks) == 0)
   10e7c:	00f67733          	and	a4,a2,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2472
      {
        idx += BINBLOCKWIDTH;
   10e80:	0046869b          	addiw	a3,a3,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2470
    if ( (block & binblocks) == 0) 
    {
      /* force to an even block boundary */
      idx = (idx & ~(BINBLOCKWIDTH - 1)) + BINBLOCKWIDTH;
      block <<= 1;
      while ((block & binblocks) == 0)
   10e84:	fe070ae3          	beqz	a4,10e78 <_malloc_r+0x16c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2493
        for (victim = last(bin); victim != bin; victim = victim->bk)
        {
          victim_size = chunksize(victim);
          remainder_size = long_sub_size_t(victim_size, nb);

          if (remainder_size >= (long)MINSIZE) /* split */
   10e88:	01f00513          	li	a0,31
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2481
      
    /* For each possibly nonempty block ... */
    for (;;)  
    {
      startidx = idx;          /* (track incomplete blocks) */
      q = bin = bin_at(idx);
   10e8c:	0016889b          	addiw	a7,a3,1
   10e90:	0018989b          	slliw	a7,a7,0x1
   10e94:	00389893          	slli	a7,a7,0x3
   10e98:	011908b3          	add	a7,s2,a7
   10e9c:	ff088893          	addi	a7,a7,-16
   10ea0:	00088593          	mv	a1,a7
   10ea4:	00068313          	mv	t1,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2488
      /* For each bin in this block ... */
      do
      {
        /* Find and use first big enough chunk ... */

        for (victim = last(bin); victim != bin; victim = victim->bk)
   10ea8:	0185b403          	ld	s0,24(a1)
   10eac:	00859a63          	bne	a1,s0,10ec0 <_malloc_r+0x1b4>
   10eb0:	3a40006f          	j	11254 <_malloc_r+0x548>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2506
            check_malloced_chunk(victim, nb);
	    MALLOC_UNLOCK;
            return chunk2mem(victim);
          }

          else if (remainder_size >= 0)  /* take */
   10eb4:	3c075263          	bgez	a4,11278 <_malloc_r+0x56c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2488 (discriminator 2)
      /* For each bin in this block ... */
      do
      {
        /* Find and use first big enough chunk ... */

        for (victim = last(bin); victim != bin; victim = victim->bk)
   10eb8:	01843403          	ld	s0,24(s0)
   10ebc:	38858c63          	beq	a1,s0,11254 <_malloc_r+0x548>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2490
        {
          victim_size = chunksize(victim);
   10ec0:	00843783          	ld	a5,8(s0)
   10ec4:	ffc7f793          	andi	a5,a5,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2491
          remainder_size = long_sub_size_t(victim_size, nb);
   10ec8:	40978733          	sub	a4,a5,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2493

          if (remainder_size >= (long)MINSIZE) /* split */
   10ecc:	fee554e3          	ble	a4,a0,10eb4 <_malloc_r+0x1a8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2497
          {
            remainder = chunk_at_offset(victim, nb);
            set_head(victim, nb | PREV_INUSE);
            unlink(victim, bck, fwd);
   10ed0:	01843783          	ld	a5,24(s0)
   10ed4:	01043683          	ld	a3,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2496
          remainder_size = long_sub_size_t(victim_size, nb);

          if (remainder_size >= (long)MINSIZE) /* split */
          {
            remainder = chunk_at_offset(victim, nb);
            set_head(victim, nb | PREV_INUSE);
   10ed8:	0014e613          	ori	a2,s1,1
   10edc:	00c43423          	sd	a2,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2497
            unlink(victim, bck, fwd);
   10ee0:	00f6bc23          	sd	a5,24(a3)
   10ee4:	00d7b823          	sd	a3,16(a5) # ffffffff80000010 <_end+0xffffffff7ffd91f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2495
          victim_size = chunksize(victim);
          remainder_size = long_sub_size_t(victim_size, nb);

          if (remainder_size >= (long)MINSIZE) /* split */
          {
            remainder = chunk_at_offset(victim, nb);
   10ee8:	009404b3          	add	s1,s0,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2498
            set_head(victim, nb | PREV_INUSE);
            unlink(victim, bck, fwd);
            link_last_remainder(remainder);
   10eec:	02993423          	sd	s1,40(s2)
   10ef0:	02993023          	sd	s1,32(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2499
            set_head(remainder, remainder_size | PREV_INUSE);
   10ef4:	00176793          	ori	a5,a4,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2498
          if (remainder_size >= (long)MINSIZE) /* split */
          {
            remainder = chunk_at_offset(victim, nb);
            set_head(victim, nb | PREV_INUSE);
            unlink(victim, bck, fwd);
            link_last_remainder(remainder);
   10ef8:	0104bc23          	sd	a6,24(s1)
   10efc:	0104b823          	sd	a6,16(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2499
            set_head(remainder, remainder_size | PREV_INUSE);
   10f00:	00f4b423          	sd	a5,8(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2500
            set_foot(remainder, remainder_size);
   10f04:	00e484b3          	add	s1,s1,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2502
            check_malloced_chunk(victim, nb);
	    MALLOC_UNLOCK;
   10f08:	00098513          	mv	a0,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2500
            remainder = chunk_at_offset(victim, nb);
            set_head(victim, nb | PREV_INUSE);
            unlink(victim, bck, fwd);
            link_last_remainder(remainder);
            set_head(remainder, remainder_size | PREV_INUSE);
            set_foot(remainder, remainder_size);
   10f0c:	00e4b023          	sd	a4,0(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2502
            check_malloced_chunk(victim, nb);
	    MALLOC_UNLOCK;
   10f10:	570000ef          	jal	11480 <__malloc_unlock>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2503
            return chunk2mem(victim);
   10f14:	01040513          	addi	a0,s0,16
   10f18:	0680006f          	j	10f80 <_malloc_r+0x274>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2351
  mbinptr q;                         /* misc temp */

  INTERNAL_SIZE_T nb  = request2size(bytes);  /* padded request size; */

  /* Check for overflow and just fail, if so. */
  if (nb > INT_MAX || nb < bytes)
   10f1c:	02000493          	li	s1,32
   10f20:	08b4ea63          	bltu	s1,a1,10fb4 <_malloc_r+0x2a8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2357
  {
    RERRNO = ENOMEM;
    return 0;
  }

  MALLOC_LOCK;
   10f24:	558000ef          	jal	1147c <__malloc_lock>
   10f28:	00a00793          	li	a5,10
   10f2c:	00400693          	li	a3,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2367
  {
    idx = smallbin_index(nb); 

    /* No traversal or size check necessary for small bins.  */

    q = bin_at(idx);
   10f30:	00024937          	lui	s2,0x24
   10f34:	b8890913          	addi	s2,s2,-1144 # 23b88 <__malloc_av_>
   10f38:	00379793          	slli	a5,a5,0x3
   10f3c:	00f907b3          	add	a5,s2,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2368
    victim = last(q);
   10f40:	0087b403          	ld	s0,8(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2372

#if MALLOC_ALIGN != 16
    /* Also scan the next one, since it would have a remainder < MINSIZE */
    if (victim == q)
   10f44:	ff078713          	addi	a4,a5,-16
   10f48:	32e40063          	beq	s0,a4,11268 <_malloc_r+0x55c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2380
      victim = last(q);
    }
#endif
    if (victim != q)
    {
      victim_size = chunksize(victim);
   10f4c:	00843783          	ld	a5,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2381
      unlink(victim, bck, fwd);
   10f50:	01843683          	ld	a3,24(s0)
   10f54:	01043603          	ld	a2,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2380
      victim = last(q);
    }
#endif
    if (victim != q)
    {
      victim_size = chunksize(victim);
   10f58:	ffc7f793          	andi	a5,a5,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2410
      }

      else if (remainder_size >= 0) /* exact fit */
      {
        unlink(victim, bck, fwd);
        set_inuse_bit_at_offset(victim, victim_size);
   10f5c:	00f407b3          	add	a5,s0,a5
   10f60:	0087b703          	ld	a4,8(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2409
        break;   
      }

      else if (remainder_size >= 0) /* exact fit */
      {
        unlink(victim, bck, fwd);
   10f64:	00d63c23          	sd	a3,24(a2)
   10f68:	00c6b823          	sd	a2,16(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2410
        set_inuse_bit_at_offset(victim, victim_size);
   10f6c:	00176713          	ori	a4,a4,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2412
        check_malloced_chunk(victim, nb);
	MALLOC_UNLOCK;
   10f70:	00098513          	mv	a0,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2410
      }

      else if (remainder_size >= 0) /* exact fit */
      {
        unlink(victim, bck, fwd);
        set_inuse_bit_at_offset(victim, victim_size);
   10f74:	00e7b423          	sd	a4,8(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2412
        check_malloced_chunk(victim, nb);
	MALLOC_UNLOCK;
   10f78:	508000ef          	jal	11480 <__malloc_unlock>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2413
        return chunk2mem(victim);
   10f7c:	01040513          	addi	a0,s0,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2593
  check_malloced_chunk(victim, nb);
  MALLOC_UNLOCK;
  return chunk2mem(victim);

#endif /* MALLOC_PROVIDED */
}
   10f80:	05813083          	ld	ra,88(sp)
   10f84:	05013403          	ld	s0,80(sp)
   10f88:	04813483          	ld	s1,72(sp)
   10f8c:	04013903          	ld	s2,64(sp)
   10f90:	03813983          	ld	s3,56(sp)
   10f94:	03013a03          	ld	s4,48(sp)
   10f98:	02813a83          	ld	s5,40(sp)
   10f9c:	02013b03          	ld	s6,32(sp)
   10fa0:	01813b83          	ld	s7,24(sp)
   10fa4:	01013c03          	ld	s8,16(sp)
   10fa8:	00813c83          	ld	s9,8(sp)
   10fac:	06010113          	addi	sp,sp,96
   10fb0:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2353
  INTERNAL_SIZE_T nb  = request2size(bytes);  /* padded request size; */

  /* Check for overflow and just fail, if so. */
  if (nb > INT_MAX || nb < bytes)
  {
    RERRNO = ENOMEM;
   10fb4:	00c00793          	li	a5,12
   10fb8:	00f9a023          	sw	a5,0(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2354
    return 0;
   10fbc:	00000513          	li	a0,0
   10fc0:	fc1ff06f          	j	10f80 <_malloc_r+0x274>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2393 (discriminator 2)
    idx += 2; /* Set for bin scan below. We've already scanned 2 bins. */

  }
  else
  {
    idx = bin_index(nb);
   10fc4:	00400713          	li	a4,4
   10fc8:	1ef76463          	bltu	a4,a5,111b0 <_malloc_r+0x4a4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2393 (discriminator 4)
   10fcc:	0064d593          	srli	a1,s1,0x6
   10fd0:	0005859b          	sext.w	a1,a1
   10fd4:	0395851b          	addiw	a0,a1,57
   10fd8:	0015169b          	slliw	a3,a0,0x1
   10fdc:	0385859b          	addiw	a1,a1,56
   10fe0:	da1ff06f          	j	10d80 <_malloc_r+0x74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2396
    bin = bin_at(idx);

    for (victim = last(bin); victim != bin; victim = victim->bk)
   10fe4:	00050693          	mv	a3,a0
   10fe8:	de9ff06f          	j	10dd0 <_malloc_r+0xc4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2409
        break;   
      }

      else if (remainder_size >= 0) /* exact fit */
      {
        unlink(victim, bck, fwd);
   10fec:	01843683          	ld	a3,24(s0)
   10ff0:	01043603          	ld	a2,16(s0)
   10ff4:	f69ff06f          	j	10f5c <_malloc_r+0x250>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2444

    clear_last_remainder;

    if (remainder_size >= 0)  /* exhaust */
    {
      set_inuse_bit_at_offset(victim, victim_size);
   10ff8:	00f407b3          	add	a5,s0,a5
   10ffc:	0087b703          	ld	a4,8(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2446
      check_malloced_chunk(victim, nb);
      MALLOC_UNLOCK;
   11000:	00098513          	mv	a0,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2444

    clear_last_remainder;

    if (remainder_size >= 0)  /* exhaust */
    {
      set_inuse_bit_at_offset(victim, victim_size);
   11004:	00176713          	ori	a4,a4,1
   11008:	00e7b423          	sd	a4,8(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2446
      check_malloced_chunk(victim, nb);
      MALLOC_UNLOCK;
   1100c:	474000ef          	jal	11480 <__malloc_unlock>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2447
      return chunk2mem(victim);
   11010:	01040513          	addi	a0,s0,16
   11014:	f6dff06f          	j	10f80 <_malloc_r+0x274>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2560


  /* Try to use top chunk */

  /* Require that there be a remainder, ensuring top always exists  */
  remainder_size = long_sub_size_t(chunksize(top), nb);
   11018:	01093403          	ld	s0,16(s2)
   1101c:	00843703          	ld	a4,8(s0)
   11020:	ffc77b93          	andi	s7,a4,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2561
  if (chunksize(top) < nb || remainder_size < (long)MINSIZE)
   11024:	009be863          	bltu	s7,s1,11034 <_malloc_r+0x328>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2560 (discriminator 1)


  /* Try to use top chunk */

  /* Require that there be a remainder, ensuring top always exists  */
  remainder_size = long_sub_size_t(chunksize(top), nb);
   11028:	409b87b3          	sub	a5,s7,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2561
  if (chunksize(top) < nb || remainder_size < (long)MINSIZE)
   1102c:	01f00713          	li	a4,31
   11030:	14f74c63          	blt	a4,a5,11188 <_malloc_r+0x47c>
malloc_extend_top():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2155
  INTERNAL_SIZE_T old_top_size = chunksize(old_top);
  char*     old_end      = (char*)(chunk_at_offset(old_top, old_top_size));

  /* Pad request with top_pad plus minimal overhead */
  
  INTERNAL_SIZE_T    sbrk_size     = nb + top_pad + MINSIZE;
   11034:	9101b783          	ld	a5,-1776(gp) # 24550 <__malloc_top_pad>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2162

  /* If not the first time through, round to preserve page boundary */
  /* Otherwise, we need to correct to a page size below anyway. */
  /* (We also correct below if an intervening foreign sbrk call.) */

  if (sbrk_base != (char*)(-1))
   11038:	8181b683          	ld	a3,-2024(gp) # 24458 <__malloc_sbrk_base>
   1103c:	fff00713          	li	a4,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2155
  INTERNAL_SIZE_T old_top_size = chunksize(old_top);
  char*     old_end      = (char*)(chunk_at_offset(old_top, old_top_size));

  /* Pad request with top_pad plus minimal overhead */
  
  INTERNAL_SIZE_T    sbrk_size     = nb + top_pad + MINSIZE;
   11040:	00f487b3          	add	a5,s1,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2151
  char*     new_brk;              /* return of 2nd sbrk call */
  INTERNAL_SIZE_T top_size;       /* new size of top chunk */

  mchunkptr old_top     = top;  /* Record state of old top */
  INTERNAL_SIZE_T old_top_size = chunksize(old_top);
  char*     old_end      = (char*)(chunk_at_offset(old_top, old_top_size));
   11044:	01740a33          	add	s4,s0,s7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2155

  /* Pad request with top_pad plus minimal overhead */
  
  INTERNAL_SIZE_T    sbrk_size     = nb + top_pad + MINSIZE;
   11048:	02078b13          	addi	s6,a5,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2162

  /* If not the first time through, round to preserve page boundary */
  /* Otherwise, we need to correct to a page size below anyway. */
  /* (We also correct below if an intervening foreign sbrk call.) */

  if (sbrk_base != (char*)(-1))
   1104c:	00e68c63          	beq	a3,a4,11064 <_malloc_r+0x358>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2163
    sbrk_size = (sbrk_size + (pagesz - 1)) & ~(pagesz - 1);
   11050:	00001b37          	lui	s6,0x1
   11054:	01fb0b13          	addi	s6,s6,31 # 101f <_ftext-0xefe1>
   11058:	01678b33          	add	s6,a5,s6
   1105c:	fffff7b7          	lui	a5,0xfffff
   11060:	00fb7b33          	and	s6,s6,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2165

  brk = (char*)(MORECORE (sbrk_size));
   11064:	000b0513          	mv	a0,s6
   11068:	4b80f0ef          	jal	20520 <sbrk>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2168

  /* Fail if sbrk failed or if a foreign sbrk call killed our space */
  if (brk == (char*)(MORECORE_FAILURE) || 
   1106c:	fff00793          	li	a5,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2165
  /* (We also correct below if an intervening foreign sbrk call.) */

  if (sbrk_base != (char*)(-1))
    sbrk_size = (sbrk_size + (pagesz - 1)) & ~(pagesz - 1);

  brk = (char*)(MORECORE (sbrk_size));
   11070:	00050a93          	mv	s5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2168

  /* Fail if sbrk failed or if a foreign sbrk call killed our space */
  if (brk == (char*)(MORECORE_FAILURE) || 
   11074:	26f50263          	beq	a0,a5,112d8 <_malloc_r+0x5cc>
   11078:	25456e63          	bltu	a0,s4,112d4 <_malloc_r+0x5c8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2172
      (brk < old_end && old_top != initial_top))
    return;

  sbrked_mem += sbrk_size;
   1107c:	96818c13          	addi	s8,gp,-1688 # 245a8 <__malloc_current_mallinfo>
   11080:	000c2783          	lw	a5,0(s8)
   11084:	00fb07bb          	addw	a5,s6,a5
   11088:	00fc2023          	sw	a5,0(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2174

  if (brk == old_end /* can just add bytes to current top, unless
   1108c:	355a0463          	beq	s4,s5,113d4 <_malloc_r+0x6c8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2183
    top_size = sbrk_size + old_top_size;
    set_head(top, top_size | PREV_INUSE);
  }
  else
  {
    if (sbrk_base == (char*)(-1))  /* First time through. Record base */
   11090:	8181b683          	ld	a3,-2024(gp) # 24458 <__malloc_sbrk_base>
   11094:	fff00713          	li	a4,-1
   11098:	36e68263          	beq	a3,a4,113fc <_malloc_r+0x6f0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2186
      sbrk_base = brk;
    else  /* Someone else called sbrk().  Count those bytes as sbrked_mem. */
      sbrked_mem += brk - (char*)old_end;
   1109c:	414a8a33          	sub	s4,s5,s4
   110a0:	00fa07bb          	addw	a5,s4,a5
   110a4:	00fc2023          	sw	a5,0(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2189

    /* Guarantee alignment of first new chunk made from this space */
    front_misalign = (POINTER_UINT)chunk2mem(brk) & MALLOC_ALIGN_MASK;
   110a8:	00faf713          	andi	a4,s5,15
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2190
    if (front_misalign > 0) 
   110ac:	000017b7          	lui	a5,0x1
   110b0:	00070a63          	beqz	a4,110c4 <_malloc_r+0x3b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2193
    {
      correction = (MALLOC_ALIGNMENT) - front_misalign;
      brk += correction;
   110b4:	40ea8ab3          	sub	s5,s5,a4
   110b8:	01078a13          	addi	s4,a5,16 # 1010 <_ftext-0xeff0>
   110bc:	010a8a93          	addi	s5,s5,16
   110c0:	40ea07b3          	sub	a5,s4,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2199
    }
    else
      correction = 0;

    /* Guarantee the next brk will be at a page boundary */
    correction += pagesz - ((POINTER_UINT)(brk + sbrk_size) & (pagesz - 1));
   110c4:	00001a37          	lui	s4,0x1
   110c8:	fffa0a13          	addi	s4,s4,-1 # fff <_ftext-0xf001>
   110cc:	016a8b33          	add	s6,s5,s6
   110d0:	014b7b33          	and	s6,s6,s4
   110d4:	41678a33          	sub	s4,a5,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2202

    /* Allocate correction */
    new_brk = (char*)(MORECORE (correction));
   110d8:	000a0513          	mv	a0,s4
   110dc:	4440f0ef          	jal	20520 <sbrk>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2203
    if (new_brk == (char*)(MORECORE_FAILURE))
   110e0:	fff00793          	li	a5,-1
   110e4:	30f50663          	beq	a0,a5,113f0 <_malloc_r+0x6e4>
   110e8:	41550733          	sub	a4,a0,s5
   110ec:	01470733          	add	a4,a4,s4
   110f0:	00176713          	ori	a4,a4,1
   110f4:	000a0a1b          	sext.w	s4,s4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2210
	correction = 0;
	correction_failed = 1;
	new_brk = brk;
      }

    sbrked_mem += correction;
   110f8:	000c2783          	lw	a5,0(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2212

    top = (mchunkptr)brk;
   110fc:	01593823          	sd	s5,16(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2214
    top_size = new_brk - brk + correction;
    set_head(top, top_size | PREV_INUSE);
   11100:	00eab423          	sd	a4,8(s5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2210
	correction = 0;
	correction_failed = 1;
	new_brk = brk;
      }

    sbrked_mem += correction;
   11104:	00fa07bb          	addw	a5,s4,a5
   11108:	00fc2023          	sw	a5,0(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2216

    top = (mchunkptr)brk;
    top_size = new_brk - brk + correction;
    set_head(top, top_size | PREV_INUSE);

    if (old_top != initial_top)
   1110c:	03240c63          	beq	s0,s2,11144 <_malloc_r+0x438>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2223

      /* There must have been an intervening foreign sbrk call. */
      /* A double fencepost is necessary to prevent consolidation */

      /* If not enough space to do this, then user did something very wrong */
      if (old_top_size < MINSIZE) 
   11110:	01f00613          	li	a2,31
   11114:	27767463          	bleu	s7,a2,1137c <_malloc_r+0x670>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2231
        return;
      }

      /* Also keep size a multiple of MALLOC_ALIGNMENT */
      old_top_size = (old_top_size - 3*SIZE_SZ) & ~MALLOC_ALIGN_MASK;
      set_head_size(old_top, old_top_size);
   11118:	00843683          	ld	a3,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2230
        set_head(top, PREV_INUSE); /* will force null return from malloc */
        return;
      }

      /* Also keep size a multiple of MALLOC_ALIGNMENT */
      old_top_size = (old_top_size - 3*SIZE_SZ) & ~MALLOC_ALIGN_MASK;
   1111c:	fe8b8713          	addi	a4,s7,-24
   11120:	ff077713          	andi	a4,a4,-16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2231
      set_head_size(old_top, old_top_size);
   11124:	0016f693          	andi	a3,a3,1
   11128:	00e6e6b3          	or	a3,a3,a4
   1112c:	00d43423          	sd	a3,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2232
      chunk_at_offset(old_top, old_top_size          )->size =
   11130:	00900593          	li	a1,9
   11134:	00e406b3          	add	a3,s0,a4
   11138:	00b6b423          	sd	a1,8(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2234
        SIZE_SZ|PREV_INUSE;
      chunk_at_offset(old_top, old_top_size + SIZE_SZ)->size =
   1113c:	00b6b823          	sd	a1,16(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2237
        SIZE_SZ|PREV_INUSE;
      /* If possible, release the rest. */
      if (old_top_size >= MINSIZE) 
   11140:	2ce66263          	bltu	a2,a4,11404 <_malloc_r+0x6f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2242
        fREe(RCALL chunk2mem(old_top));
    }
  }

  if ((unsigned long)sbrked_mem > (unsigned long)max_sbrked_mem) 
   11144:	9081b683          	ld	a3,-1784(gp) # 24548 <__malloc_max_sbrked_mem>
   11148:	00f6f463          	bleu	a5,a3,11150 <_malloc_r+0x444>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2243
    max_sbrked_mem = sbrked_mem;
   1114c:	90f1b423          	sd	a5,-1784(gp) # 24548 <__malloc_max_sbrked_mem>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2248
#if HAVE_MMAP
  if ((unsigned long)(mmapped_mem + sbrked_mem) > (unsigned long)max_total_mem) 
    max_total_mem = mmapped_mem + sbrked_mem;
#else
  if ((unsigned long)(sbrked_mem) > (unsigned long)max_total_mem) 
   11150:	9001b683          	ld	a3,-1792(gp) # 24540 <__malloc_max_total_mem>
   11154:	01093403          	ld	s0,16(s2)
   11158:	00f6f463          	bleu	a5,a3,11160 <_malloc_r+0x454>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2249
    max_total_mem = sbrked_mem;
   1115c:	90f1b023          	sd	a5,-1792(gp) # 24540 <__malloc_max_total_mem>
   11160:	00843703          	ld	a4,8(s0)
   11164:	ffc77713          	andi	a4,a4,-4
_malloc_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2576
    }
#endif

    /* Try to extend */
    malloc_extend_top(RCALL nb);
    remainder_size = long_sub_size_t(chunksize(top), nb);
   11168:	409707b3          	sub	a5,a4,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2577
    if (chunksize(top) < nb || remainder_size < (long)MINSIZE)
   1116c:	00976663          	bltu	a4,s1,11178 <_malloc_r+0x46c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2577 (discriminator 1)
   11170:	01f00713          	li	a4,31
   11174:	00f74a63          	blt	a4,a5,11188 <_malloc_r+0x47c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2579
    {
      MALLOC_UNLOCK;
   11178:	00098513          	mv	a0,s3
   1117c:	304000ef          	jal	11480 <__malloc_unlock>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2580
      return 0; /* propagate failure */
   11180:	00000513          	li	a0,0
   11184:	dfdff06f          	j	10f80 <_malloc_r+0x274>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2585
    }
  }

  victim = top;
  set_head(victim, nb | PREV_INUSE);
   11188:	0014e713          	ori	a4,s1,1
   1118c:	00e43423          	sd	a4,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2586
  top = chunk_at_offset(victim, nb);
   11190:	009404b3          	add	s1,s0,s1
   11194:	00993823          	sd	s1,16(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2587
  set_head(top, remainder_size | PREV_INUSE);
   11198:	0017e793          	ori	a5,a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2589
  check_malloced_chunk(victim, nb);
  MALLOC_UNLOCK;
   1119c:	00098513          	mv	a0,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2587
  }

  victim = top;
  set_head(victim, nb | PREV_INUSE);
  top = chunk_at_offset(victim, nb);
  set_head(top, remainder_size | PREV_INUSE);
   111a0:	00f4b423          	sd	a5,8(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2589
  check_malloced_chunk(victim, nb);
  MALLOC_UNLOCK;
   111a4:	2dc000ef          	jal	11480 <__malloc_unlock>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2590
  return chunk2mem(victim);
   111a8:	01040513          	addi	a0,s0,16
   111ac:	dd5ff06f          	j	10f80 <_malloc_r+0x274>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2393 (discriminator 5)
    idx += 2; /* Set for bin scan below. We've already scanned 2 bins. */

  }
  else
  {
    idx = bin_index(nb);
   111b0:	01400713          	li	a4,20
   111b4:	0ef77a63          	bleu	a5,a4,112a8 <_malloc_r+0x59c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2393 (discriminator 8)
   111b8:	05400713          	li	a4,84
   111bc:	18f76063          	bltu	a4,a5,1133c <_malloc_r+0x630>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2393 (discriminator 10)
   111c0:	00c4d593          	srli	a1,s1,0xc
   111c4:	0005859b          	sext.w	a1,a1
   111c8:	06f5851b          	addiw	a0,a1,111
   111cc:	0015169b          	slliw	a3,a0,0x1
   111d0:	06e5859b          	addiw	a1,a1,110
   111d4:	badff06f          	j	10d80 <_malloc_r+0x74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2452 (discriminator 2)
      return chunk2mem(victim);
    }

    /* Else place in bin */

    frontlink(victim, victim_size, remainder_index, bck, fwd);
   111d8:	0097d713          	srli	a4,a5,0x9
   111dc:	00400613          	li	a2,4
   111e0:	0ce67e63          	bleu	a4,a2,112bc <_malloc_r+0x5b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2452 (discriminator 7)
   111e4:	01400613          	li	a2,20
   111e8:	1ce66663          	bltu	a2,a4,113b4 <_malloc_r+0x6a8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2452 (discriminator 9)
   111ec:	0007071b          	sext.w	a4,a4
   111f0:	05c7059b          	addiw	a1,a4,92
   111f4:	05b7061b          	addiw	a2,a4,91
   111f8:	0015959b          	slliw	a1,a1,0x1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2452 (discriminator 26)
   111fc:	00359593          	slli	a1,a1,0x3
   11200:	00b905b3          	add	a1,s2,a1
   11204:	0005b703          	ld	a4,0(a1)
   11208:	ff058593          	addi	a1,a1,-16
   1120c:	14e58863          	beq	a1,a4,1135c <_malloc_r+0x650>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2452 (discriminator 30)
   11210:	00873603          	ld	a2,8(a4)
   11214:	ffc67613          	andi	a2,a2,-4
   11218:	00c7f663          	bleu	a2,a5,11224 <_malloc_r+0x518>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2452 (discriminator 32)
   1121c:	01073703          	ld	a4,16(a4)
   11220:	fee598e3          	bne	a1,a4,11210 <_malloc_r+0x504>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2452 (discriminator 33)
   11224:	01873583          	ld	a1,24(a4)
   11228:	00893783          	ld	a5,8(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2452 (discriminator 34)
   1122c:	00b43c23          	sd	a1,24(s0)
   11230:	00e43823          	sd	a4,16(s0)
   11234:	0085b823          	sd	s0,16(a1)
   11238:	00873c23          	sd	s0,24(a4)
   1123c:	c11ff06f          	j	10e4c <_malloc_r+0x140>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2431
    remainder_size = long_sub_size_t(victim_size, nb);

    if (remainder_size >= (long)MINSIZE) /* re-split */
    {
      remainder = chunk_at_offset(victim, nb);
      set_head(victim, nb | PREV_INUSE);
   11240:	0014e793          	ori	a5,s1,1
   11244:	00f43423          	sd	a5,8(s0)
   11248:	ca1ff06f          	j	10ee8 <_malloc_r+0x1dc>
   1124c:	00893783          	ld	a5,8(s2)
   11250:	bfdff06f          	j	10e4c <_malloc_r+0x140>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2526
         {
           bin = next_bin(bin);
           ++idx;
         }
#endif
      } while ((++idx & (BINBLOCKWIDTH - 1)) != 0);
   11254:	0013031b          	addiw	t1,t1,1
   11258:	00337793          	andi	a5,t1,3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2517
            return chunk2mem(victim);
          }

        }

       bin = next_bin(bin);
   1125c:	01058593          	addi	a1,a1,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2526
         {
           bin = next_bin(bin);
           ++idx;
         }
#endif
      } while ((++idx & (BINBLOCKWIDTH - 1)) != 0);
   11260:	c40794e3          	bnez	a5,10ea8 <_malloc_r+0x19c>
   11264:	0900006f          	j	112f4 <_malloc_r+0x5e8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2375
#if MALLOC_ALIGN != 16
    /* Also scan the next one, since it would have a remainder < MINSIZE */
    if (victim == q)
    {
      q = next_bin(q);
      victim = last(q);
   11268:	0187b403          	ld	s0,24(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2388
      check_malloced_chunk(victim, nb);
      MALLOC_UNLOCK;
      return chunk2mem(victim);
    }

    idx += 2; /* Set for bin scan below. We've already scanned 2 bins. */
   1126c:	0026869b          	addiw	a3,a3,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2378
    {
      q = next_bin(q);
      victim = last(q);
    }
#endif
    if (victim != q)
   11270:	b68780e3          	beq	a5,s0,10dd0 <_malloc_r+0xc4>
   11274:	cd9ff06f          	j	10f4c <_malloc_r+0x240>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2508
            return chunk2mem(victim);
          }

          else if (remainder_size >= 0)  /* take */
          {
            set_inuse_bit_at_offset(victim, victim_size);
   11278:	00f407b3          	add	a5,s0,a5
   1127c:	0087b703          	ld	a4,8(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2509
            unlink(victim, bck, fwd);
   11280:	01843683          	ld	a3,24(s0)
   11284:	01043603          	ld	a2,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2508
            return chunk2mem(victim);
          }

          else if (remainder_size >= 0)  /* take */
          {
            set_inuse_bit_at_offset(victim, victim_size);
   11288:	00176713          	ori	a4,a4,1
   1128c:	00e7b423          	sd	a4,8(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2509
            unlink(victim, bck, fwd);
   11290:	00d63c23          	sd	a3,24(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2511
            check_malloced_chunk(victim, nb);
	    MALLOC_UNLOCK;
   11294:	00098513          	mv	a0,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2509
          }

          else if (remainder_size >= 0)  /* take */
          {
            set_inuse_bit_at_offset(victim, victim_size);
            unlink(victim, bck, fwd);
   11298:	00c6b823          	sd	a2,16(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2511
            check_malloced_chunk(victim, nb);
	    MALLOC_UNLOCK;
   1129c:	1e4000ef          	jal	11480 <__malloc_unlock>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2512
            return chunk2mem(victim);
   112a0:	01040513          	addi	a0,s0,16
   112a4:	cddff06f          	j	10f80 <_malloc_r+0x274>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2393 (discriminator 7)
    idx += 2; /* Set for bin scan below. We've already scanned 2 bins. */

  }
  else
  {
    idx = bin_index(nb);
   112a8:	0007879b          	sext.w	a5,a5
   112ac:	05c7851b          	addiw	a0,a5,92
   112b0:	05b7859b          	addiw	a1,a5,91
   112b4:	0015169b          	slliw	a3,a0,0x1
   112b8:	ac9ff06f          	j	10d80 <_malloc_r+0x74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2452 (discriminator 6)
      return chunk2mem(victim);
    }

    /* Else place in bin */

    frontlink(victim, victim_size, remainder_index, bck, fwd);
   112bc:	0067d713          	srli	a4,a5,0x6
   112c0:	0007071b          	sext.w	a4,a4
   112c4:	0397059b          	addiw	a1,a4,57
   112c8:	0387061b          	addiw	a2,a4,56
   112cc:	0015959b          	slliw	a1,a1,0x1
   112d0:	f2dff06f          	j	111fc <_malloc_r+0x4f0>
malloc_extend_top():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2169

  brk = (char*)(MORECORE (sbrk_size));

  /* Fail if sbrk failed or if a foreign sbrk call killed our space */
  if (brk == (char*)(MORECORE_FAILURE) || 
      (brk < old_end && old_top != initial_top))
   112d4:	db2404e3          	beq	s0,s2,1107c <_malloc_r+0x370>
   112d8:	01093403          	ld	s0,16(s2)
   112dc:	00843703          	ld	a4,8(s0)
   112e0:	ffc77713          	andi	a4,a4,-4
   112e4:	e85ff06f          	j	11168 <_malloc_r+0x45c>
_malloc_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2539
          binblocks &= ~block;
          break;
        }
        --startidx;
       q = prev_bin(q);
      } while (first(q) == q);
   112e8:	0108b783          	ld	a5,16(a7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2537
        if ((startidx & (BINBLOCKWIDTH - 1)) == 0)
        {
          binblocks &= ~block;
          break;
        }
        --startidx;
   112ec:	fff6869b          	addiw	a3,a3,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2539
       q = prev_bin(q);
      } while (first(q) == q);
   112f0:	16f89863          	bne	a7,a5,11460 <_malloc_r+0x754>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2532

      /* Clear out the block bit. */

      do   /* Possibly backtrack to try to clear a partial block */
      {
        if ((startidx & (BINBLOCKWIDTH - 1)) == 0)
   112f4:	0036f793          	andi	a5,a3,3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2538
        {
          binblocks &= ~block;
          break;
        }
        --startidx;
       q = prev_bin(q);
   112f8:	ff088893          	addi	a7,a7,-16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2532

      /* Clear out the block bit. */

      do   /* Possibly backtrack to try to clear a partial block */
      {
        if ((startidx & (BINBLOCKWIDTH - 1)) == 0)
   112fc:	fe0796e3          	bnez	a5,112e8 <_malloc_r+0x5dc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2534
        {
          binblocks &= ~block;
   11300:	00893783          	ld	a5,8(s2)
   11304:	fff64713          	not	a4,a2
   11308:	00f777b3          	and	a5,a4,a5
   1130c:	00f93423          	sd	a5,8(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2543
       q = prev_bin(q);
      } while (first(q) == q);

      /* Get to the next possibly nonempty block */

      if ( (block <<= 1) <= binblocks && (block != 0) ) 
   11310:	00161613          	slli	a2,a2,0x1
   11314:	d0c7e2e3          	bltu	a5,a2,11018 <_malloc_r+0x30c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2543 (discriminator 1)
   11318:	d00600e3          	beqz	a2,11018 <_malloc_r+0x30c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2545
      {
        while ((block & binblocks) == 0)
   1131c:	00f67733          	and	a4,a2,a5
   11320:	00030693          	mv	a3,t1
   11324:	b60714e3          	bnez	a4,10e8c <_malloc_r+0x180>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2548
        {
          idx += BINBLOCKWIDTH;
          block <<= 1;
   11328:	00161613          	slli	a2,a2,0x1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2545

      /* Get to the next possibly nonempty block */

      if ( (block <<= 1) <= binblocks && (block != 0) ) 
      {
        while ((block & binblocks) == 0)
   1132c:	00f67733          	and	a4,a2,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2547
        {
          idx += BINBLOCKWIDTH;
   11330:	0046869b          	addiw	a3,a3,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2545

      /* Get to the next possibly nonempty block */

      if ( (block <<= 1) <= binblocks && (block != 0) ) 
      {
        while ((block & binblocks) == 0)
   11334:	fe070ae3          	beqz	a4,11328 <_malloc_r+0x61c>
   11338:	b55ff06f          	j	10e8c <_malloc_r+0x180>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2393 (discriminator 11)
    idx += 2; /* Set for bin scan below. We've already scanned 2 bins. */

  }
  else
  {
    idx = bin_index(nb);
   1133c:	15400713          	li	a4,340
   11340:	04f76463          	bltu	a4,a5,11388 <_malloc_r+0x67c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2393 (discriminator 13)
   11344:	00f4d593          	srli	a1,s1,0xf
   11348:	0005859b          	sext.w	a1,a1
   1134c:	0785851b          	addiw	a0,a1,120
   11350:	0015169b          	slliw	a3,a0,0x1
   11354:	0775859b          	addiw	a1,a1,119
   11358:	a29ff06f          	j	10d80 <_malloc_r+0x74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2452 (discriminator 27)
      return chunk2mem(victim);
    }

    /* Else place in bin */

    frontlink(victim, victim_size, remainder_index, bck, fwd);
   1135c:	00893783          	ld	a5,8(s2)
   11360:	4026571b          	sraiw	a4,a2,0x2
   11364:	00100613          	li	a2,1
   11368:	00e61733          	sll	a4,a2,a4
   1136c:	00f767b3          	or	a5,a4,a5
   11370:	00f93423          	sd	a5,8(s2)
   11374:	00058713          	mv	a4,a1
   11378:	eb5ff06f          	j	1122c <_malloc_r+0x520>
malloc_extend_top():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2225
      /* A double fencepost is necessary to prevent consolidation */

      /* If not enough space to do this, then user did something very wrong */
      if (old_top_size < MINSIZE) 
      {
        set_head(top, PREV_INUSE); /* will force null return from malloc */
   1137c:	00100793          	li	a5,1
   11380:	00fab423          	sd	a5,8(s5)
   11384:	df5ff06f          	j	11178 <_malloc_r+0x46c>
_malloc_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2393 (discriminator 14)
    idx += 2; /* Set for bin scan below. We've already scanned 2 bins. */

  }
  else
  {
    idx = bin_index(nb);
   11388:	55400713          	li	a4,1364
   1138c:	0fe00693          	li	a3,254
   11390:	07f00513          	li	a0,127
   11394:	07e00593          	li	a1,126
   11398:	9ef764e3          	bltu	a4,a5,10d80 <_malloc_r+0x74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2393 (discriminator 16)
   1139c:	0124d593          	srli	a1,s1,0x12
   113a0:	0005859b          	sext.w	a1,a1
   113a4:	07d5851b          	addiw	a0,a1,125
   113a8:	0015169b          	slliw	a3,a0,0x1
   113ac:	07c5859b          	addiw	a1,a1,124
   113b0:	9d1ff06f          	j	10d80 <_malloc_r+0x74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2452 (discriminator 10)
      return chunk2mem(victim);
    }

    /* Else place in bin */

    frontlink(victim, victim_size, remainder_index, bck, fwd);
   113b4:	05400613          	li	a2,84
   113b8:	06e66063          	bltu	a2,a4,11418 <_malloc_r+0x70c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2452 (discriminator 12)
   113bc:	00c7d713          	srli	a4,a5,0xc
   113c0:	0007071b          	sext.w	a4,a4
   113c4:	06f7059b          	addiw	a1,a4,111
   113c8:	06e7061b          	addiw	a2,a4,110
   113cc:	0015959b          	slliw	a1,a1,0x1
   113d0:	e2dff06f          	j	111fc <_malloc_r+0x4f0>
malloc_extend_top():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2176

  sbrked_mem += sbrk_size;

  if (brk == old_end /* can just add bytes to current top, unless
			previous correction failed */
      && ((POINTER_UINT)old_end & (pagesz - 1)) == 0)
   113d4:	034a1713          	slli	a4,s4,0x34
   113d8:	ca071ce3          	bnez	a4,11090 <_malloc_r+0x384>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2179
  {
    top_size = sbrk_size + old_top_size;
    set_head(top, top_size | PREV_INUSE);
   113dc:	01093683          	ld	a3,16(s2)
   113e0:	016b8733          	add	a4,s7,s6
   113e4:	00176713          	ori	a4,a4,1
   113e8:	00e6b423          	sd	a4,8(a3)
   113ec:	d59ff06f          	j	11144 <_malloc_r+0x438>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2203
    /* Guarantee the next brk will be at a page boundary */
    correction += pagesz - ((POINTER_UINT)(brk + sbrk_size) & (pagesz - 1));

    /* Allocate correction */
    new_brk = (char*)(MORECORE (correction));
    if (new_brk == (char*)(MORECORE_FAILURE))
   113f0:	00100713          	li	a4,1
   113f4:	00000a13          	li	s4,0
   113f8:	d01ff06f          	j	110f8 <_malloc_r+0x3ec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2184
    set_head(top, top_size | PREV_INUSE);
  }
  else
  {
    if (sbrk_base == (char*)(-1))  /* First time through. Record base */
      sbrk_base = brk;
   113fc:	8151bc23          	sd	s5,-2024(gp) # 24458 <__malloc_sbrk_base>
   11400:	ca9ff06f          	j	110a8 <_malloc_r+0x39c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2238
        SIZE_SZ|PREV_INUSE;
      chunk_at_offset(old_top, old_top_size + SIZE_SZ)->size =
        SIZE_SZ|PREV_INUSE;
      /* If possible, release the rest. */
      if (old_top_size >= MINSIZE) 
        fREe(RCALL chunk2mem(old_top));
   11404:	01040593          	addi	a1,s0,16
   11408:	00098513          	mv	a0,s3
   1140c:	728050ef          	jal	16b34 <_free_r>
   11410:	000c2783          	lw	a5,0(s8)
   11414:	d31ff06f          	j	11144 <_malloc_r+0x438>
_malloc_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2452 (discriminator 13)
      return chunk2mem(victim);
    }

    /* Else place in bin */

    frontlink(victim, victim_size, remainder_index, bck, fwd);
   11418:	15400613          	li	a2,340
   1141c:	00e66e63          	bltu	a2,a4,11438 <_malloc_r+0x72c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2452 (discriminator 15)
   11420:	00f7d713          	srli	a4,a5,0xf
   11424:	0007071b          	sext.w	a4,a4
   11428:	0787059b          	addiw	a1,a4,120
   1142c:	0777061b          	addiw	a2,a4,119
   11430:	0015959b          	slliw	a1,a1,0x1
   11434:	dc9ff06f          	j	111fc <_malloc_r+0x4f0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2452 (discriminator 16)
   11438:	55400513          	li	a0,1364
   1143c:	0fe00593          	li	a1,254
   11440:	07e00613          	li	a2,126
   11444:	dae56ce3          	bltu	a0,a4,111fc <_malloc_r+0x4f0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2452 (discriminator 18)
   11448:	0127d713          	srli	a4,a5,0x12
   1144c:	0007071b          	sext.w	a4,a4
   11450:	07d7059b          	addiw	a1,a4,125
   11454:	07c7061b          	addiw	a2,a4,124
   11458:	0015959b          	slliw	a1,a1,0x1
   1145c:	da1ff06f          	j	111fc <_malloc_r+0x4f0>
   11460:	00893783          	ld	a5,8(s2)
   11464:	eadff06f          	j	11310 <_malloc_r+0x604>
   11468:	0034d693          	srli	a3,s1,0x3
   1146c:	0006869b          	sext.w	a3,a3
   11470:	0016879b          	addiw	a5,a3,1
   11474:	0017979b          	slliw	a5,a5,0x1
   11478:	ab9ff06f          	j	10f30 <_malloc_r+0x224>

000000000001147c <__malloc_lock>:
__malloc_lock():
   1147c:	00008067          	ret

0000000000011480 <__malloc_unlock>:
__malloc_unlock():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mlock.c:58
}

void
__malloc_unlock (ptr)
     struct _reent *ptr;
{
   11480:	00008067          	ret

0000000000011484 <_printf_r>:
_printf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/printf.c:29

int
_DEFUN(_printf_r, (ptr, fmt),
       struct _reent *ptr _AND
       const char *__restrict fmt _DOTS)
{
   11484:	fb010113          	addi	sp,sp,-80
   11488:	02c13023          	sd	a2,32(sp)
   1148c:	02d13423          	sd	a3,40(sp)
   11490:	02f13c23          	sd	a5,56(sp)
   11494:	02e13823          	sd	a4,48(sp)
   11498:	05013023          	sd	a6,64(sp)
   1149c:	05113423          	sd	a7,72(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/printf.c:35
  int ret;
  va_list ap;

  _REENT_SMALL_CHECK_INIT (ptr);
  va_start (ap, fmt);
  ret = _vfprintf_r (ptr, _stdout_r (ptr), fmt, ap);
   114a0:	00058613          	mv	a2,a1
   114a4:	01053583          	ld	a1,16(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/printf.c:34
{
  int ret;
  va_list ap;

  _REENT_SMALL_CHECK_INIT (ptr);
  va_start (ap, fmt);
   114a8:	02010793          	addi	a5,sp,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/printf.c:35
  ret = _vfprintf_r (ptr, _stdout_r (ptr), fmt, ap);
   114ac:	00078693          	mv	a3,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/printf.c:29

int
_DEFUN(_printf_r, (ptr, fmt),
       struct _reent *ptr _AND
       const char *__restrict fmt _DOTS)
{
   114b0:	00113c23          	sd	ra,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/printf.c:34
  int ret;
  va_list ap;

  _REENT_SMALL_CHECK_INIT (ptr);
  va_start (ap, fmt);
   114b4:	00f13423          	sd	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/printf.c:35
  ret = _vfprintf_r (ptr, _stdout_r (ptr), fmt, ap);
   114b8:	528000ef          	jal	119e0 <_vfprintf_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/printf.c:38
  va_end (ap);
  return ret;
}
   114bc:	01813083          	ld	ra,24(sp)
   114c0:	05010113          	addi	sp,sp,80
   114c4:	00008067          	ret

00000000000114c8 <printf>:
printf():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/printf.c:54
_DEFUN(printf, (fmt),
       const char *__restrict fmt _DOTS)
{
  int ret;
  va_list ap;
  struct _reent *ptr = _REENT;
   114c8:	8101b303          	ld	t1,-2032(gp) # 24450 <_impure_ptr>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/printf.c:51
#ifndef _REENT_ONLY

int
_DEFUN(printf, (fmt),
       const char *__restrict fmt _DOTS)
{
   114cc:	fa010113          	addi	sp,sp,-96
   114d0:	02c13823          	sd	a2,48(sp)
   114d4:	02d13c23          	sd	a3,56(sp)
   114d8:	04f13423          	sd	a5,72(sp)
   114dc:	02b13423          	sd	a1,40(sp)
   114e0:	04e13023          	sd	a4,64(sp)
   114e4:	05013823          	sd	a6,80(sp)
   114e8:	05113c23          	sd	a7,88(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/printf.c:58
  va_list ap;
  struct _reent *ptr = _REENT;

  _REENT_SMALL_CHECK_INIT (ptr);
  va_start (ap, fmt);
  ret = _vfprintf_r (ptr, _stdout_r (ptr), fmt, ap);
   114ec:	01033583          	ld	a1,16(t1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/printf.c:57
  int ret;
  va_list ap;
  struct _reent *ptr = _REENT;

  _REENT_SMALL_CHECK_INIT (ptr);
  va_start (ap, fmt);
   114f0:	02810793          	addi	a5,sp,40
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/printf.c:58
  ret = _vfprintf_r (ptr, _stdout_r (ptr), fmt, ap);
   114f4:	00050613          	mv	a2,a0
   114f8:	00078693          	mv	a3,a5
   114fc:	00030513          	mv	a0,t1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/printf.c:51
#ifndef _REENT_ONLY

int
_DEFUN(printf, (fmt),
       const char *__restrict fmt _DOTS)
{
   11500:	00113c23          	sd	ra,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/printf.c:57
  int ret;
  va_list ap;
  struct _reent *ptr = _REENT;

  _REENT_SMALL_CHECK_INIT (ptr);
  va_start (ap, fmt);
   11504:	00f13423          	sd	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/printf.c:58
  ret = _vfprintf_r (ptr, _stdout_r (ptr), fmt, ap);
   11508:	4d8000ef          	jal	119e0 <_vfprintf_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/printf.c:61
  va_end (ap);
  return ret;
}
   1150c:	01813083          	ld	ra,24(sp)
   11510:	06010113          	addi	sp,sp,96
   11514:	00008067          	ret

0000000000011518 <_putchar_r>:
_putchar_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putchar.c:84
_DEFUN(_putchar_r, (ptr, c),
       struct _reent *ptr _AND
       int c)
{
  _REENT_SMALL_CHECK_INIT (ptr);
  return _putc_r (ptr, c, _stdout_r (ptr));
   11518:	01053603          	ld	a2,16(a0)
   1151c:	0180006f          	j	11534 <_putc_r>

0000000000011520 <putchar>:
putchar():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putchar.c:93

int
_DEFUN(putchar, (c),
       int c)
{
  struct _reent *reent = _REENT;
   11520:	8101b783          	ld	a5,-2032(gp) # 24450 <_impure_ptr>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putchar.c:96

  _REENT_SMALL_CHECK_INIT (reent);
  return _putc_r (reent, c, _stdout_r (reent));
   11524:	00050593          	mv	a1,a0
   11528:	0107b603          	ld	a2,16(a5)
   1152c:	00078513          	mv	a0,a5
   11530:	0040006f          	j	11534 <_putc_r>

0000000000011534 <_putc_r>:
_putc_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:97
int
_DEFUN(_putc_r, (ptr, c, fp),
       struct _reent *ptr _AND
       int c _AND
       register FILE *fp)
{
   11534:	fe010113          	addi	sp,sp,-32
   11538:	00813823          	sd	s0,16(sp)
   1153c:	00113c23          	sd	ra,24(sp)
   11540:	00050413          	mv	s0,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:99
  int result;
  CHECK_INIT (ptr, fp);
   11544:	00050663          	beqz	a0,11550 <_putc_r+0x1c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:99 (discriminator 1)
   11548:	05052783          	lw	a5,80(a0)
   1154c:	06078863          	beqz	a5,115bc <_putc_r+0x88>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:101
  _newlib_flockfile_start (fp);
  result = __sputc_r (ptr, c, fp);
   11550:	00c62783          	lw	a5,12(a2)
   11554:	fff7879b          	addiw	a5,a5,-1
   11558:	00f62623          	sw	a5,12(a2)
   1155c:	0207c663          	bltz	a5,11588 <_putc_r+0x54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:101 (discriminator 2)
   11560:	00063783          	ld	a5,0(a2)
   11564:	00b78023          	sb	a1,0(a5)
   11568:	00063783          	ld	a5,0(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:104
  _newlib_flockfile_end (fp);
  return result;
}
   1156c:	01813083          	ld	ra,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:101
       register FILE *fp)
{
  int result;
  CHECK_INIT (ptr, fp);
  _newlib_flockfile_start (fp);
  result = __sputc_r (ptr, c, fp);
   11570:	00178713          	addi	a4,a5,1
   11574:	00e63023          	sd	a4,0(a2)
   11578:	0007c503          	lbu	a0,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:104
  _newlib_flockfile_end (fp);
  return result;
}
   1157c:	01013403          	ld	s0,16(sp)
   11580:	02010113          	addi	sp,sp,32
   11584:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:101 (discriminator 1)
       register FILE *fp)
{
  int result;
  CHECK_INIT (ptr, fp);
  _newlib_flockfile_start (fp);
  result = __sputc_r (ptr, c, fp);
   11588:	02862703          	lw	a4,40(a2)
   1158c:	00e7ce63          	blt	a5,a4,115a8 <_putc_r+0x74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:101 (discriminator 3)
   11590:	00063783          	ld	a5,0(a2)
   11594:	00a00713          	li	a4,10
   11598:	00b78023          	sb	a1,0(a5)
   1159c:	00063783          	ld	a5,0(a2)
   115a0:	0007c583          	lbu	a1,0(a5)
   115a4:	fce594e3          	bne	a1,a4,1156c <_putc_r+0x38>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:101 (discriminator 4)
   115a8:	00040513          	mv	a0,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:104
  _newlib_flockfile_end (fp);
  return result;
}
   115ac:	01813083          	ld	ra,24(sp)
   115b0:	01013403          	ld	s0,16(sp)
   115b4:	02010113          	addi	sp,sp,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:101
       register FILE *fp)
{
  int result;
  CHECK_INIT (ptr, fp);
  _newlib_flockfile_start (fp);
  result = __sputc_r (ptr, c, fp);
   115b8:	32c0306f          	j	148e4 <__swbuf_r>
   115bc:	00c13423          	sd	a2,8(sp)
   115c0:	00b13023          	sd	a1,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:99 (discriminator 2)
       struct _reent *ptr _AND
       int c _AND
       register FILE *fp)
{
  int result;
  CHECK_INIT (ptr, fp);
   115c4:	1ac050ef          	jal	16770 <__sinit>
   115c8:	00813603          	ld	a2,8(sp)
   115cc:	00013583          	ld	a1,0(sp)
   115d0:	f81ff06f          	j	11550 <_putc_r+0x1c>

00000000000115d4 <putc>:
putc():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:111
#ifndef _REENT_ONLY
int
_DEFUN(putc, (c, fp),
       int c _AND
       register FILE *fp)
{
   115d4:	fd010113          	addi	sp,sp,-48
   115d8:	02813023          	sd	s0,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:114
#if !defined(PREFER_SIZE_OVER_SPEED) && !defined(__OPTIMIZE_SIZE__)
  int result;
  struct _reent *reent = _REENT;
   115dc:	8101b403          	ld	s0,-2032(gp) # 24450 <_impure_ptr>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:111
#ifndef _REENT_ONLY
int
_DEFUN(putc, (c, fp),
       int c _AND
       register FILE *fp)
{
   115e0:	00913c23          	sd	s1,24(sp)
   115e4:	02113423          	sd	ra,40(sp)
   115e8:	00050493          	mv	s1,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:116
#if !defined(PREFER_SIZE_OVER_SPEED) && !defined(__OPTIMIZE_SIZE__)
  int result;
  struct _reent *reent = _REENT;

  CHECK_INIT (reent, fp);
   115ec:	00040663          	beqz	s0,115f8 <putc+0x24>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:116 (discriminator 1)
   115f0:	05042783          	lw	a5,80(s0)
   115f4:	06078663          	beqz	a5,11660 <putc+0x8c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:118
  _newlib_flockfile_start (fp);
  result = __sputc_r (reent, c, fp);
   115f8:	00c5a783          	lw	a5,12(a1)
   115fc:	fff7879b          	addiw	a5,a5,-1
   11600:	00f5a623          	sw	a5,12(a1)
   11604:	0207c863          	bltz	a5,11634 <putc+0x60>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:118 (discriminator 2)
   11608:	0005b783          	ld	a5,0(a1)
   1160c:	00978023          	sb	s1,0(a5)
   11610:	0005b783          	ld	a5,0(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:124
  _newlib_flockfile_end (fp);
  return result;
#else
  return _putc_r (_REENT, c, fp);
#endif
}
   11614:	02813083          	ld	ra,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:118
  int result;
  struct _reent *reent = _REENT;

  CHECK_INIT (reent, fp);
  _newlib_flockfile_start (fp);
  result = __sputc_r (reent, c, fp);
   11618:	00178713          	addi	a4,a5,1
   1161c:	00e5b023          	sd	a4,0(a1)
   11620:	0007c503          	lbu	a0,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:124
  _newlib_flockfile_end (fp);
  return result;
#else
  return _putc_r (_REENT, c, fp);
#endif
}
   11624:	02013403          	ld	s0,32(sp)
   11628:	01813483          	ld	s1,24(sp)
   1162c:	03010113          	addi	sp,sp,48
   11630:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:118 (discriminator 1)
  int result;
  struct _reent *reent = _REENT;

  CHECK_INIT (reent, fp);
  _newlib_flockfile_start (fp);
  result = __sputc_r (reent, c, fp);
   11634:	0285a703          	lw	a4,40(a1)
   11638:	02e7ce63          	blt	a5,a4,11674 <putc+0xa0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:118 (discriminator 3)
   1163c:	0005b783          	ld	a5,0(a1)
   11640:	00a00693          	li	a3,10
   11644:	00978023          	sb	s1,0(a5)
   11648:	0005b783          	ld	a5,0(a1)
   1164c:	0007c703          	lbu	a4,0(a5)
   11650:	fcd712e3          	bne	a4,a3,11614 <putc+0x40>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:118 (discriminator 6)
   11654:	00058613          	mv	a2,a1
   11658:	00070593          	mv	a1,a4
   1165c:	0200006f          	j	1167c <putc+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:116 (discriminator 2)
{
#if !defined(PREFER_SIZE_OVER_SPEED) && !defined(__OPTIMIZE_SIZE__)
  int result;
  struct _reent *reent = _REENT;

  CHECK_INIT (reent, fp);
   11660:	00040513          	mv	a0,s0
   11664:	00b13423          	sd	a1,8(sp)
   11668:	108050ef          	jal	16770 <__sinit>
   1166c:	00813583          	ld	a1,8(sp)
   11670:	f89ff06f          	j	115f8 <putc+0x24>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:118 (discriminator 4)
  _newlib_flockfile_start (fp);
  result = __sputc_r (reent, c, fp);
   11674:	00058613          	mv	a2,a1
   11678:	00048593          	mv	a1,s1
   1167c:	00040513          	mv	a0,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:124
  _newlib_flockfile_end (fp);
  return result;
#else
  return _putc_r (_REENT, c, fp);
#endif
}
   11680:	02813083          	ld	ra,40(sp)
   11684:	02013403          	ld	s0,32(sp)
   11688:	01813483          	ld	s1,24(sp)
   1168c:	03010113          	addi	sp,sp,48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/putc.c:118
  int result;
  struct _reent *reent = _REENT;

  CHECK_INIT (reent, fp);
  _newlib_flockfile_start (fp);
  result = __sputc_r (reent, c, fp);
   11690:	2540306f          	j	148e4 <__swbuf_r>

0000000000011694 <_puts_r>:
_puts_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:80

int
_DEFUN(_puts_r, (ptr, s),
       struct _reent *ptr _AND
       _CONST char * s)
{
   11694:	fa010113          	addi	sp,sp,-96
   11698:	04813823          	sd	s0,80(sp)
   1169c:	00050413          	mv	s0,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:83
#ifdef _FVWRITE_IN_STREAMIO
  int result;
  size_t c = strlen (s);
   116a0:	00058513          	mv	a0,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:80

int
_DEFUN(_puts_r, (ptr, s),
       struct _reent *ptr _AND
       _CONST char * s)
{
   116a4:	04913423          	sd	s1,72(sp)
   116a8:	04113c23          	sd	ra,88(sp)
   116ac:	00058493          	mv	s1,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:83
#ifdef _FVWRITE_IN_STREAMIO
  int result;
  size_t c = strlen (s);
   116b0:	260000ef          	jal	11910 <strlen>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:97
  uio.uio_resid = c + 1;
  uio.uio_iov = &iov[0];
  uio.uio_iovcnt = 2;

  _REENT_SMALL_CHECK_INIT (ptr);
  fp = _stdout_r (ptr);
   116b4:	01043583          	ld	a1,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:90
  struct __siov iov[2];
  FILE *fp;

  iov[0].iov_base = s;
  iov[0].iov_len = c;
  iov[1].iov_base = "\n";
   116b8:	00022737          	lui	a4,0x22
   116bc:	b9070713          	addi	a4,a4,-1136 # 21b90 <zeroes.4123+0x6a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:99
  uio.uio_iovcnt = 2;

  _REENT_SMALL_CHECK_INIT (ptr);
  fp = _stdout_r (ptr);
  _newlib_flockfile_start (fp);
  ORIENT (fp, -1);
   116c0:	01059683          	lh	a3,16(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:90
  struct __siov iov[2];
  FILE *fp;

  iov[0].iov_base = s;
  iov[0].iov_len = c;
  iov[1].iov_base = "\n";
   116c4:	02e13823          	sd	a4,48(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:91
  iov[1].iov_len = 1;
   116c8:	00100713          	li	a4,1
   116cc:	02e13c23          	sd	a4,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:93
  uio.uio_resid = c + 1;
  uio.uio_iov = &iov[0];
   116d0:	02010713          	addi	a4,sp,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:92

  iov[0].iov_base = s;
  iov[0].iov_len = c;
  iov[1].iov_base = "\n";
  iov[1].iov_len = 1;
  uio.uio_resid = c + 1;
   116d4:	00150613          	addi	a2,a0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:93
  uio.uio_iov = &iov[0];
   116d8:	00e13423          	sd	a4,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:94
  uio.uio_iovcnt = 2;
   116dc:	00200713          	li	a4,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:88
  size_t c = strlen (s);
  struct __suio uio;
  struct __siov iov[2];
  FILE *fp;

  iov[0].iov_base = s;
   116e0:	02913023          	sd	s1,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:89
  iov[0].iov_len = c;
   116e4:	02a13423          	sd	a0,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:92
  iov[1].iov_base = "\n";
  iov[1].iov_len = 1;
  uio.uio_resid = c + 1;
   116e8:	00c13c23          	sd	a2,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:94
  uio.uio_iov = &iov[0];
  uio.uio_iovcnt = 2;
   116ec:	00e12823          	sw	a4,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:99

  _REENT_SMALL_CHECK_INIT (ptr);
  fp = _stdout_r (ptr);
  _newlib_flockfile_start (fp);
  ORIENT (fp, -1);
   116f0:	03269793          	slli	a5,a3,0x32
   116f4:	0207c263          	bltz	a5,11718 <_puts_r+0x84>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:98 (discriminator 1)
  uio.uio_iov = &iov[0];
  uio.uio_iovcnt = 2;

  _REENT_SMALL_CHECK_INIT (ptr);
  fp = _stdout_r (ptr);
  _newlib_flockfile_start (fp);
   116f8:	0ac5a783          	lw	a5,172(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:99
  ORIENT (fp, -1);
   116fc:	ffffe737          	lui	a4,0xffffe
   11700:	00002637          	lui	a2,0x2
   11704:	fff7071b          	addiw	a4,a4,-1
   11708:	00c6e6b3          	or	a3,a3,a2
   1170c:	00e7f733          	and	a4,a5,a4
   11710:	00d59823          	sh	a3,16(a1)
   11714:	0ae5a623          	sw	a4,172(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:100
  result = (__sfvwrite_r (ptr, fp, &uio) ? EOF : '\n');
   11718:	00810613          	addi	a2,sp,8
   1171c:	00040513          	mv	a0,s0
   11720:	724050ef          	jal	16e44 <__sfvwrite_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:130

err:
  _newlib_flockfile_end (fp);
  return result;
#endif
}
   11724:	05813083          	ld	ra,88(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:100

  _REENT_SMALL_CHECK_INIT (ptr);
  fp = _stdout_r (ptr);
  _newlib_flockfile_start (fp);
  ORIENT (fp, -1);
  result = (__sfvwrite_r (ptr, fp, &uio) ? EOF : '\n');
   11728:	00a03533          	snez	a0,a0
   1172c:	40a0053b          	negw	a0,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:130

err:
  _newlib_flockfile_end (fp);
  return result;
#endif
}
   11730:	00a56513          	ori	a0,a0,10
   11734:	05013403          	ld	s0,80(sp)
   11738:	04813483          	ld	s1,72(sp)
   1173c:	06010113          	addi	sp,sp,96
   11740:	00008067          	ret

0000000000011744 <puts>:
puts():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/puts.c:138

int
_DEFUN(puts, (s),
       char _CONST * s)
{
  return _puts_r (_REENT, s);
   11744:	00050593          	mv	a1,a0
   11748:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
   1174c:	f49ff06f          	j	11694 <_puts_r>

0000000000011750 <scanf>:
scanf():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/scanf.c:41
      va_dcl
#endif
{
  int ret;
  va_list ap;
  struct _reent *reent = _REENT;
   11750:	8101b303          	ld	t1,-2032(gp) # 24450 <_impure_ptr>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/scanf.c:38
#else
scanf(fmt, va_alist)
      char *fmt;
      va_dcl
#endif
{
   11754:	fa010113          	addi	sp,sp,-96
   11758:	02c13823          	sd	a2,48(sp)
   1175c:	02d13c23          	sd	a3,56(sp)
   11760:	04f13423          	sd	a5,72(sp)
   11764:	02b13423          	sd	a1,40(sp)
   11768:	04e13023          	sd	a4,64(sp)
   1176c:	05013823          	sd	a6,80(sp)
   11770:	05113c23          	sd	a7,88(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/scanf.c:49
#ifdef _HAVE_STDC
  va_start (ap, fmt);
#else
  va_start (ap);
#endif
  ret = _vfscanf_r (reent, _stdin_r (reent), fmt, ap);
   11774:	00833583          	ld	a1,8(t1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/scanf.c:45
  va_list ap;
  struct _reent *reent = _REENT;

  _REENT_SMALL_CHECK_INIT (reent);
#ifdef _HAVE_STDC
  va_start (ap, fmt);
   11778:	02810793          	addi	a5,sp,40
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/scanf.c:49
#else
  va_start (ap);
#endif
  ret = _vfscanf_r (reent, _stdin_r (reent), fmt, ap);
   1177c:	00050613          	mv	a2,a0
   11780:	00078693          	mv	a3,a5
   11784:	00030513          	mv	a0,t1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/scanf.c:38
#else
scanf(fmt, va_alist)
      char *fmt;
      va_dcl
#endif
{
   11788:	00113c23          	sd	ra,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/scanf.c:45
  va_list ap;
  struct _reent *reent = _REENT;

  _REENT_SMALL_CHECK_INIT (reent);
#ifdef _HAVE_STDC
  va_start (ap, fmt);
   1178c:	00f13423          	sd	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/scanf.c:49
#else
  va_start (ap);
#endif
  ret = _vfscanf_r (reent, _stdin_r (reent), fmt, ap);
   11790:	108030ef          	jal	14898 <_vfscanf_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/scanf.c:52
  va_end (ap);
  return ret;
}
   11794:	01813083          	ld	ra,24(sp)
   11798:	06010113          	addi	sp,sp,96
   1179c:	00008067          	ret

00000000000117a0 <_scanf_r>:
_scanf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/scanf.c:71
_scanf_r(ptr, fmt, va_alist)
         struct _reent *ptr;
         char *fmt;
         va_dcl
#endif
{
   117a0:	fb010113          	addi	sp,sp,-80
   117a4:	02c13023          	sd	a2,32(sp)
   117a8:	02d13423          	sd	a3,40(sp)
   117ac:	02f13c23          	sd	a5,56(sp)
   117b0:	02e13823          	sd	a4,48(sp)
   117b4:	05013023          	sd	a6,64(sp)
   117b8:	05113423          	sd	a7,72(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/scanf.c:81
#ifdef _HAVE_STDC
  va_start (ap, fmt);
#else
  va_start (ap);
#endif
  ret = _vfscanf_r (ptr, _stdin_r (ptr), fmt, ap);
   117bc:	00058613          	mv	a2,a1
   117c0:	00853583          	ld	a1,8(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/scanf.c:77
  int ret;
  va_list ap;

  _REENT_SMALL_CHECK_INIT (ptr);
#ifdef _HAVE_STDC
  va_start (ap, fmt);
   117c4:	02010793          	addi	a5,sp,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/scanf.c:81
#else
  va_start (ap);
#endif
  ret = _vfscanf_r (ptr, _stdin_r (ptr), fmt, ap);
   117c8:	00078693          	mv	a3,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/scanf.c:71
_scanf_r(ptr, fmt, va_alist)
         struct _reent *ptr;
         char *fmt;
         va_dcl
#endif
{
   117cc:	00113c23          	sd	ra,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/scanf.c:77
  int ret;
  va_list ap;

  _REENT_SMALL_CHECK_INIT (ptr);
#ifdef _HAVE_STDC
  va_start (ap, fmt);
   117d0:	00f13423          	sd	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/scanf.c:81
#else
  va_start (ap);
#endif
  ret = _vfscanf_r (ptr, _stdin_r (ptr), fmt, ap);
   117d4:	0c4030ef          	jal	14898 <_vfscanf_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/scanf.c:84
  va_end (ap);
  return (ret);
}
   117d8:	01813083          	ld	ra,24(sp)
   117dc:	05010113          	addi	sp,sp,80
   117e0:	00008067          	ret

00000000000117e4 <strcmp>:
strcmp():
   117e4:	00b56733          	or	a4,a0,a1
   117e8:	fff00393          	li	t2,-1
   117ec:	00777713          	andi	a4,a4,7
   117f0:	0c071c63          	bnez	a4,118c8 <strcmp+0xe4>
   117f4:	00013e17          	auipc	t3,0x13
   117f8:	ca4e3e03          	ld	t3,-860(t3) # 24498 <mask>
   117fc:	00053603          	ld	a2,0(a0)
   11800:	0005b683          	ld	a3,0(a1)
   11804:	01c672b3          	and	t0,a2,t3
   11808:	01c66333          	or	t1,a2,t3
   1180c:	01c282b3          	add	t0,t0,t3
   11810:	0062e2b3          	or	t0,t0,t1
   11814:	0c729e63          	bne	t0,t2,118f0 <strcmp+0x10c>
   11818:	04d61663          	bne	a2,a3,11864 <strcmp+0x80>
   1181c:	00853603          	ld	a2,8(a0)
   11820:	0085b683          	ld	a3,8(a1)
   11824:	01c672b3          	and	t0,a2,t3
   11828:	01c66333          	or	t1,a2,t3
   1182c:	01c282b3          	add	t0,t0,t3
   11830:	0062e2b3          	or	t0,t0,t1
   11834:	0a729a63          	bne	t0,t2,118e8 <strcmp+0x104>
   11838:	02d61663          	bne	a2,a3,11864 <strcmp+0x80>
   1183c:	01053603          	ld	a2,16(a0)
   11840:	0105b683          	ld	a3,16(a1)
   11844:	01c672b3          	and	t0,a2,t3
   11848:	01c66333          	or	t1,a2,t3
   1184c:	01c282b3          	add	t0,t0,t3
   11850:	0062e2b3          	or	t0,t0,t1
   11854:	0a729463          	bne	t0,t2,118fc <strcmp+0x118>
   11858:	01850513          	addi	a0,a0,24
   1185c:	01858593          	addi	a1,a1,24
   11860:	f8d60ee3          	beq	a2,a3,117fc <strcmp+0x18>
   11864:	03061713          	slli	a4,a2,0x30
   11868:	03069793          	slli	a5,a3,0x30
   1186c:	02f71a63          	bne	a4,a5,118a0 <strcmp+0xbc>
   11870:	02061713          	slli	a4,a2,0x20
   11874:	02069793          	slli	a5,a3,0x20
   11878:	02f71463          	bne	a4,a5,118a0 <strcmp+0xbc>
   1187c:	01061713          	slli	a4,a2,0x10
   11880:	01069793          	slli	a5,a3,0x10
   11884:	00f71e63          	bne	a4,a5,118a0 <strcmp+0xbc>
   11888:	03065713          	srli	a4,a2,0x30
   1188c:	0306d793          	srli	a5,a3,0x30
   11890:	40f70533          	sub	a0,a4,a5
   11894:	0ff57593          	andi	a1,a0,255
   11898:	02059063          	bnez	a1,118b8 <strcmp+0xd4>
   1189c:	00008067          	ret
   118a0:	03075713          	srli	a4,a4,0x30
   118a4:	0307d793          	srli	a5,a5,0x30
   118a8:	40f70533          	sub	a0,a4,a5
   118ac:	0ff57593          	andi	a1,a0,255
   118b0:	00059463          	bnez	a1,118b8 <strcmp+0xd4>
   118b4:	00008067          	ret
   118b8:	0ff77713          	andi	a4,a4,255
   118bc:	0ff7f793          	andi	a5,a5,255
   118c0:	40f70533          	sub	a0,a4,a5
   118c4:	00008067          	ret
   118c8:	00054603          	lbu	a2,0(a0)
   118cc:	0005c683          	lbu	a3,0(a1)
   118d0:	00150513          	addi	a0,a0,1
   118d4:	00158593          	addi	a1,a1,1
   118d8:	00d61463          	bne	a2,a3,118e0 <strcmp+0xfc>
   118dc:	fe0616e3          	bnez	a2,118c8 <strcmp+0xe4>
   118e0:	40d60533          	sub	a0,a2,a3
   118e4:	00008067          	ret
   118e8:	00850513          	addi	a0,a0,8
   118ec:	00858593          	addi	a1,a1,8
   118f0:	fcd61ce3          	bne	a2,a3,118c8 <strcmp+0xe4>
   118f4:	00000513          	li	a0,0
   118f8:	00008067          	ret
   118fc:	01050513          	addi	a0,a0,16
   11900:	01058593          	addi	a1,a1,16
   11904:	fcd612e3          	bne	a2,a3,118c8 <strcmp+0xe4>
   11908:	00000513          	li	a0,0
   1190c:	00008067          	ret

0000000000011910 <strlen>:
strlen():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:13
#if defined(PREFER_SIZE_OVER_SPEED) || defined(__OPTIMIZE_SIZE__)
  while (*str++)
    ;
  return str - start - 1;
#else
  if (__builtin_expect((uintptr_t)str & (sizeof(long)-1), 0)) do
   11910:	00757793          	andi	a5,a0,7
   11914:	00050593          	mv	a1,a0
   11918:	06079a63          	bnez	a5,1198c <strlen+0x7c>
   1191c:	000247b7          	lui	a5,0x24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:22 (discriminator 1)
    if (!ch)
      return str - start - 1;
  } while ((uintptr_t)str & (sizeof(long)-1));

  unsigned long* ls = (unsigned long*)str;
  while (!__libc_detect_null(*ls++))
   11920:	4987b683          	ld	a3,1176(a5) # 24498 <mask>
   11924:	fff00613          	li	a2,-1
   11928:	00850513          	addi	a0,a0,8
   1192c:	ff853783          	ld	a5,-8(a0)
   11930:	00d7f733          	and	a4,a5,a3
   11934:	00d70733          	add	a4,a4,a3
   11938:	00d7e7b3          	or	a5,a5,a3
   1193c:	00f767b3          	or	a5,a4,a5
   11940:	fec784e3          	beq	a5,a2,11928 <strlen+0x18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:30

  str = (const char*)ls;
  size_t ret = str - start, sl = sizeof(long);

  char c0 = str[0-sl], c1 = str[1-sl], c2 = str[2-sl], c3 = str[3-sl];
  if (c0 == 0)            return ret + 0 - sl;
   11944:	ff854783          	lbu	a5,-8(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:27
  while (!__libc_detect_null(*ls++))
    ;
  asm volatile ("" : "+r"(ls)); /* prevent "optimization" */

  str = (const char*)ls;
  size_t ret = str - start, sl = sizeof(long);
   11948:	40b505b3          	sub	a1,a0,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:30

  char c0 = str[0-sl], c1 = str[1-sl], c2 = str[2-sl], c3 = str[3-sl];
  if (c0 == 0)            return ret + 0 - sl;
   1194c:	06078263          	beqz	a5,119b0 <strlen+0xa0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:31
  if (c1 == 0)            return ret + 1 - sl;
   11950:	ff954783          	lbu	a5,-7(a0)
   11954:	04078a63          	beqz	a5,119a8 <strlen+0x98>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:32
  if (c2 == 0)            return ret + 2 - sl;
   11958:	ffa54783          	lbu	a5,-6(a0)
   1195c:	06078263          	beqz	a5,119c0 <strlen+0xb0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:33 (discriminator 2)
  if (sl == 4 || c3 == 0) return ret + 3 - sl;
   11960:	ffb54783          	lbu	a5,-5(a0)
   11964:	04078a63          	beqz	a5,119b8 <strlen+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:36

  c0 = str[4-sl], c1 = str[5-sl], c2 = str[6-sl], c3 = str[7-sl];
  if (c0 == 0)            return ret + 4 - sl;
   11968:	ffc54783          	lbu	a5,-4(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:35
  if (c0 == 0)            return ret + 0 - sl;
  if (c1 == 0)            return ret + 1 - sl;
  if (c2 == 0)            return ret + 2 - sl;
  if (sl == 4 || c3 == 0) return ret + 3 - sl;

  c0 = str[4-sl], c1 = str[5-sl], c2 = str[6-sl], c3 = str[7-sl];
   1196c:	ffd54703          	lbu	a4,-3(a0)
   11970:	ffe54683          	lbu	a3,-2(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:36
  if (c0 == 0)            return ret + 4 - sl;
   11974:	04078a63          	beqz	a5,119c8 <strlen+0xb8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:37
  if (c1 == 0)            return ret + 5 - sl;
   11978:	04070c63          	beqz	a4,119d0 <strlen+0xc0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:39
  if (c2 == 0)            return ret + 6 - sl;
                          return ret + 7 - sl;
   1197c:	fff58513          	addi	a0,a1,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:38
  if (sl == 4 || c3 == 0) return ret + 3 - sl;

  c0 = str[4-sl], c1 = str[5-sl], c2 = str[6-sl], c3 = str[7-sl];
  if (c0 == 0)            return ret + 4 - sl;
  if (c1 == 0)            return ret + 5 - sl;
  if (c2 == 0)            return ret + 6 - sl;
   11980:	04068c63          	beqz	a3,119d8 <strlen+0xc8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:41
                          return ret + 7 - sl;
#endif /* not PREFER_SIZE_OVER_SPEED */
}
   11984:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:19
  {
    char ch = *str;
    str++;
    if (!ch)
      return str - start - 1;
  } while ((uintptr_t)str & (sizeof(long)-1));
   11988:	f8070ae3          	beqz	a4,1191c <strlen+0xc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:15
    ;
  return str - start - 1;
#else
  if (__builtin_expect((uintptr_t)str & (sizeof(long)-1), 0)) do
  {
    char ch = *str;
   1198c:	00054783          	lbu	a5,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:16
    str++;
   11990:	00150513          	addi	a0,a0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:19
    if (!ch)
      return str - start - 1;
  } while ((uintptr_t)str & (sizeof(long)-1));
   11994:	00757713          	andi	a4,a0,7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:17
#else
  if (__builtin_expect((uintptr_t)str & (sizeof(long)-1), 0)) do
  {
    char ch = *str;
    str++;
    if (!ch)
   11998:	fe0798e3          	bnez	a5,11988 <strlen+0x78>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:18
      return str - start - 1;
   1199c:	40b50533          	sub	a0,a0,a1
   119a0:	fff50513          	addi	a0,a0,-1
   119a4:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:31 (discriminator 1)
  str = (const char*)ls;
  size_t ret = str - start, sl = sizeof(long);

  char c0 = str[0-sl], c1 = str[1-sl], c2 = str[2-sl], c3 = str[3-sl];
  if (c0 == 0)            return ret + 0 - sl;
  if (c1 == 0)            return ret + 1 - sl;
   119a8:	ff958513          	addi	a0,a1,-7
   119ac:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:30

  str = (const char*)ls;
  size_t ret = str - start, sl = sizeof(long);

  char c0 = str[0-sl], c1 = str[1-sl], c2 = str[2-sl], c3 = str[3-sl];
  if (c0 == 0)            return ret + 0 - sl;
   119b0:	ff858513          	addi	a0,a1,-8
   119b4:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:33 (discriminator 3)
  if (c1 == 0)            return ret + 1 - sl;
  if (c2 == 0)            return ret + 2 - sl;
  if (sl == 4 || c3 == 0) return ret + 3 - sl;
   119b8:	ffb58513          	addi	a0,a1,-5
   119bc:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:32 (discriminator 1)
  size_t ret = str - start, sl = sizeof(long);

  char c0 = str[0-sl], c1 = str[1-sl], c2 = str[2-sl], c3 = str[3-sl];
  if (c0 == 0)            return ret + 0 - sl;
  if (c1 == 0)            return ret + 1 - sl;
  if (c2 == 0)            return ret + 2 - sl;
   119c0:	ffa58513          	addi	a0,a1,-6
   119c4:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:36
  if (sl == 4 || c3 == 0) return ret + 3 - sl;

  c0 = str[4-sl], c1 = str[5-sl], c2 = str[6-sl], c3 = str[7-sl];
  if (c0 == 0)            return ret + 4 - sl;
   119c8:	ffc58513          	addi	a0,a1,-4
   119cc:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:37
  if (c1 == 0)            return ret + 5 - sl;
   119d0:	ffd58513          	addi	a0,a1,-3
   119d4:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:38
  if (c2 == 0)            return ret + 6 - sl;
   119d8:	ffe58513          	addi	a0,a1,-2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/machine/riscv/strlen.c:41
                          return ret + 7 - sl;
#endif /* not PREFER_SIZE_OVER_SPEED */
}
   119dc:	00008067          	ret

00000000000119e0 <_vfprintf_r>:
_vfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:668
_DEFUN(_VFPRINTF_R, (data, fp, fmt0, ap),
       struct _reent *data _AND
       FILE * fp           _AND
       _CONST char *fmt0   _AND
       va_list ap)
{
   119e0:	e1010113          	addi	sp,sp,-496
   119e4:	1e113423          	sd	ra,488(sp)
   119e8:	1d313423          	sd	s3,456(sp)
   119ec:	1d413023          	sd	s4,448(sp)
   119f0:	1b713423          	sd	s7,424(sp)
   119f4:	00058a13          	mv	s4,a1
   119f8:	00060993          	mv	s3,a2
   119fc:	02d13423          	sd	a3,40(sp)
   11a00:	1e813023          	sd	s0,480(sp)
   11a04:	1c913c23          	sd	s1,472(sp)
   11a08:	1d213823          	sd	s2,464(sp)
   11a0c:	1b513c23          	sd	s5,440(sp)
   11a10:	1b613823          	sd	s6,432(sp)
   11a14:	1b813023          	sd	s8,416(sp)
   11a18:	19913c23          	sd	s9,408(sp)
   11a1c:	19a13823          	sd	s10,400(sp)
   11a20:	19b13423          	sd	s11,392(sp)
   11a24:	16813c27          	fsd	fs0,376(sp)
   11a28:	00050b93          	mv	s7,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:696
	char *thousands_sep = NULL;
	size_t thsnd_len = 0;
	const char *grouping = NULL;
#endif
#ifdef FLOATING_POINT
	char *decimal_point = _localeconv_r (data)->decimal_point;
   11a2c:	30d050ef          	jal	17538 <_localeconv_r>
   11a30:	00053783          	ld	a5,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:697
	size_t decp_len = strlen (decimal_point);
   11a34:	00078513          	mv	a0,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:696
	char *thousands_sep = NULL;
	size_t thsnd_len = 0;
	const char *grouping = NULL;
#endif
#ifdef FLOATING_POINT
	char *decimal_point = _localeconv_r (data)->decimal_point;
   11a38:	06f13023          	sd	a5,96(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:697
	size_t decp_len = strlen (decimal_point);
   11a3c:	ed5ff0ef          	jal	11910 <strlen>
   11a40:	06a13423          	sd	a0,104(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:859
	    (u_long)GET_ARG (N, ap, u_int))
#endif

#ifndef STRING_ONLY
	/* Initialize std streams if not dealing with sprintf family.  */
	CHECK_INIT (data, fp);
   11a44:	000b8663          	beqz	s7,11a50 <_vfprintf_r+0x70>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:859 (discriminator 1)
   11a48:	050ba783          	lw	a5,80(s7)
   11a4c:	2e078c63          	beqz	a5,11d44 <_vfprintf_r+0x364>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:862
	_newlib_flockfile_start (fp);

	ORIENT(fp, -1);
   11a50:	010a1683          	lh	a3,16(s4)
   11a54:	03069793          	slli	a5,a3,0x30
   11a58:	0307d793          	srli	a5,a5,0x30
   11a5c:	03279713          	slli	a4,a5,0x32
   11a60:	02074a63          	bltz	a4,11a94 <_vfprintf_r+0xb4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:862 (discriminator 1)
   11a64:	000027b7          	lui	a5,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:860
#endif

#ifndef STRING_ONLY
	/* Initialize std streams if not dealing with sprintf family.  */
	CHECK_INIT (data, fp);
	_newlib_flockfile_start (fp);
   11a68:	0aca2603          	lw	a2,172(s4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:862

	ORIENT(fp, -1);
   11a6c:	00f6e7b3          	or	a5,a3,a5
   11a70:	0107979b          	slliw	a5,a5,0x10
   11a74:	ffffe737          	lui	a4,0xffffe
   11a78:	4107d79b          	sraiw	a5,a5,0x10
   11a7c:	fff7071b          	addiw	a4,a4,-1
   11a80:	00e67733          	and	a4,a2,a4
   11a84:	00fa1823          	sh	a5,16(s4)
   11a88:	03079793          	slli	a5,a5,0x30
   11a8c:	0aea2623          	sw	a4,172(s4)
   11a90:	0307d793          	srli	a5,a5,0x30
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:865

	/* sorry, fprintf(read_only_file, "") returns EOF, not 0 */
	if (cantwrite (data, fp)) {
   11a94:	0087f713          	andi	a4,a5,8
   11a98:	1e070063          	beqz	a4,11c78 <_vfprintf_r+0x298>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:865 (discriminator 2)
   11a9c:	018a3703          	ld	a4,24(s4)
   11aa0:	1c070c63          	beqz	a4,11c78 <_vfprintf_r+0x298>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:872
		return (EOF);
	}

#ifdef _UNBUF_STREAM_OPT
	/* optimise fprintf(stderr) (and other unbuffered Unix files) */
	if ((fp->_flags & (__SNBF|__SWR|__SRW)) == (__SNBF|__SWR) &&
   11aa4:	01a7f793          	andi	a5,a5,26
   11aa8:	00a00713          	li	a4,10
   11aac:	1ee78863          	beq	a5,a4,11c9c <_vfprintf_r+0x2bc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   11ab0:	000207b7          	lui	a5,0x20
   11ab4:	60078793          	addi	a5,a5,1536 # 20600 <sulp+0x68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:894
        }
#endif /* STRING_ONLY */

	fmt = (char *)fmt0;
#ifdef _FVWRITE_IN_STREAMIO
	uio.uio_iov = iovp = iov;
   11ab8:	0f010b13          	addi	s6,sp,240
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   11abc:	02f13823          	sd	a5,48(sp)
   11ac0:	0ef10793          	addi	a5,sp,239
   11ac4:	00020ab7          	lui	s5,0x20
   11ac8:	000204b7          	lui	s1,0x20
   11acc:	40fb07b3          	sub	a5,s6,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:699
#endif
#ifdef FLOATING_POINT
	char *decimal_point = _localeconv_r (data)->decimal_point;
	size_t decp_len = strlen (decimal_point);
	char softsign;		/* temporary negative sign for floats */
	union { int i; _PRINTF_FLOAT_TYPE fp; } _double_ = {0};
   11ad0:	04013c23          	sd	zero,88(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:894
        }
#endif /* STRING_ONLY */

	fmt = (char *)fmt0;
#ifdef _FVWRITE_IN_STREAMIO
	uio.uio_iov = iovp = iov;
   11ad4:	0b613823          	sd	s6,176(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:895
	uio.uio_resid = 0;
   11ad8:	0c013023          	sd	zero,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:896
	uio.uio_iovcnt = 0;
   11adc:	0a012c23          	sw	zero,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:707
	int expsize = 0;	/* character count for expstr */
	char expstr[MAXEXPLEN];	/* buffer for exponent string */
	int lead;		/* sig figs before decimal or group sep */
#endif /* FLOATING_POINT */
#if defined (FLOATING_POINT) || defined (_WANT_IO_C99_FORMATS)
	int ndig = 0;		/* actual number of digits returned by cvt */
   11ae0:	06012823          	sw	zero,112(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:894
        }
#endif /* STRING_ONLY */

	fmt = (char *)fmt0;
#ifdef _FVWRITE_IN_STREAMIO
	uio.uio_iov = iovp = iov;
   11ae4:	000b0893          	mv	a7,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:718
	u_quad_t _uquad;	/* integer arguments %[diouxX] */
	enum { OCT, DEC, HEX } base;/* base for [diouxX] conversion */
	int dprec;		/* a copy of prec if [diouxX], 0 otherwise */
	int realsz;		/* field size expanded by dprec */
	int size;		/* size of converted field or string */
	char *xdigs = NULL;	/* digits for [xX] conversion */
   11ae8:	02013c23          	sd	zero,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:702
	size_t decp_len = strlen (decimal_point);
	char softsign;		/* temporary negative sign for floats */
	union { int i; _PRINTF_FLOAT_TYPE fp; } _double_ = {0};
# define _fpvalue (_double_.fp)
	int expt;		/* integer value of exponent */
	int expsize = 0;	/* character count for expstr */
   11aec:	06012a23          	sw	zero,116(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:898
#ifdef _FVWRITE_IN_STREAMIO
	uio.uio_iov = iovp = iov;
	uio.uio_resid = 0;
	uio.uio_iovcnt = 0;
#endif
	ret = 0;
   11af0:	00012e23          	sw	zero,28(sp)
   11af4:	768a8a93          	addi	s5,s5,1896 # 20768 <blanks.4193>
   11af8:	77848493          	addi	s1,s1,1912 # 20778 <zeroes.4194>
   11afc:	06f13c23          	sd	a5,120(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:925
                    else if (wc == '%')
                        break;
                    fmt += n;
		}
#else
                while (*fmt != '\0' && *fmt != '%')
   11b00:	0009c783          	lbu	a5,0(s3)
   11b04:	0e0782e3          	beqz	a5,123e8 <_vfprintf_r+0xa08>
   11b08:	02500713          	li	a4,37
   11b0c:	00098413          	mv	s0,s3
   11b10:	00e79663          	bne	a5,a4,11b1c <_vfprintf_r+0x13c>
   11b14:	0580006f          	j	11b6c <_vfprintf_r+0x18c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:925 (discriminator 1)
   11b18:	00e78863          	beq	a5,a4,11b28 <_vfprintf_r+0x148>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:926
                    fmt += 1;
   11b1c:	00140413          	addi	s0,s0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:925
                    else if (wc == '%')
                        break;
                    fmt += n;
		}
#else
                while (*fmt != '\0' && *fmt != '%')
   11b20:	00044783          	lbu	a5,0(s0)
   11b24:	fe079ae3          	bnez	a5,11b18 <_vfprintf_r+0x138>
   11b28:	4134093b          	subw	s2,s0,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:928
                    fmt += 1;
#endif
		if ((m = fmt - cp) != 0) {
   11b2c:	04090063          	beqz	s2,11b6c <_vfprintf_r+0x18c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:929
			PRINT (cp, m);
   11b30:	0c013703          	ld	a4,192(sp)
   11b34:	0b812783          	lw	a5,184(sp)
   11b38:	00090693          	mv	a3,s2
   11b3c:	00d70733          	add	a4,a4,a3
   11b40:	0017879b          	addiw	a5,a5,1
   11b44:	0138b023          	sd	s3,0(a7)
   11b48:	00d8b423          	sd	a3,8(a7)
   11b4c:	0ce13023          	sd	a4,192(sp)
   11b50:	0af12c23          	sw	a5,184(sp)
   11b54:	00700713          	li	a4,7
   11b58:	01088893          	addi	a7,a7,16
   11b5c:	16f74063          	blt	a4,a5,11cbc <_vfprintf_r+0x2dc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:930
			ret += m;
   11b60:	01c12783          	lw	a5,28(sp)
   11b64:	012787bb          	addw	a5,a5,s2
   11b68:	00f12e23          	sw	a5,28(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:936
		}
#ifdef _MB_CAPABLE
		if (n <= 0)
                    goto done;
#else
                if (*fmt == '\0')
   11b6c:	00044783          	lbu	a5,0(s0)
   11b70:	16078463          	beqz	a5,11cd8 <_vfprintf_r+0x2f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:940
                    goto done;
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */
   11b74:	00140993          	addi	s3,s0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:946

		flags = 0;
		dprec = 0;
		width = 0;
		prec = -1;
		sign = '\0';
   11b78:	080107a3          	sb	zero,143(sp)
   11b7c:	00000613          	li	a2,0
   11b80:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:945
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
		width = 0;
		prec = -1;
   11b84:	fff00413          	li	s0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:944
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
		width = 0;
   11b88:	00012c23          	sw	zero,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:942
                    goto done;
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
   11b8c:	00000c13          	li	s8,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   11b90:	05800713          	li	a4,88
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1092
		case '5': case '6': case '7': case '8': case '9':
			n = 0;
			do {
				n = 10 * n + to_digit (ch);
				ch = *fmt++;
			} while (is_digit (ch));
   11b94:	00900693          	li	a3,9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1033
			goto rflag;
		case '+':
			sign = '+';
			goto rflag;
		case '.':
			if ((ch = *fmt++) == '*') {
   11b98:	02a00513          	li	a0,42
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:958
#ifndef _NO_POS_ARGS
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
   11b9c:	0009cd03          	lbu	s10,0(s3)
   11ba0:	00198993          	addi	s3,s3,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
reswitch:	switch (ch) {
   11ba4:	fe0d079b          	addiw	a5,s10,-32
   11ba8:	1cf762e3          	bltu	a4,a5,1256c <_vfprintf_r+0xb8c>
   11bac:	03013803          	ld	a6,48(sp)
   11bb0:	02079793          	slli	a5,a5,0x20
   11bb4:	01e7d793          	srli	a5,a5,0x1e
   11bb8:	010787b3          	add	a5,a5,a6
   11bbc:	0007a783          	lw	a5,0(a5)
   11bc0:	00078067          	jr	a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1130
			} else
#endif
				flags |= LONGINT;
			goto rflag;
		case 'q': /* extension */
			flags |= QUADINT;
   11bc4:	010c6c13          	ori	s8,s8,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1131
			goto rflag;
   11bc8:	fd5ff06f          	j	11b9c <_vfprintf_r+0x1bc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1018
			 * ``A negative field width argument is taken as a
			 * - flag followed by a positive field width.''
			 *	-- ANSI X3J11
			 * They don't exclude field widths read from args.
			 */
			width = GET_ARG (n, ap, int);
   11bcc:	02813783          	ld	a5,40(sp)
   11bd0:	0007a803          	lw	a6,0(a5)
   11bd4:	00878793          	addi	a5,a5,8
   11bd8:	02f13423          	sd	a5,40(sp)
   11bdc:	01012c23          	sw	a6,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1022
#ifndef _NO_POS_ARGS
			is_pos_arg = old_is_pos_arg;
#endif
			if (width >= 0)
   11be0:	fa085ee3          	bgez	a6,11b9c <_vfprintf_r+0x1bc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1024
				goto rflag;
			width = -width;
   11be4:	410007bb          	negw	a5,a6
   11be8:	00f12c23          	sw	a5,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1027
			/* FALLTHROUGH */
		case '-':
			flags |= LADJUST;
   11bec:	004c6c13          	ori	s8,s8,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1028
			goto rflag;
   11bf0:	fadff06f          	j	11b9c <_vfprintf_r+0x1bc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1430
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
			flags |= HEXPREFIX;
			ox[0] = '0';
   11bf4:	03000793          	li	a5,48
   11bf8:	08f10823          	sb	a5,144(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1431
			ox[1] = ch = 'x';
   11bfc:	07800793          	li	a5,120
   11c00:	08f108a3          	sb	a5,145(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1426
			 * of printable characters, in an implementation-
			 * defined manner.''
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
   11c04:	02813783          	ld	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   11c08:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1429
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
			flags |= HEXPREFIX;
   11c0c:	002c6693          	ori	a3,s8,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1426
			 * of printable characters, in an implementation-
			 * defined manner.''
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
   11c10:	00878713          	addi	a4,a5,8
   11c14:	0007b783          	ld	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   11c18:	180444e3          	bltz	s0,125a0 <_vfprintf_r+0xbc0>
   11c1c:	f7fc7c13          	andi	s8,s8,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1426
			 * of printable characters, in an implementation-
			 * defined manner.''
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
   11c20:	02e13423          	sd	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
				flags &= ~ZEROPAD;
   11c24:	002c6c13          	ori	s8,s8,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   11c28:	120796e3          	bnez	a5,12554 <_vfprintf_r+0xb74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
   11c2c:	000227b7          	lui	a5,0x22
   11c30:	bd078793          	addi	a5,a5,-1072 # 21bd0 <zeroes.4123+0x6e0>
   11c34:	02f13c23          	sd	a5,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1431
			flags |= HEXPREFIX;
			ox[0] = '0';
			ox[1] = ch = 'x';
   11c38:	07800d13          	li	s10,120
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   11c3c:	00000613          	li	a2,0
   11c40:	7e040463          	beqz	s0,12428 <_vfprintf_r+0xa48>
   11c44:	00000793          	li	a5,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572 (discriminator 1)
   11c48:	000b0913          	mv	s2,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1626
					} while (_uquad != 0);
					break;

				case HEX:
					do {
						*--cp = xdigs[_uquad & 15];
   11c4c:	03813683          	ld	a3,56(sp)
   11c50:	00f7f713          	andi	a4,a5,15
   11c54:	fff90913          	addi	s2,s2,-1
   11c58:	00e68733          	add	a4,a3,a4
   11c5c:	00074703          	lbu	a4,0(a4) # ffffffffffffe000 <_end+0xfffffffffffd71e8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1627
						_uquad >>= 4;
   11c60:	0047d793          	srli	a5,a5,0x4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1626
					} while (_uquad != 0);
					break;

				case HEX:
					do {
						*--cp = xdigs[_uquad & 15];
   11c64:	00e90023          	sb	a4,0(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1628
						_uquad >>= 4;
					} while (_uquad);
   11c68:	fe0792e3          	bnez	a5,11c4c <_vfprintf_r+0x26c>
   11c6c:	412b07b3          	sub	a5,s6,s2
   11c70:	02f12023          	sw	a5,32(sp)
   11c74:	1680006f          	j	11ddc <_vfprintf_r+0x3fc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:865 (discriminator 3)
	_newlib_flockfile_start (fp);

	ORIENT(fp, -1);

	/* sorry, fprintf(read_only_file, "") returns EOF, not 0 */
	if (cantwrite (data, fp)) {
   11c78:	000a0593          	mv	a1,s4
   11c7c:	000b8513          	mv	a0,s7
   11c80:	5ed020ef          	jal	14a6c <__swsetup_r>
   11c84:	00050463          	beqz	a0,11c8c <_vfprintf_r+0x2ac>
   11c88:	3940106f          	j	1301c <_vfprintf_r+0x163c>
   11c8c:	010a5783          	lhu	a5,16(s4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:872
		return (EOF);
	}

#ifdef _UNBUF_STREAM_OPT
	/* optimise fprintf(stderr) (and other unbuffered Unix files) */
	if ((fp->_flags & (__SNBF|__SWR|__SRW)) == (__SNBF|__SWR) &&
   11c90:	00a00713          	li	a4,10
   11c94:	01a7f793          	andi	a5,a5,26
   11c98:	e0e79ce3          	bne	a5,a4,11ab0 <_vfprintf_r+0xd0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:872 (discriminator 1)
   11c9c:	012a1783          	lh	a5,18(s4)
   11ca0:	e007c8e3          	bltz	a5,11ab0 <_vfprintf_r+0xd0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:875
	    fp->_file >= 0) {
		_newlib_flockfile_exit (fp);
		return (__sbprintf (data, fp, fmt0, ap));
   11ca4:	02813683          	ld	a3,40(sp)
   11ca8:	00098613          	mv	a2,s3
   11cac:	000a0593          	mv	a1,s4
   11cb0:	000b8513          	mv	a0,s7
   11cb4:	1c9010ef          	jal	1367c <__sbprintf>
   11cb8:	04c0006f          	j	11d04 <_vfprintf_r+0x324>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:929 (discriminator 1)
#else
                while (*fmt != '\0' && *fmt != '%')
                    fmt += 1;
#endif
		if ((m = fmt - cp) != 0) {
			PRINT (cp, m);
   11cbc:	0b010613          	addi	a2,sp,176
   11cc0:	000a0593          	mv	a1,s4
   11cc4:	000b8513          	mv	a0,s7
   11cc8:	1e80b0ef          	jal	1ceb0 <__sprint_r>
   11ccc:	02051263          	bnez	a0,11cf0 <_vfprintf_r+0x310>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:929
   11cd0:	000b0893          	mv	a7,s6
   11cd4:	e8dff06f          	j	11b60 <_vfprintf_r+0x180>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1782
			_free_r (data, malloc_buf);
			malloc_buf = NULL;
		}
	}
done:
	FLUSH ();
   11cd8:	0c013783          	ld	a5,192(sp)
   11cdc:	00078a63          	beqz	a5,11cf0 <_vfprintf_r+0x310>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1782 (discriminator 1)
   11ce0:	0b010613          	addi	a2,sp,176
   11ce4:	000a0593          	mv	a1,s4
   11ce8:	000b8513          	mv	a0,s7
   11cec:	1c40b0ef          	jal	1ceb0 <__sprint_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1789
	if (malloc_buf != NULL)
		_free_r (data, malloc_buf);
#ifndef STRING_ONLY
	_newlib_flockfile_end (fp);
#endif
	return (__sferror (fp) ? EOF : ret);
   11cf0:	010a5783          	lhu	a5,16(s4)
   11cf4:	0407f793          	andi	a5,a5,64
   11cf8:	00078463          	beqz	a5,11d00 <_vfprintf_r+0x320>
   11cfc:	3200106f          	j	1301c <_vfprintf_r+0x163c>
   11d00:	01c12503          	lw	a0,28(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1791
	/* NOTREACHED */
}
   11d04:	1e813083          	ld	ra,488(sp)
   11d08:	1e013403          	ld	s0,480(sp)
   11d0c:	1d813483          	ld	s1,472(sp)
   11d10:	1d013903          	ld	s2,464(sp)
   11d14:	1c813983          	ld	s3,456(sp)
   11d18:	1c013a03          	ld	s4,448(sp)
   11d1c:	1b813a83          	ld	s5,440(sp)
   11d20:	1b013b03          	ld	s6,432(sp)
   11d24:	1a813b83          	ld	s7,424(sp)
   11d28:	1a013c03          	ld	s8,416(sp)
   11d2c:	19813c83          	ld	s9,408(sp)
   11d30:	19013d03          	ld	s10,400(sp)
   11d34:	18813d83          	ld	s11,392(sp)
   11d38:	17813407          	fld	fs0,376(sp)
   11d3c:	1f010113          	addi	sp,sp,496
   11d40:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:859 (discriminator 2)
	    (u_long)GET_ARG (N, ap, u_int))
#endif

#ifndef STRING_ONLY
	/* Initialize std streams if not dealing with sprintf family.  */
	CHECK_INIT (data, fp);
   11d44:	000b8513          	mv	a0,s7
   11d48:	229040ef          	jal	16770 <__sinit>
   11d4c:	d05ff06f          	j	11a50 <_vfprintf_r+0x70>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   11d50:	00100613          	li	a2,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1030
			/* FALLTHROUGH */
		case '-':
			flags |= LADJUST;
			goto rflag;
		case '+':
			sign = '+';
   11d54:	02b00593          	li	a1,43
   11d58:	e45ff06f          	j	11b9c <_vfprintf_r+0x1bc>
   11d5c:	00060463          	beqz	a2,11d64 <_vfprintf_r+0x384>
   11d60:	0d90106f          	j	13638 <_vfprintf_r+0x1c58>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   11d64:	010c7793          	andi	a5,s8,16
   11d68:	22078263          	beqz	a5,11f8c <_vfprintf_r+0x5ac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411 (discriminator 1)
   11d6c:	02813783          	ld	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   11d70:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   11d74:	00878713          	addi	a4,a5,8
   11d78:	0007b783          	ld	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   11d7c:	22044663          	bltz	s0,11fa8 <_vfprintf_r+0x5c8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   11d80:	02e13423          	sd	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
				flags &= ~ZEROPAD;
   11d84:	f7fc7c13          	andi	s8,s8,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   11d88:	22079663          	bnez	a5,11fb4 <_vfprintf_r+0x5d4>
   11d8c:	00000613          	li	a2,0
   11d90:	00000793          	li	a5,0
   11d94:	00041463          	bnez	s0,11d9c <_vfprintf_r+0x3bc>
   11d98:	3680106f          	j	13100 <_vfprintf_r+0x1720>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572 (discriminator 1)
   11d9c:	000b0913          	mv	s2,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1581
				 * a variable; hence this switch.
				 */
				switch (base) {
				case OCT:
					do {
						*--cp = to_char (_uquad & 7);
   11da0:	0077f713          	andi	a4,a5,7
   11da4:	fff90913          	addi	s2,s2,-1
   11da8:	0307071b          	addiw	a4,a4,48
   11dac:	00e90023          	sb	a4,0(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1582
						_uquad >>= 3;
   11db0:	0037d793          	srli	a5,a5,0x3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1583
					} while (_uquad);
   11db4:	fe0796e3          	bnez	a5,11da0 <_vfprintf_r+0x3c0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1585
					/* handle octal leading 0 */
					if (flags & ALT && *cp != '0')
   11db8:	001c7793          	andi	a5,s8,1
   11dbc:	ea0788e3          	beqz	a5,11c6c <_vfprintf_r+0x28c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1585 (discriminator 1)
   11dc0:	03000793          	li	a5,48
   11dc4:	eaf704e3          	beq	a4,a5,11c6c <_vfprintf_r+0x28c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1586
						*--cp = '0';
   11dc8:	fff90713          	addi	a4,s2,-1
   11dcc:	40eb06b3          	sub	a3,s6,a4
   11dd0:	fef90fa3          	sb	a5,-1(s2)
   11dd4:	02d12023          	sw	a3,32(sp)
   11dd8:	00070913          	mv	s2,a4
   11ddc:	02012783          	lw	a5,32(sp)
   11de0:	00078d93          	mv	s11,a5
   11de4:	0087d463          	ble	s0,a5,11dec <_vfprintf_r+0x40c>
   11de8:	00040d93          	mv	s11,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:948
		dprec = 0;
		width = 0;
		prec = -1;
		sign = '\0';
#ifdef FLOATING_POINT
		lead = 0;
   11dec:	01b12423          	sw	s11,8(sp)
   11df0:	04012623          	sw	zero,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1679
		 *
		 * Compute actual size, so we know how much to pad.
		 * size excludes decimal prec; realsz includes it.
		 */
		realsz = dprec > size ? dprec : size;
		if (sign)
   11df4:	2a060263          	beqz	a2,12098 <_vfprintf_r+0x6b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1680
			realsz++;
   11df8:	00812783          	lw	a5,8(sp)
   11dfc:	0017879b          	addiw	a5,a5,1
   11e00:	00f12423          	sw	a5,8(sp)
   11e04:	2940006f          	j	12098 <_vfprintf_r+0x6b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1033
			goto rflag;
		case '+':
			sign = '+';
			goto rflag;
		case '.':
			if ((ch = *fmt++) == '*') {
   11e08:	0009cd03          	lbu	s10,0(s3)
   11e0c:	00198993          	addi	s3,s3,1
   11e10:	00ad1463          	bne	s10,a0,11e18 <_vfprintf_r+0x438>
   11e14:	75c0106f          	j	13570 <_vfprintf_r+0x1b90>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1072
				if (prec < 0)
					prec = -1;
				goto rflag;
			}
			n = 0;
			while (is_digit (ch)) {
   11e18:	fd0d079b          	addiw	a5,s10,-48
   11e1c:	00000413          	li	s0,0
   11e20:	d8f6e2e3          	bltu	a3,a5,11ba4 <_vfprintf_r+0x1c4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1074
				n = 10 * n + to_digit (ch);
				ch = *fmt++;
   11e24:	00198993          	addi	s3,s3,1
   11e28:	fff9cd03          	lbu	s10,-1(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1073
					prec = -1;
				goto rflag;
			}
			n = 0;
			while (is_digit (ch)) {
				n = 10 * n + to_digit (ch);
   11e2c:	0014181b          	slliw	a6,s0,0x1
   11e30:	0034141b          	slliw	s0,s0,0x3
   11e34:	0088043b          	addw	s0,a6,s0
   11e38:	00f4043b          	addw	s0,s0,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1072
				if (prec < 0)
					prec = -1;
				goto rflag;
			}
			n = 0;
			while (is_digit (ch)) {
   11e3c:	fd0d079b          	addiw	a5,s10,-48
   11e40:	fef6f2e3          	bleu	a5,a3,11e24 <_vfprintf_r+0x444>
   11e44:	d60450e3          	bgez	s0,11ba4 <_vfprintf_r+0x1c4>
   11e48:	fff00413          	li	s0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1077
				n = 10 * n + to_digit (ch);
				ch = *fmt++;
			}
			prec = n < 0 ? -1 : n;
			goto reswitch;
   11e4c:	d59ff06f          	j	11ba4 <_vfprintf_r+0x1c4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1084
			/*
			 * ``Note that 0 is taken as a flag, not as the
			 * beginning of a field width.''
			 *	-- ANSI X3J11
			 */
			flags |= ZEROPAD;
   11e50:	080c6c13          	ori	s8,s8,128
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1085
			goto rflag;
   11e54:	d49ff06f          	j	11b9c <_vfprintf_r+0x1bc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:975
			/*
			 * ``If the space and + flags both appear, the space
			 * flag will be ignored.''
			 *	-- ANSI X3J11
			 */
			if (!sign)
   11e58:	d40592e3          	bnez	a1,11b9c <_vfprintf_r+0x1bc>
   11e5c:	00100613          	li	a2,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:976
				sign = ' ';
   11e60:	02000593          	li	a1,32
   11e64:	d39ff06f          	j	11b9c <_vfprintf_r+0x1bc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:979
			goto rflag;
		case '#':
			flags |= ALT;
   11e68:	001c6c13          	ori	s8,s8,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:980
			goto rflag;
   11e6c:	d31ff06f          	j	11b9c <_vfprintf_r+0x1bc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   11e70:	02813783          	ld	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1441
#ifdef _GLIBC_EXTENSION
string:
#endif
			sign = '\0';
   11e74:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   11e78:	0007b903          	ld	s2,0(a5)
   11e7c:	00878c93          	addi	s9,a5,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1447
#ifndef __OPTIMIZE_SIZE__
			/* Behavior is undefined if the user passed a
			   NULL string when precision is not 0.
			   However, if we are not optimizing for size,
			   we might as well mirror glibc behavior.  */
			if (cp == NULL) {
   11e80:	00091463          	bnez	s2,11e88 <_vfprintf_r+0x4a8>
   11e84:	39c0106f          	j	13220 <_vfprintf_r+0x1840>
   11e88:	01113023          	sd	a7,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1516
				}
				cp[size] = '\0';
			}
			else
#endif /* _MB_CAPABLE */
			if (prec >= 0) {
   11e8c:	00045463          	bgez	s0,11e94 <_vfprintf_r+0x4b4>
   11e90:	3240106f          	j	131b4 <_vfprintf_r+0x17d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1522
				/*
				 * can't use strlen; can only look for the
				 * NUL in the first `prec' characters, and
				 * strlen () will go further.
				 */
				char *p = memchr (cp, 0, prec);
   11e94:	00040613          	mv	a2,s0
   11e98:	00000593          	li	a1,0
   11e9c:	00090513          	mv	a0,s2
   11ea0:	2c9050ef          	jal	17968 <memchr>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1524

				if (p != NULL)
   11ea4:	00013883          	ld	a7,0(sp)
   11ea8:	00051463          	bnez	a0,11eb0 <_vfprintf_r+0x4d0>
   11eac:	4c00106f          	j	1336c <_vfprintf_r+0x198c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1525
					size = p - cp;
   11eb0:	412507bb          	subw	a5,a0,s2
   11eb4:	02f12023          	sw	a5,32(sp)
   11eb8:	00078d93          	mv	s11,a5
   11ebc:	0007d463          	bgez	a5,11ec4 <_vfprintf_r+0x4e4>
   11ec0:	3140106f          	j	131d4 <_vfprintf_r+0x17f4>
   11ec4:	08f14603          	lbu	a2,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1529
				else
					size = prec;
			} else
				size = strlen (cp);
   11ec8:	01b12423          	sw	s11,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   11ecc:	03913423          	sd	s9,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   11ed0:	00000413          	li	s0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:948
		width = 0;
		prec = -1;
		sign = '\0';
#ifdef FLOATING_POINT
		lead = 0;
   11ed4:	04012623          	sw	zero,76(sp)
   11ed8:	f1dff06f          	j	11df4 <_vfprintf_r+0x414>
   11edc:	00060463          	beqz	a2,11ee4 <_vfprintf_r+0x504>
   11ee0:	7800106f          	j	13660 <_vfprintf_r+0x1c80>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   11ee4:	010c7793          	andi	a5,s8,16
   11ee8:	0e078463          	beqz	a5,11fd0 <_vfprintf_r+0x5f0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536 (discriminator 1)
   11eec:	02813783          	ld	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   11ef0:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   11ef4:	00878713          	addi	a4,a5,8
   11ef8:	0007b783          	ld	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   11efc:	0e044863          	bltz	s0,11fec <_vfprintf_r+0x60c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   11f00:	02e13423          	sd	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
				flags &= ~ZEROPAD;
   11f04:	f7fc7c13          	andi	s8,s8,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   11f08:	00000613          	li	a2,0
   11f0c:	50078c63          	beqz	a5,12424 <_vfprintf_r+0xa44>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1591
						*--cp = '0';
					break;

				case DEC:
					/* many numbers are 1 digit */
					if (_uquad < 10) {
   11f10:	00900713          	li	a4,9
   11f14:	000b0913          	mv	s2,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1599
					}
#ifdef _WANT_IO_C99_FORMATS
					ndig = 0;
#endif
					do {
					  *--cp = to_char (_uquad % 10);
   11f18:	00a00693          	li	a3,10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1591
						*--cp = '0';
					break;

				case DEC:
					/* many numbers are 1 digit */
					if (_uquad < 10) {
   11f1c:	40f770e3          	bleu	a5,a4,12b1c <_vfprintf_r+0x113c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1599 (discriminator 1)
					}
#ifdef _WANT_IO_C99_FORMATS
					ndig = 0;
#endif
					do {
					  *--cp = to_char (_uquad % 10);
   11f20:	02d7f733          	remu	a4,a5,a3
   11f24:	fff90913          	addi	s2,s2,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1620
					       next cases. */
					    if (grouping[1] != '\0')
					      grouping++;
					  }
#endif
					  _uquad /= 10;
   11f28:	02d7d7b3          	divu	a5,a5,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1599
					}
#ifdef _WANT_IO_C99_FORMATS
					ndig = 0;
#endif
					do {
					  *--cp = to_char (_uquad % 10);
   11f2c:	0307071b          	addiw	a4,a4,48
   11f30:	00e90023          	sb	a4,0(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1621
					    if (grouping[1] != '\0')
					      grouping++;
					  }
#endif
					  _uquad /= 10;
					} while (_uquad != 0);
   11f34:	fe0796e3          	bnez	a5,11f20 <_vfprintf_r+0x540>
   11f38:	412b07b3          	sub	a5,s6,s2
   11f3c:	02f12023          	sw	a5,32(sp)
   11f40:	e9dff06f          	j	11ddc <_vfprintf_r+0x3fc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   11f44:	00012c23          	sw	zero,24(sp)
   11f48:	fd0d079b          	addiw	a5,s10,-48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1090
			goto rflag;
		case '1': case '2': case '3': case '4':
		case '5': case '6': case '7': case '8': case '9':
			n = 0;
			do {
				n = 10 * n + to_digit (ch);
   11f4c:	01812303          	lw	t1,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1091
				ch = *fmt++;
   11f50:	00198993          	addi	s3,s3,1
   11f54:	fff9cd03          	lbu	s10,-1(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1090
			goto rflag;
		case '1': case '2': case '3': case '4':
		case '5': case '6': case '7': case '8': case '9':
			n = 0;
			do {
				n = 10 * n + to_digit (ch);
   11f58:	0013181b          	slliw	a6,t1,0x1
   11f5c:	00331c9b          	slliw	s9,t1,0x3
   11f60:	01980cbb          	addw	s9,a6,s9
   11f64:	019787bb          	addw	a5,a5,s9
   11f68:	00f12c23          	sw	a5,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1092
				ch = *fmt++;
			} while (is_digit (ch));
   11f6c:	fd0d079b          	addiw	a5,s10,-48
   11f70:	fcf6fee3          	bleu	a5,a3,11f4c <_vfprintf_r+0x56c>
   11f74:	c31ff06f          	j	11ba4 <_vfprintf_r+0x1c4>
   11f78:	00060463          	beqz	a2,11f80 <_vfprintf_r+0x5a0>
   11f7c:	6d80106f          	j	13654 <_vfprintf_r+0x1c74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1408
#endif
			else
				*GET_ARG (N, ap, int_ptr_t) = ret;
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
   11f80:	010c6c13          	ori	s8,s8,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   11f84:	010c7793          	andi	a5,s8,16
   11f88:	de0792e3          	bnez	a5,11d6c <_vfprintf_r+0x38c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411 (discriminator 2)
   11f8c:	040c7793          	andi	a5,s8,64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   11f90:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   11f94:	580780e3          	beqz	a5,12d14 <_vfprintf_r+0x1334>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411 (discriminator 4)
   11f98:	02813783          	ld	a5,40(sp)
   11f9c:	00878713          	addi	a4,a5,8
   11fa0:	0007d783          	lhu	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   11fa4:	dc045ee3          	bgez	s0,11d80 <_vfprintf_r+0x3a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   11fa8:	02e13423          	sd	a4,40(sp)
   11fac:	00000613          	li	a2,0
   11fb0:	60078a63          	beqz	a5,125c4 <_vfprintf_r+0xbe4>
   11fb4:	00000613          	li	a2,0
   11fb8:	de5ff06f          	j	11d9c <_vfprintf_r+0x3bc>
   11fbc:	00060463          	beqz	a2,11fc4 <_vfprintf_r+0x5e4>
   11fc0:	6880106f          	j	13648 <_vfprintf_r+0x1c68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1533
			} else
				size = strlen (cp);

			break;
		case 'U': /* extension */
			flags |= LONGINT;
   11fc4:	010c6c13          	ori	s8,s8,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   11fc8:	010c7793          	andi	a5,s8,16
   11fcc:	f20790e3          	bnez	a5,11eec <_vfprintf_r+0x50c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536 (discriminator 2)
   11fd0:	040c7793          	andi	a5,s8,64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   11fd4:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   11fd8:	500780e3          	beqz	a5,12cd8 <_vfprintf_r+0x12f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536 (discriminator 4)
   11fdc:	02813783          	ld	a5,40(sp)
   11fe0:	00878713          	addi	a4,a5,8
   11fe4:	0007d783          	lhu	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   11fe8:	f0045ce3          	bgez	s0,11f00 <_vfprintf_r+0x520>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   11fec:	02e13423          	sd	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   11ff0:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   11ff4:	f0079ee3          	bnez	a5,11f10 <_vfprintf_r+0x530>
   11ff8:	00100793          	li	a5,1
   11ffc:	5c80006f          	j	125c4 <_vfprintf_r+0xbe4>
   12000:	00060463          	beqz	a2,12008 <_vfprintf_r+0x628>
   12004:	63c0106f          	j	13640 <_vfprintf_r+0x1c60>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1540
		case 'u':
			_uquad = UARG ();
			base = DEC;
			goto nosign;
		case 'X':
			xdigs = "0123456789ABCDEF";
   12008:	000227b7          	lui	a5,0x22
   1200c:	bb878793          	addi	a5,a5,-1096 # 21bb8 <zeroes.4123+0x6c8>
   12010:	02f13c23          	sd	a5,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
hex:			_uquad = UARG ();
   12014:	010c7793          	andi	a5,s8,16
   12018:	4c078263          	beqz	a5,124dc <_vfprintf_r+0xafc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544 (discriminator 1)
   1201c:	02813703          	ld	a4,40(sp)
   12020:	00073783          	ld	a5,0(a4)
   12024:	00870713          	addi	a4,a4,8
   12028:	02e13423          	sd	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1547 (discriminator 8)
			base = HEX;
			/* leading 0x/X only if non-zero */
			if (flags & ALT && _uquad != 0) {
   1202c:	001c7713          	andi	a4,s8,1
   12030:	120706e3          	beqz	a4,1295c <_vfprintf_r+0xf7c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1547 (discriminator 1)
   12034:	6a078ee3          	beqz	a5,12ef0 <_vfprintf_r+0x1510>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1548
				ox[0] = '0';
   12038:	03000713          	li	a4,48
   1203c:	08e10823          	sb	a4,144(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1549
				ox[1] = ch;
   12040:	09a108a3          	sb	s10,145(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   12044:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1550
			base = HEX;
			/* leading 0x/X only if non-zero */
			if (flags & ALT && _uquad != 0) {
				ox[0] = '0';
				ox[1] = ch;
				flags |= HEXPREFIX;
   12048:	002c6713          	ori	a4,s8,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1204c:	00045463          	bgez	s0,12054 <_vfprintf_r+0x674>
   12050:	2140106f          	j	13264 <_vfprintf_r+0x1884>
   12054:	f7fc7c13          	andi	s8,s8,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   12058:	002c6c13          	ori	s8,s8,2
   1205c:	00000613          	li	a2,0
   12060:	be9ff06f          	j	11c48 <_vfprintf_r+0x268>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1189
				}
			}
			else
#endif /* _MB_CAPABLE */
			{
				*cp = GET_ARG (N, ap, int);
   12064:	02813703          	ld	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1193
				size = 1;
			}
			sign = '\0';
			break;
   12068:	00100693          	li	a3,1
   1206c:	00d12423          	sw	a3,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1189
				}
			}
			else
#endif /* _MB_CAPABLE */
			{
				*cp = GET_ARG (N, ap, int);
   12070:	00072783          	lw	a5,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1192
				size = 1;
			}
			sign = '\0';
   12074:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1193
			break;
   12078:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1189
				}
			}
			else
#endif /* _MB_CAPABLE */
			{
				*cp = GET_ARG (N, ap, int);
   1207c:	0cf10423          	sb	a5,200(sp)
   12080:	00870793          	addi	a5,a4,8
   12084:	02f13423          	sd	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1190
				size = 1;
   12088:	02d12023          	sw	a3,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1208c:	00000413          	li	s0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:948
		width = 0;
		prec = -1;
		sign = '\0';
#ifdef FLOATING_POINT
		lead = 0;
   12090:	04012623          	sw	zero,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1173
		    flags |= QUADINT;
		  goto rflag;
		case 'C':
#endif /* _WANT_IO_C99_FORMATS */
		case 'c':
			cp = buf;
   12094:	0c810913          	addi	s2,sp,200
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1681
		 * size excludes decimal prec; realsz includes it.
		 */
		realsz = dprec > size ? dprec : size;
		if (sign)
			realsz++;
		if (flags & HEXPREFIX)
   12098:	002c7793          	andi	a5,s8,2
   1209c:	04f12023          	sw	a5,64(sp)
   120a0:	00078863          	beqz	a5,120b0 <_vfprintf_r+0x6d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1682
			realsz+= 2;
   120a4:	00812783          	lw	a5,8(sp)
   120a8:	0027879b          	addiw	a5,a5,2
   120ac:	00f12423          	sw	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1685

		/* right-adjusting blank padding */
		if ((flags & (LADJUST|ZEROPAD)) == 0)
   120b0:	084c7793          	andi	a5,s8,132
   120b4:	04f12423          	sw	a5,72(sp)
   120b8:	52079263          	bnez	a5,125dc <_vfprintf_r+0xbfc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
			PAD (width - realsz, blanks);
   120bc:	01812783          	lw	a5,24(sp)
   120c0:	00812703          	lw	a4,8(sp)
   120c4:	40e78cbb          	subw	s9,a5,a4
   120c8:	51905a63          	blez	s9,125dc <_vfprintf_r+0xbfc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 5)
   120cc:	01000793          	li	a5,16
   120d0:	0197c463          	blt	a5,s9,120d8 <_vfprintf_r+0x6f8>
   120d4:	1080106f          	j	131dc <_vfprintf_r+0x17fc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
   120d8:	01000813          	li	a6,16
   120dc:	0c013783          	ld	a5,192(sp)
   120e0:	0b812703          	lw	a4,184(sp)
   120e4:	05513823          	sd	s5,80(sp)
   120e8:	00700313          	li	t1,7
   120ec:	00080d93          	mv	s11,a6
   120f0:	00c0006f          	j	120fc <_vfprintf_r+0x71c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 4)
   120f4:	ff0c8c9b          	addiw	s9,s9,-16
   120f8:	059dde63          	ble	s9,s11,12154 <_vfprintf_r+0x774>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 6)
   120fc:	01078793          	addi	a5,a5,16
   12100:	0017071b          	addiw	a4,a4,1
   12104:	0158b023          	sd	s5,0(a7)
   12108:	0108b423          	sd	a6,8(a7)
   1210c:	0cf13023          	sd	a5,192(sp)
   12110:	0ae12c23          	sw	a4,184(sp)
   12114:	01088893          	addi	a7,a7,16
   12118:	fce35ee3          	ble	a4,t1,120f4 <_vfprintf_r+0x714>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 1)
   1211c:	0b010613          	addi	a2,sp,176
   12120:	000a0593          	mv	a1,s4
   12124:	000b8513          	mv	a0,s7
   12128:	00613823          	sd	t1,16(sp)
   1212c:	01013023          	sd	a6,0(sp)
   12130:	5810a0ef          	jal	1ceb0 <__sprint_r>
   12134:	ba051ee3          	bnez	a0,11cf0 <_vfprintf_r+0x310>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
   12138:	ff0c8c9b          	addiw	s9,s9,-16
   1213c:	0c013783          	ld	a5,192(sp)
   12140:	0b812703          	lw	a4,184(sp)
   12144:	000b0893          	mv	a7,s6
   12148:	01013303          	ld	t1,16(sp)
   1214c:	00013803          	ld	a6,0(sp)
   12150:	fb9dc6e3          	blt	s11,s9,120fc <_vfprintf_r+0x71c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 7)
   12154:	05013603          	ld	a2,80(sp)
   12158:	00fc87b3          	add	a5,s9,a5
   1215c:	0017071b          	addiw	a4,a4,1
   12160:	00c8b023          	sd	a2,0(a7)
   12164:	0198b423          	sd	s9,8(a7)
   12168:	0cf13023          	sd	a5,192(sp)
   1216c:	0ae12c23          	sw	a4,184(sp)
   12170:	00700693          	li	a3,7
   12174:	0ce6cae3          	blt	a3,a4,12a48 <_vfprintf_r+0x1068>
   12178:	08f14603          	lbu	a2,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
   1217c:	01088893          	addi	a7,a7,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1689

		/* prefix */
		if (sign)
   12180:	02060a63          	beqz	a2,121b4 <_vfprintf_r+0x7d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1690
			PRINT (&sign, 1);
   12184:	0b812703          	lw	a4,184(sp)
   12188:	08f10693          	addi	a3,sp,143
   1218c:	00d8b023          	sd	a3,0(a7)
   12190:	00178793          	addi	a5,a5,1
   12194:	00100693          	li	a3,1
   12198:	0017071b          	addiw	a4,a4,1
   1219c:	00d8b423          	sd	a3,8(a7)
   121a0:	0cf13023          	sd	a5,192(sp)
   121a4:	0ae12c23          	sw	a4,184(sp)
   121a8:	00700693          	li	a3,7
   121ac:	01088893          	addi	a7,a7,16
   121b0:	76e6c663          	blt	a3,a4,1291c <_vfprintf_r+0xf3c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1691
		if (flags & HEXPREFIX)
   121b4:	04012703          	lw	a4,64(sp)
   121b8:	02070a63          	beqz	a4,121ec <_vfprintf_r+0x80c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1692
			PRINT (ox, 2);
   121bc:	0b812703          	lw	a4,184(sp)
   121c0:	09010693          	addi	a3,sp,144
   121c4:	00d8b023          	sd	a3,0(a7)
   121c8:	00278793          	addi	a5,a5,2
   121cc:	00200693          	li	a3,2
   121d0:	0017071b          	addiw	a4,a4,1
   121d4:	00d8b423          	sd	a3,8(a7)
   121d8:	0cf13023          	sd	a5,192(sp)
   121dc:	0ae12c23          	sw	a4,184(sp)
   121e0:	00700693          	li	a3,7
   121e4:	01088893          	addi	a7,a7,16
   121e8:	74e6ca63          	blt	a3,a4,1293c <_vfprintf_r+0xf5c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1695

		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
   121ec:	04812683          	lw	a3,72(sp)
   121f0:	08000713          	li	a4,128
   121f4:	5ee68663          	beq	a3,a4,127e0 <_vfprintf_r+0xe00>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699
			PAD (width - realsz, zeroes);

		/* leading zeroes from decimal precision */
		PAD (dprec - size, zeroes);
   121f8:	02012703          	lw	a4,32(sp)
   121fc:	40e4043b          	subw	s0,s0,a4
   12200:	0c805063          	blez	s0,122c0 <_vfprintf_r+0x8e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 5)
   12204:	01000713          	li	a4,16
   12208:	4e875ce3          	ble	s0,a4,12f00 <_vfprintf_r+0x1520>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699
   1220c:	01000c93          	li	s9,16
   12210:	0b812703          	lw	a4,184(sp)
   12214:	00913823          	sd	s1,16(sp)
   12218:	00700813          	li	a6,7
   1221c:	000c8d93          	mv	s11,s9
   12220:	00c0006f          	j	1222c <_vfprintf_r+0x84c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 4)
   12224:	ff04041b          	addiw	s0,s0,-16
   12228:	048dda63          	ble	s0,s11,1227c <_vfprintf_r+0x89c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 6)
   1222c:	01078793          	addi	a5,a5,16
   12230:	0017071b          	addiw	a4,a4,1
   12234:	0098b023          	sd	s1,0(a7)
   12238:	0198b423          	sd	s9,8(a7)
   1223c:	0cf13023          	sd	a5,192(sp)
   12240:	0ae12c23          	sw	a4,184(sp)
   12244:	01088893          	addi	a7,a7,16
   12248:	fce85ee3          	ble	a4,a6,12224 <_vfprintf_r+0x844>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 1)
   1224c:	0b010613          	addi	a2,sp,176
   12250:	000a0593          	mv	a1,s4
   12254:	000b8513          	mv	a0,s7
   12258:	01013023          	sd	a6,0(sp)
   1225c:	4550a0ef          	jal	1ceb0 <__sprint_r>
   12260:	a80518e3          	bnez	a0,11cf0 <_vfprintf_r+0x310>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699
   12264:	ff04041b          	addiw	s0,s0,-16
   12268:	0c013783          	ld	a5,192(sp)
   1226c:	0b812703          	lw	a4,184(sp)
   12270:	000b0893          	mv	a7,s6
   12274:	00013803          	ld	a6,0(sp)
   12278:	fa8dcae3          	blt	s11,s0,1222c <_vfprintf_r+0x84c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 7)
   1227c:	01013683          	ld	a3,16(sp)
   12280:	008787b3          	add	a5,a5,s0
   12284:	0017071b          	addiw	a4,a4,1
   12288:	00d8b023          	sd	a3,0(a7)
   1228c:	0088b423          	sd	s0,8(a7)
   12290:	0cf13023          	sd	a5,192(sp)
   12294:	0ae12c23          	sw	a4,184(sp)
   12298:	00700693          	li	a3,7
   1229c:	01088893          	addi	a7,a7,16
   122a0:	02e6d063          	ble	a4,a3,122c0 <_vfprintf_r+0x8e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 8)
   122a4:	0b010613          	addi	a2,sp,176
   122a8:	000a0593          	mv	a1,s4
   122ac:	000b8513          	mv	a0,s7
   122b0:	4010a0ef          	jal	1ceb0 <__sprint_r>
   122b4:	a2051ee3          	bnez	a0,11cf0 <_vfprintf_r+0x310>
   122b8:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699
   122bc:	000b0893          	mv	a7,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1703

		/* the string or number proper */
#ifdef FLOATING_POINT
		if ((flags & FPT) == 0) {
   122c0:	100c7713          	andi	a4,s8,256
   122c4:	40071663          	bnez	a4,126d0 <_vfprintf_r+0xcf0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1704
			PRINT (cp, size);
   122c8:	02012703          	lw	a4,32(sp)
   122cc:	0b812683          	lw	a3,184(sp)
   122d0:	0128b023          	sd	s2,0(a7)
   122d4:	00e787b3          	add	a5,a5,a4
   122d8:	0016869b          	addiw	a3,a3,1
   122dc:	00e8b423          	sd	a4,8(a7)
   122e0:	0cf13023          	sd	a5,192(sp)
   122e4:	0ad12c23          	sw	a3,184(sp)
   122e8:	00700713          	li	a4,7
   122ec:	3cd74263          	blt	a4,a3,126b0 <_vfprintf_r+0xcd0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1761
					} else	/* 0.[0..] */
						/* __dtoa irregularity */
						PAD (ndig - 1, zeroes);
				} else	/* XeYYY */
					PRINT (cp, 1);
				PRINT (expstr, expsize);
   122f0:	01088893          	addi	a7,a7,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1768
		}
#else /* !FLOATING_POINT */
		PRINT (cp, size);
#endif
		/* left-adjusting padding (always blank) */
		if (flags & LADJUST)
   122f4:	004c7c13          	andi	s8,s8,4
   122f8:	0c0c0063          	beqz	s8,123b8 <_vfprintf_r+0x9d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769
			PAD (width - realsz, blanks);
   122fc:	01812703          	lw	a4,24(sp)
   12300:	00812683          	lw	a3,8(sp)
   12304:	40d7043b          	subw	s0,a4,a3
   12308:	0a805863          	blez	s0,123b8 <_vfprintf_r+0x9d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 5)
   1230c:	01000713          	li	a4,16
   12310:	748754e3          	ble	s0,a4,13258 <_vfprintf_r+0x1878>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769
   12314:	01000913          	li	s2,16
   12318:	0b812703          	lw	a4,184(sp)
   1231c:	05513823          	sd	s5,80(sp)
   12320:	00700c13          	li	s8,7
   12324:	00090d13          	mv	s10,s2
   12328:	00c0006f          	j	12334 <_vfprintf_r+0x954>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 4)
   1232c:	ff04041b          	addiw	s0,s0,-16
   12330:	048d5663          	ble	s0,s10,1237c <_vfprintf_r+0x99c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 6)
   12334:	01078793          	addi	a5,a5,16
   12338:	0017071b          	addiw	a4,a4,1
   1233c:	0158b023          	sd	s5,0(a7)
   12340:	0128b423          	sd	s2,8(a7)
   12344:	0cf13023          	sd	a5,192(sp)
   12348:	0ae12c23          	sw	a4,184(sp)
   1234c:	01088893          	addi	a7,a7,16
   12350:	fcec5ee3          	ble	a4,s8,1232c <_vfprintf_r+0x94c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 1)
   12354:	0b010613          	addi	a2,sp,176
   12358:	000a0593          	mv	a1,s4
   1235c:	000b8513          	mv	a0,s7
   12360:	3510a0ef          	jal	1ceb0 <__sprint_r>
   12364:	980516e3          	bnez	a0,11cf0 <_vfprintf_r+0x310>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769
   12368:	ff04041b          	addiw	s0,s0,-16
   1236c:	0c013783          	ld	a5,192(sp)
   12370:	0b812703          	lw	a4,184(sp)
   12374:	000b0893          	mv	a7,s6
   12378:	fa8d4ee3          	blt	s10,s0,12334 <_vfprintf_r+0x954>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 7)
   1237c:	05013683          	ld	a3,80(sp)
   12380:	008787b3          	add	a5,a5,s0
   12384:	0017071b          	addiw	a4,a4,1
   12388:	00d8b023          	sd	a3,0(a7)
   1238c:	0088b423          	sd	s0,8(a7)
   12390:	0cf13023          	sd	a5,192(sp)
   12394:	0ae12c23          	sw	a4,184(sp)
   12398:	00700693          	li	a3,7
   1239c:	00e6de63          	ble	a4,a3,123b8 <_vfprintf_r+0x9d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 8)
   123a0:	0b010613          	addi	a2,sp,176
   123a4:	000a0593          	mv	a1,s4
   123a8:	000b8513          	mv	a0,s7
   123ac:	3050a0ef          	jal	1ceb0 <__sprint_r>
   123b0:	940510e3          	bnez	a0,11cf0 <_vfprintf_r+0x310>
   123b4:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1772

		/* finally, adjust ret */
		ret += width > realsz ? width : realsz;
   123b8:	01812c83          	lw	s9,24(sp)
   123bc:	00812703          	lw	a4,8(sp)
   123c0:	00ecd463          	ble	a4,s9,123c8 <_vfprintf_r+0x9e8>
   123c4:	00070c93          	mv	s9,a4
   123c8:	01c12703          	lw	a4,28(sp)
   123cc:	0197073b          	addw	a4,a4,s9
   123d0:	00e12e23          	sw	a4,28(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1774

		FLUSH ();	/* copy out the I/O vectors */
   123d4:	52079863          	bnez	a5,12904 <_vfprintf_r+0xf24>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:925
                    else if (wc == '%')
                        break;
                    fmt += n;
		}
#else
                while (*fmt != '\0' && *fmt != '%')
   123d8:	0009c783          	lbu	a5,0(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1774
			PAD (width - realsz, blanks);

		/* finally, adjust ret */
		ret += width > realsz ? width : realsz;

		FLUSH ();	/* copy out the I/O vectors */
   123dc:	0a012c23          	sw	zero,184(sp)
   123e0:	000b0893          	mv	a7,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:925
                    else if (wc == '%')
                        break;
                    fmt += n;
		}
#else
                while (*fmt != '\0' && *fmt != '%')
   123e4:	f2079263          	bnez	a5,11b08 <_vfprintf_r+0x128>
   123e8:	00098413          	mv	s0,s3
   123ec:	f80ff06f          	j	11b6c <_vfprintf_r+0x18c>
   123f0:	00060463          	beqz	a2,123f8 <_vfprintf_r+0xa18>
   123f4:	22c0106f          	j	13620 <_vfprintf_r+0x1c40>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199
		case 'D':  /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'd':
		case 'i':
			_uquad = SARG ();
   123f8:	010c7793          	andi	a5,s8,16
   123fc:	12078e63          	beqz	a5,12538 <_vfprintf_r+0xb58>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199 (discriminator 1)
   12400:	02813703          	ld	a4,40(sp)
   12404:	00073783          	ld	a5,0(a4)
   12408:	00870713          	addi	a4,a4,8
   1240c:	02e13423          	sd	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1203 (discriminator 8)
#ifndef _NO_LONGLONG
			if ((quad_t)_uquad < 0)
#else
			if ((long) _uquad < 0)
   12410:	1407c0e3          	bltz	a5,12d50 <_vfprintf_r+0x1370>
   12414:	08f14603          	lbu	a2,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   12418:	bc044ee3          	bltz	s0,11ff4 <_vfprintf_r+0x614>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   1241c:	f7fc7c13          	andi	s8,s8,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   12420:	ae0798e3          	bnez	a5,11f10 <_vfprintf_r+0x530>
   12424:	6e041a63          	bnez	s0,12b18 <_vfprintf_r+0x1138>
   12428:	00000413          	li	s0,0
   1242c:	02012023          	sw	zero,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1571
			/*
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
   12430:	000b0913          	mv	s2,s6
   12434:	9a9ff06f          	j	11ddc <_vfprintf_r+0x3fc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1118
			if (*fmt == 'h') {
				fmt++;
				flags |= CHARINT;
			} else
#endif
				flags |= SHORTINT;
   12438:	040c6c13          	ori	s8,s8,64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1119
			goto rflag;
   1243c:	f60ff06f          	j	11b9c <_vfprintf_r+0x1bc>
   12440:	00060463          	beqz	a2,12448 <_vfprintf_r+0xa68>
   12444:	1d40106f          	j	13618 <_vfprintf_r+0x1c38>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1227
		case 'G':
# ifdef _NO_LONGDBL
			if (flags & LONGDBL) {
				_fpvalue = (double) GET_ARG (N, ap, _LONG_DOUBLE);
			} else {
				_fpvalue = GET_ARG (N, ap, double);
   12448:	02813783          	ld	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1236

			   If the output is infinite or NaN, leading
			   zeros are not permitted.  Otherwise, scanf
			   could not read what printf wrote.
			 */
			if (isinf (_fpvalue)) {
   1244c:	00100913          	li	s2,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1227
		case 'G':
# ifdef _NO_LONGDBL
			if (flags & LONGDBL) {
				_fpvalue = (double) GET_ARG (N, ap, _LONG_DOUBLE);
			} else {
				_fpvalue = GET_ARG (N, ap, double);
   12450:	0007b787          	fld	fa5,0(a5)
   12454:	00878793          	addi	a5,a5,8
   12458:	01113023          	sd	a7,0(sp)
   1245c:	04f13c27          	fsd	fa5,88(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1236

			   If the output is infinite or NaN, leading
			   zeros are not permitted.  Otherwise, scanf
			   could not read what printf wrote.
			 */
			if (isinf (_fpvalue)) {
   12460:	05813c83          	ld	s9,88(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1227
		case 'G':
# ifdef _NO_LONGDBL
			if (flags & LONGDBL) {
				_fpvalue = (double) GET_ARG (N, ap, _LONG_DOUBLE);
			} else {
				_fpvalue = GET_ARG (N, ap, double);
   12464:	02f13423          	sd	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1236

			   If the output is infinite or NaN, leading
			   zeros are not permitted.  Otherwise, scanf
			   could not read what printf wrote.
			 */
			if (isinf (_fpvalue)) {
   12468:	f20c8553          	fmv.d.x	fa0,s9
   1246c:	0e8070ef          	jal	19554 <__fpclassifyd>
   12470:	00013883          	ld	a7,0(sp)
   12474:	0f251ce3          	bne	a0,s2,12d6c <_vfprintf_r+0x138c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1237
				if (_fpvalue < 0)
   12478:	f20007d3          	fmv.d.x	fa5,zero
   1247c:	f20c8753          	fmv.d.x	fa4,s9
   12480:	a2f717d3          	flt.d	a5,fa4,fa5
   12484:	600792e3          	bnez	a5,13288 <_vfprintf_r+0x18a8>
   12488:	08f14603          	lbu	a2,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1239
					sign = '-';
				if (ch <= 'G') /* 'A', 'E', 'F', or 'G' */
   1248c:	04700793          	li	a5,71
   12490:	3da7d8e3          	ble	s10,a5,13060 <_vfprintf_r+0x1680>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1242
					cp = "INF";
				else
					cp = "inf";
   12494:	00022937          	lui	s2,0x22
   12498:	ba090913          	addi	s2,s2,-1120 # 21ba0 <zeroes.4123+0x6b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1245
				size = 3;
				flags &= ~ZEROPAD;
				break;
   1249c:	00300793          	li	a5,3
   124a0:	00f12423          	sw	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1244
				if (ch <= 'G') /* 'A', 'E', 'F', or 'G' */
					cp = "INF";
				else
					cp = "inf";
				size = 3;
				flags &= ~ZEROPAD;
   124a4:	f7fc7c13          	andi	s8,s8,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1243
					sign = '-';
				if (ch <= 'G') /* 'A', 'E', 'F', or 'G' */
					cp = "INF";
				else
					cp = "inf";
				size = 3;
   124a8:	02f12023          	sw	a5,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   124ac:	00000413          	li	s0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:948
		width = 0;
		prec = -1;
		sign = '\0';
#ifdef FLOATING_POINT
		lead = 0;
   124b0:	04012623          	sw	zero,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1245
					cp = "INF";
				else
					cp = "inf";
				size = 3;
				flags &= ~ZEROPAD;
				break;
   124b4:	941ff06f          	j	11df4 <_vfprintf_r+0x414>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1108
#endif /* !_NO_POS_ARGS */
			width = n;
			goto reswitch;
#ifdef FLOATING_POINT
		case 'L':
			flags |= LONGDBL;
   124b8:	008c6c13          	ori	s8,s8,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1109
			goto rflag;
   124bc:	ee0ff06f          	j	11b9c <_vfprintf_r+0x1bc>
   124c0:	00060463          	beqz	a2,124c8 <_vfprintf_r+0xae8>
   124c4:	1280106f          	j	135ec <_vfprintf_r+0x1c0c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1543
			goto nosign;
		case 'X':
			xdigs = "0123456789ABCDEF";
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
   124c8:	000227b7          	lui	a5,0x22
   124cc:	bd078793          	addi	a5,a5,-1072 # 21bd0 <zeroes.4123+0x6e0>
   124d0:	02f13c23          	sd	a5,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544
hex:			_uquad = UARG ();
   124d4:	010c7793          	andi	a5,s8,16
   124d8:	b40792e3          	bnez	a5,1201c <_vfprintf_r+0x63c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544 (discriminator 2)
   124dc:	040c7793          	andi	a5,s8,64
   124e0:	02813703          	ld	a4,40(sp)
   124e4:	1c0784e3          	beqz	a5,12eac <_vfprintf_r+0x14cc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544 (discriminator 4)
   124e8:	00075783          	lhu	a5,0(a4)
   124ec:	00870713          	addi	a4,a4,8
   124f0:	02e13423          	sd	a4,40(sp)
   124f4:	b39ff06f          	j	1202c <_vfprintf_r+0x64c>
   124f8:	00060463          	beqz	a2,12500 <_vfprintf_r+0xb20>
   124fc:	10c0106f          	j	13608 <_vfprintf_r+0x1c28>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1396
#ifndef _NO_LONGLONG
			if (flags & QUADINT)
				*GET_ARG (N, ap, quad_ptr_t) = ret;
			else
#endif
			if (flags & LONGINT)
   12500:	010c7793          	andi	a5,s8,16
   12504:	1a078ce3          	beqz	a5,12ebc <_vfprintf_r+0x14dc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1397
				*GET_ARG (N, ap, long_ptr_t) = ret;
   12508:	02813683          	ld	a3,40(sp)
   1250c:	01c12703          	lw	a4,28(sp)
   12510:	0006b783          	ld	a5,0(a3)
   12514:	00868693          	addi	a3,a3,8
   12518:	02d13423          	sd	a3,40(sp)
   1251c:	00e7b023          	sd	a4,0(a5)
   12520:	de0ff06f          	j	11b00 <_vfprintf_r+0x120>
   12524:	00060463          	beqz	a2,1252c <_vfprintf_r+0xb4c>
   12528:	0d40106f          	j	135fc <_vfprintf_r+0x1c1c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1195
				size = 1;
			}
			sign = '\0';
			break;
		case 'D':  /* extension */
			flags |= LONGINT;
   1252c:	010c6c13          	ori	s8,s8,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199
			/*FALLTHROUGH*/
		case 'd':
		case 'i':
			_uquad = SARG ();
   12530:	010c7793          	andi	a5,s8,16
   12534:	ec0796e3          	bnez	a5,12400 <_vfprintf_r+0xa20>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199 (discriminator 2)
   12538:	040c7793          	andi	a5,s8,64
   1253c:	02813703          	ld	a4,40(sp)
   12540:	1a0780e3          	beqz	a5,12ee0 <_vfprintf_r+0x1500>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199 (discriminator 4)
   12544:	00071783          	lh	a5,0(a4)
   12548:	00870713          	addi	a4,a4,8
   1254c:	02e13423          	sd	a4,40(sp)
   12550:	ec1ff06f          	j	12410 <_vfprintf_r+0xa30>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
   12554:	00022737          	lui	a4,0x22
   12558:	bd070713          	addi	a4,a4,-1072 # 21bd0 <zeroes.4123+0x6e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1255c:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
   12560:	02e13c23          	sd	a4,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1431
			flags |= HEXPREFIX;
			ox[0] = '0';
			ox[1] = ch = 'x';
   12564:	07800d13          	li	s10,120
   12568:	ee0ff06f          	j	11c48 <_vfprintf_r+0x268>
   1256c:	00060463          	beqz	a2,12574 <_vfprintf_r+0xb94>
   12570:	0c00106f          	j	13630 <_vfprintf_r+0x1c50>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1653

			size = buf + BUF - cp;
		skipsize:
			break;
		default:	/* "%?" prints ?, unless ? is NUL */
			if (ch == '\0')
   12574:	f60d0263          	beqz	s10,11cd8 <_vfprintf_r+0x2f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1660
			/* pretend it was %c with argument ch */
			cp = buf;
			*cp = ch;
			size = 1;
			sign = '\0';
			break;
   12578:	00100793          	li	a5,1
   1257c:	00f12423          	sw	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1657
		default:	/* "%?" prints ?, unless ? is NUL */
			if (ch == '\0')
				goto done;
			/* pretend it was %c with argument ch */
			cp = buf;
			*cp = ch;
   12580:	0da10423          	sb	s10,200(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1659
			size = 1;
			sign = '\0';
   12584:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1660
			break;
   12588:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1658
			if (ch == '\0')
				goto done;
			/* pretend it was %c with argument ch */
			cp = buf;
			*cp = ch;
			size = 1;
   1258c:	02f12023          	sw	a5,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   12590:	00000413          	li	s0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:948
		width = 0;
		prec = -1;
		sign = '\0';
#ifdef FLOATING_POINT
		lead = 0;
   12594:	04012623          	sw	zero,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1656
			break;
		default:	/* "%?" prints ?, unless ? is NUL */
			if (ch == '\0')
				goto done;
			/* pretend it was %c with argument ch */
			cp = buf;
   12598:	0c810913          	addi	s2,sp,200
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1660
			*cp = ch;
			size = 1;
			sign = '\0';
			break;
   1259c:	afdff06f          	j	12098 <_vfprintf_r+0x6b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1426
			 * of printable characters, in an implementation-
			 * defined manner.''
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
   125a0:	02e13423          	sd	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			base = HEX;
			xdigs = "0123456789abcdef";
   125a4:	00022737          	lui	a4,0x22
   125a8:	bd070713          	addi	a4,a4,-1072 # 21bd0 <zeroes.4123+0x6e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1429
			flags |= HEXPREFIX;
   125ac:	00068c13          	mv	s8,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
   125b0:	02e13c23          	sd	a4,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1431
			flags |= HEXPREFIX;
			ox[0] = '0';
			ox[1] = ch = 'x';
   125b4:	07800d13          	li	s10,120
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   125b8:	3a079a63          	bnez	a5,1296c <_vfprintf_r+0xf8c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   125bc:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1545
			xdigs = "0123456789ABCDEF";
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
hex:			_uquad = UARG ();
			base = HEX;
   125c0:	00200793          	li	a5,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1578
				/*
				 * Unsigned mod is hard, and unsigned mod
				 * by a constant is easier than that by
				 * a variable; hence this switch.
				 */
				switch (base) {
   125c4:	00100713          	li	a4,1
   125c8:	54e78863          	beq	a5,a4,12b18 <_vfprintf_r+0x1138>
   125cc:	00200713          	li	a4,2
   125d0:	e6e78a63          	beq	a5,a4,11c44 <_vfprintf_r+0x264>
   125d4:	00000793          	li	a5,0
   125d8:	fc4ff06f          	j	11d9c <_vfprintf_r+0x3bc>
   125dc:	0c013783          	ld	a5,192(sp)
   125e0:	ba1ff06f          	j	12180 <_vfprintf_r+0x7a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1750
					    PRINT (decimal_point, decp_len);
					PRINTANDPAD (cp, convbuf + ndig,
						     ndig - expt, zeroes);
				}
			} else {	/* 'a', 'A', 'e', or 'E' */
				if (ndig > 1 || flags & ALT) {
   125e4:	07012683          	lw	a3,112(sp)
   125e8:	00100713          	li	a4,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1751
					PRINT (cp, 1);
   125ec:	00178793          	addi	a5,a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1750
					    PRINT (decimal_point, decp_len);
					PRINTANDPAD (cp, convbuf + ndig,
						     ndig - expt, zeroes);
				}
			} else {	/* 'a', 'A', 'e', or 'E' */
				if (ndig > 1 || flags & ALT) {
   125f0:	6cd75663          	ble	a3,a4,12cbc <_vfprintf_r+0x12dc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1751
					PRINT (cp, 1);
   125f4:	0b812703          	lw	a4,184(sp)
   125f8:	00100693          	li	a3,1
   125fc:	00d8b423          	sd	a3,8(a7)
   12600:	0017071b          	addiw	a4,a4,1
   12604:	0128b023          	sd	s2,0(a7)
   12608:	0cf13023          	sd	a5,192(sp)
   1260c:	0ae12c23          	sw	a4,184(sp)
   12610:	00700693          	li	a3,7
   12614:	01088893          	addi	a7,a7,16
   12618:	6ce6ca63          	blt	a3,a4,12cec <_vfprintf_r+0x130c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1753
					cp++;
					PRINT (decimal_point, decp_len);
   1261c:	06813683          	ld	a3,104(sp)
   12620:	06013603          	ld	a2,96(sp)
   12624:	0017071b          	addiw	a4,a4,1
   12628:	00f687b3          	add	a5,a3,a5
   1262c:	00d8b423          	sd	a3,8(a7)
   12630:	00c8b023          	sd	a2,0(a7)
   12634:	0cf13023          	sd	a5,192(sp)
   12638:	0ae12c23          	sw	a4,184(sp)
   1263c:	00700693          	li	a3,7
   12640:	01088893          	addi	a7,a7,16
   12644:	6ee6c263          	blt	a3,a4,12d28 <_vfprintf_r+0x1348>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1754
					if (_fpvalue) {
   12648:	f20007d3          	fmv.d.x	fa5,zero
   1264c:	05813707          	fld	fa4,88(sp)
   12650:	a2f726d3          	feq.d	a3,fa4,fa5
   12654:	40069c63          	bnez	a3,12a6c <_vfprintf_r+0x108c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1755
						PRINT (cp, ndig - 1);
   12658:	07012683          	lw	a3,112(sp)
   1265c:	00190913          	addi	s2,s2,1
   12660:	0017071b          	addiw	a4,a4,1
   12664:	fff6869b          	addiw	a3,a3,-1
   12668:	00d787b3          	add	a5,a5,a3
   1266c:	0128b023          	sd	s2,0(a7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1760
					} else	/* 0.[0..] */
						/* __dtoa irregularity */
						PAD (ndig - 1, zeroes);
				} else	/* XeYYY */
					PRINT (cp, 1);
   12670:	00d8b423          	sd	a3,8(a7)
   12674:	0cf13023          	sd	a5,192(sp)
   12678:	0ae12c23          	sw	a4,184(sp)
   1267c:	00700693          	li	a3,7
   12680:	26e6c063          	blt	a3,a4,128e0 <_vfprintf_r+0xf00>
   12684:	01088893          	addi	a7,a7,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1761
				PRINT (expstr, expsize);
   12688:	07412683          	lw	a3,116(sp)
   1268c:	0a010613          	addi	a2,sp,160
   12690:	0017071b          	addiw	a4,a4,1
   12694:	00f687b3          	add	a5,a3,a5
   12698:	00c8b023          	sd	a2,0(a7)
   1269c:	00d8b423          	sd	a3,8(a7)
   126a0:	0cf13023          	sd	a5,192(sp)
   126a4:	0ae12c23          	sw	a4,184(sp)
   126a8:	00700693          	li	a3,7
   126ac:	c4e6d2e3          	ble	a4,a3,122f0 <_vfprintf_r+0x910>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1761 (discriminator 1)
   126b0:	0b010613          	addi	a2,sp,176
   126b4:	000a0593          	mv	a1,s4
   126b8:	000b8513          	mv	a0,s7
   126bc:	7f40a0ef          	jal	1ceb0 <__sprint_r>
   126c0:	e2051863          	bnez	a0,11cf0 <_vfprintf_r+0x310>
   126c4:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1761
   126c8:	000b0893          	mv	a7,s6
   126cc:	c29ff06f          	j	122f4 <_vfprintf_r+0x914>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1706
		/* the string or number proper */
#ifdef FLOATING_POINT
		if ((flags & FPT) == 0) {
			PRINT (cp, size);
		} else {	/* glue together f_p fragments */
			if (ch >= 'f') {	/* 'f' or 'g' */
   126d0:	06500713          	li	a4,101
   126d4:	f1a758e3          	ble	s10,a4,125e4 <_vfprintf_r+0xc04>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1707
				if (_fpvalue == 0) {
   126d8:	f20007d3          	fmv.d.x	fa5,zero
   126dc:	05813707          	fld	fa4,88(sp)
   126e0:	a2f72753          	feq.d	a4,fa4,fa5
   126e4:	28070863          	beqz	a4,12974 <_vfprintf_r+0xf94>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1709
					/* kludge for __dtoa irregularity */
					PRINT ("0", 1);
   126e8:	0b812703          	lw	a4,184(sp)
   126ec:	000226b7          	lui	a3,0x22
   126f0:	bf068693          	addi	a3,a3,-1040 # 21bf0 <zeroes.4123+0x700>
   126f4:	00d8b023          	sd	a3,0(a7)
   126f8:	00178793          	addi	a5,a5,1
   126fc:	00100693          	li	a3,1
   12700:	0017071b          	addiw	a4,a4,1
   12704:	00d8b423          	sd	a3,8(a7)
   12708:	0cf13023          	sd	a5,192(sp)
   1270c:	0ae12c23          	sw	a4,184(sp)
   12710:	00700693          	li	a3,7
   12714:	01088893          	addi	a7,a7,16
   12718:	7ee6ca63          	blt	a3,a4,12f0c <_vfprintf_r+0x152c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1710
					if (expt < ndig || flags & ALT) {
   1271c:	09812703          	lw	a4,152(sp)
   12720:	07012683          	lw	a3,112(sp)
   12724:	00d74663          	blt	a4,a3,12730 <_vfprintf_r+0xd50>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1710 (discriminator 1)
   12728:	001c7713          	andi	a4,s8,1
   1272c:	bc0704e3          	beqz	a4,122f4 <_vfprintf_r+0x914>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1711
						PRINT (decimal_point, decp_len);
   12730:	06013703          	ld	a4,96(sp)
   12734:	06813683          	ld	a3,104(sp)
   12738:	01088893          	addi	a7,a7,16
   1273c:	fee8b823          	sd	a4,-16(a7)
   12740:	0b812703          	lw	a4,184(sp)
   12744:	00d787b3          	add	a5,a5,a3
   12748:	fed8bc23          	sd	a3,-8(a7)
   1274c:	0017071b          	addiw	a4,a4,1
   12750:	0cf13023          	sd	a5,192(sp)
   12754:	0ae12c23          	sw	a4,184(sp)
   12758:	00700693          	li	a3,7
   1275c:	1ce6c8e3          	blt	a3,a4,1312c <_vfprintf_r+0x174c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1712
						PAD (ndig - 1, zeroes);
   12760:	07012703          	lw	a4,112(sp)
   12764:	fff7041b          	addiw	s0,a4,-1
   12768:	b88056e3          	blez	s0,122f4 <_vfprintf_r+0x914>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1712 (discriminator 5)
   1276c:	01000713          	li	a4,16
   12770:	36875c63          	ble	s0,a4,12ae8 <_vfprintf_r+0x1108>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1712
   12774:	01000913          	li	s2,16
   12778:	0b812703          	lw	a4,184(sp)
   1277c:	00913823          	sd	s1,16(sp)
   12780:	00700d13          	li	s10,7
   12784:	00090693          	mv	a3,s2
   12788:	00c0006f          	j	12794 <_vfprintf_r+0xdb4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1712 (discriminator 4)
   1278c:	ff04041b          	addiw	s0,s0,-16
   12790:	3686d063          	ble	s0,a3,12af0 <_vfprintf_r+0x1110>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1712 (discriminator 6)
   12794:	01078793          	addi	a5,a5,16
   12798:	0017071b          	addiw	a4,a4,1
   1279c:	0098b023          	sd	s1,0(a7)
   127a0:	0128b423          	sd	s2,8(a7)
   127a4:	0cf13023          	sd	a5,192(sp)
   127a8:	0ae12c23          	sw	a4,184(sp)
   127ac:	01088893          	addi	a7,a7,16
   127b0:	fced5ee3          	ble	a4,s10,1278c <_vfprintf_r+0xdac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1712 (discriminator 1)
   127b4:	0b010613          	addi	a2,sp,176
   127b8:	000a0593          	mv	a1,s4
   127bc:	000b8513          	mv	a0,s7
   127c0:	00d13023          	sd	a3,0(sp)
   127c4:	6ec0a0ef          	jal	1ceb0 <__sprint_r>
   127c8:	d2051463          	bnez	a0,11cf0 <_vfprintf_r+0x310>
   127cc:	0c013783          	ld	a5,192(sp)
   127d0:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1712
   127d4:	000b0893          	mv	a7,s6
   127d8:	00013683          	ld	a3,0(sp)
   127dc:	fb1ff06f          	j	1278c <_vfprintf_r+0xdac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
		if (flags & HEXPREFIX)
			PRINT (ox, 2);

		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
			PAD (width - realsz, zeroes);
   127e0:	01812703          	lw	a4,24(sp)
   127e4:	00812683          	lw	a3,8(sp)
   127e8:	40d70cbb          	subw	s9,a4,a3
   127ec:	a19056e3          	blez	s9,121f8 <_vfprintf_r+0x818>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 5)
   127f0:	01000713          	li	a4,16
   127f4:	2f975ee3          	ble	s9,a4,132f0 <_vfprintf_r+0x1910>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
   127f8:	01000813          	li	a6,16
   127fc:	0b812703          	lw	a4,184(sp)
   12800:	00913823          	sd	s1,16(sp)
   12804:	00700313          	li	t1,7
   12808:	00080d93          	mv	s11,a6
   1280c:	00c0006f          	j	12818 <_vfprintf_r+0xe38>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 4)
   12810:	ff0c8c9b          	addiw	s9,s9,-16
   12814:	059dde63          	ble	s9,s11,12870 <_vfprintf_r+0xe90>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 6)
   12818:	01078793          	addi	a5,a5,16
   1281c:	0017071b          	addiw	a4,a4,1
   12820:	0098b023          	sd	s1,0(a7)
   12824:	0108b423          	sd	a6,8(a7)
   12828:	0cf13023          	sd	a5,192(sp)
   1282c:	0ae12c23          	sw	a4,184(sp)
   12830:	01088893          	addi	a7,a7,16
   12834:	fce35ee3          	ble	a4,t1,12810 <_vfprintf_r+0xe30>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 1)
   12838:	0b010613          	addi	a2,sp,176
   1283c:	000a0593          	mv	a1,s4
   12840:	000b8513          	mv	a0,s7
   12844:	04613023          	sd	t1,64(sp)
   12848:	01013023          	sd	a6,0(sp)
   1284c:	6640a0ef          	jal	1ceb0 <__sprint_r>
   12850:	ca051063          	bnez	a0,11cf0 <_vfprintf_r+0x310>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
   12854:	ff0c8c9b          	addiw	s9,s9,-16
   12858:	0c013783          	ld	a5,192(sp)
   1285c:	0b812703          	lw	a4,184(sp)
   12860:	000b0893          	mv	a7,s6
   12864:	04013303          	ld	t1,64(sp)
   12868:	00013803          	ld	a6,0(sp)
   1286c:	fb9dc6e3          	blt	s11,s9,12818 <_vfprintf_r+0xe38>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 7)
   12870:	01013603          	ld	a2,16(sp)
   12874:	019787b3          	add	a5,a5,s9
   12878:	0017071b          	addiw	a4,a4,1
   1287c:	00c8b023          	sd	a2,0(a7)
   12880:	0198b423          	sd	s9,8(a7)
   12884:	0cf13023          	sd	a5,192(sp)
   12888:	0ae12c23          	sw	a4,184(sp)
   1288c:	00700693          	li	a3,7
   12890:	01088893          	addi	a7,a7,16
   12894:	96e6d2e3          	ble	a4,a3,121f8 <_vfprintf_r+0x818>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 8)
   12898:	0b010613          	addi	a2,sp,176
   1289c:	000a0593          	mv	a1,s4
   128a0:	000b8513          	mv	a0,s7
   128a4:	60c0a0ef          	jal	1ceb0 <__sprint_r>
   128a8:	c4051463          	bnez	a0,11cf0 <_vfprintf_r+0x310>
   128ac:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
   128b0:	000b0893          	mv	a7,s6
   128b4:	945ff06f          	j	121f8 <_vfprintf_r+0x818>
   128b8:	00913823          	sd	s1,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1758 (discriminator 7)
					PRINT (decimal_point, decp_len);
					if (_fpvalue) {
						PRINT (cp, ndig - 1);
					} else	/* 0.[0..] */
						/* __dtoa irregularity */
						PAD (ndig - 1, zeroes);
   128bc:	01013683          	ld	a3,16(sp)
   128c0:	008787b3          	add	a5,a5,s0
   128c4:	0017071b          	addiw	a4,a4,1
   128c8:	00d8b023          	sd	a3,0(a7)
   128cc:	0088b423          	sd	s0,8(a7)
   128d0:	0cf13023          	sd	a5,192(sp)
   128d4:	0ae12c23          	sw	a4,184(sp)
   128d8:	00700693          	li	a3,7
   128dc:	dae6d4e3          	ble	a4,a3,12684 <_vfprintf_r+0xca4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1760 (discriminator 1)
				} else	/* XeYYY */
					PRINT (cp, 1);
   128e0:	0b010613          	addi	a2,sp,176
   128e4:	000a0593          	mv	a1,s4
   128e8:	000b8513          	mv	a0,s7
   128ec:	5c40a0ef          	jal	1ceb0 <__sprint_r>
   128f0:	c0051063          	bnez	a0,11cf0 <_vfprintf_r+0x310>
   128f4:	0c013783          	ld	a5,192(sp)
   128f8:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1760
   128fc:	000b0893          	mv	a7,s6
   12900:	d89ff06f          	j	12688 <_vfprintf_r+0xca8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1774 (discriminator 1)
			PAD (width - realsz, blanks);

		/* finally, adjust ret */
		ret += width > realsz ? width : realsz;

		FLUSH ();	/* copy out the I/O vectors */
   12904:	0b010613          	addi	a2,sp,176
   12908:	000a0593          	mv	a1,s4
   1290c:	000b8513          	mv	a0,s7
   12910:	5a00a0ef          	jal	1ceb0 <__sprint_r>
   12914:	ac0502e3          	beqz	a0,123d8 <_vfprintf_r+0x9f8>
   12918:	bd8ff06f          	j	11cf0 <_vfprintf_r+0x310>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1690
		if ((flags & (LADJUST|ZEROPAD)) == 0)
			PAD (width - realsz, blanks);

		/* prefix */
		if (sign)
			PRINT (&sign, 1);
   1291c:	0b010613          	addi	a2,sp,176
   12920:	000a0593          	mv	a1,s4
   12924:	000b8513          	mv	a0,s7
   12928:	5880a0ef          	jal	1ceb0 <__sprint_r>
   1292c:	bc051263          	bnez	a0,11cf0 <_vfprintf_r+0x310>
   12930:	0c013783          	ld	a5,192(sp)
   12934:	000b0893          	mv	a7,s6
   12938:	87dff06f          	j	121b4 <_vfprintf_r+0x7d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1692 (discriminator 1)
		if (flags & HEXPREFIX)
			PRINT (ox, 2);
   1293c:	0b010613          	addi	a2,sp,176
   12940:	000a0593          	mv	a1,s4
   12944:	000b8513          	mv	a0,s7
   12948:	5680a0ef          	jal	1ceb0 <__sprint_r>
   1294c:	ba051263          	bnez	a0,11cf0 <_vfprintf_r+0x310>
   12950:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1692
   12954:	000b0893          	mv	a7,s6
   12958:	895ff06f          	j	121ec <_vfprintf_r+0x80c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1295c:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   12960:	c4044ce3          	bltz	s0,125b8 <_vfprintf_r+0xbd8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   12964:	f7fc7c13          	andi	s8,s8,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   12968:	ac078a63          	beqz	a5,11c3c <_vfprintf_r+0x25c>
   1296c:	00000613          	li	a2,0
   12970:	ad8ff06f          	j	11c48 <_vfprintf_r+0x268>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1714
					PRINT ("0", 1);
					if (expt < ndig || flags & ALT) {
						PRINT (decimal_point, decp_len);
						PAD (ndig - 1, zeroes);
					}
				} else if (expt <= 0) {
   12974:	09812403          	lw	s0,152(sp)
   12978:	5a805c63          	blez	s0,12f30 <_vfprintf_r+0x1550>
   1297c:	04c12703          	lw	a4,76(sp)
   12980:	07012683          	lw	a3,112(sp)
   12984:	00070413          	mv	s0,a4
   12988:	00e6d463          	ble	a4,a3,12990 <_vfprintf_r+0xfb0>
   1298c:	00068413          	mv	s0,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723
						PAD (-expt, zeroes);
						PRINT (cp, ndig);
					}
				} else {
					char *convbuf = cp;
					PRINTANDPAD(cp, convbuf + ndig,
   12990:	02805663          	blez	s0,129bc <_vfprintf_r+0xfdc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723 (discriminator 4)
   12994:	0b812703          	lw	a4,184(sp)
   12998:	008787b3          	add	a5,a5,s0
   1299c:	0128b023          	sd	s2,0(a7)
   129a0:	0017071b          	addiw	a4,a4,1
   129a4:	0088b423          	sd	s0,8(a7)
   129a8:	0cf13023          	sd	a5,192(sp)
   129ac:	0ae12c23          	sw	a4,184(sp)
   129b0:	00700693          	li	a3,7
   129b4:	01088893          	addi	a7,a7,16
   129b8:	6ae6ca63          	blt	a3,a4,1306c <_vfprintf_r+0x168c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723 (discriminator 9)
   129bc:	020448e3          	bltz	s0,131ec <_vfprintf_r+0x180c>
   129c0:	04c12703          	lw	a4,76(sp)
   129c4:	4087043b          	subw	s0,a4,s0
   129c8:	1a805c63          	blez	s0,12b80 <_vfprintf_r+0x11a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723 (discriminator 14)
   129cc:	01000713          	li	a4,16
   129d0:	16875263          	ble	s0,a4,12b34 <_vfprintf_r+0x1154>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723
   129d4:	01000d13          	li	s10,16
   129d8:	0b812703          	lw	a4,184(sp)
   129dc:	00913823          	sd	s1,16(sp)
   129e0:	00700693          	li	a3,7
   129e4:	000d0813          	mv	a6,s10
   129e8:	00c0006f          	j	129f4 <_vfprintf_r+0x1014>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723 (discriminator 13)
   129ec:	ff04041b          	addiw	s0,s0,-16
   129f0:	14885663          	ble	s0,a6,12b3c <_vfprintf_r+0x115c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723 (discriminator 15)
   129f4:	01078793          	addi	a5,a5,16
   129f8:	0017071b          	addiw	a4,a4,1
   129fc:	0098b023          	sd	s1,0(a7)
   12a00:	01a8b423          	sd	s10,8(a7)
   12a04:	0cf13023          	sd	a5,192(sp)
   12a08:	0ae12c23          	sw	a4,184(sp)
   12a0c:	01088893          	addi	a7,a7,16
   12a10:	fce6dee3          	ble	a4,a3,129ec <_vfprintf_r+0x100c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723 (discriminator 10)
   12a14:	0b010613          	addi	a2,sp,176
   12a18:	000a0593          	mv	a1,s4
   12a1c:	000b8513          	mv	a0,s7
   12a20:	03013023          	sd	a6,32(sp)
   12a24:	00d13023          	sd	a3,0(sp)
   12a28:	4880a0ef          	jal	1ceb0 <__sprint_r>
   12a2c:	ac051263          	bnez	a0,11cf0 <_vfprintf_r+0x310>
   12a30:	0c013783          	ld	a5,192(sp)
   12a34:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723
   12a38:	000b0893          	mv	a7,s6
   12a3c:	02013803          	ld	a6,32(sp)
   12a40:	00013683          	ld	a3,0(sp)
   12a44:	fa9ff06f          	j	129ec <_vfprintf_r+0x100c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 8)
		if (flags & HEXPREFIX)
			realsz+= 2;

		/* right-adjusting blank padding */
		if ((flags & (LADJUST|ZEROPAD)) == 0)
			PAD (width - realsz, blanks);
   12a48:	0b010613          	addi	a2,sp,176
   12a4c:	000a0593          	mv	a1,s4
   12a50:	000b8513          	mv	a0,s7
   12a54:	45c0a0ef          	jal	1ceb0 <__sprint_r>
   12a58:	a8051c63          	bnez	a0,11cf0 <_vfprintf_r+0x310>
   12a5c:	08f14603          	lbu	a2,143(sp)
   12a60:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
   12a64:	000b0893          	mv	a7,s6
   12a68:	f18ff06f          	j	12180 <_vfprintf_r+0x7a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1758
					PRINT (decimal_point, decp_len);
					if (_fpvalue) {
						PRINT (cp, ndig - 1);
					} else	/* 0.[0..] */
						/* __dtoa irregularity */
						PAD (ndig - 1, zeroes);
   12a6c:	07012683          	lw	a3,112(sp)
   12a70:	fff6841b          	addiw	s0,a3,-1
   12a74:	c0805ae3          	blez	s0,12688 <_vfprintf_r+0xca8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1758 (discriminator 5)
   12a78:	01000693          	li	a3,16
   12a7c:	e286dee3          	ble	s0,a3,128b8 <_vfprintf_r+0xed8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1758 (discriminator 6)
   12a80:	01000913          	li	s2,16
   12a84:	00913823          	sd	s1,16(sp)
   12a88:	00700d13          	li	s10,7
   12a8c:	00090693          	mv	a3,s2
   12a90:	00c0006f          	j	12a9c <_vfprintf_r+0x10bc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1758 (discriminator 4)
   12a94:	ff04041b          	addiw	s0,s0,-16
   12a98:	e286d2e3          	ble	s0,a3,128bc <_vfprintf_r+0xedc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1758 (discriminator 6)
   12a9c:	01078793          	addi	a5,a5,16
   12aa0:	0017071b          	addiw	a4,a4,1
   12aa4:	0098b023          	sd	s1,0(a7)
   12aa8:	0128b423          	sd	s2,8(a7)
   12aac:	0cf13023          	sd	a5,192(sp)
   12ab0:	0ae12c23          	sw	a4,184(sp)
   12ab4:	01088893          	addi	a7,a7,16
   12ab8:	fced5ee3          	ble	a4,s10,12a94 <_vfprintf_r+0x10b4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1758 (discriminator 1)
   12abc:	0b010613          	addi	a2,sp,176
   12ac0:	000a0593          	mv	a1,s4
   12ac4:	000b8513          	mv	a0,s7
   12ac8:	00d13023          	sd	a3,0(sp)
   12acc:	3e40a0ef          	jal	1ceb0 <__sprint_r>
   12ad0:	a2051063          	bnez	a0,11cf0 <_vfprintf_r+0x310>
   12ad4:	0c013783          	ld	a5,192(sp)
   12ad8:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1758
   12adc:	000b0893          	mv	a7,s6
   12ae0:	00013683          	ld	a3,0(sp)
   12ae4:	fb1ff06f          	j	12a94 <_vfprintf_r+0x10b4>
   12ae8:	0b812703          	lw	a4,184(sp)
   12aec:	00913823          	sd	s1,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746 (discriminator 16)
						cp = convbuf + ndig;
					}
#endif
					if (expt < ndig || flags & ALT)
					    PRINT (decimal_point, decp_len);
					PRINTANDPAD (cp, convbuf + ndig,
   12af0:	01013683          	ld	a3,16(sp)
   12af4:	008787b3          	add	a5,a5,s0
   12af8:	0088b423          	sd	s0,8(a7)
   12afc:	00d8b023          	sd	a3,0(a7)
   12b00:	0017071b          	addiw	a4,a4,1
   12b04:	0cf13023          	sd	a5,192(sp)
   12b08:	0ae12c23          	sw	a4,184(sp)
   12b0c:	00700693          	li	a3,7
   12b10:	fee6d063          	ble	a4,a3,122f0 <_vfprintf_r+0x910>
   12b14:	b9dff06f          	j	126b0 <_vfprintf_r+0xcd0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   12b18:	00000793          	li	a5,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1592
					break;

				case DEC:
					/* many numbers are 1 digit */
					if (_uquad < 10) {
						*--cp = to_char(_uquad);
   12b1c:	0307879b          	addiw	a5,a5,48
   12b20:	0ef107a3          	sb	a5,239(sp)
   12b24:	07813783          	ld	a5,120(sp)
   12b28:	0ef10913          	addi	s2,sp,239
   12b2c:	02f12023          	sw	a5,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1593
						break;
   12b30:	aacff06f          	j	11ddc <_vfprintf_r+0x3fc>
   12b34:	0b812703          	lw	a4,184(sp)
   12b38:	00913823          	sd	s1,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723 (discriminator 16)
						PAD (-expt, zeroes);
						PRINT (cp, ndig);
					}
				} else {
					char *convbuf = cp;
					PRINTANDPAD(cp, convbuf + ndig,
   12b3c:	01013683          	ld	a3,16(sp)
   12b40:	008787b3          	add	a5,a5,s0
   12b44:	0017071b          	addiw	a4,a4,1
   12b48:	00d8b023          	sd	a3,0(a7)
   12b4c:	0088b423          	sd	s0,8(a7)
   12b50:	0cf13023          	sd	a5,192(sp)
   12b54:	0ae12c23          	sw	a4,184(sp)
   12b58:	00700693          	li	a3,7
   12b5c:	01088893          	addi	a7,a7,16
   12b60:	02e6d063          	ble	a4,a3,12b80 <_vfprintf_r+0x11a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723 (discriminator 17)
   12b64:	0b010613          	addi	a2,sp,176
   12b68:	000a0593          	mv	a1,s4
   12b6c:	000b8513          	mv	a0,s7
   12b70:	3400a0ef          	jal	1ceb0 <__sprint_r>
   12b74:	96051e63          	bnez	a0,11cf0 <_vfprintf_r+0x310>
   12b78:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723
   12b7c:	000b0893          	mv	a7,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1725
						    lead, zeroes);
					cp += lead;
   12b80:	04c12d03          	lw	s10,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1744
					    }
					    if (cp > convbuf + ndig)
						cp = convbuf + ndig;
					}
#endif
					if (expt < ndig || flags & ALT)
   12b84:	09812703          	lw	a4,152(sp)
   12b88:	07012683          	lw	a3,112(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1725
					}
				} else {
					char *convbuf = cp;
					PRINTANDPAD(cp, convbuf + ndig,
						    lead, zeroes);
					cp += lead;
   12b8c:	01a90d33          	add	s10,s2,s10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1744
					    }
					    if (cp > convbuf + ndig)
						cp = convbuf + ndig;
					}
#endif
					if (expt < ndig || flags & ALT)
   12b90:	0cd74a63          	blt	a4,a3,12c64 <_vfprintf_r+0x1284>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1744 (discriminator 1)
   12b94:	001c7693          	andi	a3,s8,1
   12b98:	0c069663          	bnez	a3,12c64 <_vfprintf_r+0x1284>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746
					    PRINT (decimal_point, decp_len);
					PRINTANDPAD (cp, convbuf + ndig,
   12b9c:	07012683          	lw	a3,112(sp)
   12ba0:	00d90433          	add	s0,s2,a3
   12ba4:	41a40433          	sub	s0,s0,s10
   12ba8:	40e6873b          	subw	a4,a3,a4
   12bac:	0004041b          	sext.w	s0,s0
   12bb0:	00875463          	ble	s0,a4,12bb8 <_vfprintf_r+0x11d8>
   12bb4:	00070413          	mv	s0,a4
   12bb8:	02805663          	blez	s0,12be4 <_vfprintf_r+0x1204>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746 (discriminator 4)
   12bbc:	0b812683          	lw	a3,184(sp)
   12bc0:	008787b3          	add	a5,a5,s0
   12bc4:	01a8b023          	sd	s10,0(a7)
   12bc8:	0016869b          	addiw	a3,a3,1
   12bcc:	0088b423          	sd	s0,8(a7)
   12bd0:	0cf13023          	sd	a5,192(sp)
   12bd4:	0ad12c23          	sw	a3,184(sp)
   12bd8:	00700613          	li	a2,7
   12bdc:	01088893          	addi	a7,a7,16
   12be0:	4cd64263          	blt	a2,a3,130a4 <_vfprintf_r+0x16c4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746 (discriminator 9)
   12be4:	60044863          	bltz	s0,131f4 <_vfprintf_r+0x1814>
   12be8:	4087043b          	subw	s0,a4,s0
   12bec:	f0805463          	blez	s0,122f4 <_vfprintf_r+0x914>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746 (discriminator 14)
   12bf0:	01000713          	li	a4,16
   12bf4:	ee875ae3          	ble	s0,a4,12ae8 <_vfprintf_r+0x1108>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746
   12bf8:	01000913          	li	s2,16
   12bfc:	0b812703          	lw	a4,184(sp)
   12c00:	00913823          	sd	s1,16(sp)
   12c04:	00700d13          	li	s10,7
   12c08:	00090693          	mv	a3,s2
   12c0c:	00c0006f          	j	12c18 <_vfprintf_r+0x1238>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746 (discriminator 13)
   12c10:	ff04041b          	addiw	s0,s0,-16
   12c14:	ec86dee3          	ble	s0,a3,12af0 <_vfprintf_r+0x1110>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746 (discriminator 15)
   12c18:	01078793          	addi	a5,a5,16
   12c1c:	0017071b          	addiw	a4,a4,1
   12c20:	0098b023          	sd	s1,0(a7)
   12c24:	0128b423          	sd	s2,8(a7)
   12c28:	0cf13023          	sd	a5,192(sp)
   12c2c:	0ae12c23          	sw	a4,184(sp)
   12c30:	01088893          	addi	a7,a7,16
   12c34:	fced5ee3          	ble	a4,s10,12c10 <_vfprintf_r+0x1230>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746 (discriminator 10)
   12c38:	0b010613          	addi	a2,sp,176
   12c3c:	000a0593          	mv	a1,s4
   12c40:	000b8513          	mv	a0,s7
   12c44:	00d13023          	sd	a3,0(sp)
   12c48:	2680a0ef          	jal	1ceb0 <__sprint_r>
   12c4c:	8a051263          	bnez	a0,11cf0 <_vfprintf_r+0x310>
   12c50:	0c013783          	ld	a5,192(sp)
   12c54:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746
   12c58:	000b0893          	mv	a7,s6
   12c5c:	00013683          	ld	a3,0(sp)
   12c60:	fb1ff06f          	j	12c10 <_vfprintf_r+0x1230>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1745
					    if (cp > convbuf + ndig)
						cp = convbuf + ndig;
					}
#endif
					if (expt < ndig || flags & ALT)
					    PRINT (decimal_point, decp_len);
   12c64:	06013683          	ld	a3,96(sp)
   12c68:	06813603          	ld	a2,104(sp)
   12c6c:	01088893          	addi	a7,a7,16
   12c70:	fed8b823          	sd	a3,-16(a7)
   12c74:	0b812683          	lw	a3,184(sp)
   12c78:	00c787b3          	add	a5,a5,a2
   12c7c:	fec8bc23          	sd	a2,-8(a7)
   12c80:	0016869b          	addiw	a3,a3,1
   12c84:	0cf13023          	sd	a5,192(sp)
   12c88:	0ad12c23          	sw	a3,184(sp)
   12c8c:	00700613          	li	a2,7
   12c90:	f0d656e3          	ble	a3,a2,12b9c <_vfprintf_r+0x11bc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1745 (discriminator 1)
   12c94:	0b010613          	addi	a2,sp,176
   12c98:	000a0593          	mv	a1,s4
   12c9c:	000b8513          	mv	a0,s7
   12ca0:	2100a0ef          	jal	1ceb0 <__sprint_r>
   12ca4:	00050463          	beqz	a0,12cac <_vfprintf_r+0x12cc>
   12ca8:	848ff06f          	j	11cf0 <_vfprintf_r+0x310>
   12cac:	09812703          	lw	a4,152(sp)
   12cb0:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1745
   12cb4:	000b0893          	mv	a7,s6
   12cb8:	ee5ff06f          	j	12b9c <_vfprintf_r+0x11bc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1750 (discriminator 1)
					PRINTANDPAD (cp, convbuf + ndig,
						     ndig - expt, zeroes);
				}
			} else {	/* 'a', 'A', 'e', or 'E' */
				if (ndig > 1 || flags & ALT) {
   12cbc:	00ec7733          	and	a4,s8,a4
   12cc0:	92071ae3          	bnez	a4,125f4 <_vfprintf_r+0xc14>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1760
						PRINT (cp, ndig - 1);
					} else	/* 0.[0..] */
						/* __dtoa irregularity */
						PAD (ndig - 1, zeroes);
				} else	/* XeYYY */
					PRINT (cp, 1);
   12cc4:	0b812703          	lw	a4,184(sp)
   12cc8:	0128b023          	sd	s2,0(a7)
   12ccc:	00100693          	li	a3,1
   12cd0:	0017071b          	addiw	a4,a4,1
   12cd4:	99dff06f          	j	12670 <_vfprintf_r+0xc90>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536 (discriminator 5)
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   12cd8:	02813783          	ld	a5,40(sp)
   12cdc:	00878713          	addi	a4,a5,8
   12ce0:	0007e783          	lwu	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   12ce4:	a0045e63          	bgez	s0,11f00 <_vfprintf_r+0x520>
   12ce8:	b04ff06f          	j	11fec <_vfprintf_r+0x60c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1751 (discriminator 1)
					PRINTANDPAD (cp, convbuf + ndig,
						     ndig - expt, zeroes);
				}
			} else {	/* 'a', 'A', 'e', or 'E' */
				if (ndig > 1 || flags & ALT) {
					PRINT (cp, 1);
   12cec:	0b010613          	addi	a2,sp,176
   12cf0:	000a0593          	mv	a1,s4
   12cf4:	000b8513          	mv	a0,s7
   12cf8:	1b80a0ef          	jal	1ceb0 <__sprint_r>
   12cfc:	00050463          	beqz	a0,12d04 <_vfprintf_r+0x1324>
   12d00:	ff1fe06f          	j	11cf0 <_vfprintf_r+0x310>
   12d04:	0c013783          	ld	a5,192(sp)
   12d08:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1751
   12d0c:	000b0893          	mv	a7,s6
   12d10:	90dff06f          	j	1261c <_vfprintf_r+0xc3c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411 (discriminator 5)
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   12d14:	02813783          	ld	a5,40(sp)
   12d18:	00878713          	addi	a4,a5,8
   12d1c:	0007e783          	lwu	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   12d20:	86045063          	bgez	s0,11d80 <_vfprintf_r+0x3a0>
   12d24:	a84ff06f          	j	11fa8 <_vfprintf_r+0x5c8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1753 (discriminator 1)
				}
			} else {	/* 'a', 'A', 'e', or 'E' */
				if (ndig > 1 || flags & ALT) {
					PRINT (cp, 1);
					cp++;
					PRINT (decimal_point, decp_len);
   12d28:	0b010613          	addi	a2,sp,176
   12d2c:	000a0593          	mv	a1,s4
   12d30:	000b8513          	mv	a0,s7
   12d34:	17c0a0ef          	jal	1ceb0 <__sprint_r>
   12d38:	00050463          	beqz	a0,12d40 <_vfprintf_r+0x1360>
   12d3c:	fb5fe06f          	j	11cf0 <_vfprintf_r+0x310>
   12d40:	0c013783          	ld	a5,192(sp)
   12d44:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1753
   12d48:	000b0893          	mv	a7,s6
   12d4c:	8fdff06f          	j	12648 <_vfprintf_r+0xc68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1208
			if ((long) _uquad < 0)
#endif
			{

				_uquad = -_uquad;
				sign = '-';
   12d50:	02d00713          	li	a4,45
   12d54:	08e107a3          	sb	a4,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1207
#else
			if ((long) _uquad < 0)
#endif
			{

				_uquad = -_uquad;
   12d58:	40f007b3          	neg	a5,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   12d5c:	4a044063          	bltz	s0,131fc <_vfprintf_r+0x181c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   12d60:	f7fc7c13          	andi	s8,s8,-129
   12d64:	02d00613          	li	a2,45
   12d68:	9a8ff06f          	j	11f10 <_vfprintf_r+0x530>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1247
					cp = "inf";
				size = 3;
				flags &= ~ZEROPAD;
				break;
			}
			if (isnan (_fpvalue)) {
   12d6c:	05813507          	fld	fa0,88(sp)
   12d70:	01113023          	sd	a7,0(sp)
   12d74:	7e0060ef          	jal	19554 <__fpclassifyd>
   12d78:	00013883          	ld	a7,0(sp)
   12d7c:	2a050463          	beqz	a0,13024 <_vfprintf_r+0x1644>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1309
				  }
				else
				  cp = buf;
			} else
# endif /* _WANT_IO_C99_FORMATS */
			if (prec == -1) {
   12d80:	fff00793          	li	a5,-1
   12d84:	fdfd7d93          	andi	s11,s10,-33
   12d88:	62f40c63          	beq	s0,a5,133c0 <_vfprintf_r+0x19e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1311 (discriminator 2)
				prec = DEFPREC;
			} else if ((ch == 'g' || ch == 'G') && prec == 0) {
   12d8c:	04700793          	li	a5,71
   12d90:	62fd8263          	beq	s11,a5,133b4 <_vfprintf_r+0x19d4>
cvt():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1811
	int mode, dsgn;
	char *digits, *bp, *rve;
# ifdef _NO_LONGDBL
	union double_union tmp;

	tmp.d = value;
   12d94:	05813703          	ld	a4,88(sp)
_vfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1315
				prec = DEFPREC;
			} else if ((ch == 'g' || ch == 'G') && prec == 0) {
				prec = 1;
			}

			flags |= FPT;
   12d98:	100c6693          	ori	a3,s8,256
   12d9c:	00d12023          	sw	a3,0(sp)
cvt():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1812
	char *digits, *bp, *rve;
# ifdef _NO_LONGDBL
	union double_union tmp;

	tmp.d = value;
	if (word0 (tmp) & Sign_bit) { /* this will check for < 0 and -0.0 */
   12da0:	42075793          	srai	a5,a4,0x20
   12da4:	f2070453          	fmv.d.x	fs0,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1816
		value = -value;
		*sign = '-';
	} else
		*sign = '\000';
   12da8:	00000c93          	li	s9,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1812
	char *digits, *bp, *rve;
# ifdef _NO_LONGDBL
	union double_union tmp;

	tmp.d = value;
	if (word0 (tmp) & Sign_bit) { /* this will check for < 0 and -0.0 */
   12dac:	6607c663          	bltz	a5,13418 <_vfprintf_r+0x1a38>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1865
		}
		*length = bp - buf;
		return buf;
	}
# endif /* _WANT_IO_C99_FORMATS */
	if (ch == 'f' || ch == 'F') {
   12db0:	06600793          	li	a5,102
   12db4:	60fd0a63          	beq	s10,a5,133c8 <_vfprintf_r+0x19e8>
   12db8:	04600793          	li	a5,70
   12dbc:	72fd0863          	beq	s10,a5,134ec <_vfprintf_r+0x1b0c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1873
		/* To obtain ndigits after the decimal point for the 'e'
		 * and 'E' formats, round to ndigits + 1 significant
		 * figures.
		 */
		if (ch == 'e' || ch == 'E') {
			ndigits++;
   12dc0:	fbbd859b          	addiw	a1,s11,-69
   12dc4:	0015b593          	seqz	a1,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1878
		}
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);
   12dc8:	228405d3          	fmv.d	fa1,fs0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1873
		/* To obtain ndigits after the decimal point for the 'e'
		 * and 'E' formats, round to ndigits + 1 significant
		 * figures.
		 */
		if (ch == 'e' || ch == 'E') {
			ndigits++;
   12dcc:	00b405bb          	addw	a1,s0,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1878
		}
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);
   12dd0:	09c10793          	addi	a5,sp,156
   12dd4:	00058693          	mv	a3,a1
   12dd8:	0a810813          	addi	a6,sp,168
   12ddc:	09810713          	addi	a4,sp,152
   12de0:	00200613          	li	a2,2
   12de4:	000b8513          	mv	a0,s7
   12de8:	01113823          	sd	a7,16(sp)
   12dec:	00b13423          	sd	a1,8(sp)
   12df0:	26c020ef          	jal	1505c <_dtoa_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1880

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
   12df4:	06700793          	li	a5,103
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1878
			ndigits++;
		}
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);
   12df8:	00050913          	mv	s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1880

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
   12dfc:	00813583          	ld	a1,8(sp)
   12e00:	01013883          	ld	a7,16(sp)
   12e04:	46fd0863          	beq	s10,a5,13274 <_vfprintf_r+0x1894>
   12e08:	04700793          	li	a5,71
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1881
		bp = digits + ndigits;
   12e0c:	00b50733          	add	a4,a0,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1880
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
   12e10:	48fd0a63          	beq	s10,a5,132a4 <_vfprintf_r+0x18c4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1887
		if (ch == 'f' || ch == 'F') {
			if (*digits == '0' && value)
				*decpt = -ndigits + 1;
			bp += *decpt;
		}
		if (value == 0)	/* kludge for __dtoa irregularity */
   12e14:	f20007d3          	fmv.d.x	fa5,zero
   12e18:	00070793          	mv	a5,a4
   12e1c:	a2f426d3          	feq.d	a3,fs0,fa5
   12e20:	02069263          	bnez	a3,12e44 <_vfprintf_r+0x1464>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1889
			rve = bp;
		while (rve < bp)
   12e24:	0a813783          	ld	a5,168(sp)
   12e28:	00e7fe63          	bleu	a4,a5,12e44 <_vfprintf_r+0x1464>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1890
			*rve++ = '0';
   12e2c:	03000613          	li	a2,48
   12e30:	00178693          	addi	a3,a5,1
   12e34:	0ad13423          	sd	a3,168(sp)
   12e38:	00c78023          	sb	a2,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1889
				*decpt = -ndigits + 1;
			bp += *decpt;
		}
		if (value == 0)	/* kludge for __dtoa irregularity */
			rve = bp;
		while (rve < bp)
   12e3c:	0a813783          	ld	a5,168(sp)
   12e40:	fee7e8e3          	bltu	a5,a4,12e30 <_vfprintf_r+0x1450>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1892
			*rve++ = '0';
	}
	*length = rve - digits;
   12e44:	412787b3          	sub	a5,a5,s2
   12e48:	06f12823          	sw	a5,112(sp)
_vfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1320
			flags |= FPT;

			cp = cvt (data, _fpvalue, prec, flags, &softsign,
				  &expt, ch, &ndig, cp);

			if (ch == 'g' || ch == 'G') {
   12e4c:	04700793          	li	a5,71
   12e50:	46fd8663          	beq	s11,a5,132bc <_vfprintf_r+0x18dc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1330
			}
# ifdef _WANT_IO_C99_FORMATS
			else if (ch == 'F')
				ch = 'f';
# endif
			if (ch <= 'e') {	/* 'a', 'A', 'e', or 'E' fmt */
   12e54:	06500793          	li	a5,101
   12e58:	7ba7dc63          	ble	s10,a5,13610 <_vfprintf_r+0x1c30>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1340
					++size;
# ifdef _WANT_IO_C99_FORMATS
				flags &= ~GROUPING;
# endif
			} else {
				if (ch == 'f') {		/* f fmt */
   12e5c:	06600793          	li	a5,102
   12e60:	60fd0263          	beq	s10,a5,13464 <_vfprintf_r+0x1a84>
   12e64:	09812783          	lw	a5,152(sp)
   12e68:	04f12623          	sw	a5,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1349
							size += prec + 1;
					} else	/* "0.X" */
						size = (prec || flags & ALT)
							  ? prec + 2
							  : 1;
				} else if (expt >= ndig) { /* fixed g fmt */
   12e6c:	04c12703          	lw	a4,76(sp)
   12e70:	07012683          	lw	a3,112(sp)
   12e74:	00070793          	mv	a5,a4
   12e78:	5ad74663          	blt	a4,a3,13424 <_vfprintf_r+0x1a44>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1351
					size = expt;
					if (flags & ALT)
   12e7c:	001c7c13          	andi	s8,s8,1
   12e80:	5c0c1463          	bnez	s8,13448 <_vfprintf_r+0x1a68>
   12e84:	76074863          	bltz	a4,135f4 <_vfprintf_r+0x1c14>
   12e88:	04c12703          	lw	a4,76(sp)
   12e8c:	06700d13          	li	s10,103
   12e90:	02e12023          	sw	a4,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1377
				} else
# endif
					lead = expt;
			}

			if (softsign)
   12e94:	440c9063          	bnez	s9,132d4 <_vfprintf_r+0x18f4>
   12e98:	08f14603          	lbu	a2,143(sp)
   12e9c:	00f12423          	sw	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1315
				prec = DEFPREC;
			} else if ((ch == 'g' || ch == 'G') && prec == 0) {
				prec = 1;
			}

			flags |= FPT;
   12ea0:	00012c03          	lw	s8,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   12ea4:	00000413          	li	s0,0
   12ea8:	f4dfe06f          	j	11df4 <_vfprintf_r+0x414>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544 (discriminator 5)
		case 'X':
			xdigs = "0123456789ABCDEF";
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
hex:			_uquad = UARG ();
   12eac:	00076783          	lwu	a5,0(a4)
   12eb0:	00870713          	addi	a4,a4,8
   12eb4:	02e13423          	sd	a4,40(sp)
   12eb8:	974ff06f          	j	1202c <_vfprintf_r+0x64c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1399
			else
#endif
			if (flags & LONGINT)
				*GET_ARG (N, ap, long_ptr_t) = ret;
			else if (flags & SHORTINT)
				*GET_ARG (N, ap, short_ptr_t) = ret;
   12ebc:	02813703          	ld	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1398
				*GET_ARG (N, ap, quad_ptr_t) = ret;
			else
#endif
			if (flags & LONGINT)
				*GET_ARG (N, ap, long_ptr_t) = ret;
			else if (flags & SHORTINT)
   12ec0:	040c7c13          	andi	s8,s8,64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1399
				*GET_ARG (N, ap, short_ptr_t) = ret;
   12ec4:	00073783          	ld	a5,0(a4)
   12ec8:	00870713          	addi	a4,a4,8
   12ecc:	02e13423          	sd	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1398
				*GET_ARG (N, ap, quad_ptr_t) = ret;
			else
#endif
			if (flags & LONGINT)
				*GET_ARG (N, ap, long_ptr_t) = ret;
			else if (flags & SHORTINT)
   12ed0:	180c0263          	beqz	s8,13054 <_vfprintf_r+0x1674>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1399
				*GET_ARG (N, ap, short_ptr_t) = ret;
   12ed4:	01c15703          	lhu	a4,28(sp)
   12ed8:	00e79023          	sh	a4,0(a5)
   12edc:	c25fe06f          	j	11b00 <_vfprintf_r+0x120>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199 (discriminator 5)
		case 'D':  /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'd':
		case 'i':
			_uquad = SARG ();
   12ee0:	00072783          	lw	a5,0(a4)
   12ee4:	00870713          	addi	a4,a4,8
   12ee8:	02e13423          	sd	a4,40(sp)
   12eec:	d24ff06f          	j	12410 <_vfprintf_r+0xa30>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   12ef0:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   12ef4:	ec044463          	bltz	s0,125bc <_vfprintf_r+0xbdc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   12ef8:	f7fc7c13          	andi	s8,s8,-129
   12efc:	d41fe06f          	j	11c3c <_vfprintf_r+0x25c>
   12f00:	0b812703          	lw	a4,184(sp)
   12f04:	00913823          	sd	s1,16(sp)
   12f08:	b74ff06f          	j	1227c <_vfprintf_r+0x89c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1709 (discriminator 1)
			PRINT (cp, size);
		} else {	/* glue together f_p fragments */
			if (ch >= 'f') {	/* 'f' or 'g' */
				if (_fpvalue == 0) {
					/* kludge for __dtoa irregularity */
					PRINT ("0", 1);
   12f0c:	0b010613          	addi	a2,sp,176
   12f10:	000a0593          	mv	a1,s4
   12f14:	000b8513          	mv	a0,s7
   12f18:	799090ef          	jal	1ceb0 <__sprint_r>
   12f1c:	00050463          	beqz	a0,12f24 <_vfprintf_r+0x1544>
   12f20:	dd1fe06f          	j	11cf0 <_vfprintf_r+0x310>
   12f24:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1709
   12f28:	000b0893          	mv	a7,s6
   12f2c:	ff0ff06f          	j	1271c <_vfprintf_r+0xd3c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1715
					if (expt < ndig || flags & ALT) {
						PRINT (decimal_point, decp_len);
						PAD (ndig - 1, zeroes);
					}
				} else if (expt <= 0) {
					PRINT ("0", 1);
   12f30:	0b812703          	lw	a4,184(sp)
   12f34:	000226b7          	lui	a3,0x22
   12f38:	bf068693          	addi	a3,a3,-1040 # 21bf0 <zeroes.4123+0x700>
   12f3c:	00d8b023          	sd	a3,0(a7)
   12f40:	00178793          	addi	a5,a5,1
   12f44:	00100693          	li	a3,1
   12f48:	0017071b          	addiw	a4,a4,1
   12f4c:	00d8b423          	sd	a3,8(a7)
   12f50:	0cf13023          	sd	a5,192(sp)
   12f54:	0ae12c23          	sw	a4,184(sp)
   12f58:	00700693          	li	a3,7
   12f5c:	01088893          	addi	a7,a7,16
   12f60:	16e6ca63          	blt	a3,a4,130d4 <_vfprintf_r+0x16f4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1716
					if (expt || ndig || flags & ALT) {
   12f64:	12040663          	beqz	s0,13090 <_vfprintf_r+0x16b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1717
						PRINT (decimal_point, decp_len);
   12f68:	06013703          	ld	a4,96(sp)
   12f6c:	06813683          	ld	a3,104(sp)
   12f70:	01088893          	addi	a7,a7,16
   12f74:	fee8b823          	sd	a4,-16(a7)
   12f78:	0b812703          	lw	a4,184(sp)
   12f7c:	00f687b3          	add	a5,a3,a5
   12f80:	fed8bc23          	sd	a3,-8(a7)
   12f84:	0017071b          	addiw	a4,a4,1
   12f88:	0cf13023          	sd	a5,192(sp)
   12f8c:	0ae12c23          	sw	a4,184(sp)
   12f90:	00700693          	li	a3,7
   12f94:	3ee6ca63          	blt	a3,a4,13388 <_vfprintf_r+0x19a8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718
						PAD (-expt, zeroes);
   12f98:	4080043b          	negw	s0,s0
   12f9c:	20805263          	blez	s0,131a0 <_vfprintf_r+0x17c0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718 (discriminator 5)
   12fa0:	01000693          	li	a3,16
   12fa4:	1a86d663          	ble	s0,a3,13150 <_vfprintf_r+0x1770>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718 (discriminator 6)
   12fa8:	01000d13          	li	s10,16
   12fac:	00913823          	sd	s1,16(sp)
   12fb0:	00700813          	li	a6,7
   12fb4:	000d0693          	mv	a3,s10
   12fb8:	00c0006f          	j	12fc4 <_vfprintf_r+0x15e4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718 (discriminator 4)
   12fbc:	ff04041b          	addiw	s0,s0,-16
   12fc0:	1886da63          	ble	s0,a3,13154 <_vfprintf_r+0x1774>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718 (discriminator 6)
   12fc4:	01078793          	addi	a5,a5,16
   12fc8:	0017071b          	addiw	a4,a4,1
   12fcc:	0098b023          	sd	s1,0(a7)
   12fd0:	01a8b423          	sd	s10,8(a7)
   12fd4:	0cf13023          	sd	a5,192(sp)
   12fd8:	0ae12c23          	sw	a4,184(sp)
   12fdc:	01088893          	addi	a7,a7,16
   12fe0:	fce85ee3          	ble	a4,a6,12fbc <_vfprintf_r+0x15dc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718 (discriminator 1)
   12fe4:	0b010613          	addi	a2,sp,176
   12fe8:	000a0593          	mv	a1,s4
   12fec:	000b8513          	mv	a0,s7
   12ff0:	02d13023          	sd	a3,32(sp)
   12ff4:	01013023          	sd	a6,0(sp)
   12ff8:	6b9090ef          	jal	1ceb0 <__sprint_r>
   12ffc:	00050463          	beqz	a0,13004 <_vfprintf_r+0x1624>
   13000:	cf1fe06f          	j	11cf0 <_vfprintf_r+0x310>
   13004:	0c013783          	ld	a5,192(sp)
   13008:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718
   1300c:	000b0893          	mv	a7,s6
   13010:	02013683          	ld	a3,32(sp)
   13014:	00013803          	ld	a6,0(sp)
   13018:	fa5ff06f          	j	12fbc <_vfprintf_r+0x15dc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:867
	ORIENT(fp, -1);

	/* sorry, fprintf(read_only_file, "") returns EOF, not 0 */
	if (cantwrite (data, fp)) {
		_newlib_flockfile_exit (fp);
		return (EOF);
   1301c:	fff00513          	li	a0,-1
   13020:	ce5fe06f          	j	11d04 <_vfprintf_r+0x324>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1248
				size = 3;
				flags &= ~ZEROPAD;
				break;
			}
			if (isnan (_fpvalue)) {
				if (ch <= 'G') /* 'A', 'E', 'F', or 'G' */
   13024:	04700793          	li	a5,71
   13028:	27a7c863          	blt	a5,s10,13298 <_vfprintf_r+0x18b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1249
					cp = "NAN";
   1302c:	00022937          	lui	s2,0x22
   13030:	ba890913          	addi	s2,s2,-1112 # 21ba8 <zeroes.4123+0x6b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1254
				else
					cp = "nan";
				size = 3;
				flags &= ~ZEROPAD;
				break;
   13034:	00300793          	li	a5,3
   13038:	00f12423          	sw	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1253
				if (ch <= 'G') /* 'A', 'E', 'F', or 'G' */
					cp = "NAN";
				else
					cp = "nan";
				size = 3;
				flags &= ~ZEROPAD;
   1303c:	f7fc7c13          	andi	s8,s8,-129
   13040:	08f14603          	lbu	a2,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1252
			if (isnan (_fpvalue)) {
				if (ch <= 'G') /* 'A', 'E', 'F', or 'G' */
					cp = "NAN";
				else
					cp = "nan";
				size = 3;
   13044:	02f12023          	sw	a5,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   13048:	00000413          	li	s0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:948
		width = 0;
		prec = -1;
		sign = '\0';
#ifdef FLOATING_POINT
		lead = 0;
   1304c:	04012623          	sw	zero,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1254
					cp = "NAN";
				else
					cp = "nan";
				size = 3;
				flags &= ~ZEROPAD;
				break;
   13050:	da5fe06f          	j	11df4 <_vfprintf_r+0x414>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1405
#ifdef _WANT_IO_C99_FORMATS
			else if (flags & CHARINT)
				*GET_ARG (N, ap, char_ptr_t) = ret;
#endif
			else
				*GET_ARG (N, ap, int_ptr_t) = ret;
   13054:	01c12703          	lw	a4,28(sp)
   13058:	00e7a023          	sw	a4,0(a5)
   1305c:	aa5fe06f          	j	11b00 <_vfprintf_r+0x120>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1240
			 */
			if (isinf (_fpvalue)) {
				if (_fpvalue < 0)
					sign = '-';
				if (ch <= 'G') /* 'A', 'E', 'F', or 'G' */
					cp = "INF";
   13060:	00022937          	lui	s2,0x22
   13064:	b9890913          	addi	s2,s2,-1128 # 21b98 <zeroes.4123+0x6a8>
   13068:	c34ff06f          	j	1249c <_vfprintf_r+0xabc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723 (discriminator 6)
						PAD (-expt, zeroes);
						PRINT (cp, ndig);
					}
				} else {
					char *convbuf = cp;
					PRINTANDPAD(cp, convbuf + ndig,
   1306c:	0b010613          	addi	a2,sp,176
   13070:	000a0593          	mv	a1,s4
   13074:	000b8513          	mv	a0,s7
   13078:	639090ef          	jal	1ceb0 <__sprint_r>
   1307c:	00050463          	beqz	a0,13084 <_vfprintf_r+0x16a4>
   13080:	c71fe06f          	j	11cf0 <_vfprintf_r+0x310>
   13084:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723
   13088:	000b0893          	mv	a7,s6
   1308c:	931ff06f          	j	129bc <_vfprintf_r+0xfdc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1716 (discriminator 1)
						PRINT (decimal_point, decp_len);
						PAD (ndig - 1, zeroes);
					}
				} else if (expt <= 0) {
					PRINT ("0", 1);
					if (expt || ndig || flags & ALT) {
   13090:	07012703          	lw	a4,112(sp)
   13094:	ec071ae3          	bnez	a4,12f68 <_vfprintf_r+0x1588>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1716 (discriminator 2)
   13098:	001c7713          	andi	a4,s8,1
   1309c:	a4070c63          	beqz	a4,122f4 <_vfprintf_r+0x914>
   130a0:	ec9ff06f          	j	12f68 <_vfprintf_r+0x1588>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746 (discriminator 6)
						cp = convbuf + ndig;
					}
#endif
					if (expt < ndig || flags & ALT)
					    PRINT (decimal_point, decp_len);
					PRINTANDPAD (cp, convbuf + ndig,
   130a4:	0b010613          	addi	a2,sp,176
   130a8:	000a0593          	mv	a1,s4
   130ac:	000b8513          	mv	a0,s7
   130b0:	601090ef          	jal	1ceb0 <__sprint_r>
   130b4:	00050463          	beqz	a0,130bc <_vfprintf_r+0x16dc>
   130b8:	c39fe06f          	j	11cf0 <_vfprintf_r+0x310>
   130bc:	09812703          	lw	a4,152(sp)
   130c0:	07012683          	lw	a3,112(sp)
   130c4:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746
   130c8:	000b0893          	mv	a7,s6
   130cc:	40e6873b          	subw	a4,a3,a4
   130d0:	b15ff06f          	j	12be4 <_vfprintf_r+0x1204>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1715 (discriminator 1)
					if (expt < ndig || flags & ALT) {
						PRINT (decimal_point, decp_len);
						PAD (ndig - 1, zeroes);
					}
				} else if (expt <= 0) {
					PRINT ("0", 1);
   130d4:	0b010613          	addi	a2,sp,176
   130d8:	000a0593          	mv	a1,s4
   130dc:	000b8513          	mv	a0,s7
   130e0:	5d1090ef          	jal	1ceb0 <__sprint_r>
   130e4:	00050463          	beqz	a0,130ec <_vfprintf_r+0x170c>
   130e8:	c09fe06f          	j	11cf0 <_vfprintf_r+0x310>
   130ec:	09812403          	lw	s0,152(sp)
   130f0:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1715
   130f4:	000b0893          	mv	a7,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1716
					if (expt || ndig || flags & ALT) {
   130f8:	e60418e3          	bnez	s0,12f68 <_vfprintf_r+0x1588>
   130fc:	f95ff06f          	j	13090 <_vfprintf_r+0x16b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1646
			*     -- ANSI X3J11
			*
			* To demonstrate this case, compile and run:
                        *    printf ("%#.0o",0);
			*/
                       else if (base == OCT && (flags & ALT))
   13100:	001c7793          	andi	a5,s8,1
   13104:	00078e63          	beqz	a5,13120 <_vfprintf_r+0x1740>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1647
                         *--cp = '0';
   13108:	03000793          	li	a5,48
   1310c:	0ef107a3          	sb	a5,239(sp)
   13110:	07813783          	ld	a5,120(sp)
   13114:	0ef10913          	addi	s2,sp,239
   13118:	02f12023          	sw	a5,32(sp)
   1311c:	cc1fe06f          	j	11ddc <_vfprintf_r+0x3fc>
   13120:	02012023          	sw	zero,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1571
			/*
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
   13124:	000b0913          	mv	s2,s6
   13128:	cb5fe06f          	j	11ddc <_vfprintf_r+0x3fc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1711 (discriminator 1)
			if (ch >= 'f') {	/* 'f' or 'g' */
				if (_fpvalue == 0) {
					/* kludge for __dtoa irregularity */
					PRINT ("0", 1);
					if (expt < ndig || flags & ALT) {
						PRINT (decimal_point, decp_len);
   1312c:	0b010613          	addi	a2,sp,176
   13130:	000a0593          	mv	a1,s4
   13134:	000b8513          	mv	a0,s7
   13138:	579090ef          	jal	1ceb0 <__sprint_r>
   1313c:	00050463          	beqz	a0,13144 <_vfprintf_r+0x1764>
   13140:	bb1fe06f          	j	11cf0 <_vfprintf_r+0x310>
   13144:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1711
   13148:	000b0893          	mv	a7,s6
   1314c:	e14ff06f          	j	12760 <_vfprintf_r+0xd80>
   13150:	00913823          	sd	s1,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718 (discriminator 7)
					}
				} else if (expt <= 0) {
					PRINT ("0", 1);
					if (expt || ndig || flags & ALT) {
						PRINT (decimal_point, decp_len);
						PAD (-expt, zeroes);
   13154:	01013683          	ld	a3,16(sp)
   13158:	008787b3          	add	a5,a5,s0
   1315c:	0017071b          	addiw	a4,a4,1
   13160:	00d8b023          	sd	a3,0(a7)
   13164:	0088b423          	sd	s0,8(a7)
   13168:	0cf13023          	sd	a5,192(sp)
   1316c:	0ae12c23          	sw	a4,184(sp)
   13170:	00700693          	li	a3,7
   13174:	01088893          	addi	a7,a7,16
   13178:	02e6d463          	ble	a4,a3,131a0 <_vfprintf_r+0x17c0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718 (discriminator 8)
   1317c:	0b010613          	addi	a2,sp,176
   13180:	000a0593          	mv	a1,s4
   13184:	000b8513          	mv	a0,s7
   13188:	529090ef          	jal	1ceb0 <__sprint_r>
   1318c:	00050463          	beqz	a0,13194 <_vfprintf_r+0x17b4>
   13190:	b61fe06f          	j	11cf0 <_vfprintf_r+0x310>
   13194:	0c013783          	ld	a5,192(sp)
   13198:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718
   1319c:	000b0893          	mv	a7,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1719
						PRINT (cp, ndig);
   131a0:	07012683          	lw	a3,112(sp)
   131a4:	0017071b          	addiw	a4,a4,1
   131a8:	0128b023          	sd	s2,0(a7)
   131ac:	00f687b3          	add	a5,a3,a5
   131b0:	cecff06f          	j	1269c <_vfprintf_r+0xcbc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1529
				if (p != NULL)
					size = p - cp;
				else
					size = prec;
			} else
				size = strlen (cp);
   131b4:	00090513          	mv	a0,s2
   131b8:	f58fe0ef          	jal	11910 <strlen>
   131bc:	0005079b          	sext.w	a5,a0
   131c0:	02f12023          	sw	a5,32(sp)
   131c4:	00078d93          	mv	s11,a5
   131c8:	00013883          	ld	a7,0(sp)
   131cc:	0007c463          	bltz	a5,131d4 <_vfprintf_r+0x17f4>
   131d0:	cf5fe06f          	j	11ec4 <_vfprintf_r+0x4e4>
   131d4:	00000d93          	li	s11,0
   131d8:	cedfe06f          	j	11ec4 <_vfprintf_r+0x4e4>
   131dc:	0c013783          	ld	a5,192(sp)
   131e0:	0b812703          	lw	a4,184(sp)
   131e4:	05513823          	sd	s5,80(sp)
   131e8:	f6dfe06f          	j	12154 <_vfprintf_r+0x774>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723 (discriminator 9)
						PAD (-expt, zeroes);
						PRINT (cp, ndig);
					}
				} else {
					char *convbuf = cp;
					PRINTANDPAD(cp, convbuf + ndig,
   131ec:	00000413          	li	s0,0
   131f0:	fd0ff06f          	j	129c0 <_vfprintf_r+0xfe0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746
						cp = convbuf + ndig;
					}
#endif
					if (expt < ndig || flags & ALT)
					    PRINT (decimal_point, decp_len);
					PRINTANDPAD (cp, convbuf + ndig,
   131f4:	00000413          	li	s0,0
   131f8:	9f1ff06f          	j	12be8 <_vfprintf_r+0x1208>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   131fc:	02d00613          	li	a2,45
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1210
			{

				_uquad = -_uquad;
				sign = '-';
			}
			base = DEC;
   13200:	00100713          	li	a4,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1578
				/*
				 * Unsigned mod is hard, and unsigned mod
				 * by a constant is easier than that by
				 * a variable; hence this switch.
				 */
				switch (base) {
   13204:	00100693          	li	a3,1
   13208:	00d71463          	bne	a4,a3,13210 <_vfprintf_r+0x1830>
   1320c:	d05fe06f          	j	11f10 <_vfprintf_r+0x530>
   13210:	00200693          	li	a3,2
   13214:	00d71463          	bne	a4,a3,1321c <_vfprintf_r+0x183c>
   13218:	a31fe06f          	j	11c48 <_vfprintf_r+0x268>
   1321c:	b81fe06f          	j	11d9c <_vfprintf_r+0x3bc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1449
			   NULL string when precision is not 0.
			   However, if we are not optimizing for size,
			   we might as well mirror glibc behavior.  */
			if (cp == NULL) {
				cp = "(null)";
				size = ((unsigned) prec > 6U) ? 6 : prec;
   13220:	00600713          	li	a4,6
   13224:	00877463          	bleu	s0,a4,1322c <_vfprintf_r+0x184c>
   13228:	00070413          	mv	s0,a4
   1322c:	02812023          	sw	s0,32(sp)
   13230:	00040d93          	mv	s11,s0
   13234:	32044a63          	bltz	s0,13568 <_vfprintf_r+0x1b88>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1448
			/* Behavior is undefined if the user passed a
			   NULL string when precision is not 0.
			   However, if we are not optimizing for size,
			   we might as well mirror glibc behavior.  */
			if (cp == NULL) {
				cp = "(null)";
   13238:	00022937          	lui	s2,0x22
   1323c:	01b12423          	sw	s11,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   13240:	03913423          	sd	s9,40(sp)
   13244:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   13248:	00000413          	li	s0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:948
		width = 0;
		prec = -1;
		sign = '\0';
#ifdef FLOATING_POINT
		lead = 0;
   1324c:	04012623          	sw	zero,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1448
			/* Behavior is undefined if the user passed a
			   NULL string when precision is not 0.
			   However, if we are not optimizing for size,
			   we might as well mirror glibc behavior.  */
			if (cp == NULL) {
				cp = "(null)";
   13250:	be890913          	addi	s2,s2,-1048 # 21be8 <zeroes.4123+0x6f8>
   13254:	e45fe06f          	j	12098 <_vfprintf_r+0x6b8>
   13258:	0b812703          	lw	a4,184(sp)
   1325c:	05513823          	sd	s5,80(sp)
   13260:	91cff06f          	j	1237c <_vfprintf_r+0x99c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1550
			base = HEX;
			/* leading 0x/X only if non-zero */
			if (flags & ALT && _uquad != 0) {
				ox[0] = '0';
				ox[1] = ch;
				flags |= HEXPREFIX;
   13264:	00070c13          	mv	s8,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   13268:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1545
			xdigs = "0123456789ABCDEF";
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
hex:			_uquad = UARG ();
			base = HEX;
   1326c:	00200713          	li	a4,2
   13270:	f95ff06f          	j	13204 <_vfprintf_r+0x1824>
cvt():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1880
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
   13274:	001c7793          	andi	a5,s8,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1881
		bp = digits + ndigits;
   13278:	00b50733          	add	a4,a0,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1880
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
   1327c:	b8079ce3          	bnez	a5,12e14 <_vfprintf_r+0x1434>
   13280:	0a813783          	ld	a5,168(sp)
   13284:	bc1ff06f          	j	12e44 <_vfprintf_r+0x1464>
_vfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1238
			   zeros are not permitted.  Otherwise, scanf
			   could not read what printf wrote.
			 */
			if (isinf (_fpvalue)) {
				if (_fpvalue < 0)
					sign = '-';
   13288:	02d00793          	li	a5,45
   1328c:	08f107a3          	sb	a5,143(sp)
   13290:	02d00613          	li	a2,45
   13294:	9f8ff06f          	j	1248c <_vfprintf_r+0xaac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1251
			}
			if (isnan (_fpvalue)) {
				if (ch <= 'G') /* 'A', 'E', 'F', or 'G' */
					cp = "NAN";
				else
					cp = "nan";
   13298:	00022937          	lui	s2,0x22
   1329c:	bb090913          	addi	s2,s2,-1104 # 21bb0 <zeroes.4123+0x6c0>
   132a0:	d95ff06f          	j	13034 <_vfprintf_r+0x1654>
cvt():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1880
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
   132a4:	001c7793          	andi	a5,s8,1
   132a8:	26079a63          	bnez	a5,1351c <_vfprintf_r+0x1b3c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1892
		if (value == 0)	/* kludge for __dtoa irregularity */
			rve = bp;
		while (rve < bp)
			*rve++ = '0';
	}
	*length = rve - digits;
   132ac:	0a813783          	ld	a5,168(sp)
   132b0:	412787b3          	sub	a5,a5,s2
   132b4:	06f12823          	sw	a5,112(sp)
_vfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1320
			flags |= FPT;

			cp = cvt (data, _fpvalue, prec, flags, &softsign,
				  &expt, ch, &ndig, cp);

			if (ch == 'g' || ch == 'G') {
   132b8:	35ad9c63          	bne	s11,s10,13610 <_vfprintf_r+0x1c30>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1321
				if (expt <= -4 || expt > prec)
   132bc:	09812783          	lw	a5,152(sp)
   132c0:	ffd00713          	li	a4,-3
   132c4:	02e7cc63          	blt	a5,a4,132fc <_vfprintf_r+0x191c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1321 (discriminator 1)
   132c8:	02f44a63          	blt	s0,a5,132fc <_vfprintf_r+0x191c>
   132cc:	04f12623          	sw	a5,76(sp)
   132d0:	b9dff06f          	j	12e6c <_vfprintf_r+0x148c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1378
# endif
					lead = expt;
			}

			if (softsign)
				sign = '-';
   132d4:	02d00713          	li	a4,45
   132d8:	08e107a3          	sb	a4,143(sp)
   132dc:	00f12423          	sw	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1315
				prec = DEFPREC;
			} else if ((ch == 'g' || ch == 'G') && prec == 0) {
				prec = 1;
			}

			flags |= FPT;
   132e0:	00012c03          	lw	s8,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1378
# endif
					lead = expt;
			}

			if (softsign)
				sign = '-';
   132e4:	02d00613          	li	a2,45
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   132e8:	00000413          	li	s0,0
   132ec:	b0dfe06f          	j	11df8 <_vfprintf_r+0x418>
   132f0:	0b812703          	lw	a4,184(sp)
   132f4:	00913823          	sd	s1,16(sp)
   132f8:	d78ff06f          	j	12870 <_vfprintf_r+0xe90>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1322
			cp = cvt (data, _fpvalue, prec, flags, &softsign,
				  &expt, ch, &ndig, cp);

			if (ch == 'g' || ch == 'G') {
				if (expt <= -4 || expt > prec)
					ch -= 2; /* 'e' or 'E' */
   132fc:	ffed0d1b          	addiw	s10,s10,-2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1331
# ifdef _WANT_IO_C99_FORMATS
			else if (ch == 'F')
				ch = 'f';
# endif
			if (ch <= 'e') {	/* 'a', 'A', 'e', or 'E' fmt */
				--expt;
   13300:	fff7879b          	addiw	a5,a5,-1
   13304:	08f12c23          	sw	a5,152(sp)
exponent():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1908
# else
#  define isa 0
# endif

	p = p0;
	*p++ = isa ? 'p' - 'a' + fmtch : fmtch;
   13308:	0ba10023          	sb	s10,160(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1909
	if (exp < 0) {
   1330c:	2c07c863          	bltz	a5,135dc <_vfprintf_r+0x1bfc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1914
		exp = -exp;
		*p++ = '-';
	}
	else
		*p++ = '+';
   13310:	02b00713          	li	a4,43
   13314:	0ae100a3          	sb	a4,161(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1916
	t = expbuf + MAXEXPLEN;
	if (exp > 9) {
   13318:	00900613          	li	a2,9
   1331c:	16f64463          	blt	a2,a5,13484 <_vfprintf_r+0x1aa4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1926
		for (; t < expbuf + MAXEXPLEN; *p++ = *t++);
	}
	else {
		if (!isa)
			*p++ = '0';
		*p++ = to_char (exp);
   13320:	0307879b          	addiw	a5,a5,48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1925
		*--t = to_char (exp);
		for (; t < expbuf + MAXEXPLEN; *p++ = *t++);
	}
	else {
		if (!isa)
			*p++ = '0';
   13324:	03000713          	li	a4,48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1926
		*p++ = to_char (exp);
   13328:	0af101a3          	sb	a5,163(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1925
		*--t = to_char (exp);
		for (; t < expbuf + MAXEXPLEN; *p++ = *t++);
	}
	else {
		if (!isa)
			*p++ = '0';
   1332c:	0ae10123          	sb	a4,162(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1926
		*p++ = to_char (exp);
   13330:	0a410793          	addi	a5,sp,164
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1928
	}
	return (p - p0);
   13334:	0a010713          	addi	a4,sp,160
   13338:	40e787bb          	subw	a5,a5,a4
_vfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1333
				ch = 'f';
# endif
			if (ch <= 'e') {	/* 'a', 'A', 'e', or 'E' fmt */
				--expt;
				expsize = exponent (expstr, expt, ch);
				size = expsize + ndig;
   1333c:	07012703          	lw	a4,112(sp)
exponent():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1928
	else {
		if (!isa)
			*p++ = '0';
		*p++ = to_char (exp);
	}
	return (p - p0);
   13340:	06f12a23          	sw	a5,116(sp)
_vfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1333
				ch = 'f';
# endif
			if (ch <= 'e') {	/* 'a', 'A', 'e', or 'E' fmt */
				--expt;
				expsize = exponent (expstr, expt, ch);
				size = expsize + ndig;
   13344:	00e787bb          	addw	a5,a5,a4
   13348:	02f12023          	sw	a5,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1334
				if (ndig > 1 || flags & ALT)
   1334c:	00100793          	li	a5,1
   13350:	26e7d263          	ble	a4,a5,135b4 <_vfprintf_r+0x1bd4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1335
					++size;
   13354:	02012783          	lw	a5,32(sp)
   13358:	0017879b          	addiw	a5,a5,1
   1335c:	02f12023          	sw	a5,32(sp)
   13360:	2607c463          	bltz	a5,135c8 <_vfprintf_r+0x1be8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:948
		dprec = 0;
		width = 0;
		prec = -1;
		sign = '\0';
#ifdef FLOATING_POINT
		lead = 0;
   13364:	04012623          	sw	zero,76(sp)
   13368:	b2dff06f          	j	12e94 <_vfprintf_r+0x14b4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1524
				 * NUL in the first `prec' characters, and
				 * strlen () will go further.
				 */
				char *p = memchr (cp, 0, prec);

				if (p != NULL)
   1336c:	00812423          	sw	s0,8(sp)
   13370:	02812023          	sw	s0,32(sp)
   13374:	08f14603          	lbu	a2,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   13378:	03913423          	sd	s9,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1337c:	00000413          	li	s0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:948
		width = 0;
		prec = -1;
		sign = '\0';
#ifdef FLOATING_POINT
		lead = 0;
   13380:	04012623          	sw	zero,76(sp)
   13384:	a71fe06f          	j	11df4 <_vfprintf_r+0x414>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1717 (discriminator 1)
						PAD (ndig - 1, zeroes);
					}
				} else if (expt <= 0) {
					PRINT ("0", 1);
					if (expt || ndig || flags & ALT) {
						PRINT (decimal_point, decp_len);
   13388:	0b010613          	addi	a2,sp,176
   1338c:	000a0593          	mv	a1,s4
   13390:	000b8513          	mv	a0,s7
   13394:	31d090ef          	jal	1ceb0 <__sprint_r>
   13398:	00050463          	beqz	a0,133a0 <_vfprintf_r+0x19c0>
   1339c:	955fe06f          	j	11cf0 <_vfprintf_r+0x310>
   133a0:	09812403          	lw	s0,152(sp)
   133a4:	0c013783          	ld	a5,192(sp)
   133a8:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1717
   133ac:	000b0893          	mv	a7,s6
   133b0:	be9ff06f          	j	12f98 <_vfprintf_r+0x15b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1311 (discriminator 3)
				  cp = buf;
			} else
# endif /* _WANT_IO_C99_FORMATS */
			if (prec == -1) {
				prec = DEFPREC;
			} else if ((ch == 'g' || ch == 'G') && prec == 0) {
   133b4:	9e0410e3          	bnez	s0,12d94 <_vfprintf_r+0x13b4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1312
				prec = 1;
   133b8:	00090413          	mv	s0,s2
   133bc:	9d9ff06f          	j	12d94 <_vfprintf_r+0x13b4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1310
				else
				  cp = buf;
			} else
# endif /* _WANT_IO_C99_FORMATS */
			if (prec == -1) {
				prec = DEFPREC;
   133c0:	00600413          	li	s0,6
   133c4:	9d1ff06f          	j	12d94 <_vfprintf_r+0x13b4>
cvt():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1878
			ndigits++;
		}
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);
   133c8:	228405d3          	fmv.d	fa1,fs0
   133cc:	09810713          	addi	a4,sp,152
   133d0:	0a810813          	addi	a6,sp,168
   133d4:	09c10793          	addi	a5,sp,156
   133d8:	00040693          	mv	a3,s0
   133dc:	00300613          	li	a2,3
   133e0:	000b8513          	mv	a0,s7
   133e4:	01113423          	sd	a7,8(sp)
   133e8:	475010ef          	jal	1505c <_dtoa_r>
   133ec:	00813883          	ld	a7,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1881

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
		bp = digits + ndigits;
   133f0:	00040713          	mv	a4,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1878
			ndigits++;
		}
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);
   133f4:	00050913          	mv	s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1881

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
		bp = digits + ndigits;
   133f8:	00e50733          	add	a4,a0,a4
   133fc:	00040593          	mv	a1,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1883
		if (ch == 'f' || ch == 'F') {
			if (*digits == '0' && value)
   13400:	00094683          	lbu	a3,0(s2)
   13404:	03000793          	li	a5,48
   13408:	14f68063          	beq	a3,a5,13548 <_vfprintf_r+0x1b68>
   1340c:	09812583          	lw	a1,152(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1885
				*decpt = -ndigits + 1;
			bp += *decpt;
   13410:	00b70733          	add	a4,a4,a1
   13414:	a01ff06f          	j	12e14 <_vfprintf_r+0x1434>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1813
# ifdef _NO_LONGDBL
	union double_union tmp;

	tmp.d = value;
	if (word0 (tmp) & Sign_bit) { /* this will check for < 0 and -0.0 */
		value = -value;
   13418:	22841453          	fneg.d	fs0,fs0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1814
		*sign = '-';
   1341c:	02d00c93          	li	s9,45
   13420:	991ff06f          	j	12db0 <_vfprintf_r+0x13d0>
_vfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1355
					size = expt;
					if (flags & ALT)
						++size;
				} else
					size = ndig + (expt > 0 ?
						1 : 2 - expt);
   13424:	04c12703          	lw	a4,76(sp)
   13428:	00100793          	li	a5,1
   1342c:	1ae05263          	blez	a4,135d0 <_vfprintf_r+0x1bf0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1354
				} else if (expt >= ndig) { /* fixed g fmt */
					size = expt;
					if (flags & ALT)
						++size;
				} else
					size = ndig + (expt > 0 ?
   13430:	07012703          	lw	a4,112(sp)
   13434:	00e787bb          	addw	a5,a5,a4
   13438:	02f12023          	sw	a5,32(sp)
   1343c:	0007ce63          	bltz	a5,13458 <_vfprintf_r+0x1a78>
   13440:	06700d13          	li	s10,103
   13444:	a51ff06f          	j	12e94 <_vfprintf_r+0x14b4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1352
							  ? prec + 2
							  : 1;
				} else if (expt >= ndig) { /* fixed g fmt */
					size = expt;
					if (flags & ALT)
						++size;
   13448:	04c12783          	lw	a5,76(sp)
   1344c:	0017879b          	addiw	a5,a5,1
   13450:	02f12023          	sw	a5,32(sp)
   13454:	fe07d6e3          	bgez	a5,13440 <_vfprintf_r+0x1a60>
   13458:	00000793          	li	a5,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1354
				} else
					size = ndig + (expt > 0 ?
   1345c:	06700d13          	li	s10,103
   13460:	a35ff06f          	j	12e94 <_vfprintf_r+0x14b4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1341
# ifdef _WANT_IO_C99_FORMATS
				flags &= ~GROUPING;
# endif
			} else {
				if (ch == 'f') {		/* f fmt */
					if (expt > 0) {
   13464:	09812783          	lw	a5,152(sp)
   13468:	04f12623          	sw	a5,76(sp)
   1346c:	12f05263          	blez	a5,13590 <_vfprintf_r+0x1bb0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1343
						size = expt;
						if (prec || flags & ALT)
   13470:	0a041e63          	bnez	s0,1352c <_vfprintf_r+0x1b4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1343 (discriminator 1)
   13474:	001c7c13          	andi	s8,s8,1
   13478:	0a0c1a63          	bnez	s8,1352c <_vfprintf_r+0x1b4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1343
   1347c:	02f12023          	sw	a5,32(sp)
   13480:	a15ff06f          	j	12e94 <_vfprintf_r+0x14b4>
exponent():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1916
		*p++ = '-';
	}
	else
		*p++ = '+';
	t = expbuf + MAXEXPLEN;
	if (exp > 9) {
   13484:	0af10593          	addi	a1,sp,175
   13488:	00058713          	mv	a4,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1918
		do {
			*--t = to_char (exp % 10);
   1348c:	00a00513          	li	a0,10
   13490:	02a7e6bb          	remw	a3,a5,a0
   13494:	fff70713          	addi	a4,a4,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1919
		} while ((exp /= 10) > 9);
   13498:	02a7c7bb          	divw	a5,a5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1918
	else
		*p++ = '+';
	t = expbuf + MAXEXPLEN;
	if (exp > 9) {
		do {
			*--t = to_char (exp % 10);
   1349c:	0306869b          	addiw	a3,a3,48
   134a0:	00d70023          	sb	a3,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1919
		} while ((exp /= 10) > 9);
   134a4:	fef646e3          	blt	a2,a5,13490 <_vfprintf_r+0x1ab0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1920
		*--t = to_char (exp);
   134a8:	0307879b          	addiw	a5,a5,48
   134ac:	0ff7f793          	andi	a5,a5,255
   134b0:	fff70693          	addi	a3,a4,-1
   134b4:	fef70fa3          	sb	a5,-1(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1921
		for (; t < expbuf + MAXEXPLEN; *p++ = *t++);
   134b8:	16b6f863          	bleu	a1,a3,13628 <_vfprintf_r+0x1c48>
   134bc:	0a210613          	addi	a2,sp,162
   134c0:	0080006f          	j	134c8 <_vfprintf_r+0x1ae8>
   134c4:	0006c783          	lbu	a5,0(a3)
   134c8:	00160613          	addi	a2,a2,1 # 2001 <_ftext-0xdfff>
   134cc:	00168693          	addi	a3,a3,1
   134d0:	fef60fa3          	sb	a5,-1(a2)
   134d4:	feb698e3          	bne	a3,a1,134c4 <_vfprintf_r+0x1ae4>
   134d8:	0b010793          	addi	a5,sp,176
   134dc:	40e787b3          	sub	a5,a5,a4
   134e0:	0a210713          	addi	a4,sp,162
   134e4:	00f707b3          	add	a5,a4,a5
   134e8:	e4dff06f          	j	13334 <_vfprintf_r+0x1954>
cvt():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1878
			ndigits++;
		}
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);
   134ec:	228405d3          	fmv.d	fa1,fs0
   134f0:	0a810813          	addi	a6,sp,168
   134f4:	09c10793          	addi	a5,sp,156
   134f8:	09810713          	addi	a4,sp,152
   134fc:	00040693          	mv	a3,s0
   13500:	00300613          	li	a2,3
   13504:	000b8513          	mv	a0,s7
   13508:	01113423          	sd	a7,8(sp)
   1350c:	351010ef          	jal	1505c <_dtoa_r>
   13510:	00813883          	ld	a7,8(sp)
   13514:	00050913          	mv	s2,a0
   13518:	00040593          	mv	a1,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1882

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
		bp = digits + ndigits;
		if (ch == 'f' || ch == 'F') {
   1351c:	04600793          	li	a5,70
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1881
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
		bp = digits + ndigits;
   13520:	00b90733          	add	a4,s2,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1882
		if (ch == 'f' || ch == 'F') {
   13524:	ecfd0ee3          	beq	s10,a5,13400 <_vfprintf_r+0x1a20>
   13528:	8edff06f          	j	12e14 <_vfprintf_r+0x1434>
_vfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1344
			} else {
				if (ch == 'f') {		/* f fmt */
					if (expt > 0) {
						size = expt;
						if (prec || flags & ALT)
							size += prec + 1;
   1352c:	04c12783          	lw	a5,76(sp)
   13530:	0014041b          	addiw	s0,s0,1
   13534:	008787bb          	addw	a5,a5,s0
   13538:	02f12023          	sw	a5,32(sp)
   1353c:	9407dce3          	bgez	a5,12e94 <_vfprintf_r+0x14b4>
   13540:	00000793          	li	a5,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1348 (discriminator 1)
					} else	/* "0.X" */
						size = (prec || flags & ALT)
							  ? prec + 2
							  : 1;
   13544:	951ff06f          	j	12e94 <_vfprintf_r+0x14b4>
cvt():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1883
	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
		bp = digits + ndigits;
		if (ch == 'f' || ch == 'F') {
			if (*digits == '0' && value)
   13548:	f20007d3          	fmv.d.x	fa5,zero
   1354c:	a2f427d3          	feq.d	a5,fs0,fa5
   13550:	ea079ee3          	bnez	a5,1340c <_vfprintf_r+0x1a2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1884
				*decpt = -ndigits + 1;
   13554:	00100793          	li	a5,1
   13558:	40b785bb          	subw	a1,a5,a1
   1355c:	08b12c23          	sw	a1,152(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1885
			bp += *decpt;
   13560:	00b70733          	add	a4,a4,a1
   13564:	8b1ff06f          	j	12e14 <_vfprintf_r+0x1434>
   13568:	00000d93          	li	s11,0
   1356c:	ccdff06f          	j	13238 <_vfprintf_r+0x1858>
_vfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1063
						fmt = old_fmt;
						goto rflag;
					}
				}
#endif /* !_NO_POS_ARGS */
				prec = GET_ARG (n, ap, int);
   13570:	02813783          	ld	a5,40(sp)
   13574:	0007a403          	lw	s0,0(a5)
   13578:	00878793          	addi	a5,a5,8
   1357c:	02f13423          	sd	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1067
#ifndef _NO_POS_ARGS
				is_pos_arg = old_is_pos_arg;
#endif
				if (prec < 0)
   13580:	00044463          	bltz	s0,13588 <_vfprintf_r+0x1ba8>
   13584:	e18fe06f          	j	11b9c <_vfprintf_r+0x1bc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1068
					prec = -1;
   13588:	fff00413          	li	s0,-1
   1358c:	e10fe06f          	j	11b9c <_vfprintf_r+0x1bc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1348
						if (prec || flags & ALT)
							size += prec + 1;
					} else	/* "0.X" */
						size = (prec || flags & ALT)
							  ? prec + 2
							  : 1;
   13590:	00041a63          	bnez	s0,135a4 <_vfprintf_r+0x1bc4>
   13594:	00100793          	li	a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1346
					if (expt > 0) {
						size = expt;
						if (prec || flags & ALT)
							size += prec + 1;
					} else	/* "0.X" */
						size = (prec || flags & ALT)
   13598:	00fc7c33          	and	s8,s8,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1348
							  ? prec + 2
							  : 1;
   1359c:	02f12023          	sw	a5,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1346
					if (expt > 0) {
						size = expt;
						if (prec || flags & ALT)
							size += prec + 1;
					} else	/* "0.X" */
						size = (prec || flags & ALT)
   135a0:	8e0c0ae3          	beqz	s8,12e94 <_vfprintf_r+0x14b4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1348 (discriminator 1)
							  ? prec + 2
							  : 1;
   135a4:	0024079b          	addiw	a5,s0,2
   135a8:	02f12023          	sw	a5,32(sp)
   135ac:	8e07d4e3          	bgez	a5,12e94 <_vfprintf_r+0x14b4>
   135b0:	f91ff06f          	j	13540 <_vfprintf_r+0x1b60>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1334
# endif
			if (ch <= 'e') {	/* 'a', 'A', 'e', or 'E' fmt */
				--expt;
				expsize = exponent (expstr, expt, ch);
				size = expsize + ndig;
				if (ndig > 1 || flags & ALT)
   135b4:	00fc7c33          	and	s8,s8,a5
   135b8:	d80c1ee3          	bnez	s8,13354 <_vfprintf_r+0x1974>
   135bc:	02012703          	lw	a4,32(sp)
   135c0:	00070793          	mv	a5,a4
   135c4:	da0750e3          	bgez	a4,13364 <_vfprintf_r+0x1984>
   135c8:	00000793          	li	a5,0
   135cc:	d99ff06f          	j	13364 <_vfprintf_r+0x1984>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1355
					size = expt;
					if (flags & ALT)
						++size;
				} else
					size = ndig + (expt > 0 ?
						1 : 2 - expt);
   135d0:	00200793          	li	a5,2
   135d4:	40e787bb          	subw	a5,a5,a4
   135d8:	e59ff06f          	j	13430 <_vfprintf_r+0x1a50>
exponent():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1911

	p = p0;
	*p++ = isa ? 'p' - 'a' + fmtch : fmtch;
	if (exp < 0) {
		exp = -exp;
		*p++ = '-';
   135dc:	02d00713          	li	a4,45
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1910
# endif

	p = p0;
	*p++ = isa ? 'p' - 'a' + fmtch : fmtch;
	if (exp < 0) {
		exp = -exp;
   135e0:	40f007bb          	negw	a5,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1911
		*p++ = '-';
   135e4:	0ae100a3          	sb	a4,161(sp)
   135e8:	d31ff06f          	j	13318 <_vfprintf_r+0x1938>
   135ec:	08b107a3          	sb	a1,143(sp)
   135f0:	ed9fe06f          	j	124c8 <_vfprintf_r+0xae8>
   135f4:	00000793          	li	a5,0
   135f8:	891ff06f          	j	12e88 <_vfprintf_r+0x14a8>
   135fc:	08b107a3          	sb	a1,143(sp)
_vfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1195
				size = 1;
			}
			sign = '\0';
			break;
		case 'D':  /* extension */
			flags |= LONGINT;
   13600:	010c6c13          	ori	s8,s8,16
   13604:	f2dfe06f          	j	12530 <_vfprintf_r+0xb50>
   13608:	08b107a3          	sb	a1,143(sp)
   1360c:	ef5fe06f          	j	12500 <_vfprintf_r+0xb20>
   13610:	09812783          	lw	a5,152(sp)
   13614:	cedff06f          	j	13300 <_vfprintf_r+0x1920>
   13618:	08b107a3          	sb	a1,143(sp)
   1361c:	e2dfe06f          	j	12448 <_vfprintf_r+0xa68>
   13620:	08b107a3          	sb	a1,143(sp)
   13624:	dd5fe06f          	j	123f8 <_vfprintf_r+0xa18>
exponent():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1921
	if (exp > 9) {
		do {
			*--t = to_char (exp % 10);
		} while ((exp /= 10) > 9);
		*--t = to_char (exp);
		for (; t < expbuf + MAXEXPLEN; *p++ = *t++);
   13628:	0a210793          	addi	a5,sp,162
   1362c:	d09ff06f          	j	13334 <_vfprintf_r+0x1954>
   13630:	08b107a3          	sb	a1,143(sp)
   13634:	f41fe06f          	j	12574 <_vfprintf_r+0xb94>
   13638:	08b107a3          	sb	a1,143(sp)
   1363c:	f28fe06f          	j	11d64 <_vfprintf_r+0x384>
   13640:	08b107a3          	sb	a1,143(sp)
   13644:	9c5fe06f          	j	12008 <_vfprintf_r+0x628>
   13648:	08b107a3          	sb	a1,143(sp)
_vfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1533
			} else
				size = strlen (cp);

			break;
		case 'U': /* extension */
			flags |= LONGINT;
   1364c:	010c6c13          	ori	s8,s8,16
   13650:	979fe06f          	j	11fc8 <_vfprintf_r+0x5e8>
   13654:	08b107a3          	sb	a1,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1408
#endif
			else
				*GET_ARG (N, ap, int_ptr_t) = ret;
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
   13658:	010c6c13          	ori	s8,s8,16
   1365c:	929fe06f          	j	11f84 <_vfprintf_r+0x5a4>
   13660:	08b107a3          	sb	a1,143(sp)
   13664:	881fe06f          	j	11ee4 <_vfprintf_r+0x504>

0000000000013668 <vfprintf>:
vfprintf():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:657
       FILE * fp         _AND
       _CONST char *fmt0 _AND
       va_list ap)
{
  int result;
  result = _VFPRINTF_R (_REENT, fp, fmt0, ap);
   13668:	00060693          	mv	a3,a2
   1366c:	00058613          	mv	a2,a1
   13670:	00050593          	mv	a1,a0
   13674:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
   13678:	b68fe06f          	j	119e0 <_vfprintf_r>

000000000001367c <__sbprintf>:
__sbprintf():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:470
	int ret;
	FILE fake;
	unsigned char buf[BUFSIZ];

	/* copy the important variables */
	fake._flags = fp->_flags & ~__SNBF;
   1367c:	0105d783          	lhu	a5,16(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:471
	fake._flags2 = fp->_flags2;
   13680:	0ac5ae03          	lw	t3,172(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:472
	fake._file = fp->_file;
   13684:	0125d303          	lhu	t1,18(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:473
	fake._cookie = fp->_cookie;
   13688:	0305b883          	ld	a7,48(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:474
	fake._write = fp->_write;
   1368c:	0405b803          	ld	a6,64(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:464
_DEFUN(__sbprintf, (rptr, fp, fmt, ap),
       struct _reent *rptr _AND
       register FILE *fp   _AND
       _CONST char *fmt  _AND
       va_list ap)
{
   13690:	b3010113          	addi	sp,sp,-1232
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:470
	int ret;
	FILE fake;
	unsigned char buf[BUFSIZ];

	/* copy the important variables */
	fake._flags = fp->_flags & ~__SNBF;
   13694:	ffd7f793          	andi	a5,a5,-3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:478
	fake._cookie = fp->_cookie;
	fake._write = fp->_write;

	/* set up the buffer */
	fake._bf._base = fake._p = buf;
	fake._bf._size = fake._w = sizeof (buf);
   13698:	40000713          	li	a4,1024
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:464
_DEFUN(__sbprintf, (rptr, fp, fmt, ap),
       struct _reent *rptr _AND
       register FILE *fp   _AND
       _CONST char *fmt  _AND
       va_list ap)
{
   1369c:	4c813023          	sd	s0,1216(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:470
	int ret;
	FILE fake;
	unsigned char buf[BUFSIZ];

	/* copy the important variables */
	fake._flags = fp->_flags & ~__SNBF;
   136a0:	00f11823          	sh	a5,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:464
_DEFUN(__sbprintf, (rptr, fp, fmt, ap),
       struct _reent *rptr _AND
       register FILE *fp   _AND
       _CONST char *fmt  _AND
       va_list ap)
{
   136a4:	00058413          	mv	s0,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:477
	fake._file = fp->_file;
	fake._cookie = fp->_cookie;
	fake._write = fp->_write;

	/* set up the buffer */
	fake._bf._base = fake._p = buf;
   136a8:	0b010793          	addi	a5,sp,176
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:485
#ifndef __SINGLE_THREAD__
	__lock_init_recursive (fake._lock);
#endif

	/* do the work, then copy any error status */
	ret = _VFPRINTF_R (rptr, &fake, fmt, ap);
   136ac:	00010593          	mv	a1,sp
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:464
_DEFUN(__sbprintf, (rptr, fp, fmt, ap),
       struct _reent *rptr _AND
       register FILE *fp   _AND
       _CONST char *fmt  _AND
       va_list ap)
{
   136b0:	4a913c23          	sd	s1,1208(sp)
   136b4:	4b213823          	sd	s2,1200(sp)
   136b8:	4c113423          	sd	ra,1224(sp)
   136bc:	00050913          	mv	s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:471
	FILE fake;
	unsigned char buf[BUFSIZ];

	/* copy the important variables */
	fake._flags = fp->_flags & ~__SNBF;
	fake._flags2 = fp->_flags2;
   136c0:	0bc12623          	sw	t3,172(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:472
	fake._file = fp->_file;
   136c4:	00611923          	sh	t1,18(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:473
	fake._cookie = fp->_cookie;
   136c8:	03113823          	sd	a7,48(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:474
	fake._write = fp->_write;
   136cc:	05013023          	sd	a6,64(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:477

	/* set up the buffer */
	fake._bf._base = fake._p = buf;
   136d0:	00f13023          	sd	a5,0(sp)
   136d4:	00f13c23          	sd	a5,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:478
	fake._bf._size = fake._w = sizeof (buf);
   136d8:	00e12623          	sw	a4,12(sp)
   136dc:	02e12023          	sw	a4,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:479
	fake._lbfsize = 0;	/* not actually used, but Just In Case */
   136e0:	02012423          	sw	zero,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:485
#ifndef __SINGLE_THREAD__
	__lock_init_recursive (fake._lock);
#endif

	/* do the work, then copy any error status */
	ret = _VFPRINTF_R (rptr, &fake, fmt, ap);
   136e4:	afcfe0ef          	jal	119e0 <_vfprintf_r>
   136e8:	00050493          	mv	s1,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:486
	if (ret >= 0 && _fflush_r (rptr, &fake))
   136ec:	00054a63          	bltz	a0,13700 <__sbprintf+0x84>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:486 (discriminator 1)
   136f0:	00010593          	mv	a1,sp
   136f4:	00090513          	mv	a0,s2
   136f8:	4cd020ef          	jal	163c4 <_fflush_r>
   136fc:	02051c63          	bnez	a0,13734 <__sbprintf+0xb8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:488
		ret = EOF;
	if (fake._flags & __SERR)
   13700:	01015783          	lhu	a5,16(sp)
   13704:	0407f793          	andi	a5,a5,64
   13708:	00078863          	beqz	a5,13718 <__sbprintf+0x9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:489
		fp->_flags |= __SERR;
   1370c:	01045783          	lhu	a5,16(s0)
   13710:	0407e793          	ori	a5,a5,64
   13714:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:495

#ifndef __SINGLE_THREAD__
	__lock_close_recursive (fake._lock);
#endif
	return (ret);
}
   13718:	4c813083          	ld	ra,1224(sp)
   1371c:	00048513          	mv	a0,s1
   13720:	4c013403          	ld	s0,1216(sp)
   13724:	4b813483          	ld	s1,1208(sp)
   13728:	4b013903          	ld	s2,1200(sp)
   1372c:	4d010113          	addi	sp,sp,1232
   13730:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:487
#endif

	/* do the work, then copy any error status */
	ret = _VFPRINTF_R (rptr, &fake, fmt, ap);
	if (ret >= 0 && _fflush_r (rptr, &fake))
		ret = EOF;
   13734:	fff00493          	li	s1,-1
   13738:	fc9ff06f          	j	13700 <__sbprintf+0x84>

000000000001373c <__svfscanf_r>:
__svfscanf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:432
_DEFUN(__SVFSCANF_R, (rptr, fp, fmt0, ap),
       struct _reent *rptr _AND
       register FILE *fp   _AND
       char _CONST *fmt0   _AND
       va_list ap)
{
   1373c:	cb010113          	addi	sp,sp,-848
   13740:	31813023          	sd	s8,768(sp)
   13744:	00058c13          	mv	s8,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:499
# define GET_ARG(n, ap, type) (va_arg (ap, type))
#endif

  _newlib_flockfile_start (fp);

  ORIENT (fp, -1);
   13748:	01059583          	lh	a1,16(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:432
_DEFUN(__SVFSCANF_R, (rptr, fp, fmt0, ap),
       struct _reent *rptr _AND
       register FILE *fp   _AND
       char _CONST *fmt0   _AND
       va_list ap)
{
   1374c:	34813023          	sd	s0,832(sp)
   13750:	32913c23          	sd	s1,824(sp)
   13754:	31613823          	sd	s6,784(sp)
   13758:	34113423          	sd	ra,840(sp)
   1375c:	33213823          	sd	s2,816(sp)
   13760:	33313423          	sd	s3,808(sp)
   13764:	33413023          	sd	s4,800(sp)
   13768:	31513c23          	sd	s5,792(sp)
   1376c:	31713423          	sd	s7,776(sp)
   13770:	2f913c23          	sd	s9,760(sp)
   13774:	2fa13823          	sd	s10,752(sp)
   13778:	2fb13423          	sd	s11,744(sp)
   1377c:	2c813c27          	fsd	fs0,728(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:499
# define GET_ARG(n, ap, type) (va_arg (ap, type))
#endif

  _newlib_flockfile_start (fp);

  ORIENT (fp, -1);
   13780:	03259793          	slli	a5,a1,0x32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:432
_DEFUN(__SVFSCANF_R, (rptr, fp, fmt0, ap),
       struct _reent *rptr _AND
       register FILE *fp   _AND
       char _CONST *fmt0   _AND
       va_list ap)
{
   13784:	00050493          	mv	s1,a0
   13788:	00060413          	mv	s0,a2
   1378c:	00068b13          	mv	s6,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:499
# define GET_ARG(n, ap, type) (va_arg (ap, type))
#endif

  _newlib_flockfile_start (fp);

  ORIENT (fp, -1);
   13790:	0207c263          	bltz	a5,137b4 <__svfscanf_r+0x78>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:497 (discriminator 1)
		 : va_arg (ap, void *)))))
#else
# define GET_ARG(n, ap, type) (va_arg (ap, type))
#endif

  _newlib_flockfile_start (fp);
   13794:	0acc2603          	lw	a2,172(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:499

  ORIENT (fp, -1);
   13798:	ffffe737          	lui	a4,0xffffe
   1379c:	000026b7          	lui	a3,0x2
   137a0:	fff7071b          	addiw	a4,a4,-1
   137a4:	00d5e5b3          	or	a1,a1,a3
   137a8:	00e67733          	and	a4,a2,a4
   137ac:	00bc1823          	sh	a1,16(s8)
   137b0:	0aec2623          	sw	a4,172(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1084
	      c = *fp->_p;
	      /*
	       * Switch on the character; `goto ok' if we
	       * accept it as a part of number.
	       */
	      switch (c)
   137b4:	000217b7          	lui	a5,0x21
   137b8:	aa878793          	addi	a5,a5,-1368 # 20aa8 <zeroes.4194+0x330>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1154
		case 'e':
		case 'f':
		  /* no need to fix base here */
		  if (base <= 10)
		    break;	/* not legal here */
		  flags &= ~(SIGNOK | PFXOK | NDIGITS | NNZDIGITS);
   137bc:	fffff737          	lui	a4,0xfffff
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:551
       */

    again:
      c = *fmt++;

      switch (c)
   137c0:	000209b7          	lui	s3,0x20
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1084
	      c = *fp->_p;
	      /*
	       * Switch on the character; `goto ok' if we
	       * accept it as a part of number.
	       */
	      switch (c)
   137c4:	00f13c23          	sd	a5,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1154
		case 'e':
		case 'f':
		  /* no need to fix base here */
		  if (base <= 10)
		    break;	/* not legal here */
		  flags &= ~(SIGNOK | PFXOK | NDIGITS | NNZDIGITS);
   137c8:	47f7079b          	addiw	a5,a4,1151
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:917
		}
	      nread += sum;
	    }
	  else
	    {
	      size_t r = _fread_r (rptr, (_PTR) GET_ARG (N, ap, char *), 1, width, fp);
   137cc:	02013423          	sd	zero,40(sp)
   137d0:	00012823          	sw	zero,16(sp)
   137d4:	00000b93          	li	s7,0
   137d8:	00012a23          	sw	zero,20(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:551
       */

    again:
      c = *fmt++;

      switch (c)
   137dc:	78898993          	addi	s3,s3,1928 # 20788 <zeroes.4194+0x10>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1154
		case 'e':
		case 'f':
		  /* no need to fix base here */
		  if (base <= 10)
		    break;	/* not legal here */
		  flags &= ~(SIGNOK | PFXOK | NDIGITS | NNZDIGITS);
   137e0:	04f12423          	sw	a5,72(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:510
#endif

  for (;;)
    {
#ifndef _MB_CAPABLE
      wc = *fmt;
   137e4:	00044703          	lbu	a4,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:520
	wc = 0xFFFD; /* Unicode replacement character */
	nbytes = 1;
	memset (&state, 0, sizeof (state));
      }
#endif
      fmt += nbytes;
   137e8:	00140413          	addi	s0,s0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:510
#endif

  for (;;)
    {
#ifndef _MB_CAPABLE
      wc = *fmt;
   137ec:	06e12223          	sw	a4,100(sp)
   137f0:	00070693          	mv	a3,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:522
	memset (&state, 0, sizeof (state));
      }
#endif
      fmt += nbytes;

      if (wc == 0)
   137f4:	06070e63          	beqz	a4,13870 <__svfscanf_r+0x134>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:524 (discriminator 1)
	goto all_done;
      if (nbytes == 1 && isspace (wc))
   137f8:	8281b503          	ld	a0,-2008(gp) # 24468 <__ctype_ptr__>
   137fc:	00e50733          	add	a4,a0,a4
   13800:	00174703          	lbu	a4,1(a4) # fffffffffffff001 <_end+0xfffffffffffd81e9>
   13804:	00877713          	andi	a4,a4,8
   13808:	06070863          	beqz	a4,13878 <__svfscanf_r+0x13c>
   1380c:	008c2703          	lw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:528
	{
	  for (;;)
	    {
	      if (BufferEmpty || !isspace (*fp->_p))
   13810:	02e05e63          	blez	a4,1384c <__svfscanf_r+0x110>
   13814:	000c3683          	ld	a3,0(s8)
   13818:	8281b703          	ld	a4,-2008(gp) # 24468 <__ctype_ptr__>
   1381c:	0006c603          	lbu	a2,0(a3) # 2000 <_ftext-0xe000>
   13820:	00c70733          	add	a4,a4,a2
   13824:	00174703          	lbu	a4,1(a4)
   13828:	00877713          	andi	a4,a4,8
   1382c:	fa070ce3          	beqz	a4,137e4 <__svfscanf_r+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:530
		break;
	      nread++, fp->_r--, fp->_p++;
   13830:	008c2703          	lw	a4,8(s8)
   13834:	00168693          	addi	a3,a3,1
   13838:	00dc3023          	sd	a3,0(s8)
   1383c:	fff7071b          	addiw	a4,a4,-1
   13840:	00ec2423          	sw	a4,8(s8)
   13844:	001b8b9b          	addiw	s7,s7,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:528
	goto all_done;
      if (nbytes == 1 && isspace (wc))
	{
	  for (;;)
	    {
	      if (BufferEmpty || !isspace (*fp->_p))
   13848:	fce046e3          	bgtz	a4,13814 <__svfscanf_r+0xd8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:528 (discriminator 1)
   1384c:	000c0593          	mv	a1,s8
   13850:	00048513          	mv	a0,s1
   13854:	1f5050ef          	jal	19248 <__srefill_r>
   13858:	fa050ee3          	beqz	a0,13814 <__svfscanf_r+0xd8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:510
#endif

  for (;;)
    {
#ifndef _MB_CAPABLE
      wc = *fmt;
   1385c:	00044703          	lbu	a4,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:520
	wc = 0xFFFD; /* Unicode replacement character */
	nbytes = 1;
	memset (&state, 0, sizeof (state));
      }
#endif
      fmt += nbytes;
   13860:	00140413          	addi	s0,s0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:510
#endif

  for (;;)
    {
#ifndef _MB_CAPABLE
      wc = *fmt;
   13864:	06e12223          	sw	a4,100(sp)
   13868:	00070693          	mv	a3,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:522
	memset (&state, 0, sizeof (state));
      }
#endif
      fmt += nbytes;

      if (wc == 0)
   1386c:	f80716e3          	bnez	a4,137f8 <__svfscanf_r+0xbc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1551
	  if (flags & NDIGITS)
	    {
	      if (flags & EXPOK)
		{
		  /* no digits at all */
		  while (p > buf)
   13870:	01412503          	lw	a0,20(sp)
   13874:	06c0006f          	j	138e0 <__svfscanf_r+0x1a4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:534
		break;
	      nread++, fp->_r--, fp->_p++;
	    }
	  continue;
	}
      if (wc != '%')
   13878:	02500713          	li	a4,37
   1387c:	02e69663          	bne	a3,a4,138a8 <__svfscanf_r+0x16c>
   13880:	00000a93          	li	s5,0
   13884:	00000913          	li	s2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:551
       */

    again:
      c = *fmt++;

      switch (c)
   13888:	07800613          	li	a2,120
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:549
       * switch on the format.  continue if done; break once format
       * type is derived.
       */

    again:
      c = *fmt++;
   1388c:	00140413          	addi	s0,s0,1
   13890:	fff44683          	lbu	a3,-1(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:551

      switch (c)
   13894:	1ad66a63          	bltu	a2,a3,13a48 <__svfscanf_r+0x30c>
   13898:	00269713          	slli	a4,a3,0x2
   1389c:	01370733          	add	a4,a4,s3
   138a0:	00072703          	lw	a4,0(a4)
   138a4:	00070067          	jr	a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:558
	case '%':
	literal:
          lptr = fmt - nbytes;
          for (n = 0; n < nbytes; ++n)
            {
	      if (BufferEmpty)
   138a8:	008c2703          	lw	a4,8(s8)
   138ac:	58e05a63          	blez	a4,13e40 <__svfscanf_r+0x704>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:560
	        goto input_failure;
	      if (*fp->_p != *lptr)
   138b0:	000c3703          	ld	a4,0(s8)
   138b4:	fff44683          	lbu	a3,-1(s0)
   138b8:	00074603          	lbu	a2,0(a4)
   138bc:	fad61ae3          	bne	a2,a3,13870 <__svfscanf_r+0x134>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:562
	        goto match_failure;
	      fp->_r--, fp->_p++;
   138c0:	008c2683          	lw	a3,8(s8)
   138c4:	00170713          	addi	a4,a4,1
   138c8:	00ec3023          	sd	a4,0(s8)
   138cc:	fff6871b          	addiw	a4,a3,-1
   138d0:	00ec2423          	sw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:563
	      nread++;
   138d4:	001b8b9b          	addiw	s7,s7,1
   138d8:	f0dff06f          	j	137e4 <__svfscanf_r+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:797
	  /*
	   * Disgusting backwards compatibility hacks.	XXX
	   */
	case '\0':		/* compat */
	  _newlib_flockfile_exit (fp);
	  return EOF;
   138dc:	fff00513          	li	a0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1646
match_failure:
all_done:
  /* Return number of matches, which can be 0 on match failure.  */
  _newlib_flockfile_end (fp);
  return nassigned;
}
   138e0:	34813083          	ld	ra,840(sp)
   138e4:	34013403          	ld	s0,832(sp)
   138e8:	33813483          	ld	s1,824(sp)
   138ec:	33013903          	ld	s2,816(sp)
   138f0:	32813983          	ld	s3,808(sp)
   138f4:	32013a03          	ld	s4,800(sp)
   138f8:	31813a83          	ld	s5,792(sp)
   138fc:	31013b03          	ld	s6,784(sp)
   13900:	30813b83          	ld	s7,776(sp)
   13904:	30013c03          	ld	s8,768(sp)
   13908:	2f813c83          	ld	s9,760(sp)
   1390c:	2f013d03          	ld	s10,752(sp)
   13910:	2e813d83          	ld	s11,744(sp)
   13914:	2d813407          	fld	fs0,728(sp)
   13918:	35010113          	addi	sp,sp,848
   1391c:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   13920:	008c2703          	lw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:696
	  base = 8;
	  break;

	case 'u':
	  c = CT_INT;
	  ccfn = _strtoul_r;
   13924:	0001ba37          	lui	s4,0x1b
   13928:	cfca0793          	addi	a5,s4,-772 # 1acfc <_strtoul_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:803

	default:		/* compat */
	  if (isupper (c))
	    flags |= LONG;
	  c = CT_INT;
	  ccfn = (u_long (*)CCFN_PARAMS)_strtol_r;
   1392c:	02f13423          	sd	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:804
	  base = 10;
   13930:	00a00793          	li	a5,10
   13934:	00f12823          	sw	a5,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:802
	  return EOF;

	default:		/* compat */
	  if (isupper (c))
	    flags |= LONG;
	  c = CT_INT;
   13938:	00300c93          	li	s9,3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   1393c:	02e05e63          	blez	a4,13978 <__svfscanf_r+0x23c>
   13940:	000c3683          	ld	a3,0(s8)
   13944:	00c0006f          	j	13950 <__svfscanf_r+0x214>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:824
	{
	  while (isspace (*fp->_p))
	    {
	      nread++;
	      if (--fp->_r > 0)
		fp->_p++;
   13948:	00168693          	addi	a3,a3,1
   1394c:	00dc3023          	sd	a3,0(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:820
       * Consume leading white space, except for formats that
       * suppress this.
       */
      if ((flags & NOSKIP) == 0)
	{
	  while (isspace (*fp->_p))
   13950:	0006c603          	lbu	a2,0(a3)
   13954:	00c50733          	add	a4,a0,a2
   13958:	00174703          	lbu	a4,1(a4)
   1395c:	00877593          	andi	a1,a4,8
   13960:	58058063          	beqz	a1,13ee0 <__svfscanf_r+0x7a4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:823
	    {
	      nread++;
	      if (--fp->_r > 0)
   13964:	008c2703          	lw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:822
       */
      if ((flags & NOSKIP) == 0)
	{
	  while (isspace (*fp->_p))
	    {
	      nread++;
   13968:	001b8b9b          	addiw	s7,s7,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:823
	      if (--fp->_r > 0)
   1396c:	fff7071b          	addiw	a4,a4,-1
   13970:	00ec2423          	sw	a4,8(s8)
   13974:	fce04ae3          	bgtz	a4,13948 <__svfscanf_r+0x20c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:826
		fp->_p++;
	      else
	      if (__srefill_r (rptr, fp))
   13978:	000c0593          	mv	a1,s8
   1397c:	00048513          	mv	a0,s1
   13980:	0c9050ef          	jal	19248 <__srefill_r>
   13984:	04051863          	bnez	a0,139d4 <__svfscanf_r+0x298>
   13988:	8281b503          	ld	a0,-2008(gp) # 24468 <__ctype_ptr__>
   1398c:	fb5ff06f          	j	13940 <__svfscanf_r+0x204>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   13990:	008c2703          	lw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:730
	  flags |= LONG;
	  /* FALLTHROUGH */
#endif

	case 's':
	  c = CT_STRING;
   13994:	00200c93          	li	s9,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   13998:	fae044e3          	bgtz	a4,13940 <__svfscanf_r+0x204>
   1399c:	fddff06f          	j	13978 <__svfscanf_r+0x23c>
   139a0:	008c2703          	lw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:751
	  flags |= NOSKIP;
	  c = CT_CHAR;
	  break;

	case 'p':		/* pointer format is like hex */
	  flags |= POINTER | PFXOK;
   139a4:	220aea93          	ori	s5,s5,544
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:753
	  c = CT_INT;
	  ccfn = _strtoul_r;
   139a8:	0001ba37          	lui	s4,0x1b
   139ac:	cfca0793          	addi	a5,s4,-772 # 1acfc <_strtoul_r>
   139b0:	02f13423          	sd	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:754
	  base = 16;
   139b4:	01000793          	li	a5,16
   139b8:	00f12823          	sw	a5,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:752
	  c = CT_CHAR;
	  break;

	case 'p':		/* pointer format is like hex */
	  flags |= POINTER | PFXOK;
	  c = CT_INT;
   139bc:	00300c93          	li	s9,3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   139c0:	f8e040e3          	bgtz	a4,13940 <__svfscanf_r+0x204>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:826
	    {
	      nread++;
	      if (--fp->_r > 0)
		fp->_p++;
	      else
	      if (__srefill_r (rptr, fp))
   139c4:	000c0593          	mv	a1,s8
   139c8:	00048513          	mv	a0,s1
   139cc:	07d050ef          	jal	19248 <__srefill_r>
   139d0:	fa050ce3          	beqz	a0,13988 <__svfscanf_r+0x24c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1640
  /* On read failure, return EOF failure regardless of matches; errno
     should have been set prior to here.  On EOF failure (including
     invalid format string), return EOF if no matches yet, else number
     of matches made prior to failure.  */
  _newlib_flockfile_exit (fp);
  return nassigned && !(fp->_flags & __SERR) ? nassigned : EOF;
   139d4:	01412703          	lw	a4,20(sp)
   139d8:	fff00513          	li	a0,-1
   139dc:	f00702e3          	beqz	a4,138e0 <__svfscanf_r+0x1a4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1640 (discriminator 1)
   139e0:	010c5783          	lhu	a5,16(s8)
   139e4:	0407f793          	andi	a5,a5,64
   139e8:	ee079ce3          	bnez	a5,138e0 <__svfscanf_r+0x1a4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1640
   139ec:	00070513          	mv	a0,a4
   139f0:	ef1ff06f          	j	138e0 <__svfscanf_r+0x1a4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   139f4:	008c2703          	lw	a4,8(s8)
   139f8:	4ce05863          	blez	a4,13ec8 <__svfscanf_r+0x78c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:690
	case 'O':		/* compat */
	  flags |= LONG;
	  /* FALLTHROUGH */
	case 'o':
	  c = CT_INT;
	  ccfn = _strtoul_r;
   139fc:	0001ba37          	lui	s4,0x1b
   13a00:	cfca0793          	addi	a5,s4,-772 # 1acfc <_strtoul_r>
   13a04:	02f13423          	sd	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:691
	  base = 8;
   13a08:	00800793          	li	a5,8
   13a0c:	00f12823          	sw	a5,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:689

	case 'O':		/* compat */
	  flags |= LONG;
	  /* FALLTHROUGH */
	case 'o':
	  c = CT_INT;
   13a10:	00300c93          	li	s9,3
   13a14:	f2dff06f          	j	13940 <__svfscanf_r+0x204>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:758
	  ccfn = _strtoul_r;
	  base = 16;
	  break;

	case 'n':
	  if (flags & SUPPRESS)	/* ??? */
   13a18:	010af713          	andi	a4,s5,16
   13a1c:	dc0714e3          	bnez	a4,137e4 <__svfscanf_r+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:768
	      cp = GET_ARG (N, ap, char *);
	      *cp = nread;
	    }
	  else
#endif
	  if (flags & SHORT)
   13a20:	004af713          	andi	a4,s5,4
   13a24:	42070e63          	beqz	a4,13e60 <__svfscanf_r+0x724>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:771
	    {
	      sp = GET_ARG (N, ap, short *);
	      *sp = nread;
   13a28:	000b3703          	ld	a4,0(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:770
	    }
	  else
#endif
	  if (flags & SHORT)
	    {
	      sp = GET_ARG (N, ap, short *);
   13a2c:	008b0b13          	addi	s6,s6,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:771
	      *sp = nread;
   13a30:	01771023          	sh	s7,0(a4)
   13a34:	db1ff06f          	j	137e4 <__svfscanf_r+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:549
       * switch on the format.  continue if done; break once format
       * type is derived.
       */

    again:
      c = *fmt++;
   13a38:	00140413          	addi	s0,s0,1
   13a3c:	fff44683          	lbu	a3,-1(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:580
	      ++fmt;
	      flags |= LONGDBL;
	    }
	  else
#endif
	    flags |= LONG;
   13a40:	001aea93          	ori	s5,s5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:551
       */

    again:
      c = *fmt++;

      switch (c)
   13a44:	e4d67ae3          	bleu	a3,a2,13898 <__svfscanf_r+0x15c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:800
	case '\0':		/* compat */
	  _newlib_flockfile_exit (fp);
	  return EOF;

	default:		/* compat */
	  if (isupper (c))
   13a48:	00d506b3          	add	a3,a0,a3
   13a4c:	0016c703          	lbu	a4,1(a3)
   13a50:	00100693          	li	a3,1
   13a54:	00377713          	andi	a4,a4,3
   13a58:	3ed70e63          	beq	a4,a3,13e54 <__svfscanf_r+0x718>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   13a5c:	008c2703          	lw	a4,8(s8)
   13a60:	1440006f          	j	13ba4 <__svfscanf_r+0x468>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:594
	      ++fmt;
	      flags |= CHAR;
	    }
	  else
#endif
	    flags |= SHORT;
   13a64:	004aea93          	ori	s5,s5,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:595
	  goto again;
   13a68:	e25ff06f          	j	1388c <__svfscanf_r+0x150>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   13a6c:	008c2703          	lw	a4,8(s8)
   13a70:	40e05463          	blez	a4,13e78 <__svfscanf_r+0x73c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:675
	case 'D':		/* compat */
	  flags |= LONG;
	  /* FALLTHROUGH */
	case 'd':
	  c = CT_INT;
	  ccfn = (u_long (*)CCFN_PARAMS)_strtol_r;
   13a74:	0001ba37          	lui	s4,0x1b
   13a78:	b0ca0793          	addi	a5,s4,-1268 # 1ab0c <_strtol_r>
   13a7c:	02f13423          	sd	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:676
	  base = 10;
   13a80:	00a00793          	li	a5,10
   13a84:	00f12823          	sw	a5,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:674

	case 'D':		/* compat */
	  flags |= LONG;
	  /* FALLTHROUGH */
	case 'd':
	  c = CT_INT;
   13a88:	00300c93          	li	s9,3
   13a8c:	eb5ff06f          	j	13940 <__svfscanf_r+0x204>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   13a90:	008c2703          	lw	a4,8(s8)
   13a94:	34e05663          	blez	a4,13de0 <__svfscanf_r+0x6a4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:844
      switch (c)
	{

	case CT_CHAR:
	  /* scan arbitrary characters (sets NOSKIP) */
	  if (width == 0)
   13a98:	00091463          	bnez	s2,13aa0 <__svfscanf_r+0x364>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:845
	    width = 1;
   13a9c:	00100913          	li	s2,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:847
#if !defined(_ELIX_LEVEL) || _ELIX_LEVEL >= 2
          if (flags & LONG)
   13aa0:	001af713          	andi	a4,s5,1
   13aa4:	22071063          	bnez	a4,13cc4 <__svfscanf_r+0x588>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:888
              if (!(flags & SUPPRESS))
                nassigned++;
            }
          else
#endif
        	  if (flags & SUPPRESS)
   13aa8:	010afa93          	andi	s5,s5,16
   13aac:	360a8063          	beqz	s5,13e0c <__svfscanf_r+0x6d0>
   13ab0:	00000a93          	li	s5,0
   13ab4:	0280006f          	j	13adc <__svfscanf_r+0x3a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:897
		{
		  if ((n = fp->_r) < (int)width)
		    {
		      sum += n;
		      width -= n;
		      fp->_p += n;
   13ab8:	000c3683          	ld	a3,0(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:898
		      if (__srefill_r (rptr, fp))
   13abc:	000c0593          	mv	a1,s8
   13ac0:	00048513          	mv	a0,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:897
		{
		  if ((n = fp->_r) < (int)width)
		    {
		      sum += n;
		      width -= n;
		      fp->_p += n;
   13ac4:	00e686b3          	add	a3,a3,a4
   13ac8:	00dc3023          	sd	a3,0(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:895
	      size_t sum = 0;
	      for (;;)
		{
		  if ((n = fp->_r) < (int)width)
		    {
		      sum += n;
   13acc:	00ea8ab3          	add	s5,s5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:896
		      width -= n;
   13ad0:	40e90933          	sub	s2,s2,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:898
		      fp->_p += n;
		      if (__srefill_r (rptr, fp))
   13ad4:	774050ef          	jal	19248 <__srefill_r>
   13ad8:	30051e63          	bnez	a0,13df4 <__svfscanf_r+0x6b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:893
        	  if (flags & SUPPRESS)
	    {
	      size_t sum = 0;
	      for (;;)
		{
		  if ((n = fp->_r) < (int)width)
   13adc:	008c2703          	lw	a4,8(s8)
   13ae0:	0009069b          	sext.w	a3,s2
   13ae4:	fcd74ae3          	blt	a4,a3,13ab8 <__svfscanf_r+0x37c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:909
		    }
		  else
		    {
		      sum += width;
		      fp->_r -= width;
		      fp->_p += width;
   13ae8:	000c3603          	ld	a2,0(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:908
			}
		    }
		  else
		    {
		      sum += width;
		      fp->_r -= width;
   13aec:	40d7073b          	subw	a4,a4,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:907
			  break;
			}
		    }
		  else
		    {
		      sum += width;
   13af0:	012a8ab3          	add	s5,s5,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:909
		      fp->_r -= width;
		      fp->_p += width;
   13af4:	01260333          	add	t1,a2,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:908
			}
		    }
		  else
		    {
		      sum += width;
		      fp->_r -= width;
   13af8:	00ec2423          	sw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:909
		      fp->_p += width;
   13afc:	006c3023          	sd	t1,0(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:913
		      break;
		    }
		}
	      nread += sum;
   13b00:	017a8bbb          	addw	s7,s5,s7
   13b04:	ce1ff06f          	j	137e4 <__svfscanf_r+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:734
	case 's':
	  c = CT_STRING;
	  break;

	case '[':
	  fmt = (u_char *) __sccl (ccltab, (unsigned char *) fmt);
   13b08:	00040593          	mv	a1,s0
   13b0c:	07010513          	addi	a0,sp,112
   13b10:	181050ef          	jal	19490 <__sccl>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   13b14:	008c2703          	lw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:734
	case 's':
	  c = CT_STRING;
	  break;

	case '[':
	  fmt = (u_char *) __sccl (ccltab, (unsigned char *) fmt);
   13b18:	00050413          	mv	s0,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   13b1c:	38e05063          	blez	a4,13e9c <__svfscanf_r+0x760>
   13b20:	000c3683          	ld	a3,0(s8)
   13b24:	0006c703          	lbu	a4,0(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:928
	    }
	  break;

	case CT_CCL:
	  /* scan a (nonempty) character class (sets NOSKIP) */
	  if (width == 0)
   13b28:	10090263          	beqz	s2,13c2c <__svfscanf_r+0x4f0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:931
	    width = ~0;		/* `infinity' */
	  /* take only those things in the class */
	  if (flags & SUPPRESS)
   13b2c:	010afa93          	andi	s5,s5,16
   13b30:	100a8463          	beqz	s5,13c38 <__svfscanf_r+0x4fc>
   13b34:	00000a93          	li	s5,0
   13b38:	0080006f          	j	13b40 <__svfscanf_r+0x404>
   13b3c:	0006c703          	lbu	a4,0(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:934
	    {
	      n = 0;
	      while (ccltab[*fp->_p])
   13b40:	2d010793          	addi	a5,sp,720
   13b44:	00e78733          	add	a4,a5,a4
   13b48:	da074703          	lbu	a4,-608(a4)
   13b4c:	2a070a63          	beqz	a4,13e00 <__svfscanf_r+0x6c4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:936
		{
		  n++, fp->_r--, fp->_p++;
   13b50:	008c2703          	lw	a4,8(s8)
   13b54:	00168693          	addi	a3,a3,1
   13b58:	00dc3023          	sd	a3,0(s8)
   13b5c:	fff7071b          	addiw	a4,a4,-1
   13b60:	00ec2423          	sw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:937
		  if (--width == 0)
   13b64:	fff90913          	addi	s2,s2,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:936
	  if (flags & SUPPRESS)
	    {
	      n = 0;
	      while (ccltab[*fp->_p])
		{
		  n++, fp->_r--, fp->_p++;
   13b68:	001a8a9b          	addiw	s5,s5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:937
		  if (--width == 0)
   13b6c:	14090863          	beqz	s2,13cbc <__svfscanf_r+0x580>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:939
		    break;
		  if (BufferEmpty)
   13b70:	fce046e3          	bgtz	a4,13b3c <__svfscanf_r+0x400>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:939 (discriminator 1)
   13b74:	000c0593          	mv	a1,s8
   13b78:	00048513          	mv	a0,s1
   13b7c:	6cc050ef          	jal	19248 <__srefill_r>
   13b80:	12051e63          	bnez	a0,13cbc <__svfscanf_r+0x580>
   13b84:	000c3683          	ld	a3,0(s8)
   13b88:	fb5ff06f          	j	13b3c <__svfscanf_r+0x400>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   13b8c:	008c2703          	lw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:719
	case 'E':
	case 'G':
	case 'e':
	case 'f':
	case 'g':
	  c = CT_FLOAT;
   13b90:	00400c93          	li	s9,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   13b94:	dae046e3          	bgtz	a4,13940 <__svfscanf_r+0x204>
   13b98:	de1ff06f          	j	13978 <__svfscanf_r+0x23c>
   13b9c:	008c2703          	lw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:671
	   * (According to ANSI, E and X formats are supposed to
	   * the same as e and x.  Sorry about that.)
	   */

	case 'D':		/* compat */
	  flags |= LONG;
   13ba0:	001aea93          	ori	s5,s5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:803

	default:		/* compat */
	  if (isupper (c))
	    flags |= LONG;
	  c = CT_INT;
	  ccfn = (u_long (*)CCFN_PARAMS)_strtol_r;
   13ba4:	0001ba37          	lui	s4,0x1b
   13ba8:	b0ca0793          	addi	a5,s4,-1268 # 1ab0c <_strtol_r>
   13bac:	d81ff06f          	j	1392c <__svfscanf_r+0x1f0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:690
	case 'O':		/* compat */
	  flags |= LONG;
	  /* FALLTHROUGH */
	case 'o':
	  c = CT_INT;
	  ccfn = _strtoul_r;
   13bb0:	0001ba37          	lui	s4,0x1b
   13bb4:	cfca0793          	addi	a5,s4,-772 # 1acfc <_strtoul_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   13bb8:	008c2703          	lw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:690
	case 'O':		/* compat */
	  flags |= LONG;
	  /* FALLTHROUGH */
	case 'o':
	  c = CT_INT;
	  ccfn = _strtoul_r;
   13bbc:	02f13423          	sd	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:691
	  base = 8;
   13bc0:	00800793          	li	a5,8
   13bc4:	00f12823          	sw	a5,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:686
	  ccfn = (u_long (*)CCFN_PARAMS)_strtol_r;
	  base = 0;
	  break;

	case 'O':		/* compat */
	  flags |= LONG;
   13bc8:	001aea93          	ori	s5,s5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:689
	  /* FALLTHROUGH */
	case 'o':
	  c = CT_INT;
   13bcc:	00300c93          	li	s9,3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   13bd0:	d6e048e3          	bgtz	a4,13940 <__svfscanf_r+0x204>
   13bd4:	da5ff06f          	j	13978 <__svfscanf_r+0x23c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:583
	  else
#endif
	    flags |= LONG;
	  goto again;
	case 'L':
	  flags |= LONGDBL;
   13bd8:	002aea93          	ori	s5,s5,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:584
	  goto again;
   13bdc:	cb1ff06f          	j	1388c <__svfscanf_r+0x150>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   13be0:	008c2703          	lw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:702
	  base = 10;
	  break;

	case 'X':
	case 'x':
	  flags |= PFXOK;	/* enable 0x prefixing */
   13be4:	200aea93          	ori	s5,s5,512
   13be8:	dc1ff06f          	j	139a8 <__svfscanf_r+0x26c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:646
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	  width = width * 10 + c - '0';
   13bec:	00191713          	slli	a4,s2,0x1
   13bf0:	00391313          	slli	t1,s2,0x3
   13bf4:	00670333          	add	t1,a4,t1
   13bf8:	fd068693          	addi	a3,a3,-48
   13bfc:	00668933          	add	s2,a3,t1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:647
	  goto again;
   13c00:	c8dff06f          	j	1388c <__svfscanf_r+0x150>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:569
              ++lptr;
            }
	  continue;

	case '*':
	  flags |= SUPPRESS;
   13c04:	010aea93          	ori	s5,s5,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:570
	  goto again;
   13c08:	c85ff06f          	j	1388c <__svfscanf_r+0x150>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   13c0c:	008c2703          	lw	a4,8(s8)
   13c10:	2ae05063          	blez	a4,13eb0 <__svfscanf_r+0x774>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:681
	  base = 10;
	  break;

	case 'i':
	  c = CT_INT;
	  ccfn = (u_long (*)CCFN_PARAMS)_strtol_r;
   13c14:	0001ba37          	lui	s4,0x1b
   13c18:	b0ca0793          	addi	a5,s4,-1268 # 1ab0c <_strtol_r>
   13c1c:	02f13423          	sd	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:682
	  base = 0;
   13c20:	00012823          	sw	zero,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:680
	  ccfn = (u_long (*)CCFN_PARAMS)_strtol_r;
	  base = 10;
	  break;

	case 'i':
	  c = CT_INT;
   13c24:	00300c93          	li	s9,3
   13c28:	d19ff06f          	j	13940 <__svfscanf_r+0x204>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:931
	case CT_CCL:
	  /* scan a (nonempty) character class (sets NOSKIP) */
	  if (width == 0)
	    width = ~0;		/* `infinity' */
	  /* take only those things in the class */
	  if (flags & SUPPRESS)
   13c2c:	010afa93          	andi	s5,s5,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:929
	  break;

	case CT_CCL:
	  /* scan a (nonempty) character class (sets NOSKIP) */
	  if (width == 0)
	    width = ~0;		/* `infinity' */
   13c30:	fff00913          	li	s2,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:931
	  /* take only those things in the class */
	  if (flags & SUPPRESS)
   13c34:	f00a90e3          	bnez	s5,13b34 <__svfscanf_r+0x3f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:951
	      if (n == 0)
		goto match_failure;
	    }
	  else
	    {
	      p0 = p = GET_ARG (N, ap, char *);
   13c38:	000b3a83          	ld	s5,0(s6)
   13c3c:	008b0b13          	addi	s6,s6,8
   13c40:	012a8d33          	add	s10,s5,s2
   13c44:	000a8c93          	mv	s9,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:952
	      while (ccltab[*fp->_p])
   13c48:	00c0006f          	j	13c54 <__svfscanf_r+0x518>
   13c4c:	000c3683          	ld	a3,0(s8)
   13c50:	0006c703          	lbu	a4,0(a3)
   13c54:	2d010793          	addi	a5,sp,720
   13c58:	00e78733          	add	a4,a5,a4
   13c5c:	da074703          	lbu	a4,-608(a4)
   13c60:	04070263          	beqz	a4,13ca4 <__svfscanf_r+0x568>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:954
		{
		  fp->_r--;
   13c64:	008c2703          	lw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:955
		  *p++ = *fp->_p++;
   13c68:	00168613          	addi	a2,a3,1
   13c6c:	00cc3023          	sd	a2,0(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:954
	  else
	    {
	      p0 = p = GET_ARG (N, ap, char *);
	      while (ccltab[*fp->_p])
		{
		  fp->_r--;
   13c70:	fff7071b          	addiw	a4,a4,-1
   13c74:	00ec2423          	sw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:955
		  *p++ = *fp->_p++;
   13c78:	0006c703          	lbu	a4,0(a3)
   13c7c:	001c8c93          	addi	s9,s9,1
   13c80:	feec8fa3          	sb	a4,-1(s9)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:956
		  if (--width == 0)
   13c84:	03ac8063          	beq	s9,s10,13ca4 <__svfscanf_r+0x568>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:958
		    break;
		  if (BufferEmpty)
   13c88:	008c2703          	lw	a4,8(s8)
   13c8c:	fce040e3          	bgtz	a4,13c4c <__svfscanf_r+0x510>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:958 (discriminator 1)
   13c90:	000c0593          	mv	a1,s8
   13c94:	00048513          	mv	a0,s1
   13c98:	5b0050ef          	jal	19248 <__srefill_r>
   13c9c:	fa0508e3          	beqz	a0,13c4c <__svfscanf_r+0x510>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:960
		    {
		      if (p == p0)
   13ca0:	d39a8ae3          	beq	s5,s9,139d4 <__svfscanf_r+0x298>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:965
			goto input_failure;
		      break;
		    }
		}
	      n = p - p0;
   13ca4:	415c8abb          	subw	s5,s9,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:966
	      if (n == 0)
   13ca8:	bc0a84e3          	beqz	s5,13870 <__svfscanf_r+0x134>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:969
		goto match_failure;
	      *p = 0;
	      nassigned++;
   13cac:	01412783          	lw	a5,20(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:968
		    }
		}
	      n = p - p0;
	      if (n == 0)
		goto match_failure;
	      *p = 0;
   13cb0:	000c8023          	sb	zero,0(s9)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:969
	      nassigned++;
   13cb4:	0017879b          	addiw	a5,a5,1
   13cb8:	00f12a23          	sw	a5,20(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1041
		  if (--width == 0)
		    break;
		  if (BufferEmpty)
		    break;
		}
	      nread += n;
   13cbc:	015b8bbb          	addw	s7,s7,s5
   13cc0:	b25ff06f          	j	137e4 <__svfscanf_r+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:851
#if !defined(_ELIX_LEVEL) || _ELIX_LEVEL >= 2
          if (flags & LONG)
            {
              mbstate_t state;
              memset (&state, 0, sizeof (mbstate_t));
              if ((flags & SUPPRESS) == 0)
   13cc4:	010af793          	andi	a5,s5,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:850
	    width = 1;
#if !defined(_ELIX_LEVEL) || _ELIX_LEVEL >= 2
          if (flags & LONG)
            {
              mbstate_t state;
              memset (&state, 0, sizeof (mbstate_t));
   13cc8:	06810c93          	addi	s9,sp,104
   13ccc:	00800613          	li	a2,8
   13cd0:	00000593          	li	a1,0
   13cd4:	000c8513          	mv	a0,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:851
              if ((flags & SUPPRESS) == 0)
   13cd8:	00078a13          	mv	s4,a5
   13cdc:	00f12423          	sw	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:854
                wcp = GET_ARG (N, ap, wchar_t *);
              else
                wcp = NULL;
   13ce0:	00000a93          	li	s5,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:850
	    width = 1;
#if !defined(_ELIX_LEVEL) || _ELIX_LEVEL >= 2
          if (flags & LONG)
            {
              mbstate_t state;
              memset (&state, 0, sizeof (mbstate_t));
   13ce4:	68d030ef          	jal	17b70 <memset>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:851
              if ((flags & SUPPRESS) == 0)
   13ce8:	0e0a0663          	beqz	s4,13dd4 <__svfscanf_r+0x698>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:855
                wcp = GET_ARG (N, ap, wchar_t *);
              else
                wcp = NULL;
              n = 0;
   13cec:	00000a13          	li	s4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:863
                  if (n == MB_CUR_MAX)
                    goto input_failure;
                  buf[n++] = *fp->_p;
                  fp->_r -= 1;
                  fp->_p += 1;
                  if ((mbslen = _mbrtowc_r (rptr, wcp, buf, n, &state))
   13cf0:	fff00d13          	li	s10,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:858
              else
                wcp = NULL;
              n = 0;
              while (width != 0)
                {
                  if (n == MB_CUR_MAX)
   13cf4:	029030ef          	jal	1751c <__locale_mb_cur_max>
   13cf8:	cd450ee3          	beq	a0,s4,139d4 <__svfscanf_r+0x298>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:860
                    goto input_failure;
                  buf[n++] = *fp->_p;
   13cfc:	000c3683          	ld	a3,0(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:861
                  fp->_r -= 1;
   13d00:	008c2603          	lw	a2,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:860
              n = 0;
              while (width != 0)
                {
                  if (n == MB_CUR_MAX)
                    goto input_failure;
                  buf[n++] = *fp->_p;
   13d04:	001a0d9b          	addiw	s11,s4,1
   13d08:	0006ce83          	lbu	t4,0(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:861
                  fp->_r -= 1;
   13d0c:	fff6061b          	addiw	a2,a2,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:862
                  fp->_p += 1;
   13d10:	00168693          	addi	a3,a3,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:860
              n = 0;
              while (width != 0)
                {
                  if (n == MB_CUR_MAX)
                    goto input_failure;
                  buf[n++] = *fp->_p;
   13d14:	2d010793          	addi	a5,sp,720
   13d18:	014788b3          	add	a7,a5,s4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:861
                  fp->_r -= 1;
   13d1c:	00cc2423          	sw	a2,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:862
                  fp->_p += 1;
   13d20:	00dc3023          	sd	a3,0(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:863
                  if ((mbslen = _mbrtowc_r (rptr, wcp, buf, n, &state))
   13d24:	000c8713          	mv	a4,s9
   13d28:	000d8693          	mv	a3,s11
   13d2c:	17010613          	addi	a2,sp,368
   13d30:	000a8593          	mv	a1,s5
   13d34:	00048513          	mv	a0,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:860
              n = 0;
              while (width != 0)
                {
                  if (n == MB_CUR_MAX)
                    goto input_failure;
                  buf[n++] = *fp->_p;
   13d38:	ebd88023          	sb	t4,-352(a7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:863
                  fp->_r -= 1;
                  fp->_p += 1;
                  if ((mbslen = _mbrtowc_r (rptr, wcp, buf, n, &state))
   13d3c:	1d1030ef          	jal	1770c <_mbrtowc_r>
   13d40:	c9a50ae3          	beq	a0,s10,139d4 <__svfscanf_r+0x298>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:866
                                                         == (size_t)-1)
                    goto input_failure; /* Invalid sequence */
                  if (mbslen == 0 && !(flags & SUPPRESS))
   13d44:	04051263          	bnez	a0,13d88 <__svfscanf_r+0x64c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:866 (discriminator 1)
   13d48:	00812783          	lw	a5,8(sp)
   13d4c:	06079463          	bnez	a5,13db4 <__svfscanf_r+0x678>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:867
                    *wcp = L'\0';
   13d50:	000aa023          	sw	zero,0(s5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:870
                  if (mbslen != (size_t)-2) /* Incomplete sequence */
                    {
                      nread += n;
   13d54:	01bb8bbb          	addw	s7,s7,s11
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:871
                      width -= 1;
   13d58:	fff90913          	addi	s2,s2,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:873
                      if (!(flags & SUPPRESS))
                        wcp += 1;
   13d5c:	004a8a93          	addi	s5,s5,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:876
                      n = 0;
                    }
                  if (BufferEmpty)
   13d60:	008c2683          	lw	a3,8(s8)
   13d64:	00000a13          	li	s4,0
   13d68:	02d05a63          	blez	a3,13d9c <__svfscanf_r+0x660>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:856
              if ((flags & SUPPRESS) == 0)
                wcp = GET_ARG (N, ap, wchar_t *);
              else
                wcp = NULL;
              n = 0;
              while (width != 0)
   13d6c:	f80914e3          	bnez	s2,13cf4 <__svfscanf_r+0x5b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:884
                        goto input_failure;
                      break;
                    }
                }
              if (!(flags & SUPPRESS))
                nassigned++;
   13d70:	00812783          	lw	a5,8(sp)
   13d74:	0017ba93          	seqz	s5,a5
   13d78:	01412783          	lw	a5,20(sp)
   13d7c:	015787bb          	addw	a5,a5,s5
   13d80:	00f12a23          	sw	a5,20(sp)
   13d84:	a61ff06f          	j	137e4 <__svfscanf_r+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:868
                  if ((mbslen = _mbrtowc_r (rptr, wcp, buf, n, &state))
                                                         == (size_t)-1)
                    goto input_failure; /* Invalid sequence */
                  if (mbslen == 0 && !(flags & SUPPRESS))
                    *wcp = L'\0';
                  if (mbslen != (size_t)-2) /* Incomplete sequence */
   13d88:	ffe00793          	li	a5,-2
   13d8c:	02f51a63          	bne	a0,a5,13dc0 <__svfscanf_r+0x684>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:876
                      width -= 1;
                      if (!(flags & SUPPRESS))
                        wcp += 1;
                      n = 0;
                    }
                  if (BufferEmpty)
   13d90:	008c2703          	lw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:860
              n = 0;
              while (width != 0)
                {
                  if (n == MB_CUR_MAX)
                    goto input_failure;
                  buf[n++] = *fp->_p;
   13d94:	000d8a13          	mv	s4,s11
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:876
                      width -= 1;
                      if (!(flags & SUPPRESS))
                        wcp += 1;
                      n = 0;
                    }
                  if (BufferEmpty)
   13d98:	f4e04ee3          	bgtz	a4,13cf4 <__svfscanf_r+0x5b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:876 (discriminator 1)
   13d9c:	000c0593          	mv	a1,s8
   13da0:	00048513          	mv	a0,s1
   13da4:	4a4050ef          	jal	19248 <__srefill_r>
   13da8:	fc0502e3          	beqz	a0,13d6c <__svfscanf_r+0x630>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:878
	            {
                      if (n != 0)
   13dac:	fc0a02e3          	beqz	s4,13d70 <__svfscanf_r+0x634>
   13db0:	c25ff06f          	j	139d4 <__svfscanf_r+0x298>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:870
                    goto input_failure; /* Invalid sequence */
                  if (mbslen == 0 && !(flags & SUPPRESS))
                    *wcp = L'\0';
                  if (mbslen != (size_t)-2) /* Incomplete sequence */
                    {
                      nread += n;
   13db4:	01bb8bbb          	addw	s7,s7,s11
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:871
                      width -= 1;
   13db8:	fff90913          	addi	s2,s2,-1
   13dbc:	fa5ff06f          	j	13d60 <__svfscanf_r+0x624>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:872
                      if (!(flags & SUPPRESS))
   13dc0:	00812783          	lw	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:870
                    goto input_failure; /* Invalid sequence */
                  if (mbslen == 0 && !(flags & SUPPRESS))
                    *wcp = L'\0';
                  if (mbslen != (size_t)-2) /* Incomplete sequence */
                    {
                      nread += n;
   13dc4:	01bb8bbb          	addw	s7,s7,s11
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:871
                      width -= 1;
   13dc8:	fff90913          	addi	s2,s2,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:872
                      if (!(flags & SUPPRESS))
   13dcc:	f80788e3          	beqz	a5,13d5c <__svfscanf_r+0x620>
   13dd0:	f91ff06f          	j	13d60 <__svfscanf_r+0x624>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:852
          if (flags & LONG)
            {
              mbstate_t state;
              memset (&state, 0, sizeof (mbstate_t));
              if ((flags & SUPPRESS) == 0)
                wcp = GET_ARG (N, ap, wchar_t *);
   13dd4:	000b3a83          	ld	s5,0(s6)
   13dd8:	008b0b13          	addi	s6,s6,8
   13ddc:	f11ff06f          	j	13cec <__svfscanf_r+0x5b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   13de0:	000c0593          	mv	a1,s8
   13de4:	00048513          	mv	a0,s1
   13de8:	460050ef          	jal	19248 <__srefill_r>
   13dec:	ca0506e3          	beqz	a0,13a98 <__svfscanf_r+0x35c>
   13df0:	be5ff06f          	j	139d4 <__svfscanf_r+0x298>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:900
		      sum += n;
		      width -= n;
		      fp->_p += n;
		      if (__srefill_r (rptr, fp))
			{
			  if (sum == 0)
   13df4:	be0a80e3          	beqz	s5,139d4 <__svfscanf_r+0x298>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:913
		      fp->_r -= width;
		      fp->_p += width;
		      break;
		    }
		}
	      nread += sum;
   13df8:	017a8bbb          	addw	s7,s5,s7
   13dfc:	9e9ff06f          	j	137e4 <__svfscanf_r+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:946
		      if (n == 0)
			goto input_failure;
		      break;
		    }
		}
	      if (n == 0)
   13e00:	a60a88e3          	beqz	s5,13870 <__svfscanf_r+0x134>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1041
		  if (--width == 0)
		    break;
		  if (BufferEmpty)
		    break;
		}
	      nread += n;
   13e04:	015b8bbb          	addw	s7,s7,s5
   13e08:	9ddff06f          	j	137e4 <__svfscanf_r+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:917
		}
	      nread += sum;
	    }
	  else
	    {
	      size_t r = _fread_r (rptr, (_PTR) GET_ARG (N, ap, char *), 1, width, fp);
   13e0c:	000b3583          	ld	a1,0(s6)
   13e10:	000c0713          	mv	a4,s8
   13e14:	00090693          	mv	a3,s2
   13e18:	00100613          	li	a2,1
   13e1c:	00048513          	mv	a0,s1
   13e20:	191020ef          	jal	167b0 <_fread_r>
   13e24:	008b0b13          	addi	s6,s6,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:919

	      if (r == 0)
   13e28:	ba0506e3          	beqz	a0,139d4 <__svfscanf_r+0x298>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:922
		goto input_failure;
	      nread += r;
	      nassigned++;
   13e2c:	01412783          	lw	a5,20(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:921
	    {
	      size_t r = _fread_r (rptr, (_PTR) GET_ARG (N, ap, char *), 1, width, fp);

	      if (r == 0)
		goto input_failure;
	      nread += r;
   13e30:	01750bbb          	addw	s7,a0,s7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:922
	      nassigned++;
   13e34:	0017879b          	addiw	a5,a5,1
   13e38:	00f12a23          	sw	a5,20(sp)
   13e3c:	9a9ff06f          	j	137e4 <__svfscanf_r+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:558
	case '%':
	literal:
          lptr = fmt - nbytes;
          for (n = 0; n < nbytes; ++n)
            {
	      if (BufferEmpty)
   13e40:	000c0593          	mv	a1,s8
   13e44:	00048513          	mv	a0,s1
   13e48:	400050ef          	jal	19248 <__srefill_r>
   13e4c:	a60502e3          	beqz	a0,138b0 <__svfscanf_r+0x174>
   13e50:	b85ff06f          	j	139d4 <__svfscanf_r+0x298>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   13e54:	008c2703          	lw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:801
	  _newlib_flockfile_exit (fp);
	  return EOF;

	default:		/* compat */
	  if (isupper (c))
	    flags |= LONG;
   13e58:	00daeab3          	or	s5,s5,a3
   13e5c:	d49ff06f          	j	13ba4 <__svfscanf_r+0x468>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:773
	  if (flags & SHORT)
	    {
	      sp = GET_ARG (N, ap, short *);
	      *sp = nread;
	    }
	  else if (flags & LONG)
   13e60:	001afa93          	andi	s5,s5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:776
	    {
	      lp = GET_ARG (N, ap, long *);
	      *lp = nread;
   13e64:	000b3703          	ld	a4,0(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:773
	  if (flags & SHORT)
	    {
	      sp = GET_ARG (N, ap, short *);
	      *sp = nread;
	    }
	  else if (flags & LONG)
   13e68:	020a8463          	beqz	s5,13e90 <__svfscanf_r+0x754>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:775
	    {
	      lp = GET_ARG (N, ap, long *);
   13e6c:	008b0b13          	addi	s6,s6,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:776
	      *lp = nread;
   13e70:	01773023          	sd	s7,0(a4)
   13e74:	971ff06f          	j	137e4 <__svfscanf_r+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   13e78:	000c0593          	mv	a1,s8
   13e7c:	00048513          	mv	a0,s1
   13e80:	3c8050ef          	jal	19248 <__srefill_r>
   13e84:	b40518e3          	bnez	a0,139d4 <__svfscanf_r+0x298>
   13e88:	8281b503          	ld	a0,-2008(gp) # 24468 <__ctype_ptr__>
   13e8c:	be9ff06f          	j	13a74 <__svfscanf_r+0x338>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:787
	      *llp = nread;
	    }
#endif
	  else
	    {
	      ip = GET_ARG (N, ap, int *);
   13e90:	008b0b13          	addi	s6,s6,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:788
	      *ip = nread;
   13e94:	01772023          	sw	s7,0(a4)
   13e98:	94dff06f          	j	137e4 <__svfscanf_r+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
	}

      /*
       * We have a conversion that requires input.
       */
      if (BufferEmpty)
   13e9c:	000c0593          	mv	a1,s8
   13ea0:	00048513          	mv	a0,s1
   13ea4:	3a4050ef          	jal	19248 <__srefill_r>
   13ea8:	c6050ce3          	beqz	a0,13b20 <__svfscanf_r+0x3e4>
   13eac:	b29ff06f          	j	139d4 <__svfscanf_r+0x298>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811 (discriminator 1)
   13eb0:	000c0593          	mv	a1,s8
   13eb4:	00048513          	mv	a0,s1
   13eb8:	390050ef          	jal	19248 <__srefill_r>
   13ebc:	b0051ce3          	bnez	a0,139d4 <__svfscanf_r+0x298>
   13ec0:	8281b503          	ld	a0,-2008(gp) # 24468 <__ctype_ptr__>
   13ec4:	d51ff06f          	j	13c14 <__svfscanf_r+0x4d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:811
   13ec8:	000c0593          	mv	a1,s8
   13ecc:	00048513          	mv	a0,s1
   13ed0:	378050ef          	jal	19248 <__srefill_r>
   13ed4:	b00510e3          	bnez	a0,139d4 <__svfscanf_r+0x298>
   13ed8:	8281b503          	ld	a0,-2008(gp) # 24468 <__ctype_ptr__>
   13edc:	b21ff06f          	j	139fc <__svfscanf_r+0x2c0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:839
	}

      /*
       * Do the conversion.
       */
      switch (c)
   13ee0:	00300593          	li	a1,3
   13ee4:	3ebc8e63          	beq	s9,a1,142e0 <__svfscanf_r+0xba4>
   13ee8:	00400613          	li	a2,4
   13eec:	38cc9063          	bne	s9,a2,1426c <__svfscanf_r+0xb30>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1288
	  long zeroes, exp_adjust;
	  char *exp_start = NULL;
	  unsigned width_left = 0;
	  char nancount = 0;
	  char infcount = 0;
	  const char *decpt = _localeconv_r (rptr)->decimal_point;
   13ef0:	00048513          	mv	a0,s1
   13ef4:	644030ef          	jal	17538 <_localeconv_r>
   13ef8:	00053783          	ld	a5,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1296
#endif
#ifdef hardway
	  if (width == 0 || width > sizeof (buf) - 1)
#else
	  /* size_t is unsigned, hence this optimisation */
	  if (width - 1 > sizeof (buf) - 2)
   13efc:	fff90713          	addi	a4,s2,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1285
	     exact results even when there is an unreasonable amount of
	     leading zeroes.  */
	  long leading_zeroes = 0;
	  long zeroes, exp_adjust;
	  char *exp_start = NULL;
	  unsigned width_left = 0;
   13f00:	04012623          	sw	zero,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1288
	  char nancount = 0;
	  char infcount = 0;
	  const char *decpt = _localeconv_r (rptr)->decimal_point;
   13f04:	04f13023          	sd	a5,64(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1296
#endif
#ifdef hardway
	  if (width == 0 || width > sizeof (buf) - 1)
#else
	  /* size_t is unsigned, hence this optimisation */
	  if (width - 1 > sizeof (buf) - 2)
   13f08:	15c00693          	li	a3,348
   13f0c:	00e6f863          	bleu	a4,a3,13f1c <__svfscanf_r+0x7e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1299
#endif
	    {
	      width_left = width - (sizeof (buf) - 1);
   13f10:	ea39079b          	addiw	a5,s2,-349
   13f14:	04f12623          	sw	a5,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1300
	      width = sizeof (buf) - 1;
   13f18:	15d00913          	li	s2,349
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1305
	    }
	  flags |= SIGNOK | NDIGITS | DPTOK | EXPOK;
	  zeroes = 0;
	  exp_adjust = 0;
	  for (p = buf; width; )
   13f1c:	17010793          	addi	a5,sp,368
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1312
	      c = *fp->_p;
	      /*
	       * This code mimicks the integer conversion
	       * code, but is much simpler.
	       */
	      switch (c)
   13f20:	00021637          	lui	a2,0x21
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1302
#endif
	    {
	      width_left = width - (sizeof (buf) - 1);
	      width = sizeof (buf) - 1;
	    }
	  flags |= SIGNOK | NDIGITS | DPTOK | EXPOK;
   13f24:	780aea13          	ori	s4,s5,1920
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1305
	  zeroes = 0;
	  exp_adjust = 0;
	  for (p = buf; width; )
   13f28:	02f13823          	sd	a5,48(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1287
	  long leading_zeroes = 0;
	  long zeroes, exp_adjust;
	  char *exp_start = NULL;
	  unsigned width_left = 0;
	  char nancount = 0;
	  char infcount = 0;
   13f2c:	00000c93          	li	s9,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1286
	     leading zeroes.  */
	  long leading_zeroes = 0;
	  long zeroes, exp_adjust;
	  char *exp_start = NULL;
	  unsigned width_left = 0;
	  char nancount = 0;
   13f30:	00000d13          	li	s10,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1284
	     However, ANSI / ISO C makes no such stipulation; we have to get
	     exact results even when there is an unreasonable amount of
	     leading zeroes.  */
	  long leading_zeroes = 0;
	  long zeroes, exp_adjust;
	  char *exp_start = NULL;
   13f34:	04013c23          	sd	zero,88(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1304
	      width_left = width - (sizeof (buf) - 1);
	      width = sizeof (buf) - 1;
	    }
	  flags |= SIGNOK | NDIGITS | DPTOK | EXPOK;
	  zeroes = 0;
	  exp_adjust = 0;
   13f38:	04013823          	sd	zero,80(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1303
	    {
	      width_left = width - (sizeof (buf) - 1);
	      width = sizeof (buf) - 1;
	    }
	  flags |= SIGNOK | NDIGITS | DPTOK | EXPOK;
	  zeroes = 0;
   13f3c:	00000a93          	li	s5,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1282
	  /* scan a floating point number as if by strtod */
	  /* This code used to assume that the number of digits is reasonable.
	     However, ANSI / ISO C makes no such stipulation; we have to get
	     exact results even when there is an unreasonable amount of
	     leading zeroes.  */
	  long leading_zeroes = 0;
   13f40:	02013c23          	sd	zero,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1305
	      width = sizeof (buf) - 1;
	    }
	  flags |= SIGNOK | NDIGITS | DPTOK | EXPOK;
	  zeroes = 0;
	  exp_adjust = 0;
	  for (p = buf; width; )
   13f44:	00078d93          	mv	s11,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1312
	      c = *fp->_p;
	      /*
	       * This code mimicks the integer conversion
	       * code, but is much simpler.
	       */
	      switch (c)
   13f48:	04e00e93          	li	t4,78
   13f4c:	96c60613          	addi	a2,a2,-1684 # 2096c <zeroes.4194+0x1f4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1307
	  flags |= SIGNOK | NDIGITS | DPTOK | EXPOK;
	  zeroes = 0;
	  exp_adjust = 0;
	  for (p = buf; width; )
	    {
	      c = *fp->_p;
   13f50:	000c3583          	ld	a1,0(s8)
   13f54:	0005c503          	lbu	a0,0(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1312
	      /*
	       * This code mimicks the integer conversion
	       * code, but is much simpler.
	       */
	      switch (c)
   13f58:	fd55071b          	addiw	a4,a0,-43
   13f5c:	0ff77f93          	andi	t6,a4,255
   13f60:	2dfee463          	bltu	t4,t6,14228 <__svfscanf_r+0xaec>
   13f64:	0ff77713          	andi	a4,a4,255
   13f68:	00271713          	slli	a4,a4,0x2
   13f6c:	00c70733          	add	a4,a4,a2
   13f70:	00072703          	lw	a4,0(a4)
   13f74:	00070067          	jr	a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1336
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		  if (nancount + infcount == 0)
   13f78:	019d073b          	addw	a4,s10,s9
   13f7c:	02071a63          	bnez	a4,13fb0 <__svfscanf_r+0x874>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1338
		    {
		      flags &= ~(SIGNOK | NDIGITS);
   13f80:	e7fa7a13          	andi	s4,s4,-385
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1488
		  break;
#endif
		}
	      break;
	    fok:
	      *p++ = c;
   13f84:	00ad8023          	sb	a0,0(s11)
   13f88:	001d8d93          	addi	s11,s11,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1492
	    fskip:
	      width--;
	      ++nread;
	      if (--fp->_r > 0)
   13f8c:	008c2703          	lw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1490
		}
	      break;
	    fok:
	      *p++ = c;
	    fskip:
	      width--;
   13f90:	fff90913          	addi	s2,s2,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1491
	      ++nread;
   13f94:	001b8b9b          	addiw	s7,s7,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1492
	      if (--fp->_r > 0)
   13f98:	fff7071b          	addiw	a4,a4,-1
   13f9c:	00ec2423          	sw	a4,8(s8)
   13fa0:	04e05c63          	blez	a4,13ff8 <__svfscanf_r+0x8bc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1493
		fp->_p++;
   13fa4:	00158593          	addi	a1,a1,1
   13fa8:	00bc3023          	sd	a1,0(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1305
	      width = sizeof (buf) - 1;
	    }
	  flags |= SIGNOK | NDIGITS | DPTOK | EXPOK;
	  zeroes = 0;
	  exp_adjust = 0;
	  for (p = buf; width; )
   13fac:	fa0912e3          	bnez	s2,13f50 <__svfscanf_r+0x814>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1498
		fp->_p++;
	      else
	      if (__srefill_r (rptr, fp))
		break;		/* EOF */
	    }
	  if (zeroes)
   13fb0:	0e0a8263          	beqz	s5,14094 <__svfscanf_r+0x958>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1499
	    flags &= ~NDIGITS;
   13fb4:	effa7a13          	andi	s4,s4,-257
   13fb8:	0dc0006f          	j	14094 <__svfscanf_r+0x958>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1315
	       * code, but is much simpler.
	       */
	      switch (c)
		{
		case '0':
		  if (flags & NDIGITS)
   13fbc:	100a7713          	andi	a4,s4,256
   13fc0:	fa070ce3          	beqz	a4,13f78 <__svfscanf_r+0x83c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1319
		    {
		      flags &= ~SIGNOK;
		      zeroes++;
		      if (width_left)
   13fc4:	04c12783          	lw	a5,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1317
	      switch (c)
		{
		case '0':
		  if (flags & NDIGITS)
		    {
		      flags &= ~SIGNOK;
   13fc8:	f7fa7a13          	andi	s4,s4,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1318
		      zeroes++;
   13fcc:	001a8a93          	addi	s5,s5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1319
		      if (width_left)
   13fd0:	fa078ee3          	beqz	a5,13f8c <__svfscanf_r+0x850>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1492
	    fok:
	      *p++ = c;
	    fskip:
	      width--;
	      ++nread;
	      if (--fp->_r > 0)
   13fd4:	008c2703          	lw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1321
		    {
		      flags &= ~SIGNOK;
		      zeroes++;
		      if (width_left)
			{
			  width_left--;
   13fd8:	fff7879b          	addiw	a5,a5,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1322
			  width++;
   13fdc:	00190913          	addi	s2,s2,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1492
	    fok:
	      *p++ = c;
	    fskip:
	      width--;
	      ++nread;
	      if (--fp->_r > 0)
   13fe0:	fff7071b          	addiw	a4,a4,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1321
		    {
		      flags &= ~SIGNOK;
		      zeroes++;
		      if (width_left)
			{
			  width_left--;
   13fe4:	04f12623          	sw	a5,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1492
	    fok:
	      *p++ = c;
	    fskip:
	      width--;
	      ++nread;
	      if (--fp->_r > 0)
   13fe8:	00ec2423          	sw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1490
		}
	      break;
	    fok:
	      *p++ = c;
	    fskip:
	      width--;
   13fec:	fff90913          	addi	s2,s2,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1491
	      ++nread;
   13ff0:	001b8b9b          	addiw	s7,s7,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1492
	      if (--fp->_r > 0)
   13ff4:	fae048e3          	bgtz	a4,13fa4 <__svfscanf_r+0x868>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1495
		fp->_p++;
	      else
	      if (__srefill_r (rptr, fp))
   13ff8:	000c0593          	mv	a1,s8
   13ffc:	00048513          	mv	a0,s1
   14000:	02c13023          	sd	a2,32(sp)
   14004:	01d13423          	sd	t4,8(sp)
   14008:	240050ef          	jal	19248 <__srefill_r>
   1400c:	00813e83          	ld	t4,8(sp)
   14010:	02013603          	ld	a2,32(sp)
   14014:	f8051ee3          	bnez	a0,13fb0 <__svfscanf_r+0x874>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1305
	      width = sizeof (buf) - 1;
	    }
	  flags |= SIGNOK | NDIGITS | DPTOK | EXPOK;
	  zeroes = 0;
	  exp_adjust = 0;
	  for (p = buf; width; )
   14018:	f2091ce3          	bnez	s2,13f50 <__svfscanf_r+0x814>
   1401c:	f95ff06f          	j	13fb0 <__svfscanf_r+0x874>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1414
		      goto fok;
		    }
		  break;
		case 'y':
		case 'Y':
		  if (infcount == 7)
   14020:	00700793          	li	a5,7
   14024:	f8fc96e3          	bne	s9,a5,13fb0 <__svfscanf_r+0x874>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1416
		    {
		      infcount = 8;
   14028:	00800c93          	li	s9,8
   1402c:	f59ff06f          	j	13f84 <__svfscanf_r+0x848>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1345
		    }
		  break;

		case '+':
		case '-':
		  if (flags & SIGNOK)
   14030:	080a7713          	andi	a4,s4,128
   14034:	f6070ee3          	beqz	a4,13fb0 <__svfscanf_r+0x874>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1347
		    {
		      flags &= ~SIGNOK;
   14038:	f7fa7a13          	andi	s4,s4,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1348
		      goto fok;
   1403c:	f49ff06f          	j	13f84 <__svfscanf_r+0x848>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1406
		      goto fok;
		    }
		  break;
		case 't':
		case 'T':
		  if (infcount == 6)
   14040:	00600793          	li	a5,6
   14044:	f6fc96e3          	bne	s9,a5,13fb0 <__svfscanf_r+0x874>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1408
		    {
		      infcount = 7;
   14048:	00700c93          	li	s9,7
   1404c:	f39ff06f          	j	13f84 <__svfscanf_r+0x848>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1353
		      goto fok;
		    }
		  break;
		case 'n':
		case 'N':
		  if (nancount == 0 && zeroes == 0
   14050:	1e0d1c63          	bnez	s10,14248 <__svfscanf_r+0xb0c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1353 (discriminator 1)
   14054:	000a9863          	bnez	s5,14064 <__svfscanf_r+0x928>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1354
		      && (flags & (NDIGITS | DPTOK | EXPOK)) ==
   14058:	700a7713          	andi	a4,s4,1792
   1405c:	70000793          	li	a5,1792
   14060:	56f70863          	beq	a4,a5,145d0 <__svfscanf_r+0xe94>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1366
		  if (nancount == 2)
		    {
		      nancount = 3;
		      goto fok;
		    }
		  if (infcount == 1 || infcount == 4)
   14064:	00100713          	li	a4,1
   14068:	00ec8663          	beq	s9,a4,14074 <__svfscanf_r+0x938>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1366 (discriminator 1)
   1406c:	00400713          	li	a4,4
   14070:	f4ec90e3          	bne	s9,a4,13fb0 <__svfscanf_r+0x874>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1392
		      infcount = 1;
		      goto fok;
		    }
		  if (infcount == 3 || infcount == 5)
		    {
		      infcount++;
   14074:	001c8e1b          	addiw	t3,s9,1
   14078:	0ffe7c93          	andi	s9,t3,255
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1393
		      goto fok;
   1407c:	f09ff06f          	j	13f84 <__svfscanf_r+0x848>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1382
		      goto fok;
		    }
		  break;
		case 'i':
		case 'I':
		  if (infcount == 0 && zeroes == 0
   14080:	1c0c9c63          	bnez	s9,14258 <__svfscanf_r+0xb1c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1382 (discriminator 1)
   14084:	f20a98e3          	bnez	s5,13fb4 <__svfscanf_r+0x878>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1383
		      && (flags & (NDIGITS | DPTOK | EXPOK)) ==
   14088:	700a7713          	andi	a4,s4,1792
   1408c:	70000793          	li	a5,1792
   14090:	54f70663          	beq	a4,a5,145dc <__svfscanf_r+0xea0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1508
	     check here if we have an outstanding nancount, and if so
	     put back the chars we did swallow and treat as a failed
	     match.

	     FIXME - we still don't handle NAN([0xdigits]).  */
	  if (nancount - 1U < 2U) /* nancount && nancount < 3 */
   14094:	fffd0f1b          	addiw	t5,s10,-1
   14098:	00100713          	li	a4,1
   1409c:	6fe77c63          	bleu	t5,a4,14794 <__svfscanf_r+0x1058>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1523
	      goto match_failure;
	    }
	  /* Likewise for 'inf' and 'infinity'.	 But be careful that
	     'infinite' consumes only 3 characters, leaving the stream
	     at the second 'i'.	 */
	  if (infcount - 1U < 7U) /* infcount && infcount < 8 */
   140a0:	fffc871b          	addiw	a4,s9,-1
   140a4:	00600613          	li	a2,6
   140a8:	06e66063          	bltu	a2,a4,14108 <__svfscanf_r+0x9cc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1525
	    {
	      if (infcount >= 3) /* valid 'inf', but short of 'infinity' */
   140ac:	00200793          	li	a5,2
   140b0:	7397fa63          	bleu	s9,a5,147e4 <__svfscanf_r+0x10a8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1526
		while (infcount-- > 3)
   140b4:	00300613          	li	a2,3
   140b8:	0ff77713          	andi	a4,a4,255
   140bc:	000d8d13          	mv	s10,s11
   140c0:	00078913          	mv	s2,a5
   140c4:	04cc8263          	beq	s9,a2,14108 <__svfscanf_r+0x9cc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1528
		  {
		    _ungetc_r (rptr, *--p, fp); /* [iInNtT] */
   140c8:	fffd0d13          	addi	s10,s10,-1
   140cc:	000d4583          	lbu	a1,0(s10)
   140d0:	000c0613          	mv	a2,s8
   140d4:	00048513          	mv	a0,s1
   140d8:	00e13423          	sd	a4,8(sp)
   140dc:	30d080ef          	jal	1cbe8 <_ungetc_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1526
	     'infinite' consumes only 3 characters, leaving the stream
	     at the second 'i'.	 */
	  if (infcount - 1U < 7U) /* infcount && infcount < 8 */
	    {
	      if (infcount >= 3) /* valid 'inf', but short of 'infinity' */
		while (infcount-- > 3)
   140e0:	00813703          	ld	a4,8(sp)
   140e4:	fff7071b          	addiw	a4,a4,-1
   140e8:	0ff77713          	andi	a4,a4,255
   140ec:	fd271ee3          	bne	a4,s2,140c8 <__svfscanf_r+0x98c>
   140f0:	ffcc871b          	addiw	a4,s9,-4
   140f4:	0ff77713          	andi	a4,a4,255
   140f8:	fff74613          	not	a2,a4
   140fc:	fffb881b          	addiw	a6,s7,-1
   14100:	00cd8db3          	add	s11,s11,a2
   14104:	40e80bbb          	subw	s7,a6,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1546
	  /*
	   * If no digits, might be missing exponent digits
	   * (just give back the exponent) or might be missing
	   * regular digits, but had sign and/or decimal point.
	   */
	  if (flags & NDIGITS)
   14108:	100a7713          	andi	a4,s4,256
   1410c:	04070e63          	beqz	a4,14168 <__svfscanf_r+0xa2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1548
	    {
	      if (flags & EXPOK)
   14110:	400a7713          	andi	a4,s4,1024
   14114:	6a071463          	bnez	a4,147bc <__svfscanf_r+0x1080>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1559
		      --nread;
		    }
		  goto match_failure;
		}
	      /* just a bad exponent (e and maybe sign) */
	      c = *--p;
   14118:	fffdc583          	lbu	a1,-1(s11)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1561
	      --nread;
	      if (c != 'e' && c != 'E')
   1411c:	06500613          	li	a2,101
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1559
		      --nread;
		    }
		  goto match_failure;
		}
	      /* just a bad exponent (e and maybe sign) */
	      c = *--p;
   14120:	fffd8d13          	addi	s10,s11,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1560
	      --nread;
   14124:	fffb871b          	addiw	a4,s7,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1561
	      if (c != 'e' && c != 'E')
   14128:	02c58263          	beq	a1,a2,1414c <__svfscanf_r+0xa10>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1561 (discriminator 1)
   1412c:	04500613          	li	a2,69
   14130:	00c58e63          	beq	a1,a2,1414c <__svfscanf_r+0xa10>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1563
		{
		  _ungetc_r (rptr, c, fp); /* [-+] */
   14134:	000c0613          	mv	a2,s8
   14138:	00048513          	mv	a0,s1
   1413c:	2ad080ef          	jal	1cbe8 <_ungetc_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1564
		  c = *--p;
   14140:	ffedc583          	lbu	a1,-2(s11)
   14144:	ffed8d13          	addi	s10,s11,-2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1565
		  --nread;
   14148:	ffeb871b          	addiw	a4,s7,-2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1567
		}
	      _ungetc_r (rptr, c, fp); /* [eE] */
   1414c:	000c0613          	mv	a2,s8
   14150:	00048513          	mv	a0,s1
   14154:	00e13423          	sd	a4,8(sp)
   14158:	291080ef          	jal	1cbe8 <_ungetc_r>
   1415c:	00813703          	ld	a4,8(sp)
   14160:	000d0d93          	mv	s11,s10
   14164:	00070b93          	mv	s7,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1569
	    }
	  if ((flags & SUPPRESS) == 0)
   14168:	010a7713          	andi	a4,s4,16
   1416c:	e6071c63          	bnez	a4,137e4 <__svfscanf_r+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1580
	      long double qres = 0;
#define QUAD_RES qres;
#endif /* !_NO_LONG_DBL */
	      long new_exp = 0;

	      *p = 0;
   14170:	000d8023          	sb	zero,0(s11)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1581
	      if ((flags & (DPTOK | EXPOK)) == EXPOK)
   14174:	600a7713          	andi	a4,s4,1536
   14178:	40000613          	li	a2,1024
   1417c:	48c70e63          	beq	a4,a2,14618 <__svfscanf_r+0xedc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1587
		{
		  exp_adjust = zeroes - leading_zeroes;
		  new_exp = -exp_adjust;
		  exp_start = p;
		}
	      else if (exp_adjust)
   14180:	05013783          	ld	a5,80(sp)
   14184:	4c079263          	bnez	a5,14648 <__svfscanf_r+0xf0c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1607
#ifndef _NO_LONGDBL /* !_NO_LONGDBL */
	      if (flags & LONGDBL)
		qres = _strtold (buf, NULL);
	      else
#endif
	        res = _strtod_r (rptr, buf, NULL);
   14188:	03013583          	ld	a1,48(sp)
   1418c:	00000613          	li	a2,0
   14190:	00048513          	mv	a0,s1
   14194:	674050ef          	jal	19808 <_strtod_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1609

	      if (flags & LONG)
   14198:	001a7713          	andi	a4,s4,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1607
#ifndef _NO_LONGDBL /* !_NO_LONGDBL */
	      if (flags & LONGDBL)
		qres = _strtold (buf, NULL);
	      else
#endif
	        res = _strtod_r (rptr, buf, NULL);
   1419c:	22a50453          	fmv.d	fs0,fa0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1609

	      if (flags & LONG)
   141a0:	00071663          	bnez	a4,141ac <__svfscanf_r+0xa70>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1614
		{
		  dp = GET_ARG (N, ap, double *);
		  *dp = res;
		}
	      else if (flags & LONGDBL)
   141a4:	002a7893          	andi	a7,s4,2
   141a8:	4c088e63          	beqz	a7,14684 <__svfscanf_r+0xf48>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1617
		{
		  ldp = GET_ARG (N, ap, _LONG_DOUBLE *);
		  *ldp = QUAD_RES;
   141ac:	000b3703          	ld	a4,0(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1616
		  dp = GET_ARG (N, ap, double *);
		  *dp = res;
		}
	      else if (flags & LONGDBL)
		{
		  ldp = GET_ARG (N, ap, _LONG_DOUBLE *);
   141b0:	008b0b13          	addi	s6,s6,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1617
		  *ldp = QUAD_RES;
   141b4:	00873027          	fsd	fs0,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1627
		  if (isnan (res))
		    *flp = nanf (NULL);
		  else
		    *flp = res;
		}
	      nassigned++;
   141b8:	01412783          	lw	a5,20(sp)
   141bc:	0017879b          	addiw	a5,a5,1
   141c0:	00f12a23          	sw	a5,20(sp)
   141c4:	e20ff06f          	j	137e4 <__svfscanf_r+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1398
		      goto fok;
		    }
		  break;
		case 'f':
		case 'F':
		  if (infcount == 2)
   141c8:	00200793          	li	a5,2
   141cc:	defc92e3          	bne	s9,a5,13fb0 <__svfscanf_r+0x874>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1400
		    {
		      infcount = 3;
   141d0:	00300c93          	li	s9,3
   141d4:	db1ff06f          	j	13f84 <__svfscanf_r+0x848>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1423
		    }
		  break;
		case 'e':
		case 'E':
		  /* no exponent without some digits */
		  if ((flags & (NDIGITS | EXPOK)) == EXPOK
   141d8:	500a7713          	andi	a4,s4,1280
   141dc:	40000793          	li	a5,1024
   141e0:	00f70863          	beq	a4,a5,141f0 <__svfscanf_r+0xab4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1424
		      || ((flags & EXPOK) && zeroes))
   141e4:	00fa7733          	and	a4,s4,a5
   141e8:	dc0704e3          	beqz	a4,13fb0 <__svfscanf_r+0x874>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1424 (discriminator 1)
   141ec:	ea0a84e3          	beqz	s5,14094 <__svfscanf_r+0x958>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1426
		    {
		      if (! (flags & DPTOK))
   141f0:	200a7713          	andi	a4,s4,512
   141f4:	00071a63          	bnez	a4,14208 <__svfscanf_r+0xacc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1428
			{
			  exp_adjust = zeroes - leading_zeroes;
   141f8:	03813783          	ld	a5,56(sp)
   141fc:	05b13c23          	sd	s11,88(sp)
   14200:	40fa87b3          	sub	a5,s5,a5
   14204:	04f13823          	sd	a5,80(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1433
			  exp_start = p;
			}
		      flags =
			(flags & ~(EXPOK | DPTOK)) |
			SIGNOK | NDIGITS;
   14208:	87fa7a93          	andi	s5,s4,-1921
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1431
		      if (! (flags & DPTOK))
			{
			  exp_adjust = zeroes - leading_zeroes;
			  exp_start = p;
			}
		      flags =
   1420c:	180aea13          	ori	s4,s5,384
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1434
			(flags & ~(EXPOK | DPTOK)) |
			SIGNOK | NDIGITS;
		      zeroes = 0;
   14210:	00000a93          	li	s5,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1435
		      goto fok;
   14214:	d71ff06f          	j	13f84 <__svfscanf_r+0x848>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1374
		      goto fok;
		    }
		  break;
		case 'a':
		case 'A':
		  if (nancount == 1)
   14218:	00100713          	li	a4,1
   1421c:	d8ed1ae3          	bne	s10,a4,13fb0 <__svfscanf_r+0x874>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1376
		    {
		      nancount = 2;
   14220:	00200d13          	li	s10,2
   14224:	d61ff06f          	j	13f84 <__svfscanf_r+0x848>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1440
		      goto fok;
		    }
		  break;
		default:
#ifndef _MB_CAPABLE
		  if ((unsigned char) c == (unsigned char) decpt[0]
   14228:	04013783          	ld	a5,64(sp)
   1422c:	0007c703          	lbu	a4,0(a5)
   14230:	d8a710e3          	bne	a4,a0,13fb0 <__svfscanf_r+0x874>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1441
		      && (flags & DPTOK))
   14234:	200a7713          	andi	a4,s4,512
   14238:	d6070ce3          	beqz	a4,13fb0 <__svfscanf_r+0x874>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1443
		    {
		      flags &= ~(SIGNOK | DPTOK);
   1423c:	d7fa7a13          	andi	s4,s4,-641
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1445
		      leading_zeroes = zeroes;
		      goto fok;
   14240:	03513c23          	sd	s5,56(sp)
   14244:	d41ff06f          	j	13f84 <__svfscanf_r+0x848>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1361
		    {
		      flags &= ~(SIGNOK | DPTOK | EXPOK | NDIGITS);
		      nancount = 1;
		      goto fok;
		    }
		  if (nancount == 2)
   14248:	00200793          	li	a5,2
   1424c:	e0fd1ce3          	bne	s10,a5,14064 <__svfscanf_r+0x928>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1363
		    {
		      nancount = 3;
   14250:	00300d13          	li	s10,3
   14254:	d31ff06f          	j	13f84 <__svfscanf_r+0x848>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1390
		    {
		      flags &= ~(SIGNOK | DPTOK | EXPOK | NDIGITS);
		      infcount = 1;
		      goto fok;
		    }
		  if (infcount == 3 || infcount == 5)
   14258:	ffdc871b          	addiw	a4,s9,-3
   1425c:	0fd77713          	andi	a4,a4,253
   14260:	e0070ae3          	beqz	a4,14074 <__svfscanf_r+0x938>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1498
		fp->_p++;
	      else
	      if (__srefill_r (rptr, fp))
		break;		/* EOF */
	    }
	  if (zeroes)
   14264:	e20a88e3          	beqz	s5,14094 <__svfscanf_r+0x958>
   14268:	d4dff06f          	j	13fb4 <__svfscanf_r+0x878>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:976
	  nread += n;
	  break;

	case CT_STRING:
	  /* like CCL, but zero-length string OK, & no NOSKIP */
	  if (width == 0)
   1426c:	00091463          	bnez	s2,14274 <__svfscanf_r+0xb38>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:977
            width = (size_t)~0;
   14270:	fff00913          	li	s2,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:979
#if !defined(_ELIX_LEVEL) || _ELIX_LEVEL >= 2
          if (flags & LONG)
   14274:	001af613          	andi	a2,s5,1
   14278:	2c061863          	bnez	a2,14548 <__svfscanf_r+0xe0c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1030
                  nassigned++;
                }
            }
          else
#endif
        	  if (flags & SUPPRESS)
   1427c:	010afa93          	andi	s5,s5,16
   14280:	1e0a8e63          	beqz	s5,1447c <__svfscanf_r+0xd40>
   14284:	00000a93          	li	s5,0
   14288:	0100006f          	j	14298 <__svfscanf_r+0xb5c>
   1428c:	0006c703          	lbu	a4,0(a3)
   14290:	00e50733          	add	a4,a0,a4
   14294:	00174703          	lbu	a4,1(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1033
	    {
	      n = 0;
	      while (!isspace (*fp->_p))
   14298:	00877713          	andi	a4,a4,8
   1429c:	a20710e3          	bnez	a4,13cbc <__svfscanf_r+0x580>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1035
		{
		  n++, fp->_r--, fp->_p++;
   142a0:	008c2703          	lw	a4,8(s8)
   142a4:	00168693          	addi	a3,a3,1
   142a8:	00dc3023          	sd	a3,0(s8)
   142ac:	fff7071b          	addiw	a4,a4,-1
   142b0:	00ec2423          	sw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1036
		  if (--width == 0)
   142b4:	fff90913          	addi	s2,s2,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1035
        	  if (flags & SUPPRESS)
	    {
	      n = 0;
	      while (!isspace (*fp->_p))
		{
		  n++, fp->_r--, fp->_p++;
   142b8:	001a8a9b          	addiw	s5,s5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1036
		  if (--width == 0)
   142bc:	a00900e3          	beqz	s2,13cbc <__svfscanf_r+0x580>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1038
		    break;
		  if (BufferEmpty)
   142c0:	fce046e3          	bgtz	a4,1428c <__svfscanf_r+0xb50>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1038 (discriminator 1)
   142c4:	000c0593          	mv	a1,s8
   142c8:	00048513          	mv	a0,s1
   142cc:	77d040ef          	jal	19248 <__srefill_r>
   142d0:	9e0516e3          	bnez	a0,13cbc <__svfscanf_r+0x580>
   142d4:	8281b503          	ld	a0,-2008(gp) # 24468 <__ctype_ptr__>
   142d8:	000c3683          	ld	a3,0(s8)
   142dc:	fb1ff06f          	j	1428c <__svfscanf_r+0xb50>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1070
	  int skips = 0;
#ifdef hardway
	  if (width == 0 || width > sizeof (buf) - 1)
#else
	  /* size_t is unsigned, hence this optimisation */
	  if (width - 1 > sizeof (buf) - 2)
   142e0:	fff90713          	addi	a4,s2,-1
   142e4:	15c00593          	li	a1,348
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1064
	  continue;

	case CT_INT:
	{
	  /* scan an integer as if by strtol/strtoul */
	  unsigned width_left = 0;
   142e8:	00000e13          	li	t3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1070
	  int skips = 0;
#ifdef hardway
	  if (width == 0 || width > sizeof (buf) - 1)
#else
	  /* size_t is unsigned, hence this optimisation */
	  if (width - 1 > sizeof (buf) - 2)
   142ec:	00e5f663          	bleu	a4,a1,142f8 <__svfscanf_r+0xbbc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1073
#endif
	    {
	      width_left = width - (sizeof (buf) - 1);
   142f0:	ea390e1b          	addiw	t3,s2,-349
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1074
	      width = sizeof (buf) - 1;
   142f4:	15d00913          	li	s2,349
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1077
	    }
	  flags |= SIGNOK | NDIGITS | NZDIGITS | NNZDIGITS;
	  for (p = buf; width; width--)
   142f8:	17010793          	addi	a5,sp,368
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1076
#endif
	    {
	      width_left = width - (sizeof (buf) - 1);
	      width = sizeof (buf) - 1;
	    }
	  flags |= SIGNOK | NDIGITS | NZDIGITS | NNZDIGITS;
   142fc:	00001737          	lui	a4,0x1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1077
	  for (p = buf; width; width--)
   14300:	02f13823          	sd	a5,48(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1076
#endif
	    {
	      width_left = width - (sizeof (buf) - 1);
	      width = sizeof (buf) - 1;
	    }
	  flags |= SIGNOK | NDIGITS | NZDIGITS | NNZDIGITS;
   14304:	d807071b          	addiw	a4,a4,-640
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1077
	  for (p = buf; width; width--)
   14308:	00078d13          	mv	s10,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1132
		  goto ok;

		  /* digits 8 and 9 ok iff decimal or hex */
		case '8':
		case '9':
		  base = basefix[base];
   1430c:	00021db7          	lui	s11,0x21
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1096
		   * prefixing. Also, if we have not scanned zero digits
		   * before this, do not turn off prefixing (someone else
		   * will turn it off if we have scanned any nonzero digits).
		   */
		case '0':
		  if (! (flags & NNZDIGITS))
   14310:	000017b7          	lui	a5,0x1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1076
#endif
	    {
	      width_left = width - (sizeof (buf) - 1);
	      width = sizeof (buf) - 1;
	    }
	  flags |= SIGNOK | NDIGITS | NZDIGITS | NNZDIGITS;
   14314:	00eaeab3          	or	s5,s5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1065

	case CT_INT:
	{
	  /* scan an integer as if by strtol/strtoul */
	  unsigned width_left = 0;
	  int skips = 0;
   14318:	00000a13          	li	s4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1132
		  goto ok;

		  /* digits 8 and 9 ok iff decimal or hex */
		case '8':
		case '9':
		  base = basefix[base];
   1431c:	be0d8d93          	addi	s11,s11,-1056 # 20be0 <basefix.4147>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1096
		   * prefixing. Also, if we have not scanned zero digits
		   * before this, do not turn off prefixing (someone else
		   * will turn it off if we have scanned any nonzero digits).
		   */
		case '0':
		  if (! (flags & NNZDIGITS))
   14320:	80078c9b          	addiw	s9,a5,-2048
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1084
	      c = *fp->_p;
	      /*
	       * Switch on the character; `goto ok' if we
	       * accept it as a part of number.
	       */
	      switch (c)
   14324:	fd56071b          	addiw	a4,a2,-43
   14328:	0ff77513          	andi	a0,a4,255
   1432c:	04d00593          	li	a1,77
   14330:	0aa5e063          	bltu	a1,a0,143d0 <__svfscanf_r+0xc94>
   14334:	01813783          	ld	a5,24(sp)
   14338:	0ff77713          	andi	a4,a4,255
   1433c:	00271713          	slli	a4,a4,0x2
   14340:	00f70733          	add	a4,a4,a5
   14344:	00072703          	lw	a4,0(a4) # 1000 <_ftext-0xf000>
   14348:	00070067          	jr	a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1170
		  break;

		  /* x ok iff flag still set & single 0 seen */
		case 'x':
		case 'X':
		  if ((flags & (PFXOK | NZDIGITS)) == PFXOK)
   1434c:	600af713          	andi	a4,s5,1536
   14350:	20000593          	li	a1,512
   14354:	06b71e63          	bne	a4,a1,143d0 <__svfscanf_r+0xc94>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1173
		    {
		      base = 16;/* if %i */
		      flags &= ~PFXOK;
   14358:	dffafa93          	andi	s5,s5,-513
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1172
		  /* x ok iff flag still set & single 0 seen */
		case 'x':
		case 'X':
		  if ((flags & (PFXOK | NZDIGITS)) == PFXOK)
		    {
		      base = 16;/* if %i */
   1435c:	01000793          	li	a5,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1177
		      flags &= ~PFXOK;
		      /* We must reset the NZDIGITS and NDIGITS
			 flags that would have been unset by seeing
			 the zero that preceded the X or x.  */
		      flags |= NZDIGITS | NDIGITS;
   14360:	500aea93          	ori	s5,s5,1280
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1172
		  /* x ok iff flag still set & single 0 seen */
		case 'x':
		case 'X':
		  if ((flags & (PFXOK | NZDIGITS)) == PFXOK)
		    {
		      base = 16;/* if %i */
   14364:	00f12823          	sw	a5,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1192
	      break;
	    ok:
	      /*
	       * c is legal: store it and look at the next.
	       */
	      *p++ = c;
   14368:	00cd0023          	sb	a2,0(s10)
   1436c:	001d0d13          	addi	s10,s10,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1194
	    skip:
	      if (--fp->_r > 0)
   14370:	008c2703          	lw	a4,8(s8)
   14374:	fff7071b          	addiw	a4,a4,-1
   14378:	00ec2423          	sw	a4,8(s8)
   1437c:	0ee05263          	blez	a4,14460 <__svfscanf_r+0xd24>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1195
		fp->_p++;
   14380:	00168693          	addi	a3,a3,1
   14384:	00dc3023          	sd	a3,0(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1077 (discriminator 2)
	    {
	      width_left = width - (sizeof (buf) - 1);
	      width = sizeof (buf) - 1;
	    }
	  flags |= SIGNOK | NDIGITS | NZDIGITS | NNZDIGITS;
	  for (p = buf; width; width--)
   14388:	fff90913          	addi	s2,s2,-1
   1438c:	04090263          	beqz	s2,143d0 <__svfscanf_r+0xc94>
   14390:	000c3683          	ld	a3,0(s8)
   14394:	0006c603          	lbu	a2,0(a3)
   14398:	f8dff06f          	j	14324 <__svfscanf_r+0xbe8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1152
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		  /* no need to fix base here */
		  if (base <= 10)
   1439c:	01012783          	lw	a5,16(sp)
   143a0:	00a00713          	li	a4,10
   143a4:	02f75663          	ble	a5,a4,143d0 <__svfscanf_r+0xc94>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1154
		    break;	/* not legal here */
		  flags &= ~(SIGNOK | PFXOK | NDIGITS | NNZDIGITS);
   143a8:	04812783          	lw	a5,72(sp)
   143ac:	00fafab3          	and	s5,s5,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1155
		  goto ok;
   143b0:	fb9ff06f          	j	14368 <__svfscanf_r+0xc2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1132
		  goto ok;

		  /* digits 8 and 9 ok iff decimal or hex */
		case '8':
		case '9':
		  base = basefix[base];
   143b4:	01012703          	lw	a4,16(sp)
   143b8:	00171713          	slli	a4,a4,0x1
   143bc:	00ed8733          	add	a4,s11,a4
   143c0:	00071783          	lh	a5,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1133
		  if (base <= 8)
   143c4:	00800713          	li	a4,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1132
		  goto ok;

		  /* digits 8 and 9 ok iff decimal or hex */
		case '8':
		case '9':
		  base = basefix[base];
   143c8:	00f12823          	sw	a5,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1133
		  if (base <= 8)
   143cc:	fcf74ee3          	blt	a4,a5,143a8 <__svfscanf_r+0xc6c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1208
	   * the x and treat it as [sign] '0'.
	   * Use of ungetc here and below assumes ASCII encoding; we are only
	   * pushing back 7-bit characters, so casting to unsigned char is
	   * not necessary.
	   */
	  if (flags & NDIGITS)
   143d0:	100af713          	andi	a4,s5,256
   143d4:	00070a63          	beqz	a4,143e8 <__svfscanf_r+0xcac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1210
	    {
	      if (p > buf)
   143d8:	03013783          	ld	a5,48(sp)
   143dc:	21a7e663          	bltu	a5,s10,145e8 <__svfscanf_r+0xeac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1212
		_ungetc_r (rptr, *--p, fp); /* [-+xX] */
	      if (p == buf)
   143e0:	03013783          	ld	a5,48(sp)
   143e4:	c8fd0663          	beq	s10,a5,13870 <__svfscanf_r+0x134>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1215
		goto match_failure;
	    }
	  if ((flags & SUPPRESS) == 0)
   143e8:	010af713          	andi	a4,s5,16
   143ec:	10070e63          	beqz	a4,14508 <__svfscanf_r+0xdcc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1271
		  ip = GET_ARG (N, ap, int *);
		  *ip = res;
		}
	      nassigned++;
	    }
	  nread += p - buf + skips;
   143f0:	03013783          	ld	a5,48(sp)
   143f4:	017a083b          	addw	a6,s4,s7
   143f8:	40fd0cb3          	sub	s9,s10,a5
   143fc:	010c8bbb          	addw	s7,s9,a6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1272
	  break;
   14400:	be4ff06f          	j	137e4 <__svfscanf_r+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1125
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		  base = basefix[base];
   14404:	01012703          	lw	a4,16(sp)
   14408:	00171713          	slli	a4,a4,0x1
   1440c:	00ed8733          	add	a4,s11,a4
   14410:	00071783          	lh	a5,0(a4)
   14414:	00f12823          	sw	a5,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1126
		  flags &= ~(SIGNOK | PFXOK | NDIGITS | NNZDIGITS);
   14418:	04812783          	lw	a5,72(sp)
   1441c:	00fafab3          	and	s5,s5,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1127
		  goto ok;
   14420:	f49ff06f          	j	14368 <__svfscanf_r+0xc2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1096
		   * prefixing. Also, if we have not scanned zero digits
		   * before this, do not turn off prefixing (someone else
		   * will turn it off if we have scanned any nonzero digits).
		   */
		case '0':
		  if (! (flags & NNZDIGITS))
   14424:	019af733          	and	a4,s5,s9
   14428:	f40700e3          	beqz	a4,14368 <__svfscanf_r+0xc2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1098
		    goto ok;
		  if (base == 0)
   1442c:	01012783          	lw	a5,16(sp)
   14430:	00079863          	bnez	a5,14440 <__svfscanf_r+0xd04>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1100
		    {
		      base = 8;
   14434:	00800793          	li	a5,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1101
		      flags |= PFXOK;
   14438:	200aea93          	ori	s5,s5,512
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1100
		case '0':
		  if (! (flags & NNZDIGITS))
		    goto ok;
		  if (base == 0)
		    {
		      base = 8;
   1443c:	00f12823          	sw	a5,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1103
		      flags |= PFXOK;
		    }
		  if (flags & NZDIGITS)
   14440:	400af713          	andi	a4,s5,1024
   14444:	16070a63          	beqz	a4,145b8 <__svfscanf_r+0xe7c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1105
		    {
		      flags &= ~(SIGNOK | NZDIGITS | NDIGITS);
   14448:	a7fafa93          	andi	s5,s5,-1409
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1106
		      goto ok;
   1444c:	f1dff06f          	j	14368 <__svfscanf_r+0xc2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1160
		  goto ok;

		  /* sign ok only as first character */
		case '+':
		case '-':
		  if (flags & SIGNOK)
   14450:	080af713          	andi	a4,s5,128
   14454:	f6070ee3          	beqz	a4,143d0 <__svfscanf_r+0xc94>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1162
		    {
		      flags &= ~SIGNOK;
   14458:	f7fafa93          	andi	s5,s5,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1163
		      goto ok;
   1445c:	f0dff06f          	j	14368 <__svfscanf_r+0xc2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1197
	      *p++ = c;
	    skip:
	      if (--fp->_r > 0)
		fp->_p++;
	      else
	      if (__srefill_r (rptr, fp))
   14460:	000c0593          	mv	a1,s8
   14464:	00048513          	mv	a0,s1
   14468:	01c13423          	sd	t3,8(sp)
   1446c:	5dd040ef          	jal	19248 <__srefill_r>
   14470:	00813e03          	ld	t3,8(sp)
   14474:	f0050ae3          	beqz	a0,14388 <__svfscanf_r+0xc4c>
   14478:	f59ff06f          	j	143d0 <__svfscanf_r+0xc94>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1045
		}
	      nread += n;
	    }
	  else
	    {
	      p0 = p = GET_ARG (N, ap, char *);
   1447c:	000b3c83          	ld	s9,0(s6)
   14480:	008b0b13          	addi	s6,s6,8
   14484:	012c8d33          	add	s10,s9,s2
   14488:	000c8a93          	mv	s5,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1046
	      while (!isspace (*fp->_p))
   1448c:	0180006f          	j	144a4 <__svfscanf_r+0xd68>
   14490:	000c3683          	ld	a3,0(s8)
   14494:	8281b703          	ld	a4,-2008(gp) # 24468 <__ctype_ptr__>
   14498:	0006c603          	lbu	a2,0(a3)
   1449c:	00c70733          	add	a4,a4,a2
   144a0:	00174703          	lbu	a4,1(a4)
   144a4:	00877713          	andi	a4,a4,8
   144a8:	04071063          	bnez	a4,144e8 <__svfscanf_r+0xdac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1048
		{
		  fp->_r--;
   144ac:	008c2703          	lw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1049
		  *p++ = *fp->_p++;
   144b0:	00168613          	addi	a2,a3,1
   144b4:	00cc3023          	sd	a2,0(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1048
	  else
	    {
	      p0 = p = GET_ARG (N, ap, char *);
	      while (!isspace (*fp->_p))
		{
		  fp->_r--;
   144b8:	fff7071b          	addiw	a4,a4,-1
   144bc:	00ec2423          	sw	a4,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1049
		  *p++ = *fp->_p++;
   144c0:	0006c703          	lbu	a4,0(a3)
   144c4:	001a8a93          	addi	s5,s5,1
   144c8:	feea8fa3          	sb	a4,-1(s5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1050
		  if (--width == 0)
   144cc:	035d0063          	beq	s10,s5,144ec <__svfscanf_r+0xdb0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1052
		    break;
		  if (BufferEmpty)
   144d0:	008c2703          	lw	a4,8(s8)
   144d4:	fae04ee3          	bgtz	a4,14490 <__svfscanf_r+0xd54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1052 (discriminator 1)
   144d8:	000c0593          	mv	a1,s8
   144dc:	00048513          	mv	a0,s1
   144e0:	569040ef          	jal	19248 <__srefill_r>
   144e4:	fa0506e3          	beqz	a0,14490 <__svfscanf_r+0xd54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1049
	    {
	      p0 = p = GET_ARG (N, ap, char *);
	      while (!isspace (*fp->_p))
		{
		  fp->_r--;
		  *p++ = *fp->_p++;
   144e8:	000a8d13          	mv	s10,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1057
		  if (BufferEmpty)
		    break;
		}
	      *p = 0;
	      nread += p - p0;
	      nassigned++;
   144ec:	01412783          	lw	a5,20(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1056
		    break;
		  if (BufferEmpty)
		    break;
		}
	      *p = 0;
	      nread += p - p0;
   144f0:	419d0cb3          	sub	s9,s10,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1055
		  if (--width == 0)
		    break;
		  if (BufferEmpty)
		    break;
		}
	      *p = 0;
   144f4:	000d0023          	sb	zero,0(s10)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1057
	      nread += p - p0;
	      nassigned++;
   144f8:	0017879b          	addiw	a5,a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1056
		    break;
		  if (BufferEmpty)
		    break;
		}
	      *p = 0;
	      nread += p - p0;
   144fc:	017c8bbb          	addw	s7,s9,s7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1057
	      nassigned++;
   14500:	00f12a23          	sw	a5,20(sp)
   14504:	ae0ff06f          	j	137e4 <__svfscanf_r+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1220
	  if ((flags & SUPPRESS) == 0)
	    {
	      u_long res;

	      *p = 0;
	      res = (*ccfn) (rptr, buf, (char **) NULL, base);
   14508:	01012683          	lw	a3,16(sp)
   1450c:	03013583          	ld	a1,48(sp)
   14510:	02813783          	ld	a5,40(sp)
   14514:	00000613          	li	a2,0
   14518:	00048513          	mv	a0,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1219
	    }
	  if ((flags & SUPPRESS) == 0)
	    {
	      u_long res;

	      *p = 0;
   1451c:	000d0023          	sb	zero,0(s10)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1220
	      res = (*ccfn) (rptr, buf, (char **) NULL, base);
   14520:	000780e7          	jalr	a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1221
	      if (flags & POINTER)
   14524:	020af713          	andi	a4,s5,32
   14528:	0c070c63          	beqz	a4,14600 <__svfscanf_r+0xec4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1223
		{
		  void **vp = GET_ARG (N, ap, void **);
   1452c:	000b3703          	ld	a4,0(s6)
   14530:	008b0b13          	addi	s6,s6,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1233
		      resll = _strtoull_r (rptr, buf, (char **) NULL, base);
		      *vp = (void *) (uintptr_t) resll;
		    }
		  else
#endif /* !_NO_LONGLONG */
		    *vp = (void *) (uintptr_t) res;
   14534:	00a73023          	sd	a0,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1269
	      else
		{
		  ip = GET_ARG (N, ap, int *);
		  *ip = res;
		}
	      nassigned++;
   14538:	01412783          	lw	a5,20(sp)
   1453c:	0017879b          	addiw	a5,a5,1
   14540:	00f12a23          	sw	a5,20(sp)
   14544:	eadff06f          	j	143f0 <__svfscanf_r+0xcb4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:984
          if (flags & LONG)
            {
              /* Process %S and %ls placeholders */
              mbstate_t state;
              memset (&state, 0, sizeof (mbstate_t));
              if ((flags & SUPPRESS) == 0)
   14548:	010af793          	andi	a5,s5,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:983
#if !defined(_ELIX_LEVEL) || _ELIX_LEVEL >= 2
          if (flags & LONG)
            {
              /* Process %S and %ls placeholders */
              mbstate_t state;
              memset (&state, 0, sizeof (mbstate_t));
   1454c:	06810c93          	addi	s9,sp,104
   14550:	00800613          	li	a2,8
   14554:	00000593          	li	a1,0
   14558:	000c8513          	mv	a0,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:984
              if ((flags & SUPPRESS) == 0)
   1455c:	00078a13          	mv	s4,a5
   14560:	00f12423          	sw	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:987
                wcp = GET_ARG (N, ap, wchar_t *);
              else
                wcp = &wc;
   14564:	06410a93          	addi	s5,sp,100
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:983
#if !defined(_ELIX_LEVEL) || _ELIX_LEVEL >= 2
          if (flags & LONG)
            {
              /* Process %S and %ls placeholders */
              mbstate_t state;
              memset (&state, 0, sizeof (mbstate_t));
   14568:	608030ef          	jal	17b70 <memset>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:984
              if ((flags & SUPPRESS) == 0)
   1456c:	000a1663          	bnez	s4,14578 <__svfscanf_r+0xe3c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:985
                wcp = GET_ARG (N, ap, wchar_t *);
   14570:	000b3a83          	ld	s5,0(s6)
   14574:	008b0b13          	addi	s6,s6,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:988
              else
                wcp = &wc;
              n = 0;
   14578:	00000a13          	li	s4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:989
              while (!isspace (*fp->_p) && width != 0)
   1457c:	000c3603          	ld	a2,0(s8)
   14580:	8281b683          	ld	a3,-2008(gp) # 24468 <__ctype_ptr__>
   14584:	00064603          	lbu	a2,0(a2)
   14588:	00c686b3          	add	a3,a3,a2
   1458c:	0016c683          	lbu	a3,1(a3)
   14590:	0086f693          	andi	a3,a3,8
   14594:	00069463          	bnez	a3,1459c <__svfscanf_r+0xe60>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:989 (discriminator 1)
   14598:	10091663          	bnez	s2,146a4 <__svfscanf_r+0xf68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1022
                      if (n != 0)
                        goto input_failure;
                      break;
                    }
                }
              if (!(flags & SUPPRESS))
   1459c:	00812783          	lw	a5,8(sp)
   145a0:	a4079263          	bnez	a5,137e4 <__svfscanf_r+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1025
                {
                  *wcp = L'\0';
                  nassigned++;
   145a4:	01412783          	lw	a5,20(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1024
                      break;
                    }
                }
              if (!(flags & SUPPRESS))
                {
                  *wcp = L'\0';
   145a8:	000aa023          	sw	zero,0(s5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1025
                  nassigned++;
   145ac:	0017879b          	addiw	a5,a5,1
   145b0:	00f12a23          	sw	a5,20(sp)
   145b4:	a30ff06f          	j	137e4 <__svfscanf_r+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1108
		  if (flags & NZDIGITS)
		    {
		      flags &= ~(SIGNOK | NZDIGITS | NDIGITS);
		      goto ok;
		    }
		  flags &= ~(SIGNOK | PFXOK | NDIGITS);
   145b8:	c7fafa93          	andi	s5,s5,-897
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1109
		  if (width_left)
   145bc:	000e0663          	beqz	t3,145c8 <__svfscanf_r+0xe8c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1111
		    {
		      width_left--;
   145c0:	fffe0e1b          	addiw	t3,t3,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1112
		      width++;
   145c4:	00190913          	addi	s2,s2,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1114
		    }
		  ++skips;
   145c8:	001a0a1b          	addiw	s4,s4,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1115
		  goto skip;
   145cc:	da5ff06f          	j	14370 <__svfscanf_r+0xc34>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1357
		case 'N':
		  if (nancount == 0 && zeroes == 0
		      && (flags & (NDIGITS | DPTOK | EXPOK)) ==
				  (NDIGITS | DPTOK | EXPOK))
		    {
		      flags &= ~(SIGNOK | DPTOK | EXPOK | NDIGITS);
   145d0:	87fa7a13          	andi	s4,s4,-1921
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1358
		      nancount = 1;
   145d4:	00100d13          	li	s10,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1359
		      goto fok;
   145d8:	9adff06f          	j	13f84 <__svfscanf_r+0x848>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1386
		case 'I':
		  if (infcount == 0 && zeroes == 0
		      && (flags & (NDIGITS | DPTOK | EXPOK)) ==
				  (NDIGITS | DPTOK | EXPOK))
		    {
		      flags &= ~(SIGNOK | DPTOK | EXPOK | NDIGITS);
   145dc:	87fa7a13          	andi	s4,s4,-1921
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1387
		      infcount = 1;
   145e0:	00100c93          	li	s9,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1388
		      goto fok;
   145e4:	9a1ff06f          	j	13f84 <__svfscanf_r+0x848>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1211
	   * not necessary.
	   */
	  if (flags & NDIGITS)
	    {
	      if (p > buf)
		_ungetc_r (rptr, *--p, fp); /* [-+xX] */
   145e8:	fffd4583          	lbu	a1,-1(s10)
   145ec:	000c0613          	mv	a2,s8
   145f0:	00048513          	mv	a0,s1
   145f4:	fffd0d13          	addi	s10,s10,-1
   145f8:	5f0080ef          	jal	1cbe8 <_ungetc_r>
   145fc:	de5ff06f          	j	143e0 <__svfscanf_r+0xca4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1242
		{
		  cp = GET_ARG (N, ap, char *);
		  *cp = res;
		}
#endif
	      else if (flags & SHORT)
   14600:	004af713          	andi	a4,s5,4
   14604:	06070463          	beqz	a4,1466c <__svfscanf_r+0xf30>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1245
		{
		  sp = GET_ARG (N, ap, short *);
		  *sp = res;
   14608:	000b3703          	ld	a4,0(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1244
		  *cp = res;
		}
#endif
	      else if (flags & SHORT)
		{
		  sp = GET_ARG (N, ap, short *);
   1460c:	008b0b13          	addi	s6,s6,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1245
		  *sp = res;
   14610:	00a71023          	sh	a0,0(a4)
   14614:	f25ff06f          	j	14538 <__svfscanf_r+0xdfc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1583
	      long new_exp = 0;

	      *p = 0;
	      if ((flags & (DPTOK | EXPOK)) == EXPOK)
		{
		  exp_adjust = zeroes - leading_zeroes;
   14618:	03813783          	ld	a5,56(sp)
   1461c:	40fa8ab3          	sub	s5,s5,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1584
		  new_exp = -exp_adjust;
   14620:	41500633          	neg	a2,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1589
		  exp_start = p;
		}
	      else if (exp_adjust)
                new_exp = _strtol_r (rptr, (exp_start + 1), NULL, 10) - exp_adjust;
	      if (exp_adjust)
   14624:	b60a82e3          	beqz	s5,14188 <__svfscanf_r+0xa4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1594
		{

		  /* If there might not be enough space for the new exponent,
		     truncate some trailing digits to make room.  */
		  if (exp_start >= buf + sizeof (buf) - MAX_LONG_LEN)
   14628:	2b910713          	addi	a4,sp,697
   1462c:	00ede463          	bltu	s11,a4,14634 <__svfscanf_r+0xef8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1595
		    exp_start = buf + sizeof (buf) - MAX_LONG_LEN - 1;
   14630:	2b810d93          	addi	s11,sp,696
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1596
                 sprintf (exp_start, "e%ld", new_exp);
   14634:	000225b7          	lui	a1,0x22
   14638:	bf858593          	addi	a1,a1,-1032 # 21bf8 <zeroes.4123+0x708>
   1463c:	000d8513          	mv	a0,s11
   14640:	7fd040ef          	jal	1963c <sprintf>
   14644:	b45ff06f          	j	14188 <__svfscanf_r+0xa4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1588
		  exp_adjust = zeroes - leading_zeroes;
		  new_exp = -exp_adjust;
		  exp_start = p;
		}
	      else if (exp_adjust)
                new_exp = _strtol_r (rptr, (exp_start + 1), NULL, 10) - exp_adjust;
   14648:	05813d83          	ld	s11,88(sp)
   1464c:	00000613          	li	a2,0
   14650:	00a00693          	li	a3,10
   14654:	001d8593          	addi	a1,s11,1
   14658:	00048513          	mv	a0,s1
   1465c:	4b0060ef          	jal	1ab0c <_strtol_r>
   14660:	05013783          	ld	a5,80(sp)
   14664:	40f50633          	sub	a2,a0,a5
   14668:	fc1ff06f          	j	14628 <__svfscanf_r+0xeec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1247
	      else if (flags & SHORT)
		{
		  sp = GET_ARG (N, ap, short *);
		  *sp = res;
		}
	      else if (flags & LONG)
   1466c:	001afa93          	andi	s5,s5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1250
		{
		  lp = GET_ARG (N, ap, long *);
		  *lp = res;
   14670:	000b3703          	ld	a4,0(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1249
		  sp = GET_ARG (N, ap, short *);
		  *sp = res;
		}
	      else if (flags & LONG)
		{
		  lp = GET_ARG (N, ap, long *);
   14674:	008b0b13          	addi	s6,s6,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1247
	      else if (flags & SHORT)
		{
		  sp = GET_ARG (N, ap, short *);
		  *sp = res;
		}
	      else if (flags & LONG)
   14678:	0c0a8063          	beqz	s5,14738 <__svfscanf_r+0xffc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1250
		{
		  lp = GET_ARG (N, ap, long *);
		  *lp = res;
   1467c:	00a73023          	sd	a0,0(a4)
   14680:	eb9ff06f          	j	14538 <__svfscanf_r+0xdfc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1621
		  ldp = GET_ARG (N, ap, _LONG_DOUBLE *);
		  *ldp = QUAD_RES;
		}
	      else
		{
		  flp = GET_ARG (N, ap, float *);
   14684:	008b0a93          	addi	s5,s6,8
   14688:	000b3c83          	ld	s9,0(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1622
		  if (isnan (res))
   1468c:	6c9040ef          	jal	19554 <__fpclassifyd>
   14690:	18050063          	beqz	a0,14810 <__svfscanf_r+0x10d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1625
		    *flp = nanf (NULL);
		  else
		    *flp = res;
   14694:	40147453          	fcvt.s.d	fs0,fs0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1621
		  ldp = GET_ARG (N, ap, _LONG_DOUBLE *);
		  *ldp = QUAD_RES;
		}
	      else
		{
		  flp = GET_ARG (N, ap, float *);
   14698:	000a8b13          	mv	s6,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1625
		  if (isnan (res))
		    *flp = nanf (NULL);
		  else
		    *flp = res;
   1469c:	008ca027          	fsw	fs0,0(s9)
   146a0:	b19ff06f          	j	141b8 <__svfscanf_r+0xa7c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:991
              else
                wcp = &wc;
              n = 0;
              while (!isspace (*fp->_p) && width != 0)
                {
                  if (n == MB_CUR_MAX)
   146a4:	679020ef          	jal	1751c <__locale_mb_cur_max>
   146a8:	b2aa0663          	beq	s4,a0,139d4 <__svfscanf_r+0x298>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:993
                    goto input_failure;
                  buf[n++] = *fp->_p;
   146ac:	000c3683          	ld	a3,0(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:994
                  fp->_r -= 1;
   146b0:	008c2603          	lw	a2,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:993
              n = 0;
              while (!isspace (*fp->_p) && width != 0)
                {
                  if (n == MB_CUR_MAX)
                    goto input_failure;
                  buf[n++] = *fp->_p;
   146b4:	2d010793          	addi	a5,sp,720
   146b8:	0006cf03          	lbu	t5,0(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:994
                  fp->_r -= 1;
   146bc:	fff6061b          	addiw	a2,a2,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:995
                  fp->_p += 1;
   146c0:	00168693          	addi	a3,a3,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:993
              n = 0;
              while (!isspace (*fp->_p) && width != 0)
                {
                  if (n == MB_CUR_MAX)
                    goto input_failure;
                  buf[n++] = *fp->_p;
   146c4:	001a0d1b          	addiw	s10,s4,1
   146c8:	01478eb3          	add	t4,a5,s4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:994
                  fp->_r -= 1;
   146cc:	00cc2423          	sw	a2,8(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:995
                  fp->_p += 1;
   146d0:	00dc3023          	sd	a3,0(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:996
                  if ((mbslen = _mbrtowc_r (rptr, wcp, buf, n, &state))
   146d4:	000c8713          	mv	a4,s9
   146d8:	000d0693          	mv	a3,s10
   146dc:	17010613          	addi	a2,sp,368
   146e0:	000a8593          	mv	a1,s5
   146e4:	00048513          	mv	a0,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:993
              n = 0;
              while (!isspace (*fp->_p) && width != 0)
                {
                  if (n == MB_CUR_MAX)
                    goto input_failure;
                  buf[n++] = *fp->_p;
   146e8:	ebee8023          	sb	t5,-352(t4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:996
                  fp->_r -= 1;
                  fp->_p += 1;
                  if ((mbslen = _mbrtowc_r (rptr, wcp, buf, n, &state))
   146ec:	020030ef          	jal	1770c <_mbrtowc_r>
   146f0:	fff00793          	li	a5,-1
   146f4:	aef50063          	beq	a0,a5,139d4 <__svfscanf_r+0x298>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:999
                                                        == (size_t)-1)
                    goto input_failure;
                  if (mbslen == 0)
   146f8:	04051463          	bnez	a0,14740 <__svfscanf_r+0x1004>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1000
                    *wcp = L'\0';
   146fc:	000aa023          	sw	zero,0(s5)
   14700:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1003
                  if (mbslen != (size_t)-2) /* Incomplete sequence */
                    {
                      if (iswspace(*wcp))
   14704:	565020ef          	jal	17468 <iswspace>
   14708:	06050263          	beqz	a0,1476c <__svfscanf_r+0x1030>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1005
                        {
                          while (n != 0)
   1470c:	e80d08e3          	beqz	s10,1459c <__svfscanf_r+0xe60>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1006
                            _ungetc_r (rptr, (unsigned char) buf[--n], fp);
   14710:	fffd0d1b          	addiw	s10,s10,-1
   14714:	000d0713          	mv	a4,s10
   14718:	2d010793          	addi	a5,sp,720
   1471c:	00e78733          	add	a4,a5,a4
   14720:	ea074583          	lbu	a1,-352(a4)
   14724:	000c0613          	mv	a2,s8
   14728:	00048513          	mv	a0,s1
   1472c:	4bc080ef          	jal	1cbe8 <_ungetc_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1005
                    *wcp = L'\0';
                  if (mbslen != (size_t)-2) /* Incomplete sequence */
                    {
                      if (iswspace(*wcp))
                        {
                          while (n != 0)
   14730:	fe0d10e3          	bnez	s10,14710 <__svfscanf_r+0xfd4>
   14734:	e69ff06f          	j	1459c <__svfscanf_r+0xe60>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1267
		}
#endif
	      else
		{
		  ip = GET_ARG (N, ap, int *);
		  *ip = res;
   14738:	00a72023          	sw	a0,0(a4)
   1473c:	dfdff06f          	j	14538 <__svfscanf_r+0xdfc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1001
                  if ((mbslen = _mbrtowc_r (rptr, wcp, buf, n, &state))
                                                        == (size_t)-1)
                    goto input_failure;
                  if (mbslen == 0)
                    *wcp = L'\0';
                  if (mbslen != (size_t)-2) /* Incomplete sequence */
   14740:	ffe00793          	li	a5,-2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:993
              n = 0;
              while (!isspace (*fp->_p) && width != 0)
                {
                  if (n == MB_CUR_MAX)
                    goto input_failure;
                  buf[n++] = *fp->_p;
   14744:	000d0a13          	mv	s4,s10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1001
                  if ((mbslen = _mbrtowc_r (rptr, wcp, buf, n, &state))
                                                        == (size_t)-1)
                    goto input_failure;
                  if (mbslen == 0)
                    *wcp = L'\0';
                  if (mbslen != (size_t)-2) /* Incomplete sequence */
   14748:	04f51263          	bne	a0,a5,1478c <__svfscanf_r+0x1050>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1015
                      width -= 1;
                      if ((flags & SUPPRESS) == 0)
                        wcp += 1;
                      n = 0;
                    }
                  if (BufferEmpty)
   1474c:	008c2683          	lw	a3,8(s8)
   14750:	e2d046e3          	bgtz	a3,1457c <__svfscanf_r+0xe40>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1015 (discriminator 1)
   14754:	000c0593          	mv	a1,s8
   14758:	00048513          	mv	a0,s1
   1475c:	2ed040ef          	jal	19248 <__srefill_r>
   14760:	e0050ee3          	beqz	a0,1457c <__svfscanf_r+0xe40>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1017
                    {
                      if (n != 0)
   14764:	a60a1863          	bnez	s4,139d4 <__svfscanf_r+0x298>
   14768:	e35ff06f          	j	1459c <__svfscanf_r+0xe60>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1011
                            _ungetc_r (rptr, (unsigned char) buf[--n], fp);
                          break;
                        }
                      nread += n;
                      width -= 1;
                      if ((flags & SUPPRESS) == 0)
   1476c:	00812783          	lw	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1009
                        {
                          while (n != 0)
                            _ungetc_r (rptr, (unsigned char) buf[--n], fp);
                          break;
                        }
                      nread += n;
   14770:	01ab8bbb          	addw	s7,s7,s10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1010
                      width -= 1;
   14774:	fff90913          	addi	s2,s2,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1013
                      if ((flags & SUPPRESS) == 0)
                        wcp += 1;
                      n = 0;
   14778:	00000a13          	li	s4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1011
                            _ungetc_r (rptr, (unsigned char) buf[--n], fp);
                          break;
                        }
                      nread += n;
                      width -= 1;
                      if ((flags & SUPPRESS) == 0)
   1477c:	fc0798e3          	bnez	a5,1474c <__svfscanf_r+0x1010>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1012
                        wcp += 1;
   14780:	004a8a93          	addi	s5,s5,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1013
                      n = 0;
   14784:	00078a13          	mv	s4,a5
   14788:	fc5ff06f          	j	1474c <__svfscanf_r+0x1010>
   1478c:	000aa503          	lw	a0,0(s5)
   14790:	f75ff06f          	j	14704 <__svfscanf_r+0xfc8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1513
	  if (nancount - 1U < 2U) /* nancount && nancount < 3 */
	    {
	      /* Newlib's ungetc works even if we called __srefill in
		 the middle of a partial parse, but POSIX does not
		 guarantee that in all implementations of ungetc.  */
	      while (p > buf)
   14794:	03013783          	ld	a5,48(sp)
   14798:	8db7fc63          	bleu	s11,a5,13870 <__svfscanf_r+0x134>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1515
		{
		  _ungetc_r (rptr, *--p, fp); /* [-+nNaA] */
   1479c:	fffd8d93          	addi	s11,s11,-1
   147a0:	000dc583          	lbu	a1,0(s11)
   147a4:	000c0613          	mv	a2,s8
   147a8:	00048513          	mv	a0,s1
   147ac:	43c080ef          	jal	1cbe8 <_ungetc_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1513
	  if (nancount - 1U < 2U) /* nancount && nancount < 3 */
	    {
	      /* Newlib's ungetc works even if we called __srefill in
		 the middle of a partial parse, but POSIX does not
		 guarantee that in all implementations of ungetc.  */
	      while (p > buf)
   147b0:	03013783          	ld	a5,48(sp)
   147b4:	fefd94e3          	bne	s11,a5,1479c <__svfscanf_r+0x1060>
   147b8:	8b8ff06f          	j	13870 <__svfscanf_r+0x134>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1551
	  if (flags & NDIGITS)
	    {
	      if (flags & EXPOK)
		{
		  /* no digits at all */
		  while (p > buf)
   147bc:	03013783          	ld	a5,48(sp)
   147c0:	8bb7f863          	bleu	s11,a5,13870 <__svfscanf_r+0x134>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1553
		    {
		      _ungetc_r (rptr, *--p, fp); /* [-+.] */
   147c4:	fffd8d93          	addi	s11,s11,-1
   147c8:	000dc583          	lbu	a1,0(s11)
   147cc:	000c0613          	mv	a2,s8
   147d0:	00048513          	mv	a0,s1
   147d4:	414080ef          	jal	1cbe8 <_ungetc_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1551
	  if (flags & NDIGITS)
	    {
	      if (flags & EXPOK)
		{
		  /* no digits at all */
		  while (p > buf)
   147d8:	03013783          	ld	a5,48(sp)
   147dc:	fefd94e3          	bne	s11,a5,147c4 <__svfscanf_r+0x1088>
   147e0:	890ff06f          	j	13870 <__svfscanf_r+0x134>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1533
		    _ungetc_r (rptr, *--p, fp); /* [iInNtT] */
		    --nread;
		  }
	      else
		{
		  while (p > buf)
   147e4:	03013783          	ld	a5,48(sp)
   147e8:	01b7e463          	bltu	a5,s11,147f0 <__svfscanf_r+0x10b4>
   147ec:	884ff06f          	j	13870 <__svfscanf_r+0x134>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1535
		    {
		      _ungetc_r (rptr, *--p, fp); /* [-+iInN] */
   147f0:	fffd8d93          	addi	s11,s11,-1
   147f4:	000dc583          	lbu	a1,0(s11)
   147f8:	000c0613          	mv	a2,s8
   147fc:	00048513          	mv	a0,s1
   14800:	3e8080ef          	jal	1cbe8 <_ungetc_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1533
		    _ungetc_r (rptr, *--p, fp); /* [iInNtT] */
		    --nread;
		  }
	      else
		{
		  while (p > buf)
   14804:	03013783          	ld	a5,48(sp)
   14808:	fefd94e3          	bne	s11,a5,147f0 <__svfscanf_r+0x10b4>
   1480c:	864ff06f          	j	13870 <__svfscanf_r+0x134>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1623
		}
	      else
		{
		  flp = GET_ARG (N, ap, float *);
		  if (isnan (res))
		    *flp = nanf (NULL);
   14810:	00000513          	li	a0,0
   14814:	535040ef          	jal	19548 <nanf>
   14818:	00aca027          	fsw	fa0,0(s9)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:1621
		  ldp = GET_ARG (N, ap, _LONG_DOUBLE *);
		  *ldp = QUAD_RES;
		}
	      else
		{
		  flp = GET_ARG (N, ap, float *);
   1481c:	000a8b13          	mv	s6,s5
   14820:	999ff06f          	j	141b8 <__svfscanf_r+0xa7c>

0000000000014824 <vfscanf>:
vfscanf():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:265
int
_DEFUN(VFSCANF, (fp, fmt, ap),
       register FILE *fp _AND
       _CONST char *fmt _AND
       va_list ap)
{
   14824:	fd010113          	addi	sp,sp,-48
   14828:	02813023          	sd	s0,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:266
  struct _reent *reent = _REENT;
   1482c:	8101b403          	ld	s0,-2032(gp) # 24450 <_impure_ptr>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:265
int
_DEFUN(VFSCANF, (fp, fmt, ap),
       register FILE *fp _AND
       _CONST char *fmt _AND
       va_list ap)
{
   14830:	00913c23          	sd	s1,24(sp)
   14834:	02113423          	sd	ra,40(sp)
   14838:	00050493          	mv	s1,a0
   1483c:	00060693          	mv	a3,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:268
  struct _reent *reent = _REENT;

  CHECK_INIT(reent, fp);
   14840:	02040263          	beqz	s0,14864 <vfscanf+0x40>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:268 (discriminator 1)
   14844:	05042783          	lw	a5,80(s0)
   14848:	00079e63          	bnez	a5,14864 <vfscanf+0x40>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:268 (discriminator 2)
   1484c:	00040513          	mv	a0,s0
   14850:	00b13023          	sd	a1,0(sp)
   14854:	00c13423          	sd	a2,8(sp)
   14858:	719010ef          	jal	16770 <__sinit>
   1485c:	00813683          	ld	a3,8(sp)
   14860:	00013583          	ld	a1,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:269
  return __SVFSCANF_R (reent, fp, fmt, ap);
   14864:	00058613          	mv	a2,a1
   14868:	00040513          	mv	a0,s0
   1486c:	00048593          	mv	a1,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:270
}
   14870:	02813083          	ld	ra,40(sp)
   14874:	02013403          	ld	s0,32(sp)
   14878:	01813483          	ld	s1,24(sp)
   1487c:	03010113          	addi	sp,sp,48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:269
       va_list ap)
{
  struct _reent *reent = _REENT;

  CHECK_INIT(reent, fp);
  return __SVFSCANF_R (reent, fp, fmt, ap);
   14880:	ebdfe06f          	j	1373c <__svfscanf_r>

0000000000014884 <__svfscanf>:
__svfscanf():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:278
_DEFUN(__SVFSCANF, (fp, fmt0, ap),
       register FILE *fp _AND
       char _CONST *fmt0 _AND
       va_list ap)
{
  return __SVFSCANF_R (_REENT, fp, fmt0, ap);
   14884:	00060693          	mv	a3,a2
   14888:	00058613          	mv	a2,a1
   1488c:	00050593          	mv	a1,a0
   14890:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
   14894:	ea9fe06f          	j	1373c <__svfscanf_r>

0000000000014898 <_vfscanf_r>:
_vfscanf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:289
_DEFUN(_VFSCANF_R, (data, fp, fmt, ap),
       struct _reent *data _AND
       register FILE *fp   _AND
       _CONST char *fmt    _AND
       va_list ap)
{
   14898:	fd010113          	addi	sp,sp,-48
   1489c:	02813023          	sd	s0,32(sp)
   148a0:	02113423          	sd	ra,40(sp)
   148a4:	00050413          	mv	s0,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:290
  CHECK_INIT(data, fp);
   148a8:	02050463          	beqz	a0,148d0 <_vfscanf_r+0x38>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:290 (discriminator 1)
   148ac:	05052783          	lw	a5,80(a0)
   148b0:	02079063          	bnez	a5,148d0 <_vfscanf_r+0x38>
   148b4:	00d13c23          	sd	a3,24(sp)
   148b8:	00c13823          	sd	a2,16(sp)
   148bc:	00b13423          	sd	a1,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:290 (discriminator 2)
   148c0:	6b1010ef          	jal	16770 <__sinit>
   148c4:	01813683          	ld	a3,24(sp)
   148c8:	01013603          	ld	a2,16(sp)
   148cc:	00813583          	ld	a1,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:291
  return __SVFSCANF_R (data, fp, fmt, ap);
   148d0:	00040513          	mv	a0,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:292
}
   148d4:	02813083          	ld	ra,40(sp)
   148d8:	02013403          	ld	s0,32(sp)
   148dc:	03010113          	addi	sp,sp,48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfscanf.c:291
       register FILE *fp   _AND
       _CONST char *fmt    _AND
       va_list ap)
{
  CHECK_INIT(data, fp);
  return __SVFSCANF_R (data, fp, fmt, ap);
   148e0:	e5dfe06f          	j	1373c <__svfscanf_r>

00000000000148e4 <__swbuf_r>:
__swbuf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:40
int
_DEFUN(__swbuf_r, (ptr, c, fp),
       struct _reent *ptr _AND
       register int c _AND
       register FILE *fp)
{
   148e4:	fd010113          	addi	sp,sp,-48
   148e8:	02813023          	sd	s0,32(sp)
   148ec:	00913c23          	sd	s1,24(sp)
   148f0:	01313423          	sd	s3,8(sp)
   148f4:	02113423          	sd	ra,40(sp)
   148f8:	01213823          	sd	s2,16(sp)
   148fc:	00050493          	mv	s1,a0
   14900:	00058993          	mv	s3,a1
   14904:	00060413          	mv	s0,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:45
  register int n;

  /* Ensure stdio has been initialized.  */

  CHECK_INIT (ptr, fp);
   14908:	00050663          	beqz	a0,14914 <__swbuf_r+0x30>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:45 (discriminator 1)
   1490c:	05052783          	lw	a5,80(a0)
   14910:	12078e63          	beqz	a5,14a4c <__swbuf_r+0x168>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:56
   * If we did not do this, a sufficient number of putc()
   * calls might wrap _w from negative to positive.
   */

  fp->_w = fp->_lbfsize;
  if (cantwrite (ptr, fp))
   14914:	01041683          	lh	a3,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:55
   * (if line buffered) so that we will get called again.
   * If we did not do this, a sufficient number of putc()
   * calls might wrap _w from negative to positive.
   */

  fp->_w = fp->_lbfsize;
   14918:	02842783          	lw	a5,40(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:56
  if (cantwrite (ptr, fp))
   1491c:	03069713          	slli	a4,a3,0x30
   14920:	03075713          	srli	a4,a4,0x30
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:55
   * (if line buffered) so that we will get called again.
   * If we did not do this, a sufficient number of putc()
   * calls might wrap _w from negative to positive.
   */

  fp->_w = fp->_lbfsize;
   14924:	00f42623          	sw	a5,12(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:56
  if (cantwrite (ptr, fp))
   14928:	00877793          	andi	a5,a4,8
   1492c:	0e078e63          	beqz	a5,14a28 <__swbuf_r+0x144>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:56 (discriminator 2)
   14930:	01843783          	ld	a5,24(s0)
   14934:	0e078a63          	beqz	a5,14a28 <__swbuf_r+0x144>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:60
    return EOF;
  c = (unsigned char) c;

  ORIENT (fp, -1);
   14938:	03271613          	slli	a2,a4,0x32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:58
   */

  fp->_w = fp->_lbfsize;
  if (cantwrite (ptr, fp))
    return EOF;
  c = (unsigned char) c;
   1493c:	0ff9f913          	andi	s2,s3,255
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:60

  ORIENT (fp, -1);
   14940:	06065663          	bgez	a2,149ac <__swbuf_r+0xc8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:72
   * happen on unbuffered streams, where _bf._size==1; fflush()
   * guarantees that putc() will always call wbuf() by setting _w
   * to 0, so we need not do anything else.
   */

  n = fp->_p - fp->_bf._base;
   14944:	00043703          	ld	a4,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:73
  if (n >= fp->_bf._size)
   14948:	02042683          	lw	a3,32(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:72
   * happen on unbuffered streams, where _bf._size==1; fflush()
   * guarantees that putc() will always call wbuf() by setting _w
   * to 0, so we need not do anything else.
   */

  n = fp->_p - fp->_bf._base;
   1494c:	40f707bb          	subw	a5,a4,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:73
  if (n >= fp->_bf._size)
   14950:	08d7d663          	ble	a3,a5,149dc <__swbuf_r+0xf8>
   14954:	0017879b          	addiw	a5,a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:79
    {
      if (_fflush_r (ptr, fp))
	return EOF;
      n = 0;
    }
  fp->_w--;
   14958:	00c42683          	lw	a3,12(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:80
  *fp->_p++ = c;
   1495c:	00170613          	addi	a2,a4,1
   14960:	00c43023          	sd	a2,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:79
    {
      if (_fflush_r (ptr, fp))
	return EOF;
      n = 0;
    }
  fp->_w--;
   14964:	fff6869b          	addiw	a3,a3,-1
   14968:	00d42623          	sw	a3,12(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:80
  *fp->_p++ = c;
   1496c:	01370023          	sb	s3,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:81
  if (++n == fp->_bf._size || (fp->_flags & __SLBF && c == '\n'))
   14970:	02042703          	lw	a4,32(s0)
   14974:	08f70263          	beq	a4,a5,149f8 <__swbuf_r+0x114>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:81 (discriminator 1)
   14978:	01045783          	lhu	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:58
   */

  fp->_w = fp->_lbfsize;
  if (cantwrite (ptr, fp))
    return EOF;
  c = (unsigned char) c;
   1497c:	00090513          	mv	a0,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:81
	return EOF;
      n = 0;
    }
  fp->_w--;
  *fp->_p++ = c;
  if (++n == fp->_bf._size || (fp->_flags & __SLBF && c == '\n'))
   14980:	0017f793          	andi	a5,a5,1
   14984:	00078663          	beqz	a5,14990 <__swbuf_r+0xac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:81 (discriminator 2)
   14988:	00a00793          	li	a5,10
   1498c:	06f90663          	beq	s2,a5,149f8 <__swbuf_r+0x114>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:85
    if (_fflush_r (ptr, fp))
      return EOF;
  return c;
}
   14990:	02813083          	ld	ra,40(sp)
   14994:	02013403          	ld	s0,32(sp)
   14998:	01813483          	ld	s1,24(sp)
   1499c:	01013903          	ld	s2,16(sp)
   149a0:	00813983          	ld	s3,8(sp)
   149a4:	03010113          	addi	sp,sp,48
   149a8:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:60 (discriminator 1)
  fp->_w = fp->_lbfsize;
  if (cantwrite (ptr, fp))
    return EOF;
  c = (unsigned char) c;

  ORIENT (fp, -1);
   149ac:	0ac42583          	lw	a1,172(s0)
   149b0:	ffffe737          	lui	a4,0xffffe
   149b4:	fff7071b          	addiw	a4,a4,-1
   149b8:	00e5f733          	and	a4,a1,a4
   149bc:	00002637          	lui	a2,0x2
   149c0:	00c6e6b3          	or	a3,a3,a2
   149c4:	0ae42623          	sw	a4,172(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:72
   * happen on unbuffered streams, where _bf._size==1; fflush()
   * guarantees that putc() will always call wbuf() by setting _w
   * to 0, so we need not do anything else.
   */

  n = fp->_p - fp->_bf._base;
   149c8:	00043703          	ld	a4,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:60
  fp->_w = fp->_lbfsize;
  if (cantwrite (ptr, fp))
    return EOF;
  c = (unsigned char) c;

  ORIENT (fp, -1);
   149cc:	00d41823          	sh	a3,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:73
   * guarantees that putc() will always call wbuf() by setting _w
   * to 0, so we need not do anything else.
   */

  n = fp->_p - fp->_bf._base;
  if (n >= fp->_bf._size)
   149d0:	02042683          	lw	a3,32(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:72
   * happen on unbuffered streams, where _bf._size==1; fflush()
   * guarantees that putc() will always call wbuf() by setting _w
   * to 0, so we need not do anything else.
   */

  n = fp->_p - fp->_bf._base;
   149d4:	40f707bb          	subw	a5,a4,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:73
  if (n >= fp->_bf._size)
   149d8:	f6d7cee3          	blt	a5,a3,14954 <__swbuf_r+0x70>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:75
    {
      if (_fflush_r (ptr, fp))
   149dc:	00040593          	mv	a1,s0
   149e0:	00048513          	mv	a0,s1
   149e4:	1e1010ef          	jal	163c4 <_fflush_r>
   149e8:	06051663          	bnez	a0,14a54 <__swbuf_r+0x170>
   149ec:	00043703          	ld	a4,0(s0)
   149f0:	00100793          	li	a5,1
   149f4:	f65ff06f          	j	14958 <__swbuf_r+0x74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:82
      n = 0;
    }
  fp->_w--;
  *fp->_p++ = c;
  if (++n == fp->_bf._size || (fp->_flags & __SLBF && c == '\n'))
    if (_fflush_r (ptr, fp))
   149f8:	00040593          	mv	a1,s0
   149fc:	00048513          	mv	a0,s1
   14a00:	1c5010ef          	jal	163c4 <_fflush_r>
   14a04:	04051863          	bnez	a0,14a54 <__swbuf_r+0x170>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:85
      return EOF;
  return c;
}
   14a08:	02813083          	ld	ra,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:58
   */

  fp->_w = fp->_lbfsize;
  if (cantwrite (ptr, fp))
    return EOF;
  c = (unsigned char) c;
   14a0c:	00090513          	mv	a0,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:85
  *fp->_p++ = c;
  if (++n == fp->_bf._size || (fp->_flags & __SLBF && c == '\n'))
    if (_fflush_r (ptr, fp))
      return EOF;
  return c;
}
   14a10:	02013403          	ld	s0,32(sp)
   14a14:	01813483          	ld	s1,24(sp)
   14a18:	01013903          	ld	s2,16(sp)
   14a1c:	00813983          	ld	s3,8(sp)
   14a20:	03010113          	addi	sp,sp,48
   14a24:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:56 (discriminator 3)
   * If we did not do this, a sufficient number of putc()
   * calls might wrap _w from negative to positive.
   */

  fp->_w = fp->_lbfsize;
  if (cantwrite (ptr, fp))
   14a28:	00040593          	mv	a1,s0
   14a2c:	00048513          	mv	a0,s1
   14a30:	03c000ef          	jal	14a6c <__swsetup_r>
   14a34:	02051063          	bnez	a0,14a54 <__swbuf_r+0x170>
   14a38:	01041683          	lh	a3,16(s0)
   14a3c:	01843783          	ld	a5,24(s0)
   14a40:	03069713          	slli	a4,a3,0x30
   14a44:	03075713          	srli	a4,a4,0x30
   14a48:	ef1ff06f          	j	14938 <__swbuf_r+0x54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:45 (discriminator 2)
{
  register int n;

  /* Ensure stdio has been initialized.  */

  CHECK_INIT (ptr, fp);
   14a4c:	525010ef          	jal	16770 <__sinit>
   14a50:	ec5ff06f          	j	14914 <__swbuf_r+0x30>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:57
   * calls might wrap _w from negative to positive.
   */

  fp->_w = fp->_lbfsize;
  if (cantwrite (ptr, fp))
    return EOF;
   14a54:	fff00513          	li	a0,-1
   14a58:	f39ff06f          	j	14990 <__swbuf_r+0xac>

0000000000014a5c <__swbuf>:
__swbuf():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wbuf.c:95
int
_DEFUN(__swbuf, (c, fp),
       register int c _AND
       register FILE *fp)
{
  return __swbuf_r (_REENT, c, fp);
   14a5c:	00058613          	mv	a2,a1
   14a60:	00050593          	mv	a1,a0
   14a64:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
   14a68:	e7dff06f          	j	148e4 <__swbuf_r>

0000000000014a6c <__swsetup_r>:
__swsetup_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:39
       struct _reent *ptr _AND
       register FILE * fp)
{
  /* Make sure stdio is set up.  */

  CHECK_INIT (_REENT, fp);
   14a6c:	8101b783          	ld	a5,-2032(gp) # 24450 <_impure_ptr>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:36

int
_DEFUN(__swsetup_r, (ptr, fp),
       struct _reent *ptr _AND
       register FILE * fp)
{
   14a70:	fe010113          	addi	sp,sp,-32
   14a74:	00813823          	sd	s0,16(sp)
   14a78:	00913423          	sd	s1,8(sp)
   14a7c:	00113c23          	sd	ra,24(sp)
   14a80:	00050493          	mv	s1,a0
   14a84:	00058413          	mv	s0,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:39
  /* Make sure stdio is set up.  */

  CHECK_INIT (_REENT, fp);
   14a88:	00078663          	beqz	a5,14a94 <__swsetup_r+0x28>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:39 (discriminator 1)
   14a8c:	0507a703          	lw	a4,80(a5) # 1050 <_ftext-0xefb0>
   14a90:	0e070063          	beqz	a4,14b70 <__swsetup_r+0x104>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:45

  /*
   * If we are not writing, we had better be reading and writing.
   */

  if ((fp->_flags & __SWR) == 0)
   14a94:	01041703          	lh	a4,16(s0)
   14a98:	03071793          	slli	a5,a4,0x30
   14a9c:	0307d793          	srli	a5,a5,0x30
   14aa0:	0087f693          	andi	a3,a5,8
   14aa4:	04068263          	beqz	a3,14ae8 <__swsetup_r+0x7c>
   14aa8:	01843683          	ld	a3,24(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:70
  /*
   * Make a buffer if necessary, then set _w.
   * A string I/O file should not explicitly allocate a buffer
   * unless asprintf is being used.
   */
  if (fp->_bf._base == NULL
   14aac:	06068663          	beqz	a3,14b18 <__swsetup_r+0xac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:74
        && (!(fp->_flags & __SSTR) || (fp->_flags & __SMBF)))
    __smakebuf_r (ptr, fp);

  if (fp->_flags & __SLBF)
   14ab0:	0017f713          	andi	a4,a5,1
   14ab4:	08071463          	bnez	a4,14b3c <__swsetup_r+0xd0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:85
       */
      fp->_w = 0;
      fp->_lbfsize = -fp->_bf._size;
    }
  else
    fp->_w = fp->_flags & __SNBF ? 0 : fp->_bf._size;
   14ab8:	0027f793          	andi	a5,a5,2
   14abc:	00000713          	li	a4,0
   14ac0:	00079463          	bnez	a5,14ac8 <__swsetup_r+0x5c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:85 (discriminator 1)
   14ac4:	02042703          	lw	a4,32(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:85 (discriminator 4)
   14ac8:	00e42623          	sw	a4,12(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:93
    {
      /* __smakebuf_r set errno, but not flag */
      fp->_flags |= __SERR;
      return EOF;
    }
  return 0;
   14acc:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:87
      fp->_lbfsize = -fp->_bf._size;
    }
  else
    fp->_w = fp->_flags & __SNBF ? 0 : fp->_bf._size;

  if (!fp->_bf._base && (fp->_flags & __SMBF))
   14ad0:	08068263          	beqz	a3,14b54 <__swsetup_r+0xe8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:94
      /* __smakebuf_r set errno, but not flag */
      fp->_flags |= __SERR;
      return EOF;
    }
  return 0;
}
   14ad4:	01813083          	ld	ra,24(sp)
   14ad8:	01013403          	ld	s0,16(sp)
   14adc:	00813483          	ld	s1,8(sp)
   14ae0:	02010113          	addi	sp,sp,32
   14ae4:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:47
   * If we are not writing, we had better be reading and writing.
   */

  if ((fp->_flags & __SWR) == 0)
    {
      if ((fp->_flags & __SRW) == 0)
   14ae8:	0107f693          	andi	a3,a5,16
   14aec:	0c068663          	beqz	a3,14bb8 <__swsetup_r+0x14c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:53
        {
	  ptr->_errno = EBADF;
	  fp->_flags |= __SERR;
	  return EOF;
        }
      if (fp->_flags & __SRD)
   14af0:	0047f793          	andi	a5,a5,4
   14af4:	08079463          	bnez	a5,14b7c <__swsetup_r+0x110>
   14af8:	01843683          	ld	a3,24(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:62
	    FREEUB (ptr, fp);
	  fp->_flags &= ~(__SRD | __SEOF);
	  fp->_r = 0;
	  fp->_p = fp->_bf._base;
	}
      fp->_flags |= __SWR;
   14afc:	00876793          	ori	a5,a4,8
   14b00:	0107979b          	slliw	a5,a5,0x10
   14b04:	4107d79b          	sraiw	a5,a5,0x10
   14b08:	00f41823          	sh	a5,16(s0)
   14b0c:	03079793          	slli	a5,a5,0x30
   14b10:	0307d793          	srli	a5,a5,0x30
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:70
  /*
   * Make a buffer if necessary, then set _w.
   * A string I/O file should not explicitly allocate a buffer
   * unless asprintf is being used.
   */
  if (fp->_bf._base == NULL
   14b14:	f8069ee3          	bnez	a3,14ab0 <__swsetup_r+0x44>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:71
        && (!(fp->_flags & __SSTR) || (fp->_flags & __SMBF)))
   14b18:	2807f713          	andi	a4,a5,640
   14b1c:	20000613          	li	a2,512
   14b20:	f8c708e3          	beq	a4,a2,14ab0 <__swsetup_r+0x44>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:72
    __smakebuf_r (ptr, fp);
   14b24:	00040593          	mv	a1,s0
   14b28:	00048513          	mv	a0,s1
   14b2c:	235020ef          	jal	17560 <__smakebuf_r>
   14b30:	01045783          	lhu	a5,16(s0)
   14b34:	01843683          	ld	a3,24(s0)
   14b38:	f79ff06f          	j	14ab0 <__swsetup_r+0x44>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:82
       * It is line buffered, so make _lbfsize be -_bufsize
       * for the putc() macro.  We will change _lbfsize back
       * to 0 whenever we turn off __SWR.
       */
      fp->_w = 0;
      fp->_lbfsize = -fp->_bf._size;
   14b3c:	02042783          	lw	a5,32(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:81
      /*
       * It is line buffered, so make _lbfsize be -_bufsize
       * for the putc() macro.  We will change _lbfsize back
       * to 0 whenever we turn off __SWR.
       */
      fp->_w = 0;
   14b40:	00042623          	sw	zero,12(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:93
    {
      /* __smakebuf_r set errno, but not flag */
      fp->_flags |= __SERR;
      return EOF;
    }
  return 0;
   14b44:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:82
       * It is line buffered, so make _lbfsize be -_bufsize
       * for the putc() macro.  We will change _lbfsize back
       * to 0 whenever we turn off __SWR.
       */
      fp->_w = 0;
      fp->_lbfsize = -fp->_bf._size;
   14b48:	40f007bb          	negw	a5,a5
   14b4c:	02f42423          	sw	a5,40(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:87
    }
  else
    fp->_w = fp->_flags & __SNBF ? 0 : fp->_bf._size;

  if (!fp->_bf._base && (fp->_flags & __SMBF))
   14b50:	f80692e3          	bnez	a3,14ad4 <__swsetup_r+0x68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:87 (discriminator 1)
   14b54:	01041783          	lh	a5,16(s0)
   14b58:	0807f713          	andi	a4,a5,128
   14b5c:	f6070ce3          	beqz	a4,14ad4 <__swsetup_r+0x68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:90
    {
      /* __smakebuf_r set errno, but not flag */
      fp->_flags |= __SERR;
   14b60:	0407e793          	ori	a5,a5,64
   14b64:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:91
      return EOF;
   14b68:	fff00513          	li	a0,-1
   14b6c:	f69ff06f          	j	14ad4 <__swsetup_r+0x68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:39 (discriminator 2)
       struct _reent *ptr _AND
       register FILE * fp)
{
  /* Make sure stdio is set up.  */

  CHECK_INIT (_REENT, fp);
   14b70:	00078513          	mv	a0,a5
   14b74:	3fd010ef          	jal	16770 <__sinit>
   14b78:	f1dff06f          	j	14a94 <__swsetup_r+0x28>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:56
	  return EOF;
        }
      if (fp->_flags & __SRD)
	{
	  /* clobber any ungetc data */
	  if (HASUB (fp))
   14b7c:	05843583          	ld	a1,88(s0)
   14b80:	00058e63          	beqz	a1,14b9c <__swsetup_r+0x130>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:57
	    FREEUB (ptr, fp);
   14b84:	07440793          	addi	a5,s0,116
   14b88:	00f58863          	beq	a1,a5,14b98 <__swsetup_r+0x12c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:57 (discriminator 1)
   14b8c:	00048513          	mv	a0,s1
   14b90:	7a5010ef          	jal	16b34 <_free_r>
   14b94:	01041703          	lh	a4,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:57 (discriminator 3)
   14b98:	04043c23          	sd	zero,88(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:60
	  fp->_flags &= ~(__SRD | __SEOF);
	  fp->_r = 0;
	  fp->_p = fp->_bf._base;
   14b9c:	01843683          	ld	a3,24(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:58
      if (fp->_flags & __SRD)
	{
	  /* clobber any ungetc data */
	  if (HASUB (fp))
	    FREEUB (ptr, fp);
	  fp->_flags &= ~(__SRD | __SEOF);
   14ba0:	fdb77713          	andi	a4,a4,-37
   14ba4:	0107171b          	slliw	a4,a4,0x10
   14ba8:	4107571b          	sraiw	a4,a4,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:59
	  fp->_r = 0;
   14bac:	00042423          	sw	zero,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:60
	  fp->_p = fp->_bf._base;
   14bb0:	00d43023          	sd	a3,0(s0)
   14bb4:	f49ff06f          	j	14afc <__swsetup_r+0x90>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:49

  if ((fp->_flags & __SWR) == 0)
    {
      if ((fp->_flags & __SRW) == 0)
        {
	  ptr->_errno = EBADF;
   14bb8:	00900793          	li	a5,9
   14bbc:	00f4a023          	sw	a5,0(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:50
	  fp->_flags |= __SERR;
   14bc0:	04076713          	ori	a4,a4,64
   14bc4:	00e41823          	sh	a4,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/wsetup.c:51
	  return EOF;
   14bc8:	fff00513          	li	a0,-1
   14bcc:	f09ff06f          	j	14ad4 <__swsetup_r+0x68>

0000000000014bd0 <__register_exitproc>:
__register_exitproc():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:72
	(type, fn, arg, d),
	int type _AND
	void (*fn) (void) _AND
	void *arg _AND
	void *d)
{
   14bd0:	fd010113          	addi	sp,sp,-48
   14bd4:	02813023          	sd	s0,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:80

#ifndef __SINGLE_THREAD__
  __lock_acquire_recursive(__atexit_lock);
#endif

  p = _GLOBAL_ATEXIT;
   14bd8:	8081b403          	ld	s0,-2040(gp) # 24448 <_global_impure_ptr>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:72
	(type, fn, arg, d),
	int type _AND
	void (*fn) (void) _AND
	void *arg _AND
	void *d)
{
   14bdc:	00913c23          	sd	s1,24(sp)
   14be0:	00050493          	mv	s1,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:80

#ifndef __SINGLE_THREAD__
  __lock_acquire_recursive(__atexit_lock);
#endif

  p = _GLOBAL_ATEXIT;
   14be4:	1f843503          	ld	a0,504(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:72
	(type, fn, arg, d),
	int type _AND
	void (*fn) (void) _AND
	void *arg _AND
	void *d)
{
   14be8:	01213823          	sd	s2,16(sp)
   14bec:	01313423          	sd	s3,8(sp)
   14bf0:	01413023          	sd	s4,0(sp)
   14bf4:	02113423          	sd	ra,40(sp)
   14bf8:	00058913          	mv	s2,a1
   14bfc:	00060a13          	mv	s4,a2
   14c00:	00068993          	mv	s3,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:81
#ifndef __SINGLE_THREAD__
  __lock_acquire_recursive(__atexit_lock);
#endif

  p = _GLOBAL_ATEXIT;
  if (p == NULL)
   14c04:	0c050463          	beqz	a0,14ccc <__register_exitproc+0xfc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:83
    _GLOBAL_ATEXIT = p = _GLOBAL_ATEXIT0;
  if (p->_ind >= _ATEXIT_SIZE)
   14c08:	00852703          	lw	a4,8(a0)
   14c0c:	01f00793          	li	a5,31
   14c10:	0017059b          	addiw	a1,a4,1
   14c14:	02e7de63          	ble	a4,a5,14c50 <__register_exitproc+0x80>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:90
#ifndef _ATEXIT_DYNAMIC_ALLOC
      return -1;
#else
      /* Don't dynamically allocate the atexit array if malloc is not
	 available.  */
      if (!malloc)
   14c18:	000117b7          	lui	a5,0x11
   14c1c:	cf478793          	addi	a5,a5,-780 # 10cf4 <malloc>
   14c20:	0a078c63          	beqz	a5,14cd8 <__register_exitproc+0x108>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:93
	return -1;

      p = (struct _atexit *) malloc (sizeof *p);
   14c24:	31800513          	li	a0,792
   14c28:	8ccfc0ef          	jal	10cf4 <malloc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:94
      if (p == NULL)
   14c2c:	0a050663          	beqz	a0,14cd8 <__register_exitproc+0x108>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:102
	  __lock_release_recursive(__atexit_lock);
#endif
	  return -1;
	}
      p->_ind = 0;
      p->_next = _GLOBAL_ATEXIT;
   14c30:	1f843783          	ld	a5,504(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:101
#ifndef __SINGLE_THREAD__
	  __lock_release_recursive(__atexit_lock);
#endif
	  return -1;
	}
      p->_ind = 0;
   14c34:	00052423          	sw	zero,8(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:106
      p->_next = _GLOBAL_ATEXIT;
      _GLOBAL_ATEXIT = p;
#ifndef _REENT_SMALL
      p->_on_exit_args._fntypes = 0;
      p->_on_exit_args._is_cxa = 0;
   14c38:	00100593          	li	a1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:102
	  __lock_release_recursive(__atexit_lock);
#endif
	  return -1;
	}
      p->_ind = 0;
      p->_next = _GLOBAL_ATEXIT;
   14c3c:	00f53023          	sd	a5,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:103
      _GLOBAL_ATEXIT = p;
   14c40:	1ea43c23          	sd	a0,504(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:105
#ifndef _REENT_SMALL
      p->_on_exit_args._fntypes = 0;
   14c44:	30052823          	sw	zero,784(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:106
      p->_on_exit_args._is_cxa = 0;
   14c48:	30052a23          	sw	zero,788(a0)
   14c4c:	00000713          	li	a4,0
   14c50:	00070793          	mv	a5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:113
      p->_on_exit_args_ptr = NULL;
#endif
#endif
    }

  if (type != __et_atexit)
   14c54:	02049e63          	bnez	s1,14c90 <__register_exitproc+0xc0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:142
      args->_fntypes |= (1 << p->_ind);
      args->_dso_handle[p->_ind] = d;
      if (type == __et_cxa)
	args->_is_cxa |= (1 << p->_ind);
    }
  p->_fns[p->_ind++] = fn;
   14c58:	00278793          	addi	a5,a5,2
   14c5c:	00379793          	slli	a5,a5,0x3
   14c60:	00b52423          	sw	a1,8(a0)
   14c64:	00f50533          	add	a0,a0,a5
   14c68:	01253023          	sd	s2,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:146
#ifndef __SINGLE_THREAD__
  __lock_release_recursive(__atexit_lock);
#endif
  return 0;
   14c6c:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:147
}
   14c70:	02813083          	ld	ra,40(sp)
   14c74:	02013403          	ld	s0,32(sp)
   14c78:	01813483          	ld	s1,24(sp)
   14c7c:	01013903          	ld	s2,16(sp)
   14c80:	00813983          	ld	s3,8(sp)
   14c84:	00013a03          	ld	s4,0(sp)
   14c88:	03010113          	addi	sp,sp,48
   14c8c:	00008067          	ret
   14c90:	00371813          	slli	a6,a4,0x3
   14c94:	01050833          	add	a6,a0,a6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:136
	  p->_on_exit_args_ptr = args;
	}
#else
      args = &p->_on_exit_args;
#endif
      args->_fnargs[p->_ind] = arg;
   14c98:	11483823          	sd	s4,272(a6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:137
      args->_fntypes |= (1 << p->_ind);
   14c9c:	31052883          	lw	a7,784(a0)
   14ca0:	00100613          	li	a2,1
   14ca4:	00e6173b          	sllw	a4,a2,a4
   14ca8:	00e8e633          	or	a2,a7,a4
   14cac:	30c52823          	sw	a2,784(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:138
      args->_dso_handle[p->_ind] = d;
   14cb0:	21383823          	sd	s3,528(a6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:139
      if (type == __et_cxa)
   14cb4:	00200693          	li	a3,2
   14cb8:	fad490e3          	bne	s1,a3,14c58 <__register_exitproc+0x88>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:140
	args->_is_cxa |= (1 << p->_ind);
   14cbc:	31452683          	lw	a3,788(a0)
   14cc0:	00e6e733          	or	a4,a3,a4
   14cc4:	30e52a23          	sw	a4,788(a0)
   14cc8:	f91ff06f          	j	14c58 <__register_exitproc+0x88>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:82
  __lock_acquire_recursive(__atexit_lock);
#endif

  p = _GLOBAL_ATEXIT;
  if (p == NULL)
    _GLOBAL_ATEXIT = p = _GLOBAL_ATEXIT0;
   14ccc:	20040513          	addi	a0,s0,512
   14cd0:	1ea43c23          	sd	a0,504(s0)
   14cd4:	f35ff06f          	j	14c08 <__register_exitproc+0x38>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__atexit.c:91
      return -1;
#else
      /* Don't dynamically allocate the atexit array if malloc is not
	 available.  */
      if (!malloc)
	return -1;
   14cd8:	fff00513          	li	a0,-1
   14cdc:	f95ff06f          	j	14c70 <__register_exitproc+0xa0>

0000000000014ce0 <__call_exitprocs>:
__call_exitprocs():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:68
 */

void 
_DEFUN (__call_exitprocs, (code, d),
	int code _AND _PTR d)
{
   14ce0:	fa010113          	addi	sp,sp,-96
   14ce4:	03413823          	sd	s4,48(sp)
   14ce8:	8081ba03          	ld	s4,-2040(gp) # 24448 <_global_impure_ptr>
   14cec:	03313c23          	sd	s3,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:136
#ifndef _ATEXIT_DYNAMIC_ALLOC
      break;
#else
      /* Don't dynamically free the atexit array if free is not
	 available.  */
      if (!free)
   14cf0:	000119b7          	lui	s3,0x11
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:68
 */

void 
_DEFUN (__call_exitprocs, (code, d),
	int code _AND _PTR d)
{
   14cf4:	04913423          	sd	s1,72(sp)
   14cf8:	05213023          	sd	s2,64(sp)
   14cfc:	03513423          	sd	s5,40(sp)
   14d00:	01713c23          	sd	s7,24(sp)
   14d04:	01813823          	sd	s8,16(sp)
   14d08:	04113c23          	sd	ra,88(sp)
   14d0c:	04813823          	sd	s0,80(sp)
   14d10:	03613023          	sd	s6,32(sp)
   14d14:	01913423          	sd	s9,8(sp)
   14d18:	01a13023          	sd	s10,0(sp)
   14d1c:	00050913          	mv	s2,a0
   14d20:	00058b93          	mv	s7,a1
   14d24:	1f8a0a93          	addi	s5,s4,504
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:117
	    continue;

	  ind = p->_ind;

	  /* Call the function.  */
	  if (!args || (args->_fntypes & i) == 0)
   14d28:	00100493          	li	s1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:92
#ifdef _REENT_SMALL
      args = p->_on_exit_args_ptr;
#else
      args = &p->_on_exit_args;
#endif
      for (n = p->_ind - 1; n >= 0; n--)
   14d2c:	fff00c13          	li	s8,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:136
#ifndef _ATEXIT_DYNAMIC_ALLOC
      break;
#else
      /* Don't dynamically free the atexit array if free is not
	 available.  */
      if (!free)
   14d30:	d0098993          	addi	s3,s3,-768 # 10d00 <free>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:83
  __lock_acquire_recursive(__atexit_lock);
#endif

 restart:

  p = _GLOBAL_ATEXIT;
   14d34:	1f8a3b03          	ld	s6,504(s4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:85
  lastp = &_GLOBAL_ATEXIT;
  while (p)
   14d38:	0c0b0463          	beqz	s6,14e00 <__call_exitprocs+0x120>
   14d3c:	000a8d13          	mv	s10,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:92
#ifdef _REENT_SMALL
      args = p->_on_exit_args_ptr;
#else
      args = &p->_on_exit_args;
#endif
      for (n = p->_ind - 1; n >= 0; n--)
   14d40:	008b2403          	lw	s0,8(s6)
   14d44:	fff4041b          	addiw	s0,s0,-1
   14d48:	02045263          	bgez	s0,14d6c <__call_exitprocs+0x8c>
   14d4c:	08c0006f          	j	14dd8 <__call_exitprocs+0xf8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:99 (discriminator 2)
	  int ind;

	  i = 1 << n;

	  /* Skip functions not from this dso.  */
	  if (d && (!args || args->_dso_handle[n] != d))
   14d50:	02040793          	addi	a5,s0,32
   14d54:	00379793          	slli	a5,a5,0x3
   14d58:	00fb07b3          	add	a5,s6,a5
   14d5c:	1107b783          	ld	a5,272(a5)
   14d60:	00fb8a63          	beq	s7,a5,14d74 <__call_exitprocs+0x94>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:92
#ifdef _REENT_SMALL
      args = p->_on_exit_args_ptr;
#else
      args = &p->_on_exit_args;
#endif
      for (n = p->_ind - 1; n >= 0; n--)
   14d64:	fff4041b          	addiw	s0,s0,-1
   14d68:	07840863          	beq	s0,s8,14dd8 <__call_exitprocs+0xf8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:99
	  int ind;

	  i = 1 << n;

	  /* Skip functions not from this dso.  */
	  if (d && (!args || args->_dso_handle[n] != d))
   14d6c:	00040713          	mv	a4,s0
   14d70:	fe0b90e3          	bnez	s7,14d50 <__call_exitprocs+0x70>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:105
	    continue;

	  /* Remove the function now to protect against the
	     function calling exit recursively.  */
	  fn = p->_fns[n];
	  if (n == p->_ind - 1)
   14d74:	008b2783          	lw	a5,8(s6)
   14d78:	00371713          	slli	a4,a4,0x3
   14d7c:	00eb0733          	add	a4,s6,a4
   14d80:	fff7879b          	addiw	a5,a5,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:104
	  if (d && (!args || args->_dso_handle[n] != d))
	    continue;

	  /* Remove the function now to protect against the
	     function calling exit recursively.  */
	  fn = p->_fns[n];
   14d84:	01073683          	ld	a3,16(a4) # ffffffffffffe010 <_end+0xfffffffffffd71f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:105
	  if (n == p->_ind - 1)
   14d88:	0a878c63          	beq	a5,s0,14e40 <__call_exitprocs+0x160>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:108
	    p->_ind--;
	  else
	    p->_fns[n] = NULL;
   14d8c:	00073823          	sd	zero,16(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:111

	  /* Skip functions that have already been called.  */
	  if (!fn)
   14d90:	fc068ae3          	beqz	a3,14d64 <__call_exitprocs+0x84>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:117
	    continue;

	  ind = p->_ind;

	  /* Call the function.  */
	  if (!args || (args->_fntypes & i) == 0)
   14d94:	310b2783          	lw	a5,784(s6)
   14d98:	0084963b          	sllw	a2,s1,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:114

	  /* Skip functions that have already been called.  */
	  if (!fn)
	    continue;

	  ind = p->_ind;
   14d9c:	008b2c83          	lw	s9,8(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:117

	  /* Call the function.  */
	  if (!args || (args->_fntypes & i) == 0)
   14da0:	00f677b3          	and	a5,a2,a5
   14da4:	08078a63          	beqz	a5,14e38 <__call_exitprocs+0x158>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:119
	    fn ();
	  else if ((args->_is_cxa & i) == 0)
   14da8:	314b2783          	lw	a5,788(s6)
   14dac:	00f67633          	and	a2,a2,a5
   14db0:	08061c63          	bnez	a2,14e48 <__call_exitprocs+0x168>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:120
	    (*((void (*)(int, _PTR)) fn))(code, args->_fnargs[n]);
   14db4:	11073583          	ld	a1,272(a4)
   14db8:	00090513          	mv	a0,s2
   14dbc:	000680e7          	jalr	a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:127
	    (*((void (*)(_PTR)) fn))(args->_fnargs[n]);

	  /* The function we called call atexit and registered another
	     function (or functions).  Call these new functions before
	     continuing with the already registered functions.  */
	  if (ind != p->_ind || *lastp != p)
   14dc0:	008b2783          	lw	a5,8(s6)
   14dc4:	f79798e3          	bne	a5,s9,14d34 <__call_exitprocs+0x54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:127 (discriminator 1)
   14dc8:	000d3783          	ld	a5,0(s10)
   14dcc:	f76794e3          	bne	a5,s6,14d34 <__call_exitprocs+0x54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:92
#ifdef _REENT_SMALL
      args = p->_on_exit_args_ptr;
#else
      args = &p->_on_exit_args;
#endif
      for (n = p->_ind - 1; n >= 0; n--)
   14dd0:	fff4041b          	addiw	s0,s0,-1
   14dd4:	f9841ce3          	bne	s0,s8,14d6c <__call_exitprocs+0x8c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:136
#ifndef _ATEXIT_DYNAMIC_ALLOC
      break;
#else
      /* Don't dynamically free the atexit array if free is not
	 available.  */
      if (!free)
   14dd8:	02098463          	beqz	s3,14e00 <__call_exitprocs+0x120>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:141
	break;

      /* Move to the next block.  Free empty blocks except the last one,
	 which is part of _GLOBAL_REENT.  */
      if (p->_ind == 0 && p->_next)
   14ddc:	008b2783          	lw	a5,8(s6)
   14de0:	06079a63          	bnez	a5,14e54 <__call_exitprocs+0x174>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:141 (discriminator 1)
   14de4:	000b3783          	ld	a5,0(s6)
   14de8:	08078063          	beqz	a5,14e68 <__call_exitprocs+0x188>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:149
	  *lastp = p->_next;
#ifdef _REENT_SMALL
	  if (args)
	    free (args);
#endif
	  free (p);
   14dec:	000b0513          	mv	a0,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:144
      /* Move to the next block.  Free empty blocks except the last one,
	 which is part of _GLOBAL_REENT.  */
      if (p->_ind == 0 && p->_next)
	{
	  /* Remove empty block from the list.  */
	  *lastp = p->_next;
   14df0:	00fd3023          	sd	a5,0(s10)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:149
#ifdef _REENT_SMALL
	  if (args)
	    free (args);
#endif
	  free (p);
   14df4:	f0dfb0ef          	jal	10d00 <free>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:150
	  p = *lastp;
   14df8:	000d3b03          	ld	s6,0(s10)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:85

 restart:

  p = _GLOBAL_ATEXIT;
  lastp = &_GLOBAL_ATEXIT;
  while (p)
   14dfc:	f40b12e3          	bnez	s6,14d40 <__call_exitprocs+0x60>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:163
    }
#ifndef __SINGLE_THREAD__
  __lock_release_recursive(__atexit_lock);
#endif

}
   14e00:	05813083          	ld	ra,88(sp)
   14e04:	05013403          	ld	s0,80(sp)
   14e08:	04813483          	ld	s1,72(sp)
   14e0c:	04013903          	ld	s2,64(sp)
   14e10:	03813983          	ld	s3,56(sp)
   14e14:	03013a03          	ld	s4,48(sp)
   14e18:	02813a83          	ld	s5,40(sp)
   14e1c:	02013b03          	ld	s6,32(sp)
   14e20:	01813b83          	ld	s7,24(sp)
   14e24:	01013c03          	ld	s8,16(sp)
   14e28:	00813c83          	ld	s9,8(sp)
   14e2c:	00013d03          	ld	s10,0(sp)
   14e30:	06010113          	addi	sp,sp,96
   14e34:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:118

	  ind = p->_ind;

	  /* Call the function.  */
	  if (!args || (args->_fntypes & i) == 0)
	    fn ();
   14e38:	000680e7          	jalr	a3
   14e3c:	f85ff06f          	j	14dc0 <__call_exitprocs+0xe0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:106

	  /* Remove the function now to protect against the
	     function calling exit recursively.  */
	  fn = p->_fns[n];
	  if (n == p->_ind - 1)
	    p->_ind--;
   14e40:	008b2423          	sw	s0,8(s6)
   14e44:	f4dff06f          	j	14d90 <__call_exitprocs+0xb0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:122
	  if (!args || (args->_fntypes & i) == 0)
	    fn ();
	  else if ((args->_is_cxa & i) == 0)
	    (*((void (*)(int, _PTR)) fn))(code, args->_fnargs[n]);
	  else
	    (*((void (*)(_PTR)) fn))(args->_fnargs[n]);
   14e48:	11073503          	ld	a0,272(a4)
   14e4c:	000680e7          	jalr	a3
   14e50:	f71ff06f          	j	14dc0 <__call_exitprocs+0xe0>
   14e54:	000b3783          	ld	a5,0(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:154
	  free (p);
	  p = *lastp;
	}
      else
	{
	  lastp = &p->_next;
   14e58:	000b0d13          	mv	s10,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:155
	  p = p->_next;
   14e5c:	00078b13          	mv	s6,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/__call_atexit.c:85

 restart:

  p = _GLOBAL_ATEXIT;
  lastp = &_GLOBAL_ATEXIT;
  while (p)
   14e60:	ee0b10e3          	bnez	s6,14d40 <__call_exitprocs+0x60>
   14e64:	f9dff06f          	j	14e00 <__call_exitprocs+0x120>
   14e68:	00000793          	li	a5,0
   14e6c:	fedff06f          	j	14e58 <__call_exitprocs+0x178>

0000000000014e70 <quorem>:
quorem():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:39

static int
_DEFUN (quorem,
	(b, S),
	_Bigint * b _AND _Bigint * S)
{
   14e70:	fc010113          	addi	sp,sp,-64
   14e74:	03213023          	sd	s2,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:54
  n = S->_wds;
#ifdef DEBUG
  /*debug*/ if (b->_wds > n)
    /*debug*/ Bug ("oversize b in quorem");
#endif
  if (b->_wds < n)
   14e78:	01452783          	lw	a5,20(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:49
#ifdef Pack_32
  __Long z;
  __ULong si, zs;
#endif

  n = S->_wds;
   14e7c:	0145a903          	lw	s2,20(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:39

static int
_DEFUN (quorem,
	(b, S),
	_Bigint * b _AND _Bigint * S)
{
   14e80:	02113c23          	sd	ra,56(sp)
   14e84:	02813823          	sd	s0,48(sp)
   14e88:	02913423          	sd	s1,40(sp)
   14e8c:	01313c23          	sd	s3,24(sp)
   14e90:	01413823          	sd	s4,16(sp)
   14e94:	01513423          	sd	s5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:54
  n = S->_wds;
#ifdef DEBUG
  /*debug*/ if (b->_wds > n)
    /*debug*/ Bug ("oversize b in quorem");
#endif
  if (b->_wds < n)
   14e98:	1b27ce63          	blt	a5,s2,15054 <quorem+0x1e4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:57
    return 0;
  sx = S->_x;
  sxe = sx + --n;
   14e9c:	fff9091b          	addiw	s2,s2,-1
   14ea0:	00090f13          	mv	t5,s2
   14ea4:	002f1f13          	slli	t5,t5,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:56
  /*debug*/ if (b->_wds > n)
    /*debug*/ Bug ("oversize b in quorem");
#endif
  if (b->_wds < n)
    return 0;
  sx = S->_x;
   14ea8:	01858413          	addi	s0,a1,24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:57
  sxe = sx + --n;
   14eac:	01e409b3          	add	s3,s0,t5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:58
  bx = b->_x;
   14eb0:	01850a13          	addi	s4,a0,24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:59
  bxe = bx + n;
   14eb4:	01ea0f33          	add	t5,s4,t5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:60
  q = *bxe / (*sxe + 1);	/* ensure q <= true quotient */
   14eb8:	0009a783          	lw	a5,0(s3)
   14ebc:	000f2483          	lw	s1,0(t5)
   14ec0:	0017879b          	addiw	a5,a5,1
   14ec4:	02f4d4bb          	divuw	s1,s1,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:65
#ifdef DEBUG
  /*debug*/ if (q > 9)
    /*debug*/ Bug ("oversized quotient in quorem");
#endif
  if (q)
   14ec8:	0a048e63          	beqz	s1,14f84 <quorem+0x114>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:73 (discriminator 1)
      carry = 0;
      do
	{
#ifdef Pack_32
	  si = *sx++;
	  ys = (si & 0xffff) * q + carry;
   14ecc:	00010337          	lui	t1,0x10
   14ed0:	00040e93          	mv	t4,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:58
#endif
  if (b->_wds < n)
    return 0;
  sx = S->_x;
  sxe = sx + --n;
  bx = b->_x;
   14ed4:	000a0e13          	mv	t3,s4
   14ed8:	00000613          	li	a2,0
   14edc:	00000713          	li	a4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:73
      carry = 0;
      do
	{
#ifdef Pack_32
	  si = *sx++;
	  ys = (si & 0xffff) * q + carry;
   14ee0:	fff3031b          	addiw	t1,t1,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:72
      borrow = 0;
      carry = 0;
      do
	{
#ifdef Pack_32
	  si = *sx++;
   14ee4:	004e8e93          	addi	t4,t4,4
   14ee8:	ffcea803          	lw	a6,-4(t4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:76
	  ys = (si & 0xffff) * q + carry;
	  zs = (si >> 16) * q + (ys >> 16);
	  carry = zs >> 16;
	  y = (*bx & 0xffff) - (ys & 0xffff) + borrow;
   14eec:	000e2683          	lw	a3,0(t3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:82
	  borrow = y >> 16;
	  Sign_Extend (borrow, y);
	  z = (*bx >> 16) - (zs & 0xffff) + borrow;
	  borrow = z >> 16;
	  Sign_Extend (borrow, z);
	  Storeinc (bx, z, y);
   14ef0:	004e0e13          	addi	t3,t3,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:73
      carry = 0;
      do
	{
#ifdef Pack_32
	  si = *sx++;
	  ys = (si & 0xffff) * q + carry;
   14ef4:	006878b3          	and	a7,a6,t1
   14ef8:	029888bb          	mulw	a7,a7,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:74
	  zs = (si >> 16) * q + (ys >> 16);
   14efc:	0108581b          	srliw	a6,a6,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:76
	  carry = zs >> 16;
	  y = (*bx & 0xffff) - (ys & 0xffff) + borrow;
   14f00:	0066f7b3          	and	a5,a3,t1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:79
	  borrow = y >> 16;
	  Sign_Extend (borrow, y);
	  z = (*bx >> 16) - (zs & 0xffff) + borrow;
   14f04:	0106d69b          	srliw	a3,a3,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:74
      do
	{
#ifdef Pack_32
	  si = *sx++;
	  ys = (si & 0xffff) * q + carry;
	  zs = (si >> 16) * q + (ys >> 16);
   14f08:	0298083b          	mulw	a6,a6,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:73
      carry = 0;
      do
	{
#ifdef Pack_32
	  si = *sx++;
	  ys = (si & 0xffff) * q + carry;
   14f0c:	00c888bb          	addw	a7,a7,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:74
	  zs = (si >> 16) * q + (ys >> 16);
   14f10:	0108d61b          	srliw	a2,a7,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:76
	  carry = zs >> 16;
	  y = (*bx & 0xffff) - (ys & 0xffff) + borrow;
   14f14:	0068f8b3          	and	a7,a7,t1
   14f18:	4117073b          	subw	a4,a4,a7
   14f1c:	00f707bb          	addw	a5,a4,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:79
	  borrow = y >> 16;
	  Sign_Extend (borrow, y);
	  z = (*bx >> 16) - (zs & 0xffff) + borrow;
   14f20:	4107d71b          	sraiw	a4,a5,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:82
	  borrow = z >> 16;
	  Sign_Extend (borrow, z);
	  Storeinc (bx, z, y);
   14f24:	0067f7b3          	and	a5,a5,t1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:74
      do
	{
#ifdef Pack_32
	  si = *sx++;
	  ys = (si & 0xffff) * q + carry;
	  zs = (si >> 16) * q + (ys >> 16);
   14f28:	00c8063b          	addw	a2,a6,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:79
	  carry = zs >> 16;
	  y = (*bx & 0xffff) - (ys & 0xffff) + borrow;
	  borrow = y >> 16;
	  Sign_Extend (borrow, y);
	  z = (*bx >> 16) - (zs & 0xffff) + borrow;
   14f2c:	00667833          	and	a6,a2,t1
   14f30:	410686bb          	subw	a3,a3,a6
   14f34:	00e6873b          	addw	a4,a3,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:82
	  borrow = z >> 16;
	  Sign_Extend (borrow, z);
	  Storeinc (bx, z, y);
   14f38:	0107169b          	slliw	a3,a4,0x10
   14f3c:	00f6e6b3          	or	a3,a3,a5
   14f40:	fede2e23          	sw	a3,-4(t3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:75
	{
#ifdef Pack_32
	  si = *sx++;
	  ys = (si & 0xffff) * q + carry;
	  zs = (si >> 16) * q + (ys >> 16);
	  carry = zs >> 16;
   14f44:	0106561b          	srliw	a2,a2,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:80
	  y = (*bx & 0xffff) - (ys & 0xffff) + borrow;
	  borrow = y >> 16;
	  Sign_Extend (borrow, y);
	  z = (*bx >> 16) - (zs & 0xffff) + borrow;
	  borrow = z >> 16;
   14f48:	4107571b          	sraiw	a4,a4,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:92
	  borrow = y >> 16;
	  Sign_Extend (borrow, y);
	  *bx++ = y & 0xffff;
#endif
	}
      while (sx <= sxe);
   14f4c:	f9d9fce3          	bleu	t4,s3,14ee4 <quorem+0x74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:93
      if (!*bxe)
   14f50:	000f2783          	lw	a5,0(t5)
   14f54:	02079863          	bnez	a5,14f84 <quorem+0x114>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:96
	{
	  bx = b->_x;
	  while (--bxe > bx && !*bxe)
   14f58:	ffcf0793          	addi	a5,t5,-4
   14f5c:	02fa7263          	bleu	a5,s4,14f80 <quorem+0x110>
   14f60:	ffcf2703          	lw	a4,-4(t5)
   14f64:	00070863          	beqz	a4,14f74 <quorem+0x104>
   14f68:	0180006f          	j	14f80 <quorem+0x110>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:96 (discriminator 1)
   14f6c:	0007a703          	lw	a4,0(a5)
   14f70:	00071863          	bnez	a4,14f80 <quorem+0x110>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:96
   14f74:	ffc78793          	addi	a5,a5,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:97
	    --n;
   14f78:	fff9091b          	addiw	s2,s2,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:96
	}
      while (sx <= sxe);
      if (!*bxe)
	{
	  bx = b->_x;
	  while (--bxe > bx && !*bxe)
   14f7c:	fefa68e3          	bltu	s4,a5,14f6c <quorem+0xfc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:98
	    --n;
	  b->_wds = n;
   14f80:	01252a23          	sw	s2,20(a0)
   14f84:	00050a93          	mv	s5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:101
	}
    }
  if (cmp (b, S) >= 0)
   14f88:	5bc030ef          	jal	18544 <__mcmp>
   14f8c:	0a054063          	bltz	a0,1502c <quorem+0x1bc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:115
#ifdef Pack_32
	  si = *sx++;
	  ys = (si & 0xffff) + carry;
	  zs = (si >> 16) + (ys >> 16);
	  carry = zs >> 16;
	  y = (*bx & 0xffff) - (ys & 0xffff) + borrow;
   14f90:	000105b7          	lui	a1,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:103
	  b->_wds = n;
	}
    }
  if (cmp (b, S) >= 0)
    {
      q++;
   14f94:	0014849b          	addiw	s1,s1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:58
#endif
  if (b->_wds < n)
    return 0;
  sx = S->_x;
  sxe = sx + --n;
  bx = b->_x;
   14f98:	000a0613          	mv	a2,s4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:104
	}
    }
  if (cmp (b, S) >= 0)
    {
      q++;
      borrow = 0;
   14f9c:	00000793          	li	a5,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:115
#ifdef Pack_32
	  si = *sx++;
	  ys = (si & 0xffff) + carry;
	  zs = (si >> 16) + (ys >> 16);
	  carry = zs >> 16;
	  y = (*bx & 0xffff) - (ys & 0xffff) + borrow;
   14fa0:	fff5859b          	addiw	a1,a1,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:111 (discriminator 1)
      bx = b->_x;
      sx = S->_x;
      do
	{
#ifdef Pack_32
	  si = *sx++;
   14fa4:	00440413          	addi	s0,s0,4
   14fa8:	ffc42683          	lw	a3,-4(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:115
	  ys = (si & 0xffff) + carry;
	  zs = (si >> 16) + (ys >> 16);
	  carry = zs >> 16;
	  y = (*bx & 0xffff) - (ys & 0xffff) + borrow;
   14fac:	00062703          	lw	a4,0(a2) # 2000 <_ftext-0xe000>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:121
	  borrow = y >> 16;
	  Sign_Extend (borrow, y);
	  z = (*bx >> 16) - (zs & 0xffff) + borrow;
	  borrow = z >> 16;
	  Sign_Extend (borrow, z);
	  Storeinc (bx, z, y);
   14fb0:	00460613          	addi	a2,a2,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:115
#ifdef Pack_32
	  si = *sx++;
	  ys = (si & 0xffff) + carry;
	  zs = (si >> 16) + (ys >> 16);
	  carry = zs >> 16;
	  y = (*bx & 0xffff) - (ys & 0xffff) + borrow;
   14fb4:	00b6f833          	and	a6,a3,a1
   14fb8:	410787bb          	subw	a5,a5,a6
   14fbc:	00b77833          	and	a6,a4,a1
   14fc0:	010787bb          	addw	a5,a5,a6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:118
	  borrow = y >> 16;
	  Sign_Extend (borrow, y);
	  z = (*bx >> 16) - (zs & 0xffff) + borrow;
   14fc4:	0106d69b          	srliw	a3,a3,0x10
   14fc8:	0107571b          	srliw	a4,a4,0x10
   14fcc:	40d7073b          	subw	a4,a4,a3
   14fd0:	4107d69b          	sraiw	a3,a5,0x10
   14fd4:	00d706bb          	addw	a3,a4,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:121
	  borrow = z >> 16;
	  Sign_Extend (borrow, z);
	  Storeinc (bx, z, y);
   14fd8:	0106981b          	slliw	a6,a3,0x10
   14fdc:	00b7f733          	and	a4,a5,a1
   14fe0:	00e86733          	or	a4,a6,a4
   14fe4:	fee62e23          	sw	a4,-4(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:119
	  carry = zs >> 16;
	  y = (*bx & 0xffff) - (ys & 0xffff) + borrow;
	  borrow = y >> 16;
	  Sign_Extend (borrow, y);
	  z = (*bx >> 16) - (zs & 0xffff) + borrow;
	  borrow = z >> 16;
   14fe8:	4106d79b          	sraiw	a5,a3,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:131
	  borrow = y >> 16;
	  Sign_Extend (borrow, y);
	  *bx++ = y & 0xffff;
#endif
	}
      while (sx <= sxe);
   14fec:	fa89fce3          	bleu	s0,s3,14fa4 <quorem+0x134>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:133
      bx = b->_x;
      bxe = bx + n;
   14ff0:	00291713          	slli	a4,s2,0x2
   14ff4:	00ea0733          	add	a4,s4,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:134
      if (!*bxe)
   14ff8:	00072783          	lw	a5,0(a4)
   14ffc:	02079863          	bnez	a5,1502c <quorem+0x1bc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:136
	{
	  while (--bxe > bx && !*bxe)
   15000:	ffc70793          	addi	a5,a4,-4
   15004:	02fa7263          	bleu	a5,s4,15028 <quorem+0x1b8>
   15008:	ffc72703          	lw	a4,-4(a4)
   1500c:	00070863          	beqz	a4,1501c <quorem+0x1ac>
   15010:	0180006f          	j	15028 <quorem+0x1b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:136 (discriminator 1)
   15014:	0007a703          	lw	a4,0(a5)
   15018:	00071863          	bnez	a4,15028 <quorem+0x1b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:136
   1501c:	ffc78793          	addi	a5,a5,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:137
	    --n;
   15020:	fff9091b          	addiw	s2,s2,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:136
      while (sx <= sxe);
      bx = b->_x;
      bxe = bx + n;
      if (!*bxe)
	{
	  while (--bxe > bx && !*bxe)
   15024:	fefa68e3          	bltu	s4,a5,15014 <quorem+0x1a4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:138
	    --n;
	  b->_wds = n;
   15028:	012aaa23          	sw	s2,20(s5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:141
	}
    }
  return q;
   1502c:	00048513          	mv	a0,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:142
}
   15030:	03813083          	ld	ra,56(sp)
   15034:	03013403          	ld	s0,48(sp)
   15038:	02813483          	ld	s1,40(sp)
   1503c:	02013903          	ld	s2,32(sp)
   15040:	01813983          	ld	s3,24(sp)
   15044:	01013a03          	ld	s4,16(sp)
   15048:	00813a83          	ld	s5,8(sp)
   1504c:	04010113          	addi	sp,sp,64
   15050:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:55
#ifdef DEBUG
  /*debug*/ if (b->_wds > n)
    /*debug*/ Bug ("oversize b in quorem");
#endif
  if (b->_wds < n)
    return 0;
   15054:	00000513          	li	a0,0
   15058:	fd9ff06f          	j	15030 <quorem+0x1c0>

000000000001505c <_dtoa_r>:
_dtoa_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:189
	int mode _AND
	int ndigits _AND
	int *decpt _AND
	int *sign _AND
	char **rve)
{
   1505c:	e20585d3          	fmv.x.d	a1,fa1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:239
  char *s, *s0;

  d.d = _d;

  _REENT_CHECK_MP(ptr);
  if (_REENT_MP_RESULT(ptr))
   15060:	06053883          	ld	a7,96(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:189
	int mode _AND
	int ndigits _AND
	int *decpt _AND
	int *sign _AND
	char **rve)
{
   15064:	f3010113          	addi	sp,sp,-208
   15068:	0c813023          	sd	s0,192(sp)
   1506c:	0a913c23          	sd	s1,184(sp)
   15070:	0b313423          	sd	s3,168(sp)
   15074:	09613823          	sd	s6,144(sp)
   15078:	07913c23          	sd	s9,120(sp)
   1507c:	07a13823          	sd	s10,112(sp)
   15080:	0c113423          	sd	ra,200(sp)
   15084:	0b213823          	sd	s2,176(sp)
   15088:	0b413023          	sd	s4,160(sp)
   1508c:	09513c23          	sd	s5,152(sp)
   15090:	09713423          	sd	s7,136(sp)
   15094:	09813023          	sd	s8,128(sp)
   15098:	07b13423          	sd	s11,104(sp)
   1509c:	00e13023          	sd	a4,0(sp)
   150a0:	00050413          	mv	s0,a0
   150a4:	00060993          	mv	s3,a2
   150a8:	00068c93          	mv	s9,a3
   150ac:	00078493          	mv	s1,a5
   150b0:	00080b13          	mv	s6,a6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:236
#endif
  _Bigint *b, *b1, *delta, *mlo = NULL, *mhi, *S;
  double ds;
  char *s, *s0;

  d.d = _d;
   150b4:	00058d13          	mv	s10,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:239

  _REENT_CHECK_MP(ptr);
  if (_REENT_MP_RESULT(ptr))
   150b8:	02088263          	beqz	a7,150dc <_dtoa_r+0x80>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:241
    {
      _REENT_MP_RESULT(ptr)->_k = _REENT_MP_RESULT_K(ptr);
   150bc:	06852603          	lw	a2,104(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:242
      _REENT_MP_RESULT(ptr)->_maxwds = 1 << _REENT_MP_RESULT_K(ptr);
   150c0:	00100693          	li	a3,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:243
      Bfree (ptr, _REENT_MP_RESULT(ptr));
   150c4:	00088593          	mv	a1,a7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:242

  _REENT_CHECK_MP(ptr);
  if (_REENT_MP_RESULT(ptr))
    {
      _REENT_MP_RESULT(ptr)->_k = _REENT_MP_RESULT_K(ptr);
      _REENT_MP_RESULT(ptr)->_maxwds = 1 << _REENT_MP_RESULT_K(ptr);
   150c8:	00c696bb          	sllw	a3,a3,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:241
  d.d = _d;

  _REENT_CHECK_MP(ptr);
  if (_REENT_MP_RESULT(ptr))
    {
      _REENT_MP_RESULT(ptr)->_k = _REENT_MP_RESULT_K(ptr);
   150cc:	00c8a423          	sw	a2,8(a7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:242
      _REENT_MP_RESULT(ptr)->_maxwds = 1 << _REENT_MP_RESULT_K(ptr);
   150d0:	00d8a623          	sw	a3,12(a7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:243
      Bfree (ptr, _REENT_MP_RESULT(ptr));
   150d4:	425020ef          	jal	17cf8 <_Bfree>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:244
      _REENT_MP_RESULT(ptr) = 0;
   150d8:	06043023          	sd	zero,96(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:247
    }

  if (word0 (d) & Sign_bit)
   150dc:	420d5913          	srai	s2,s10,0x20
   150e0:	0c094063          	bltz	s2,151a0 <_dtoa_r+0x144>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:254
      /* set sign for everything, including 0's and NaNs */
      *sign = 1;
      word0 (d) &= ~Sign_bit;	/* clear sign bit */
    }
  else
    *sign = 0;
   150e4:	0004a023          	sw	zero,0(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:258

#if defined(IEEE_Arith) + defined(VAX)
#ifdef IEEE_Arith
  if ((word0 (d) & Exp_mask) == Exp_mask)
   150e8:	7ff007b7          	lui	a5,0x7ff00
   150ec:	00f976b3          	and	a3,s2,a5
   150f0:	06f68a63          	beq	a3,a5,15164 <_dtoa_r+0x108>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:282
    }
#endif
#ifdef IBM
  d.d += 0;			/* normalize */
#endif
  if (!d.d)
   150f4:	f20007d3          	fmv.d.x	fa5,zero
   150f8:	f20d0753          	fmv.d.x	fa4,s10
   150fc:	a2f727d3          	feq.d	a5,fa4,fa5
   15100:	0c078463          	beqz	a5,151c8 <_dtoa_r+0x16c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:284
    {
      *decpt = 1;
   15104:	00013703          	ld	a4,0(sp)
   15108:	00100793          	li	a5,1
   1510c:	00f72023          	sw	a5,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:286
      s = "0";
      if (rve)
   15110:	480b0a63          	beqz	s6,155a4 <_dtoa_r+0x548>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:287
	*rve = s + 1;
   15114:	000227b7          	lui	a5,0x22
   15118:	bf178793          	addi	a5,a5,-1039 # 21bf1 <zeroes.4123+0x701>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:288
      return s;
   1511c:	00022537          	lui	a0,0x22
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:287
  if (!d.d)
    {
      *decpt = 1;
      s = "0";
      if (rve)
	*rve = s + 1;
   15120:	00fb3023          	sd	a5,0(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:288
      return s;
   15124:	bf050513          	addi	a0,a0,-1040 # 21bf0 <zeroes.4123+0x700>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:862
  *s = 0;
  *decpt = k + 1;
  if (rve)
    *rve = s;
  return s0;
}
   15128:	0c813083          	ld	ra,200(sp)
   1512c:	0c013403          	ld	s0,192(sp)
   15130:	0b813483          	ld	s1,184(sp)
   15134:	0b013903          	ld	s2,176(sp)
   15138:	0a813983          	ld	s3,168(sp)
   1513c:	0a013a03          	ld	s4,160(sp)
   15140:	09813a83          	ld	s5,152(sp)
   15144:	09013b03          	ld	s6,144(sp)
   15148:	08813b83          	ld	s7,136(sp)
   1514c:	08013c03          	ld	s8,128(sp)
   15150:	07813c83          	ld	s9,120(sp)
   15154:	07013d03          	ld	s10,112(sp)
   15158:	06813d83          	ld	s11,104(sp)
   1515c:	0d010113          	addi	sp,sp,208
   15160:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:264
#else
  if (word0 (d) == 0x8000)
#endif
    {
      /* Infinity or NaN */
      *decpt = 9999;
   15164:	00013703          	ld	a4,0(sp)
   15168:	000027b7          	lui	a5,0x2
   1516c:	70f7879b          	addiw	a5,a5,1807
   15170:	00f72023          	sw	a5,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:267
      s =
#ifdef IEEE_Arith
	!word1 (d) && !(word0 (d) & 0xfffff) ? "Infinity" :
   15174:	00cd1793          	slli	a5,s10,0xc
   15178:	3e079863          	bnez	a5,15568 <_dtoa_r+0x50c>
   1517c:	00022537          	lui	a0,0x22
   15180:	c0050513          	addi	a0,a0,-1024 # 21c00 <zeroes.4123+0x710>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:270
#endif
	"NaN";
      if (rve)
   15184:	fa0b02e3          	beqz	s6,15128 <_dtoa_r+0xcc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:273
	*rve =
#ifdef IEEE_Arith
	  s[3] ? s + 8 :
   15188:	00354703          	lbu	a4,3(a0)
   1518c:	00350793          	addi	a5,a0,3
   15190:	00070463          	beqz	a4,15198 <_dtoa_r+0x13c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:273 (discriminator 1)
   15194:	00850793          	addi	a5,a0,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:271
#ifdef IEEE_Arith
	!word1 (d) && !(word0 (d) & 0xfffff) ? "Infinity" :
#endif
	"NaN";
      if (rve)
	*rve =
   15198:	00fb3023          	sd	a5,0(s6)
   1519c:	f8dff06f          	j	15128 <_dtoa_r+0xcc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:251

  if (word0 (d) & Sign_bit)
    {
      /* set sign for everything, including 0's and NaNs */
      *sign = 1;
      word0 (d) &= ~Sign_bit;	/* clear sign bit */
   151a0:	800007b7          	lui	a5,0x80000
   151a4:	fff7c793          	not	a5,a5
   151a8:	020d1713          	slli	a4,s10,0x20
   151ac:	00f97933          	and	s2,s2,a5
   151b0:	02091793          	slli	a5,s2,0x20
   151b4:	02075713          	srli	a4,a4,0x20
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:250
    }

  if (word0 (d) & Sign_bit)
    {
      /* set sign for everything, including 0's and NaNs */
      *sign = 1;
   151b8:	00100693          	li	a3,1
   151bc:	00d4a023          	sw	a3,0(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:251
      word0 (d) &= ~Sign_bit;	/* clear sign bit */
   151c0:	00f76d33          	or	s10,a4,a5
   151c4:	f25ff06f          	j	150e8 <_dtoa_r+0x8c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:291
      if (rve)
	*rve = s + 1;
      return s;
    }

  b = d2b (ptr, d.d, &be, &bbits);
   151c8:	f20d05d3          	fmv.d.x	fa1,s10
   151cc:	05810693          	addi	a3,sp,88
   151d0:	05c10613          	addi	a2,sp,92
   151d4:	00040513          	mv	a0,s0
   151d8:	7ac030ef          	jal	18984 <__d2b>
   151dc:	02a13023          	sd	a0,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:295
#ifdef Sudden_Underflow
  i = (int) (word0 (d) >> Exp_shift1 & (Exp_mask >> Exp_shift1));
#else
  if ((i = (int) (word0 (d) >> Exp_shift1 & (Exp_mask >> Exp_shift1))) != 0)
   151e0:	0149581b          	srliw	a6,s2,0x14
   151e4:	38081863          	bnez	a6,15574 <_dtoa_r+0x518>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:340
    }
  else
    {
      /* d is denormalized */

      i = bbits + be + (Bias + (P - 1) - 1);
   151e8:	05812603          	lw	a2,88(sp)
   151ec:	05c12803          	lw	a6,92(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:345
#if defined (_DOUBLE_IS_32BITS)
      x = word0 (d) << (32 - i);
#else
      x = (i > 32) ? (word0 (d) << (64 - i)) | (word1 (d) >> (i - 32))
       : (word1 (d) << (32 - i));
   151f0:	02000793          	li	a5,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:340
    }
  else
    {
      /* d is denormalized */

      i = bbits + be + (Bias + (P - 1) - 1);
   151f4:	0106083b          	addw	a6,a2,a6
   151f8:	4328069b          	addiw	a3,a6,1074
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:345
#if defined (_DOUBLE_IS_32BITS)
      x = word0 (d) << (32 - i);
#else
      x = (i > 32) ? (word0 (d) << (64 - i)) | (word1 (d) >> (i - 32))
       : (word1 (d) << (32 - i));
   151fc:	6ad7de63          	ble	a3,a5,158b8 <_dtoa_r+0x85c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:345 (discriminator 1)
   15200:	04000593          	li	a1,64
   15204:	4128049b          	addiw	s1,a6,1042
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:344

      i = bbits + be + (Bias + (P - 1) - 1);
#if defined (_DOUBLE_IS_32BITS)
      x = word0 (d) << (32 - i);
#else
      x = (i > 32) ? (word0 (d) << (64 - i)) | (word1 (d) >> (i - 32))
   15208:	000d079b          	sext.w	a5,s10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:345
       : (word1 (d) << (32 - i));
   1520c:	40d585bb          	subw	a1,a1,a3
   15210:	0097d7bb          	srlw	a5,a5,s1
   15214:	00b914bb          	sllw	s1,s2,a1
   15218:	0097e4b3          	or	s1,a5,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:347
#endif
      d2.d = x;
   1521c:	d21487d3          	fcvt.d.wu	fa5,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:348
      word0 (d2) -= 31 * Exp_msk1;	/* adjust exponent */
   15220:	fe1006b7          	lui	a3,0xfe100
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:349
      i -= (Bias + (P - 1) - 1) + 1;
   15224:	fff8081b          	addiw	a6,a6,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:347
      x = word0 (d) << (32 - i);
#else
      x = (i > 32) ? (word0 (d) << (64 - i)) | (word1 (d) >> (i - 32))
       : (word1 (d) << (32 - i));
#endif
      d2.d = x;
   15228:	e20784d3          	fmv.x.d	s1,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:350
      word0 (d2) -= 31 * Exp_msk1;	/* adjust exponent */
      i -= (Bias + (P - 1) - 1) + 1;
      denorm = 1;
   1522c:	00100913          	li	s2,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:348
#else
      x = (i > 32) ? (word0 (d) << (64 - i)) | (word1 (d) >> (i - 32))
       : (word1 (d) << (32 - i));
#endif
      d2.d = x;
      word0 (d2) -= 31 * Exp_msk1;	/* adjust exponent */
   15230:	4204d793          	srai	a5,s1,0x20
   15234:	00d787bb          	addw	a5,a5,a3
   15238:	02049493          	slli	s1,s1,0x20
   1523c:	02079793          	slli	a5,a5,0x20
   15240:	0204d493          	srli	s1,s1,0x20
   15244:	00f4e4b3          	or	s1,s1,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:356
    }
#endif
#if defined (_DOUBLE_IS_32BITS)
  ds = (d2.d - 1.5) * 0.289529651 + 0.176091269 + i * 0.30103001;
#else
  ds = (d2.d - 1.5) * 0.289529654602168 + 0.1760912590558 + i * 0.301029995663981;
   15248:	000247b7          	lui	a5,0x24
   1524c:	4a07b787          	fld	fa5,1184(a5) # 244a0 <mask+0x8>
   15250:	f2048753          	fmv.d.x	fa4,s1
   15254:	000247b7          	lui	a5,0x24
   15258:	0af77653          	fsub.d	fa2,fa4,fa5
   1525c:	4b07b787          	fld	fa5,1200(a5) # 244b0 <mask+0x18>
   15260:	000247b7          	lui	a5,0x24
   15264:	4a87b687          	fld	fa3,1192(a5) # 244a8 <mask+0x10>
   15268:	000247b7          	lui	a5,0x24
   1526c:	d2080753          	fcvt.d.w	fa4,a6
   15270:	7ad677c3          	fmadd.d	fa5,fa2,fa3,fa5
   15274:	4b87b687          	fld	fa3,1208(a5) # 244b8 <mask+0x20>
   15278:	7ad777c3          	fmadd.d	fa5,fa4,fa3,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:359
#endif
  k = (int) ds;
  if (ds < 0. && ds != k)
   1527c:	f2000753          	fmv.d.x	fa4,zero
   15280:	a2e797d3          	flt.d	a5,fa5,fa4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:358
#if defined (_DOUBLE_IS_32BITS)
  ds = (d2.d - 1.5) * 0.289529651 + 0.176091269 + i * 0.30103001;
#else
  ds = (d2.d - 1.5) * 0.289529654602168 + 0.1760912590558 + i * 0.301029995663981;
#endif
  k = (int) ds;
   15284:	c2079bd3          	fcvt.w.d	s7,fa5,rtz
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:359
  if (ds < 0. && ds != k)
   15288:	5e079e63          	bnez	a5,15884 <_dtoa_r+0x828>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:361
    k--;			/* want k = floor(ds) */
  k_check = 1;
   1528c:	00100793          	li	a5,1
   15290:	02f12823          	sw	a5,48(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:362
  if (k >= 0 && k <= Ten_pmax)
   15294:	01600793          	li	a5,22
   15298:	0377e663          	bltu	a5,s7,152c4 <_dtoa_r+0x268>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:364
    {
      if (d.d < tens[k])
   1529c:	000217b7          	lui	a5,0x21
   152a0:	003b9693          	slli	a3,s7,0x3
   152a4:	d2078793          	addi	a5,a5,-736 # 20d20 <__mprec_tens>
   152a8:	00f687b3          	add	a5,a3,a5
   152ac:	0007b787          	fld	fa5,0(a5)
   152b0:	f20d0753          	fmv.d.x	fa4,s10
   152b4:	a2f717d3          	flt.d	a5,fa4,fa5
   152b8:	60078863          	beqz	a5,158c8 <_dtoa_r+0x86c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:365
	k--;
   152bc:	fffb8b9b          	addiw	s7,s7,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:366
      k_check = 0;
   152c0:	02012823          	sw	zero,48(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:368
    }
  j = bbits - i - 1;
   152c4:	4106083b          	subw	a6,a2,a6
   152c8:	fff80d9b          	addiw	s11,a6,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:371
  if (j >= 0)
    {
      b2 = 0;
   152cc:	00000813          	li	a6,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:369
      if (d.d < tens[k])
	k--;
      k_check = 0;
    }
  j = bbits - i - 1;
  if (j >= 0)
   152d0:	2e0dc063          	bltz	s11,155b0 <_dtoa_r+0x554>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:379
  else
    {
      b2 = -j;
      s2 = 0;
    }
  if (k >= 0)
   152d4:	5c0bc263          	bltz	s7,15898 <_dtoa_r+0x83c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:383
    {
      b5 = 0;
      s5 = k;
      s2 += k;
   152d8:	017d8dbb          	addw	s11,s11,s7
   152dc:	03712423          	sw	s7,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:381
      b2 = -j;
      s2 = 0;
    }
  if (k >= 0)
    {
      b5 = 0;
   152e0:	00000c13          	li	s8,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:391
    {
      b2 -= k;
      b5 = -k;
      s5 = 0;
    }
  if (mode < 0 || mode > 9)
   152e4:	00900793          	li	a5,9
   152e8:	2d37ea63          	bltu	a5,s3,155bc <_dtoa_r+0x560>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:394
    mode = 0;
  try_quick = 1;
  if (mode > 5)
   152ec:	00500793          	li	a5,5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:393
      b5 = -k;
      s5 = 0;
    }
  if (mode < 0 || mode > 9)
    mode = 0;
  try_quick = 1;
   152f0:	00100a13          	li	s4,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:394
  if (mode > 5)
   152f4:	0137d663          	ble	s3,a5,15300 <_dtoa_r+0x2a4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:396
    {
      mode -= 4;
   152f8:	ffc9899b          	addiw	s3,s3,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:397
      try_quick = 0;
   152fc:	00000a13          	li	s4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:401
    }
  leftright = 1;
  ilim = ilim1 = -1;
  switch (mode)
   15300:	00300793          	li	a5,3
   15304:	2af982e3          	beq	s3,a5,15da8 <_dtoa_r+0xd4c>
   15308:	1f37dce3          	ble	s3,a5,15d00 <_dtoa_r+0xca4>
   1530c:	00400793          	li	a5,4
   15310:	0cf98ae3          	beq	s3,a5,15be4 <_dtoa_r+0xb88>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:399
  if (mode > 5)
    {
      mode -= 4;
      try_quick = 0;
    }
  leftright = 1;
   15314:	00100793          	li	a5,1
   15318:	00f12823          	sw	a5,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:401
  ilim = ilim1 = -1;
  switch (mode)
   1531c:	00500793          	li	a5,5
   15320:	1ef996e3          	bne	s3,a5,15d0c <_dtoa_r+0xcb0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:420
      break;
    case 3:
      leftright = 0;
      /* no break */
    case 5:
      i = ndigits + k + 1;
   15324:	019b87bb          	addw	a5,s7,s9
   15328:	00178a9b          	addiw	s5,a5,1
   1532c:	02f12a23          	sw	a5,52(sp)
   15330:	000a8513          	mv	a0,s5
   15334:	000a8493          	mv	s1,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:423
      ilim = i;
      ilim1 = i - 1;
      if (i <= 0)
   15338:	1b505ee3          	blez	s5,15cf4 <_dtoa_r+0xc98>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:427
	i = 1;
    }
  j = sizeof (__ULong);
  for (_REENT_MP_RESULT_K(ptr) = 0; sizeof (_Bigint) - sizeof (__ULong) + j <= i;
   1533c:	06042423          	sw	zero,104(s0)
   15340:	01f00793          	li	a5,31
   15344:	00000593          	li	a1,0
   15348:	02a7f463          	bleu	a0,a5,15370 <_dtoa_r+0x314>
   1534c:	00100613          	li	a2,1
   15350:	00400693          	li	a3,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:428
       j <<= 1)
   15354:	0016969b          	slliw	a3,a3,0x1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:427
      ilim1 = i - 1;
      if (i <= 0)
	i = 1;
    }
  j = sizeof (__ULong);
  for (_REENT_MP_RESULT_K(ptr) = 0; sizeof (_Bigint) - sizeof (__ULong) + j <= i;
   15358:	00068793          	mv	a5,a3
   1535c:	01c78793          	addi	a5,a5,28
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:429
       j <<= 1)
    _REENT_MP_RESULT_K(ptr)++;
   15360:	00060593          	mv	a1,a2
   15364:	0016061b          	addiw	a2,a2,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:427
      ilim1 = i - 1;
      if (i <= 0)
	i = 1;
    }
  j = sizeof (__ULong);
  for (_REENT_MP_RESULT_K(ptr) = 0; sizeof (_Bigint) - sizeof (__ULong) + j <= i;
   15368:	fef576e3          	bleu	a5,a0,15354 <_dtoa_r+0x2f8>
   1536c:	06b42423          	sw	a1,104(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:430
       j <<= 1)
    _REENT_MP_RESULT_K(ptr)++;
  _REENT_MP_RESULT(ptr) = Balloc (ptr, _REENT_MP_RESULT_K(ptr));
   15370:	00040513          	mv	a0,s0
   15374:	03013c23          	sd	a6,56(sp)
   15378:	0d5020ef          	jal	17c4c <_Balloc>
   1537c:	00a13423          	sd	a0,8(sp)
   15380:	06a43023          	sd	a0,96(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:433
  s = s0 = (char *) _REENT_MP_RESULT(ptr);

  if (ilim >= 0 && ilim <= Quick_max && try_quick)
   15384:	00e00793          	li	a5,14
   15388:	03813803          	ld	a6,56(sp)
   1538c:	2697e463          	bltu	a5,s1,155f4 <_dtoa_r+0x598>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:433 (discriminator 1)
   15390:	260a0263          	beqz	s4,155f4 <_dtoa_r+0x598>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:438
    {
      /* Try to get by with floating-point arithmetic. */

      i = 0;
      d2.d = d.d;
   15394:	03a13c23          	sd	s10,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:442
      k0 = k;
      ilim0 = ilim;
      ieps = 2;			/* conservative */
      if (k > 0)
   15398:	317054e3          	blez	s7,15ea0 <_dtoa_r+0xe44>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:444
	{
	  ds = tens[k & 0xf];
   1539c:	00fbf713          	andi	a4,s7,15
   153a0:	00371693          	slli	a3,a4,0x3
   153a4:	00021737          	lui	a4,0x21
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:445
	  j = k >> 4;
   153a8:	404bd79b          	sraiw	a5,s7,0x4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:444
      k0 = k;
      ilim0 = ilim;
      ieps = 2;			/* conservative */
      if (k > 0)
	{
	  ds = tens[k & 0xf];
   153ac:	d2070713          	addi	a4,a4,-736 # 20d20 <__mprec_tens>
   153b0:	00e68733          	add	a4,a3,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:446
	  j = k >> 4;
	  if (j & Bletch)
   153b4:	0107f693          	andi	a3,a5,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:444
      k0 = k;
      ilim0 = ilim;
      ieps = 2;			/* conservative */
      if (k > 0)
	{
	  ds = tens[k & 0xf];
   153b8:	00073687          	fld	fa3,0(a4)
   153bc:	f20d07d3          	fmv.d.x	fa5,s10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:441

      i = 0;
      d2.d = d.d;
      k0 = k;
      ilim0 = ilim;
      ieps = 2;			/* conservative */
   153c0:	00200713          	li	a4,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:446
      if (k > 0)
	{
	  ds = tens[k & 0xf];
	  j = k >> 4;
	  if (j & Bletch)
   153c4:	00068c63          	beqz	a3,153dc <_dtoa_r+0x380>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:450
	    {
	      /* prevent overflows */
	      j &= Bletch - 1;
	      d.d /= bigtens[n_bigtens - 1];
   153c8:	00021737          	lui	a4,0x21
   153cc:	e3073707          	fld	fa4,-464(a4) # 20e30 <__mprec_bigtens+0x20>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:449
	  ds = tens[k & 0xf];
	  j = k >> 4;
	  if (j & Bletch)
	    {
	      /* prevent overflows */
	      j &= Bletch - 1;
   153d0:	00f7f793          	andi	a5,a5,15
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:451
	      d.d /= bigtens[n_bigtens - 1];
	      ieps++;
   153d4:	00300713          	li	a4,3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:450
	  j = k >> 4;
	  if (j & Bletch)
	    {
	      /* prevent overflows */
	      j &= Bletch - 1;
	      d.d /= bigtens[n_bigtens - 1];
   153d8:	1ae7f7d3          	fdiv.d	fa5,fa5,fa4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:453 (discriminator 1)
	      ieps++;
	    }
	  for (; j; j >>= 1, i++)
   153dc:	02078663          	beqz	a5,15408 <_dtoa_r+0x3ac>
   153e0:	000216b7          	lui	a3,0x21
   153e4:	e1068693          	addi	a3,a3,-496 # 20e10 <__mprec_bigtens>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:454
	    if (j & 1)
   153e8:	0017f613          	andi	a2,a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:453
	      /* prevent overflows */
	      j &= Bletch - 1;
	      d.d /= bigtens[n_bigtens - 1];
	      ieps++;
	    }
	  for (; j; j >>= 1, i++)
   153ec:	4017d79b          	sraiw	a5,a5,0x1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:454
	    if (j & 1)
   153f0:	00060863          	beqz	a2,15400 <_dtoa_r+0x3a4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:457
	      {
		ieps++;
		ds *= bigtens[i];
   153f4:	0006b707          	fld	fa4,0(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:456
	      ieps++;
	    }
	  for (; j; j >>= 1, i++)
	    if (j & 1)
	      {
		ieps++;
   153f8:	0017071b          	addiw	a4,a4,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:457
		ds *= bigtens[i];
   153fc:	12e6f6d3          	fmul.d	fa3,fa3,fa4
   15400:	00868693          	addi	a3,a3,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:453
	      /* prevent overflows */
	      j &= Bletch - 1;
	      d.d /= bigtens[n_bigtens - 1];
	      ieps++;
	    }
	  for (; j; j >>= 1, i++)
   15404:	fe0792e3          	bnez	a5,153e8 <_dtoa_r+0x38c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:459
	    if (j & 1)
	      {
		ieps++;
		ds *= bigtens[i];
	      }
	  d.d /= ds;
   15408:	1ad7f7d3          	fdiv.d	fa5,fa5,fa3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:471
	      {
		ieps++;
		d.d *= bigtens[i];
	      }
	}
      if (k_check && d.d < 1. && ilim > 0)
   1540c:	03012783          	lw	a5,48(sp)
   15410:	00078a63          	beqz	a5,15424 <_dtoa_r+0x3c8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:471 (discriminator 1)
   15414:	000247b7          	lui	a5,0x24
   15418:	4c07b707          	fld	fa4,1216(a5) # 244c0 <mask+0x28>
   1541c:	a2e797d3          	flt.d	a5,fa5,fa4
   15420:	440790e3          	bnez	a5,16060 <_dtoa_r+0x1004>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:480
	  ilim = ilim1;
	  k--;
	  d.d *= 10.;
	  ieps++;
	}
      eps.d = ieps * d.d + 7.;
   15424:	000247b7          	lui	a5,0x24
   15428:	d20706d3          	fcvt.d.w	fa3,a4
   1542c:	4d07b707          	fld	fa4,1232(a5) # 244d0 <mask+0x38>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:481
      word0 (eps) -= (P - 1) * Exp_msk1;
   15430:	fcc006b7          	lui	a3,0xfcc00
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:480
	  ilim = ilim1;
	  k--;
	  d.d *= 10.;
	  ieps++;
	}
      eps.d = ieps * d.d + 7.;
   15434:	72f6f743          	fmadd.d	fa4,fa3,fa5,fa4
   15438:	e2070753          	fmv.x.d	a4,fa4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:481
      word0 (eps) -= (P - 1) * Exp_msk1;
   1543c:	42075793          	srai	a5,a4,0x20
   15440:	00d787bb          	addw	a5,a5,a3
   15444:	02071713          	slli	a4,a4,0x20
   15448:	02079793          	slli	a5,a5,0x20
   1544c:	02075713          	srli	a4,a4,0x20
   15450:	00f76733          	or	a4,a4,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:482
      if (ilim == 0)
   15454:	180a86e3          	beqz	s5,15de0 <_dtoa_r+0xd84>
   15458:	000b8693          	mv	a3,s7
   1545c:	000a8613          	mv	a2,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:493
	  if (d.d < -eps.d)
	    goto no_digits;
	  goto fast_failed;
	}
#ifndef No_leftright
      if (leftright)
   15460:	01012783          	lw	a5,16(sp)
   15464:	300782e3          	beqz	a5,15f68 <_dtoa_r+0xf0c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:498
	{
	  /* Use Steele & White method of only
	   * generating digits needed.
	   */
	  eps.d = 0.5 / tens[ilim - 1] - eps.d;
   15468:	fff6079b          	addiw	a5,a2,-1
   1546c:	000215b7          	lui	a1,0x21
   15470:	d2058593          	addi	a1,a1,-736 # 20d20 <__mprec_tens>
   15474:	00379793          	slli	a5,a5,0x3
   15478:	00b787b3          	add	a5,a5,a1
   1547c:	000245b7          	lui	a1,0x24
   15480:	0007b687          	fld	fa3,0(a5)
   15484:	4e05b707          	fld	fa4,1248(a1) # 244e0 <mask+0x48>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:501
	  for (i = 0;;)
	    {
	      L = d.d;
   15488:	c20797d3          	fcvt.w.d	a5,fa5,rtz
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:503
	      d.d -= L;
	      *s++ = '0' + (int) L;
   1548c:	00813503          	ld	a0,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:498
      if (leftright)
	{
	  /* Use Steele & White method of only
	   * generating digits needed.
	   */
	  eps.d = 0.5 / tens[ilim - 1] - eps.d;
   15490:	1ad77753          	fdiv.d	fa4,fa4,fa3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:502
	  for (i = 0;;)
	    {
	      L = d.d;
	      d.d -= L;
   15494:	d20786d3          	fcvt.d.w	fa3,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:503
	      *s++ = '0' + (int) L;
   15498:	0307879b          	addiw	a5,a5,48
   1549c:	0ff7f793          	andi	a5,a5,255
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:502
	   */
	  eps.d = 0.5 / tens[ilim - 1] - eps.d;
	  for (i = 0;;)
	    {
	      L = d.d;
	      d.d -= L;
   154a0:	0ad7f7d3          	fsub.d	fa5,fa5,fa3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:498
      if (leftright)
	{
	  /* Use Steele & White method of only
	   * generating digits needed.
	   */
	  eps.d = 0.5 / tens[ilim - 1] - eps.d;
   154a4:	f20706d3          	fmv.d.x	fa3,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:503
	  for (i = 0;;)
	    {
	      L = d.d;
	      d.d -= L;
	      *s++ = '0' + (int) L;
   154a8:	00f50023          	sb	a5,0(a0)
   154ac:	00150493          	addi	s1,a0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:498
      if (leftright)
	{
	  /* Use Steele & White method of only
	   * generating digits needed.
	   */
	  eps.d = 0.5 / tens[ilim - 1] - eps.d;
   154b0:	0ad77753          	fsub.d	fa4,fa4,fa3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:504
	  for (i = 0;;)
	    {
	      L = d.d;
	      d.d -= L;
	      *s++ = '0' + (int) L;
	      if (d.d < eps.d)
   154b4:	a2e79753          	flt.d	a4,fa5,fa4
   154b8:	08071063          	bnez	a4,15538 <_dtoa_r+0x4dc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:506
		goto ret1;
	      if (1. - d.d < eps.d)
   154bc:	00024737          	lui	a4,0x24
   154c0:	4c073587          	fld	fa1,1216(a4) # 244c0 <mask+0x28>
   154c4:	0af5f6d3          	fsub.d	fa3,fa1,fa5
   154c8:	a2e69753          	flt.d	a4,fa3,fa4
   154cc:	40071ae3          	bnez	a4,160e0 <_dtoa_r+0x1084>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:508
		goto bump_up;
	      if (++i >= ilim)
   154d0:	00100793          	li	a5,1
   154d4:	1ac7d4e3          	ble	a2,a5,15e7c <_dtoa_r+0xe20>
   154d8:	000247b7          	lui	a5,0x24
   154dc:	ffe6061b          	addiw	a2,a2,-2
   154e0:	02061613          	slli	a2,a2,0x20
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:510
		break;
	      eps.d *= 10.;
   154e4:	4c87b607          	fld	fa2,1224(a5) # 244c8 <mask+0x30>
   154e8:	00813783          	ld	a5,8(sp)
   154ec:	02065613          	srli	a2,a2,0x20
   154f0:	00260613          	addi	a2,a2,2
   154f4:	00c78633          	add	a2,a5,a2
   154f8:	0140006f          	j	1550c <_dtoa_r+0x4b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:506
	      L = d.d;
	      d.d -= L;
	      *s++ = '0' + (int) L;
	      if (d.d < eps.d)
		goto ret1;
	      if (1. - d.d < eps.d)
   154fc:	0af5f6d3          	fsub.d	fa3,fa1,fa5
   15500:	a2e69753          	flt.d	a4,fa3,fa4
   15504:	3c071ee3          	bnez	a4,160e0 <_dtoa_r+0x1084>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:508
		goto bump_up;
	      if (++i >= ilim)
   15508:	16960ae3          	beq	a2,s1,15e7c <_dtoa_r+0xe20>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:511
		break;
	      eps.d *= 10.;
	      d.d *= 10.;
   1550c:	12c7f7d3          	fmul.d	fa5,fa5,fa2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:510
		goto ret1;
	      if (1. - d.d < eps.d)
		goto bump_up;
	      if (++i >= ilim)
		break;
	      eps.d *= 10.;
   15510:	12c77753          	fmul.d	fa4,fa4,fa2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:503
	  eps.d = 0.5 / tens[ilim - 1] - eps.d;
	  for (i = 0;;)
	    {
	      L = d.d;
	      d.d -= L;
	      *s++ = '0' + (int) L;
   15514:	00148493          	addi	s1,s1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:501
	   * generating digits needed.
	   */
	  eps.d = 0.5 / tens[ilim - 1] - eps.d;
	  for (i = 0;;)
	    {
	      L = d.d;
   15518:	c20797d3          	fcvt.w.d	a5,fa5,rtz
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:502
	      d.d -= L;
   1551c:	d20786d3          	fcvt.d.w	fa3,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:503
	      *s++ = '0' + (int) L;
   15520:	0307879b          	addiw	a5,a5,48
   15524:	0ff7f793          	andi	a5,a5,255
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:502
	   */
	  eps.d = 0.5 / tens[ilim - 1] - eps.d;
	  for (i = 0;;)
	    {
	      L = d.d;
	      d.d -= L;
   15528:	0ad7f7d3          	fsub.d	fa5,fa5,fa3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:503
	      *s++ = '0' + (int) L;
   1552c:	fef48fa3          	sb	a5,-1(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:504
	      if (d.d < eps.d)
   15530:	a2e79753          	flt.d	a4,fa5,fa4
   15534:	fc0704e3          	beqz	a4,154fc <_dtoa_r+0x4a0>
   15538:	00068b93          	mv	s7,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:856
      if (mlo && mlo != mhi)
	Bfree (ptr, mlo);
      Bfree (ptr, mhi);
    }
ret1:
  Bfree (ptr, b);
   1553c:	02013583          	ld	a1,32(sp)
   15540:	00040513          	mv	a0,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:858
  *s = 0;
  *decpt = k + 1;
   15544:	001b8b9b          	addiw	s7,s7,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:856
      if (mlo && mlo != mhi)
	Bfree (ptr, mlo);
      Bfree (ptr, mhi);
    }
ret1:
  Bfree (ptr, b);
   15548:	7b0020ef          	jal	17cf8 <_Bfree>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:858
  *s = 0;
  *decpt = k + 1;
   1554c:	00013783          	ld	a5,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:857
	Bfree (ptr, mlo);
      Bfree (ptr, mhi);
    }
ret1:
  Bfree (ptr, b);
  *s = 0;
   15550:	00048023          	sb	zero,0(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:858
  *decpt = k + 1;
   15554:	0177a023          	sw	s7,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:859
  if (rve)
   15558:	0c0b0ce3          	beqz	s6,15e30 <_dtoa_r+0xdd4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:860
    *rve = s;
   1555c:	009b3023          	sd	s1,0(s6)
   15560:	00813503          	ld	a0,8(sp)
   15564:	bc5ff06f          	j	15128 <_dtoa_r+0xcc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:267
    {
      /* Infinity or NaN */
      *decpt = 9999;
      s =
#ifdef IEEE_Arith
	!word1 (d) && !(word0 (d) & 0xfffff) ? "Infinity" :
   15568:	00022537          	lui	a0,0x22
   1556c:	c1050513          	addi	a0,a0,-1008 # 21c10 <zeroes.4123+0x720>
   15570:	c15ff06f          	j	15184 <_dtoa_r+0x128>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:300
  if ((i = (int) (word0 (d) >> Exp_shift1 & (Exp_mask >> Exp_shift1))) != 0)
    {
#endif
      d2.d = d.d;
      word0 (d2) &= Frac_mask1;
      word0 (d2) |= Exp_11;
   15574:	00cd1793          	slli	a5,s10,0xc
   15578:	02c7d693          	srli	a3,a5,0x2c
   1557c:	3ff007b7          	lui	a5,0x3ff00
   15580:	00f6e7b3          	or	a5,a3,a5
   15584:	020d1493          	slli	s1,s10,0x20
   15588:	02079793          	slli	a5,a5,0x20
   1558c:	0204d493          	srli	s1,s1,0x20
   15590:	00f4e4b3          	or	s1,s1,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:328
		 * Hence we adjust the constant term to 0.1760912590558.
		 * (We could get a more accurate k by invoking log10,
		 *  but this is probably not worthwhile.)
		 */

      i -= Bias;
   15594:	c018081b          	addiw	a6,a6,-1023
   15598:	05812603          	lw	a2,88(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:334
#ifdef IBM
      i <<= 2;
      i += j;
#endif
#ifndef Sudden_Underflow
      denorm = 0;
   1559c:	00000913          	li	s2,0
   155a0:	ca9ff06f          	j	15248 <_dtoa_r+0x1ec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:288
    {
      *decpt = 1;
      s = "0";
      if (rve)
	*rve = s + 1;
      return s;
   155a4:	00022537          	lui	a0,0x22
   155a8:	bf050513          	addi	a0,a0,-1040 # 21bf0 <zeroes.4123+0x700>
   155ac:	b7dff06f          	j	15128 <_dtoa_r+0xcc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:376
      b2 = 0;
      s2 = j;
    }
  else
    {
      b2 = -j;
   155b0:	41b0083b          	negw	a6,s11
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:377
      s2 = 0;
   155b4:	00000d93          	li	s11,0
   155b8:	d1dff06f          	j	152d4 <_dtoa_r+0x278>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:427
      ilim1 = i - 1;
      if (i <= 0)
	i = 1;
    }
  j = sizeof (__ULong);
  for (_REENT_MP_RESULT_K(ptr) = 0; sizeof (_Bigint) - sizeof (__ULong) + j <= i;
   155bc:	06042423          	sw	zero,104(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:430
       j <<= 1)
    _REENT_MP_RESULT_K(ptr)++;
  _REENT_MP_RESULT(ptr) = Balloc (ptr, _REENT_MP_RESULT_K(ptr));
   155c0:	00000593          	li	a1,0
   155c4:	00040513          	mv	a0,s0
   155c8:	03013c23          	sd	a6,56(sp)
   155cc:	680020ef          	jal	17c4c <_Balloc>
   155d0:	03813803          	ld	a6,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:400
    {
      mode -= 4;
      try_quick = 0;
    }
  leftright = 1;
  ilim = ilim1 = -1;
   155d4:	fff00a93          	li	s5,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:399
  if (mode > 5)
    {
      mode -= 4;
      try_quick = 0;
    }
  leftright = 1;
   155d8:	00100793          	li	a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:430
    }
  j = sizeof (__ULong);
  for (_REENT_MP_RESULT_K(ptr) = 0; sizeof (_Bigint) - sizeof (__ULong) + j <= i;
       j <<= 1)
    _REENT_MP_RESULT_K(ptr)++;
  _REENT_MP_RESULT(ptr) = Balloc (ptr, _REENT_MP_RESULT_K(ptr));
   155dc:	00a13423          	sd	a0,8(sp)
   155e0:	06a43023          	sd	a0,96(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:400
    {
      mode -= 4;
      try_quick = 0;
    }
  leftright = 1;
  ilim = ilim1 = -1;
   155e4:	03512a23          	sw	s5,52(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:392
      b2 -= k;
      b5 = -k;
      s5 = 0;
    }
  if (mode < 0 || mode > 9)
    mode = 0;
   155e8:	00000993          	li	s3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:406
  switch (mode)
    {
    case 0:
    case 1:
      i = 18;
      ndigits = 0;
   155ec:	00000c93          	li	s9,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:399
  if (mode > 5)
    {
      mode -= 4;
      try_quick = 0;
    }
  leftright = 1;
   155f0:	00f12823          	sw	a5,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:549
      ilim = ilim0;
    }

  /* Do we have a "small" integer? */

  if (be >= 0 && k <= Int_max)
   155f4:	05c12783          	lw	a5,92(sp)
   155f8:	0e07ca63          	bltz	a5,156ec <_dtoa_r+0x690>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:549 (discriminator 1)
   155fc:	00e00693          	li	a3,14
   15600:	0f76c663          	blt	a3,s7,156ec <_dtoa_r+0x690>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:552
    {
      /* Yes. */
      ds = tens[k];
   15604:	000217b7          	lui	a5,0x21
   15608:	003b9693          	slli	a3,s7,0x3
   1560c:	d2078793          	addi	a5,a5,-736 # 20d20 <__mprec_tens>
   15610:	00f687b3          	add	a5,a3,a5
   15614:	0007b687          	fld	fa3,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:553
      if (ndigits < 0 && ilim <= 0)
   15618:	5e0cc663          	bltz	s9,15c04 <_dtoa_r+0xba8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:562
	    goto no_digits;
	  goto one_digit;
	}
      for (i = 1;; i++)
	{
	  L = d.d / ds;
   1561c:	f20d0653          	fmv.d.x	fa2,s10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:572
	    {
	      L--;
	      d.d += ds;
	    }
#endif
	  *s++ = '0' + (int) L;
   15620:	00813703          	ld	a4,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:563
	  goto one_digit;
	}
      for (i = 1;; i++)
	{
	  L = d.d / ds;
	  d.d -= L * ds;
   15624:	22d69553          	fneg.d	fa0,fa3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:562
	    goto no_digits;
	  goto one_digit;
	}
      for (i = 1;; i++)
	{
	  L = d.d / ds;
   15628:	1ad67753          	fdiv.d	fa4,fa2,fa3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:572
	    {
	      L--;
	      d.d += ds;
	    }
#endif
	  *s++ = '0' + (int) L;
   1562c:	00170493          	addi	s1,a4,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:562
	    goto no_digits;
	  goto one_digit;
	}
      for (i = 1;; i++)
	{
	  L = d.d / ds;
   15630:	c20717d3          	fcvt.w.d	a5,fa4,rtz
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:563
	  d.d -= L * ds;
   15634:	d20787d3          	fcvt.d.w	fa5,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:572
	    {
	      L--;
	      d.d += ds;
	    }
#endif
	  *s++ = '0' + (int) L;
   15638:	0307869b          	addiw	a3,a5,48
   1563c:	00d70023          	sb	a3,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:573
	  if (i == ilim)
   15640:	00100713          	li	a4,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:563
	  goto one_digit;
	}
      for (i = 1;; i++)
	{
	  L = d.d / ds;
	  d.d -= L * ds;
   15644:	62f577c3          	fmadd.d	fa5,fa0,fa5,fa2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:573
	      L--;
	      d.d += ds;
	    }
#endif
	  *s++ = '0' + (int) L;
	  if (i == ilim)
   15648:	2aea88e3          	beq	s5,a4,160f8 <_dtoa_r+0x109c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:590
		      }
		  ++*s++;
		}
	      break;
	    }
	  if (!(d.d *= 10.))
   1564c:	000247b7          	lui	a5,0x24
   15650:	4c87b587          	fld	fa1,1224(a5) # 244c8 <mask+0x30>
   15654:	f2000653          	fmv.d.x	fa2,zero
   15658:	12b7f7d3          	fmul.d	fa5,fa5,fa1
   1565c:	a2c7a7d3          	feq.d	a5,fa5,fa2
   15660:	ec079ee3          	bnez	a5,1553c <_dtoa_r+0x4e0>
   15664:	ffea869b          	addiw	a3,s5,-2
   15668:	02069693          	slli	a3,a3,0x20
   1566c:	00813783          	ld	a5,8(sp)
   15670:	0206d693          	srli	a3,a3,0x20
   15674:	00268693          	addi	a3,a3,2 # fffffffffcc00002 <_end+0xfffffffffcbd91ea>
   15678:	00d786b3          	add	a3,a5,a3
   1567c:	0100006f          	j	1568c <_dtoa_r+0x630>
   15680:	12b7f7d3          	fmul.d	fa5,fa5,fa1
   15684:	a2c7a7d3          	feq.d	a5,fa5,fa2
   15688:	ea079ae3          	bnez	a5,1553c <_dtoa_r+0x4e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:562
	    goto no_digits;
	  goto one_digit;
	}
      for (i = 1;; i++)
	{
	  L = d.d / ds;
   1568c:	1ad7f753          	fdiv.d	fa4,fa5,fa3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:572
	    {
	      L--;
	      d.d += ds;
	    }
#endif
	  *s++ = '0' + (int) L;
   15690:	00148493          	addi	s1,s1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:562
	    goto no_digits;
	  goto one_digit;
	}
      for (i = 1;; i++)
	{
	  L = d.d / ds;
   15694:	c20717d3          	fcvt.w.d	a5,fa4,rtz
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:563
	  d.d -= L * ds;
   15698:	d2078753          	fcvt.d.w	fa4,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:572
	    {
	      L--;
	      d.d += ds;
	    }
#endif
	  *s++ = '0' + (int) L;
   1569c:	0307871b          	addiw	a4,a5,48
   156a0:	fee48fa3          	sb	a4,-1(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:563
	  goto one_digit;
	}
      for (i = 1;; i++)
	{
	  L = d.d / ds;
	  d.d -= L * ds;
   156a4:	7ae577c3          	fmadd.d	fa5,fa0,fa4,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:573
	      L--;
	      d.d += ds;
	    }
#endif
	  *s++ = '0' + (int) L;
	  if (i == ilim)
   156a8:	fcd49ce3          	bne	s1,a3,15680 <_dtoa_r+0x624>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:575
	    {
	      d.d += d.d;
   156ac:	02f7f7d3          	fadd.d	fa5,fa5,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:576
             if ((d.d > ds) || ((d.d == ds) && (L & 1)))
   156b0:	a2f69753          	flt.d	a4,fa3,fa5
   156b4:	7c070863          	beqz	a4,15e84 <_dtoa_r+0xe28>
   156b8:	fff6c783          	lbu	a5,-1(a3)
   156bc:	00068493          	mv	s1,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:579
		{
		bump_up:
		  while (*--s == '9')
   156c0:	03900693          	li	a3,57
   156c4:	0140006f          	j	156d8 <_dtoa_r+0x67c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:580
		    if (s == s0)
   156c8:	00813783          	ld	a5,8(sp)
   156cc:	02f70ce3          	beq	a4,a5,15f04 <_dtoa_r+0xea8>
   156d0:	fff74783          	lbu	a5,-1(a4)
   156d4:	00070493          	mv	s1,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:579
	    {
	      d.d += d.d;
             if ((d.d > ds) || ((d.d == ds) && (L & 1)))
		{
		bump_up:
		  while (*--s == '9')
   156d8:	fff48713          	addi	a4,s1,-1
   156dc:	fed786e3          	beq	a5,a3,156c8 <_dtoa_r+0x66c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:586
		      {
			k++;
			*s = '0';
			break;
		      }
		  ++*s++;
   156e0:	0017879b          	addiw	a5,a5,1
   156e4:	00f70023          	sb	a5,0(a4)
   156e8:	e55ff06f          	j	1553c <_dtoa_r+0x4e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:599
    }

  m2 = b2;
  m5 = b5;
  mhi = mlo = 0;
  if (leftright)
   156ec:	01012703          	lw	a4,16(sp)
   156f0:	1a070c63          	beqz	a4,158a8 <_dtoa_r+0x84c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:601
    {
      if (mode < 2)
   156f4:	00100693          	li	a3,1
   156f8:	5536d863          	ble	s3,a3,15c48 <_dtoa_r+0xbec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:615
	    1 + P - bbits;
#endif
	}
      else
	{
	  j = ilim - 1;
   156fc:	fffa869b          	addiw	a3,s5,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:616
	  if (m5 >= j)
   15700:	72dc4c63          	blt	s8,a3,15e38 <_dtoa_r+0xddc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:617
	    m5 -= j;
   15704:	40dc06bb          	subw	a3,s8,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:596
	    break;
	}
      goto ret1;
    }

  m2 = b2;
   15708:	00080493          	mv	s1,a6
   1570c:	000a8793          	mv	a5,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:624
	    {
	      s5 += j -= m5;
	      b5 += j;
	      m5 = 0;
	    }
	  if ((i = ilim) < 0)
   15710:	120ac2e3          	bltz	s5,16034 <_dtoa_r+0xfd8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:630
	    {
	      m2 -= i;
	      i = 0;
	    }
	}
      b2 += i;
   15714:	00f8083b          	addw	a6,a6,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:632
      s2 += i;
      mhi = i2b (ptr, 1);
   15718:	00100593          	li	a1,1
   1571c:	00040513          	mv	a0,s0
   15720:	04d13423          	sd	a3,72(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:630
	    {
	      m2 -= i;
	      i = 0;
	    }
	}
      b2 += i;
   15724:	05013023          	sd	a6,64(sp)
   15728:	03013c23          	sd	a6,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:631
      s2 += i;
   1572c:	00fd8dbb          	addw	s11,s11,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:632
      mhi = i2b (ptr, 1);
   15730:	155020ef          	jal	18084 <__i2b>
   15734:	04013803          	ld	a6,64(sp)
   15738:	04813683          	ld	a3,72(sp)
   1573c:	00050a13          	mv	s4,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:634
    }
  if (m2 > 0 && s2 > 0)
   15740:	00048e63          	beqz	s1,1575c <_dtoa_r+0x700>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:634 (discriminator 1)
   15744:	01b05c63          	blez	s11,1575c <_dtoa_r+0x700>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:636
    {
      i = m2 < s2 ? m2 : s2;
   15748:	00048793          	mv	a5,s1
   1574c:	489dc463          	blt	s11,s1,15bd4 <_dtoa_r+0xb78>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:637
      b2 -= i;
   15750:	40f8083b          	subw	a6,a6,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:638
      m2 -= i;
   15754:	40f484bb          	subw	s1,s1,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:639
      s2 -= i;
   15758:	40fd8dbb          	subw	s11,s11,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:291
      if (rve)
	*rve = s + 1;
      return s;
    }

  b = d2b (ptr, d.d, &be, &bbits);
   1575c:	02013903          	ld	s2,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:641
      i = m2 < s2 ? m2 : s2;
      b2 -= i;
      m2 -= i;
      s2 -= i;
    }
  if (b5 > 0)
   15760:	07805e63          	blez	s8,157dc <_dtoa_r+0x780>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:643
    {
      if (leftright)
   15764:	01012783          	lw	a5,16(sp)
   15768:	6a078463          	beqz	a5,15e10 <_dtoa_r+0xdb4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:645
	{
	  if (m5 > 0)
   1576c:	04068a63          	beqz	a3,157c0 <_dtoa_r+0x764>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:647
	    {
	      mhi = pow5mult (ptr, mhi, m5);
   15770:	00068613          	mv	a2,a3
   15774:	000a0593          	mv	a1,s4
   15778:	00040513          	mv	a0,s0
   1577c:	05013023          	sd	a6,64(sp)
   15780:	02d13c23          	sd	a3,56(sp)
   15784:	329020ef          	jal	182ac <__pow5mult>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:648
	      b1 = mult (ptr, mhi, b);
   15788:	02013603          	ld	a2,32(sp)
   1578c:	00050593          	mv	a1,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:647
    {
      if (leftright)
	{
	  if (m5 > 0)
	    {
	      mhi = pow5mult (ptr, mhi, m5);
   15790:	00050a13          	mv	s4,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:648
	      b1 = mult (ptr, mhi, b);
   15794:	00040513          	mv	a0,s0
   15798:	121020ef          	jal	180b8 <__multiply>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:652
	      Bfree (ptr, b);
	      b = b1;
	    }
         if ((j = b5 - m5) != 0)
   1579c:	03813683          	ld	a3,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:649
	{
	  if (m5 > 0)
	    {
	      mhi = pow5mult (ptr, mhi, m5);
	      b1 = mult (ptr, mhi, b);
	      Bfree (ptr, b);
   157a0:	02013583          	ld	a1,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:648
      if (leftright)
	{
	  if (m5 > 0)
	    {
	      mhi = pow5mult (ptr, mhi, m5);
	      b1 = mult (ptr, mhi, b);
   157a4:	00050913          	mv	s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:649
	      Bfree (ptr, b);
   157a8:	00040513          	mv	a0,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:652
	      b = b1;
	    }
         if ((j = b5 - m5) != 0)
   157ac:	40dc0c3b          	subw	s8,s8,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:649
	{
	  if (m5 > 0)
	    {
	      mhi = pow5mult (ptr, mhi, m5);
	      b1 = mult (ptr, mhi, b);
	      Bfree (ptr, b);
   157b0:	548020ef          	jal	17cf8 <_Bfree>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:652
	      b = b1;
	    }
         if ((j = b5 - m5) != 0)
   157b4:	04013803          	ld	a6,64(sp)
   157b8:	020c0263          	beqz	s8,157dc <_dtoa_r+0x780>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:650
	  if (m5 > 0)
	    {
	      mhi = pow5mult (ptr, mhi, m5);
	      b1 = mult (ptr, mhi, b);
	      Bfree (ptr, b);
	      b = b1;
   157bc:	03213023          	sd	s2,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:653
	    }
         if ((j = b5 - m5) != 0)
	    b = pow5mult (ptr, b, j);
   157c0:	02013583          	ld	a1,32(sp)
   157c4:	000c0613          	mv	a2,s8
   157c8:	00040513          	mv	a0,s0
   157cc:	03013c23          	sd	a6,56(sp)
   157d0:	2dd020ef          	jal	182ac <__pow5mult>
   157d4:	03813803          	ld	a6,56(sp)
   157d8:	00050913          	mv	s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:658
	}
      else
	b = pow5mult (ptr, b, b5);
    }
  S = i2b (ptr, 1);
   157dc:	00100593          	li	a1,1
   157e0:	00040513          	mv	a0,s0
   157e4:	03013023          	sd	a6,32(sp)
   157e8:	09d020ef          	jal	18084 <__i2b>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:659
  if (s5 > 0)
   157ec:	02812783          	lw	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:658
	    b = pow5mult (ptr, b, j);
	}
      else
	b = pow5mult (ptr, b, b5);
    }
  S = i2b (ptr, 1);
   157f0:	00050c13          	mv	s8,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:659
  if (s5 > 0)
   157f4:	02013803          	ld	a6,32(sp)
   157f8:	0c078c63          	beqz	a5,158d0 <_dtoa_r+0x874>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:660
    S = pow5mult (ptr, S, s5);
   157fc:	00078613          	mv	a2,a5
   15800:	00050593          	mv	a1,a0
   15804:	00040513          	mv	a0,s0
   15808:	2a5020ef          	jal	182ac <__pow5mult>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:665

  /* Check for special case that d is a normalized power of 2. */

  spec_case = 0;
  if (mode < 2)
   1580c:	00100793          	li	a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:660
      else
	b = pow5mult (ptr, b, b5);
    }
  S = i2b (ptr, 1);
  if (s5 > 0)
    S = pow5mult (ptr, S, s5);
   15810:	00050c13          	mv	s8,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:665

  /* Check for special case that d is a normalized power of 2. */

  spec_case = 0;
  if (mode < 2)
   15814:	02013803          	ld	a6,32(sp)
   15818:	3d37c263          	blt	a5,s3,15bdc <_dtoa_r+0xb80>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:667
    {
      if (!word1 (d) && !(word0 (d) & Bndry_mask)
   1581c:	00cd1793          	slli	a5,s10,0xc
   15820:	3a079e63          	bnez	a5,15bdc <_dtoa_r+0xb80>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:669
#ifndef Sudden_Underflow
	  && word0 (d) & Exp_mask
   15824:	420d5693          	srai	a3,s10,0x20
   15828:	7ff007b7          	lui	a5,0x7ff00
   1582c:	00f6f7b3          	and	a5,a3,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:664
  if (s5 > 0)
    S = pow5mult (ptr, S, s5);

  /* Check for special case that d is a normalized power of 2. */

  spec_case = 0;
   15830:	02012023          	sw	zero,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:669
  if (mode < 2)
    {
      if (!word1 (d) && !(word0 (d) & Bndry_mask)
#ifndef Sudden_Underflow
	  && word0 (d) & Exp_mask
   15834:	00078a63          	beqz	a5,15848 <_dtoa_r+0x7ec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:676
	)
	{
	  /* The special case */
	  b2 += Log2P;
	  s2 += Log2P;
	  spec_case = 1;
   15838:	00100793          	li	a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:674
	  && word0 (d) & Exp_mask
#endif
	)
	{
	  /* The special case */
	  b2 += Log2P;
   1583c:	0018081b          	addiw	a6,a6,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:675
	  s2 += Log2P;
   15840:	001d8d9b          	addiw	s11,s11,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:676
	  spec_case = 1;
   15844:	02f12023          	sw	a5,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:689
   * and for all and pass them and a shift to quorem, so it
   * can do shifts and ors to compute the numerator for q.
   */

#ifdef Pack_32
  if ((i = ((s5 ? 32 - hi0bits (S->_x[S->_wds - 1]) : 1) + s2) & 0x1f) != 0)
   15848:	02812783          	lw	a5,40(sp)
   1584c:	00100513          	li	a0,1
   15850:	08078863          	beqz	a5,158e0 <_dtoa_r+0x884>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:689 (discriminator 1)
   15854:	014c2783          	lw	a5,20(s8)
   15858:	03013423          	sd	a6,40(sp)
   1585c:	fff7879b          	addiw	a5,a5,-1
   15860:	00478793          	addi	a5,a5,4 # 7ff00004 <_end+0x7fed91ec>
   15864:	00279793          	slli	a5,a5,0x2
   15868:	00fc07b3          	add	a5,s8,a5
   1586c:	0087a503          	lw	a0,8(a5)
   15870:	6e8020ef          	jal	17f58 <__hi0bits>
   15874:	02000793          	li	a5,32
   15878:	40a7853b          	subw	a0,a5,a0
   1587c:	02813803          	ld	a6,40(sp)
   15880:	0600006f          	j	158e0 <_dtoa_r+0x884>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:359
  ds = (d2.d - 1.5) * 0.289529651 + 0.176091269 + i * 0.30103001;
#else
  ds = (d2.d - 1.5) * 0.289529654602168 + 0.1760912590558 + i * 0.301029995663981;
#endif
  k = (int) ds;
  if (ds < 0. && ds != k)
   15884:	d20b8753          	fcvt.d.w	fa4,s7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:360
    k--;			/* want k = floor(ds) */
   15888:	a2e7a7d3          	feq.d	a5,fa5,fa4
   1588c:	0017b793          	seqz	a5,a5
   15890:	40fb8bbb          	subw	s7,s7,a5
   15894:	9f9ff06f          	j	1528c <_dtoa_r+0x230>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:387
      s5 = k;
      s2 += k;
    }
  else
    {
      b2 -= k;
   15898:	4178083b          	subw	a6,a6,s7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:388
      b5 = -k;
   1589c:	41700c3b          	negw	s8,s7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:389
      s5 = 0;
   158a0:	02012423          	sw	zero,40(sp)
   158a4:	a41ff06f          	j	152e4 <_dtoa_r+0x288>
   158a8:	000c0693          	mv	a3,s8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:596
	    break;
	}
      goto ret1;
    }

  m2 = b2;
   158ac:	00080493          	mv	s1,a6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:598
  m5 = b5;
  mhi = mlo = 0;
   158b0:	00000a13          	li	s4,0
   158b4:	e8dff06f          	j	15740 <_dtoa_r+0x6e4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:345 (discriminator 2)
      i = bbits + be + (Bias + (P - 1) - 1);
#if defined (_DOUBLE_IS_32BITS)
      x = word0 (d) << (32 - i);
#else
      x = (i > 32) ? (word0 (d) << (64 - i)) | (word1 (d) >> (i - 32))
       : (word1 (d) << (32 - i));
   158b8:	000d049b          	sext.w	s1,s10
   158bc:	40d787bb          	subw	a5,a5,a3
   158c0:	00f494bb          	sllw	s1,s1,a5
   158c4:	959ff06f          	j	1521c <_dtoa_r+0x1c0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:366
  k_check = 1;
  if (k >= 0 && k <= Ten_pmax)
    {
      if (d.d < tens[k])
	k--;
      k_check = 0;
   158c8:	02012823          	sw	zero,48(sp)
   158cc:	9f9ff06f          	j	152c4 <_dtoa_r+0x268>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:665
    S = pow5mult (ptr, S, s5);

  /* Check for special case that d is a normalized power of 2. */

  spec_case = 0;
  if (mode < 2)
   158d0:	00100793          	li	a5,1
   158d4:	0737d4e3          	ble	s3,a5,1613c <_dtoa_r+0x10e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:664
  if (s5 > 0)
    S = pow5mult (ptr, S, s5);

  /* Check for special case that d is a normalized power of 2. */

  spec_case = 0;
   158d8:	02012023          	sw	zero,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:689
   * and for all and pass them and a shift to quorem, so it
   * can do shifts and ors to compute the numerator for q.
   */

#ifdef Pack_32
  if ((i = ((s5 ? 32 - hi0bits (S->_x[S->_wds - 1]) : 1) + s2) & 0x1f) != 0)
   158dc:	00078513          	mv	a0,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:689 (discriminator 4)
   158e0:	01b507bb          	addw	a5,a0,s11
   158e4:	01f7f793          	andi	a5,a5,31
   158e8:	1a078663          	beqz	a5,15a94 <_dtoa_r+0xa38>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:690
    i = 32 - i;
   158ec:	02000693          	li	a3,32
   158f0:	40f686bb          	subw	a3,a3,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:695
#else
  if ((i = ((s5 ? 32 - hi0bits (S->_x[S->_wds - 1]) : 1) + s2) & 0xf) != 0)
    i = 16 - i;
#endif
  if (i > 4)
   158f4:	00400613          	li	a2,4
   158f8:	04d658e3          	ble	a3,a2,16148 <_dtoa_r+0x10ec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:697
    {
      i -= 4;
   158fc:	01c00693          	li	a3,28
   15900:	40f687bb          	subw	a5,a3,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:698
      b2 += i;
   15904:	00f8083b          	addw	a6,a6,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:699
      m2 += i;
   15908:	00f484bb          	addw	s1,s1,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:700
      s2 += i;
   1590c:	00fd8dbb          	addw	s11,s11,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:709
      i += 28;
      b2 += i;
      m2 += i;
      s2 += i;
    }
  if (b2 > 0)
   15910:	01005c63          	blez	a6,15928 <_dtoa_r+0x8cc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:710
    b = lshift (ptr, b, b2);
   15914:	00090593          	mv	a1,s2
   15918:	00080613          	mv	a2,a6
   1591c:	00040513          	mv	a0,s0
   15920:	2c5020ef          	jal	183e4 <__lshift>
   15924:	00050913          	mv	s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:711
  if (s2 > 0)
   15928:	01b05c63          	blez	s11,15940 <_dtoa_r+0x8e4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:712
    S = lshift (ptr, S, s2);
   1592c:	000c0593          	mv	a1,s8
   15930:	000d8613          	mv	a2,s11
   15934:	00040513          	mv	a0,s0
   15938:	2ad020ef          	jal	183e4 <__lshift>
   1593c:	00050c13          	mv	s8,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:713
  if (k_check)
   15940:	03012783          	lw	a5,48(sp)
   15944:	22079663          	bnez	a5,15b70 <_dtoa_r+0xb14>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:724
	  if (leftright)
	    mhi = multadd (ptr, mhi, 10, 0);
	  ilim = ilim1;
	}
    }
  if (ilim <= 0 && mode > 2)
   15948:	3f505e63          	blez	s5,15d44 <_dtoa_r+0xce8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:738
    one_digit:
      *s++ = '1';
      k++;
      goto ret;
    }
  if (leftright)
   1594c:	01012783          	lw	a5,16(sp)
   15950:	14078c63          	beqz	a5,15aa8 <_dtoa_r+0xa4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:740
    {
      if (m2 > 0)
   15954:	00905c63          	blez	s1,1596c <_dtoa_r+0x910>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:741
	mhi = lshift (ptr, mhi, m2);
   15958:	000a0593          	mv	a1,s4
   1595c:	00048613          	mv	a2,s1
   15960:	00040513          	mv	a0,s0
   15964:	281020ef          	jal	183e4 <__lshift>
   15968:	00050a13          	mv	s4,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:748
      /* Compute mlo -- check for special case
       * that d is a normalized power of 2.
       */

      mlo = mhi;
      if (spec_case)
   1596c:	02012783          	lw	a5,32(sp)
   15970:	000a0d93          	mv	s11,s4
   15974:	5a079463          	bnez	a5,15f1c <_dtoa_r+0xec0>
   15978:	fffa849b          	addiw	s1,s5,-1
   1597c:	00813783          	ld	a5,8(sp)
   15980:	02049493          	slli	s1,s1,0x20
   15984:	0204d493          	srli	s1,s1,0x20
   15988:	00148493          	addi	s1,s1,1
   1598c:	009784b3          	add	s1,a5,s1
   15990:	00078c93          	mv	s9,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:766
	  j = cmp (b, mlo);
	  delta = diff (ptr, S, mhi);
	  j1 = delta->_sign ? 1 : cmp (b, delta);
	  Bfree (ptr, delta);
#ifndef ROUND_BIASED
	  if (j1 == 0 && !mode && !(word1 (d) & 1))
   15994:	001d7793          	andi	a5,s10,1
   15998:	00f13823          	sd	a5,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:757
	  mhi = lshift (ptr, mhi, Log2P);
	}

      for (i = 1;; i++)
	{
	  dig = quorem (b, S) + '0';
   1599c:	000c0593          	mv	a1,s8
   159a0:	00090513          	mv	a0,s2
   159a4:	cccff0ef          	jal	14e70 <quorem>
   159a8:	00050d13          	mv	s10,a0
   159ac:	02a12823          	sw	a0,48(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:761
	  /* Do we yet have the shortest decimal string
	   * that will round to d?
	   */
	  j = cmp (b, mlo);
   159b0:	000a0593          	mv	a1,s4
   159b4:	00090513          	mv	a0,s2
   159b8:	38d020ef          	jal	18544 <__mcmp>
   159bc:	00050a93          	mv	s5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:762
	  delta = diff (ptr, S, mhi);
   159c0:	000d8613          	mv	a2,s11
   159c4:	000c0593          	mv	a1,s8
   159c8:	00040513          	mv	a0,s0
   159cc:	3d9020ef          	jal	185a4 <__mdiff>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:763
	  j1 = delta->_sign ? 1 : cmp (b, delta);
   159d0:	01052683          	lw	a3,16(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:762
	  dig = quorem (b, S) + '0';
	  /* Do we yet have the shortest decimal string
	   * that will round to d?
	   */
	  j = cmp (b, mlo);
	  delta = diff (ptr, S, mhi);
   159d4:	00050793          	mv	a5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:757
	  mhi = lshift (ptr, mhi, Log2P);
	}

      for (i = 1;; i++)
	{
	  dig = quorem (b, S) + '0';
   159d8:	030d0d1b          	addiw	s10,s10,48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:763
	  /* Do we yet have the shortest decimal string
	   * that will round to d?
	   */
	  j = cmp (b, mlo);
	  delta = diff (ptr, S, mhi);
	  j1 = delta->_sign ? 1 : cmp (b, delta);
   159dc:	00100713          	li	a4,1
   159e0:	00069e63          	bnez	a3,159fc <_dtoa_r+0x9a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:763 (discriminator 1)
   159e4:	00050593          	mv	a1,a0
   159e8:	02a13023          	sd	a0,32(sp)
   159ec:	00090513          	mv	a0,s2
   159f0:	355020ef          	jal	18544 <__mcmp>
   159f4:	02013783          	ld	a5,32(sp)
   159f8:	00050713          	mv	a4,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:764 (discriminator 4)
	  Bfree (ptr, delta);
   159fc:	00078593          	mv	a1,a5
   15a00:	00040513          	mv	a0,s0
   15a04:	02e13023          	sd	a4,32(sp)
   15a08:	2f0020ef          	jal	17cf8 <_Bfree>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:766
#ifndef ROUND_BIASED
	  if (j1 == 0 && !mode && !(word1 (d) & 1))
   15a0c:	02013703          	ld	a4,32(sp)
   15a10:	013767b3          	or	a5,a4,s3
   15a14:	00079663          	bnez	a5,15a20 <_dtoa_r+0x9c4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:766 (discriminator 1)
   15a18:	01012783          	lw	a5,16(sp)
   15a1c:	24078063          	beqz	a5,15c5c <_dtoa_r+0xc00>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:776
		dig++;
	      *s++ = dig;
	      goto ret;
	    }
#endif
         if ((j < 0) || ((j == 0) && !mode
   15a20:	260ac463          	bltz	s5,15c88 <_dtoa_r+0xc2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:776 (discriminator 1)
   15a24:	013aeab3          	or	s5,s5,s3
   15a28:	000a9663          	bnez	s5,15a34 <_dtoa_r+0x9d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:778
#ifndef ROUND_BIASED
	      && !(word1 (d) & 1)
   15a2c:	01012783          	lw	a5,16(sp)
   15a30:	24078c63          	beqz	a5,15c88 <_dtoa_r+0xc2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:793
		    goto round_9_up;
		}
	      *s++ = dig;
	      goto ret;
	    }
	  if (j1 > 0)
   15a34:	5ee04263          	bgtz	a4,16018 <_dtoa_r+0xfbc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:804
		  goto roundoff;
		}
	      *s++ = dig + 1;
	      goto ret;
	    }
	  *s++ = dig;
   15a38:	001c8c93          	addi	s9,s9,1
   15a3c:	ffac8fa3          	sb	s10,-1(s9)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:805
	  if (i == ilim)
   15a40:	5f948463          	beq	s1,s9,16028 <_dtoa_r+0xfcc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:807
	    break;
	  b = multadd (ptr, b, 10, 0);
   15a44:	00090593          	mv	a1,s2
   15a48:	00000693          	li	a3,0
   15a4c:	00a00613          	li	a2,10
   15a50:	00040513          	mv	a0,s0
   15a54:	2c8020ef          	jal	17d1c <__multadd>
   15a58:	00050913          	mv	s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:809
	  if (mlo == mhi)
	    mlo = mhi = multadd (ptr, mhi, 10, 0);
   15a5c:	00000693          	li	a3,0
   15a60:	00a00613          	li	a2,10
   15a64:	000a0593          	mv	a1,s4
   15a68:	00040513          	mv	a0,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:808
	    }
	  *s++ = dig;
	  if (i == ilim)
	    break;
	  b = multadd (ptr, b, 10, 0);
	  if (mlo == mhi)
   15a6c:	27ba0463          	beq	s4,s11,15cd4 <_dtoa_r+0xc78>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:812
	    mlo = mhi = multadd (ptr, mhi, 10, 0);
	  else
	    {
	      mlo = multadd (ptr, mlo, 10, 0);
   15a70:	2ac020ef          	jal	17d1c <__multadd>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:813
	      mhi = multadd (ptr, mhi, 10, 0);
   15a74:	000d8593          	mv	a1,s11
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:812
	  b = multadd (ptr, b, 10, 0);
	  if (mlo == mhi)
	    mlo = mhi = multadd (ptr, mhi, 10, 0);
	  else
	    {
	      mlo = multadd (ptr, mlo, 10, 0);
   15a78:	00050a13          	mv	s4,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:813
	      mhi = multadd (ptr, mhi, 10, 0);
   15a7c:	00000693          	li	a3,0
   15a80:	00a00613          	li	a2,10
   15a84:	00040513          	mv	a0,s0
   15a88:	294020ef          	jal	17d1c <__multadd>
   15a8c:	00050d93          	mv	s11,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:815
	    }
	}
   15a90:	f0dff06f          	j	1599c <_dtoa_r+0x940>
   15a94:	01c00793          	li	a5,28
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:705
      s2 += i;
    }
  else if (i < 4)
    {
      i += 28;
      b2 += i;
   15a98:	00f8083b          	addw	a6,a6,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:706
      m2 += i;
   15a9c:	00f484bb          	addw	s1,s1,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:707
      s2 += i;
   15aa0:	00fd8dbb          	addw	s11,s11,a5
   15aa4:	e6dff06f          	j	15910 <_dtoa_r+0x8b4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:809
	  *s++ = dig;
	  if (i == ilim)
	    break;
	  b = multadd (ptr, b, 10, 0);
	  if (mlo == mhi)
	    mlo = mhi = multadd (ptr, mhi, 10, 0);
   15aa8:	00813483          	ld	s1,8(sp)
   15aac:	00100993          	li	s3,1
   15ab0:	0100006f          	j	15ac0 <_dtoa_r+0xa64>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:823
    for (i = 1;; i++)
      {
	*s++ = dig = quorem (b, S) + '0';
	if (i >= ilim)
	  break;
	b = multadd (ptr, b, 10, 0);
   15ab4:	268020ef          	jal	17d1c <__multadd>
   15ab8:	00050913          	mv	s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:818
	      mhi = multadd (ptr, mhi, 10, 0);
	    }
	}
    }
  else
    for (i = 1;; i++)
   15abc:	0019899b          	addiw	s3,s3,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:820
      {
	*s++ = dig = quorem (b, S) + '0';
   15ac0:	000c0593          	mv	a1,s8
   15ac4:	00090513          	mv	a0,s2
   15ac8:	ba8ff0ef          	jal	14e70 <quorem>
   15acc:	03050d1b          	addiw	s10,a0,48
   15ad0:	00148493          	addi	s1,s1,1
   15ad4:	ffa48fa3          	sb	s10,-1(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:823
	if (i >= ilim)
	  break;
	b = multadd (ptr, b, 10, 0);
   15ad8:	00000693          	li	a3,0
   15adc:	00a00613          	li	a2,10
   15ae0:	00090593          	mv	a1,s2
   15ae4:	00040513          	mv	a0,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:821
    }
  else
    for (i = 1;; i++)
      {
	*s++ = dig = quorem (b, S) + '0';
	if (i >= ilim)
   15ae8:	fd59c6e3          	blt	s3,s5,15ab4 <_dtoa_r+0xa58>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:598
      goto ret1;
    }

  m2 = b2;
  m5 = b5;
  mhi = mlo = 0;
   15aec:	00000993          	li	s3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:828
	b = multadd (ptr, b, 10, 0);
      }

  /* Round off last digit */

  b = lshift (ptr, b, 1);
   15af0:	00090593          	mv	a1,s2
   15af4:	00100613          	li	a2,1
   15af8:	00040513          	mv	a0,s0
   15afc:	0e9020ef          	jal	183e4 <__lshift>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:829
  j = cmp (b, S);
   15b00:	000c0593          	mv	a1,s8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:828
	b = multadd (ptr, b, 10, 0);
      }

  /* Round off last digit */

  b = lshift (ptr, b, 1);
   15b04:	02a13023          	sd	a0,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:829
  j = cmp (b, S);
   15b08:	23d020ef          	jal	18544 <__mcmp>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:830
  if ((j > 0) || ((j == 0) && (dig & 1)))
   15b0c:	34a05463          	blez	a0,15e54 <_dtoa_r+0xdf8>
   15b10:	fff4c703          	lbu	a4,-1(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:833
    {
    roundoff:
      while (*--s == '9')
   15b14:	03900693          	li	a3,57
   15b18:	0140006f          	j	15b2c <_dtoa_r+0xad0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:834
	if (s == s0)
   15b1c:	00813703          	ld	a4,8(sp)
   15b20:	26e78a63          	beq	a5,a4,15d94 <_dtoa_r+0xd38>
   15b24:	fff7c703          	lbu	a4,-1(a5)
   15b28:	00078493          	mv	s1,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:833
  b = lshift (ptr, b, 1);
  j = cmp (b, S);
  if ((j > 0) || ((j == 0) && (dig & 1)))
    {
    roundoff:
      while (*--s == '9')
   15b2c:	fff48793          	addi	a5,s1,-1
   15b30:	fed706e3          	beq	a4,a3,15b1c <_dtoa_r+0xac0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:840
	  {
	    k++;
	    *s++ = '1';
	    goto ret;
	  }
      ++*s++;
   15b34:	0017071b          	addiw	a4,a4,1
   15b38:	00e78023          	sb	a4,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:848
    {
      while (*--s == '0');
      s++;
    }
ret:
  Bfree (ptr, S);
   15b3c:	000c0593          	mv	a1,s8
   15b40:	00040513          	mv	a0,s0
   15b44:	1b4020ef          	jal	17cf8 <_Bfree>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:849
  if (mhi)
   15b48:	9e0a0ae3          	beqz	s4,1553c <_dtoa_r+0x4e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:851
    {
      if (mlo && mlo != mhi)
   15b4c:	00098a63          	beqz	s3,15b60 <_dtoa_r+0xb04>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:851 (discriminator 1)
   15b50:	01498863          	beq	s3,s4,15b60 <_dtoa_r+0xb04>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:852
	Bfree (ptr, mlo);
   15b54:	00098593          	mv	a1,s3
   15b58:	00040513          	mv	a0,s0
   15b5c:	19c020ef          	jal	17cf8 <_Bfree>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:853
      Bfree (ptr, mhi);
   15b60:	000a0593          	mv	a1,s4
   15b64:	00040513          	mv	a0,s0
   15b68:	190020ef          	jal	17cf8 <_Bfree>
   15b6c:	9d1ff06f          	j	1553c <_dtoa_r+0x4e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:715
    b = lshift (ptr, b, b2);
  if (s2 > 0)
    S = lshift (ptr, S, s2);
  if (k_check)
    {
      if (cmp (b, S) < 0)
   15b70:	000c0593          	mv	a1,s8
   15b74:	00090513          	mv	a0,s2
   15b78:	1cd020ef          	jal	18544 <__mcmp>
   15b7c:	dc0556e3          	bgez	a0,15948 <_dtoa_r+0x8ec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:718
	{
	  k--;
	  b = multadd (ptr, b, 10, 0);	/* we botched the k estimate */
   15b80:	00090593          	mv	a1,s2
   15b84:	00000693          	li	a3,0
   15b88:	00a00613          	li	a2,10
   15b8c:	00040513          	mv	a0,s0
   15b90:	18c020ef          	jal	17d1c <__multadd>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:719
	  if (leftright)
   15b94:	01012783          	lw	a5,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:718
  if (k_check)
    {
      if (cmp (b, S) < 0)
	{
	  k--;
	  b = multadd (ptr, b, 10, 0);	/* we botched the k estimate */
   15b98:	00050913          	mv	s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:717
    S = lshift (ptr, S, s2);
  if (k_check)
    {
      if (cmp (b, S) < 0)
	{
	  k--;
   15b9c:	fffb8b9b          	addiw	s7,s7,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:719
	  b = multadd (ptr, b, 10, 0);	/* we botched the k estimate */
	  if (leftright)
   15ba0:	56079063          	bnez	a5,16100 <_dtoa_r+0x10a4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:724
	    mhi = multadd (ptr, mhi, 10, 0);
	  ilim = ilim1;
	}
    }
  if (ilim <= 0 && mode > 2)
   15ba4:	03412783          	lw	a5,52(sp)
   15ba8:	00078a93          	mv	s5,a5
   15bac:	eef04ee3          	bgtz	a5,15aa8 <_dtoa_r+0xa4c>
   15bb0:	00200793          	li	a5,2
   15bb4:	5937c063          	blt	a5,s3,16134 <_dtoa_r+0x10d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:820
	}
    }
  else
    for (i = 1;; i++)
      {
	*s++ = dig = quorem (b, S) + '0';
   15bb8:	000c0593          	mv	a1,s8
   15bbc:	ab4ff0ef          	jal	14e70 <quorem>
   15bc0:	00813783          	ld	a5,8(sp)
   15bc4:	03050d1b          	addiw	s10,a0,48
   15bc8:	00178493          	addi	s1,a5,1
   15bcc:	ffa48fa3          	sb	s10,-1(s1)
   15bd0:	f1dff06f          	j	15aec <_dtoa_r+0xa90>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:636
      s2 += i;
      mhi = i2b (ptr, 1);
    }
  if (m2 > 0 && s2 > 0)
    {
      i = m2 < s2 ? m2 : s2;
   15bd4:	000d8793          	mv	a5,s11
   15bd8:	b79ff06f          	j	15750 <_dtoa_r+0x6f4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:664
  if (s5 > 0)
    S = pow5mult (ptr, S, s5);

  /* Check for special case that d is a normalized power of 2. */

  spec_case = 0;
   15bdc:	02012023          	sw	zero,32(sp)
   15be0:	c75ff06f          	j	15854 <_dtoa_r+0x7f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:399
  if (mode > 5)
    {
      mode -= 4;
      try_quick = 0;
    }
  leftright = 1;
   15be4:	00100793          	li	a5,1
   15be8:	00f12823          	sw	a5,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:412
      break;
    case 2:
      leftright = 0;
      /* no break */
    case 4:
      if (ndigits <= 0)
   15bec:	0f905c63          	blez	s9,15ce4 <_dtoa_r+0xc88>
   15bf0:	000c8513          	mv	a0,s9
   15bf4:	000c8493          	mv	s1,s9
   15bf8:	03912a23          	sw	s9,52(sp)
   15bfc:	000c8a93          	mv	s5,s9
   15c00:	f3cff06f          	j	1533c <_dtoa_r+0x2e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:553 (discriminator 1)

  if (be >= 0 && k <= Int_max)
    {
      /* Yes. */
      ds = tens[k];
      if (ndigits < 0 && ilim <= 0)
   15c04:	a1504ce3          	bgtz	s5,1561c <_dtoa_r+0x5c0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:556
	{
	  S = mhi = 0;
	  if (ilim < 0 || d.d <= 5 * ds)
   15c08:	1e0a9e63          	bnez	s5,15e04 <_dtoa_r+0xda8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:556 (discriminator 1)
   15c0c:	000247b7          	lui	a5,0x24
   15c10:	4d87b787          	fld	fa5,1240(a5) # 244d8 <mask+0x40>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:555
    {
      /* Yes. */
      ds = tens[k];
      if (ndigits < 0 && ilim <= 0)
	{
	  S = mhi = 0;
   15c14:	00000c13          	li	s8,0
   15c18:	00000a13          	li	s4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:556
	  if (ilim < 0 || d.d <= 5 * ds)
   15c1c:	12f6f6d3          	fmul.d	fa3,fa3,fa5
   15c20:	f20d07d3          	fmv.d.x	fa5,s10
   15c24:	a2d78753          	fle.d	a4,fa5,fa3
   15c28:	14070a63          	beqz	a4,15d7c <_dtoa_r+0xd20>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:731
      if (ilim < 0 || cmp (b, S = multadd (ptr, S, 5, 0)) <= 0)
	{
	  /* no digits, fcvt style */
	no_digits:
	  k = -1 - ndigits;
	  goto ret;
   15c2c:	00813483          	ld	s1,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:730
    {
      if (ilim < 0 || cmp (b, S = multadd (ptr, S, 5, 0)) <= 0)
	{
	  /* no digits, fcvt style */
	no_digits:
	  k = -1 - ndigits;
   15c30:	fffccb93          	not	s7,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:848
    {
      while (*--s == '0');
      s++;
    }
ret:
  Bfree (ptr, S);
   15c34:	000c0593          	mv	a1,s8
   15c38:	00040513          	mv	a0,s0
   15c3c:	0bc020ef          	jal	17cf8 <_Bfree>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:849
  if (mhi)
   15c40:	8e0a0ee3          	beqz	s4,1553c <_dtoa_r+0x4e0>
   15c44:	f1dff06f          	j	15b60 <_dtoa_r+0xb04>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:605
    {
      if (mode < 2)
	{
	  i =
#ifndef Sudden_Underflow
	    denorm ? be + (Bias + (P - 1) - 1 + 1) :
   15c48:	3e090c63          	beqz	s2,16040 <_dtoa_r+0xfe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:605 (discriminator 1)
   15c4c:	4337879b          	addiw	a5,a5,1075
   15c50:	000c0693          	mv	a3,s8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:596
	    break;
	}
      goto ret1;
    }

  m2 = b2;
   15c54:	00080493          	mv	s1,a6
   15c58:	abdff06f          	j	15714 <_dtoa_r+0x6b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:768
	  j1 = delta->_sign ? 1 : cmp (b, delta);
	  Bfree (ptr, delta);
#ifndef ROUND_BIASED
	  if (j1 == 0 && !mode && !(word1 (d) & 1))
	    {
	      if (dig == '9')
   15c5c:	03900793          	li	a5,57
   15c60:	04fd0a63          	beq	s10,a5,15cb4 <_dtoa_r+0xc58>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:770
		goto round_9_up;
	      if (j > 0)
   15c64:	01505663          	blez	s5,15c70 <_dtoa_r+0xc14>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:787
	      if (j1 > 0)
		{
		  b = lshift (ptr, b, 1);
		  j1 = cmp (b, S);
                 if (((j1 > 0) || ((j1 == 0) && (dig & 1)))
		      && dig++ == '9')
   15c68:	03012783          	lw	a5,48(sp)
   15c6c:	03178d1b          	addiw	s10,a5,49
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:802
		round_9_up:
		  *s++ = '9';
		  goto roundoff;
		}
	      *s++ = dig + 1;
	      goto ret;
   15c70:	000a0993          	mv	s3,s4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:801
		{		/* possible if i == 1 */
		round_9_up:
		  *s++ = '9';
		  goto roundoff;
		}
	      *s++ = dig + 1;
   15c74:	001c8493          	addi	s1,s9,1
   15c78:	01ac8023          	sb	s10,0(s9)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:802
	      goto ret;
   15c7c:	000d8a13          	mv	s4,s11
   15c80:	03213023          	sd	s2,32(sp)
   15c84:	eb9ff06f          	j	15b3c <_dtoa_r+0xae0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:782
#ifndef ROUND_BIASED
	      && !(word1 (d) & 1)
#endif
           ))
	    {
	      if (j1 > 0)
   15c88:	fee054e3          	blez	a4,15c70 <_dtoa_r+0xc14>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:784
		{
		  b = lshift (ptr, b, 1);
   15c8c:	00090593          	mv	a1,s2
   15c90:	00100613          	li	a2,1
   15c94:	00040513          	mv	a0,s0
   15c98:	74c020ef          	jal	183e4 <__lshift>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:785
		  j1 = cmp (b, S);
   15c9c:	000c0593          	mv	a1,s8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:784
#endif
           ))
	    {
	      if (j1 > 0)
		{
		  b = lshift (ptr, b, 1);
   15ca0:	00050913          	mv	s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:785
		  j1 = cmp (b, S);
   15ca4:	0a1020ef          	jal	18544 <__mcmp>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:786
                 if (((j1 > 0) || ((j1 == 0) && (dig & 1)))
   15ca8:	44a05063          	blez	a0,160e8 <_dtoa_r+0x108c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:787
		      && dig++ == '9')
   15cac:	03900793          	li	a5,57
   15cb0:	fafd1ce3          	bne	s10,a5,15c68 <_dtoa_r+0xc0c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:798
	  if (j1 > 0)
	    {
	      if (dig == '9')
		{		/* possible if i == 1 */
		round_9_up:
		  *s++ = '9';
   15cb4:	03900793          	li	a5,57
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:799
		  goto roundoff;
   15cb8:	000a0993          	mv	s3,s4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:798
	  if (j1 > 0)
	    {
	      if (dig == '9')
		{		/* possible if i == 1 */
		round_9_up:
		  *s++ = '9';
   15cbc:	001c8493          	addi	s1,s9,1
   15cc0:	00fc8023          	sb	a5,0(s9)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:799
		  goto roundoff;
   15cc4:	000d8a13          	mv	s4,s11
   15cc8:	03213023          	sd	s2,32(sp)
   15ccc:	03900713          	li	a4,57
   15cd0:	e45ff06f          	j	15b14 <_dtoa_r+0xab8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:809
	  *s++ = dig;
	  if (i == ilim)
	    break;
	  b = multadd (ptr, b, 10, 0);
	  if (mlo == mhi)
	    mlo = mhi = multadd (ptr, mhi, 10, 0);
   15cd4:	048020ef          	jal	17d1c <__multadd>
   15cd8:	00050a13          	mv	s4,a0
   15cdc:	00050d93          	mv	s11,a0
   15ce0:	cbdff06f          	j	1599c <_dtoa_r+0x940>
   15ce4:	00100493          	li	s1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:413
    case 2:
      leftright = 0;
      /* no break */
    case 4:
      if (ndigits <= 0)
	ndigits = 1;
   15ce8:	02912a23          	sw	s1,52(sp)
   15cec:	00048a93          	mv	s5,s1
   15cf0:	00048c93          	mv	s9,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:427
      ilim1 = i - 1;
      if (i <= 0)
	i = 1;
    }
  j = sizeof (__ULong);
  for (_REENT_MP_RESULT_K(ptr) = 0; sizeof (_Bigint) - sizeof (__ULong) + j <= i;
   15cf4:	06042423          	sw	zero,104(s0)
   15cf8:	00000593          	li	a1,0
   15cfc:	e74ff06f          	j	15370 <_dtoa_r+0x314>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:409
    case 1:
      i = 18;
      ndigits = 0;
      break;
    case 2:
      leftright = 0;
   15d00:	00012823          	sw	zero,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:401
      mode -= 4;
      try_quick = 0;
    }
  leftright = 1;
  ilim = ilim1 = -1;
  switch (mode)
   15d04:	00200793          	li	a5,2
   15d08:	eef982e3          	beq	s3,a5,15bec <_dtoa_r+0xb90>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:427
      ilim1 = i - 1;
      if (i <= 0)
	i = 1;
    }
  j = sizeof (__ULong);
  for (_REENT_MP_RESULT_K(ptr) = 0; sizeof (_Bigint) - sizeof (__ULong) + j <= i;
   15d0c:	06042423          	sw	zero,104(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:430
       j <<= 1)
    _REENT_MP_RESULT_K(ptr)++;
  _REENT_MP_RESULT(ptr) = Balloc (ptr, _REENT_MP_RESULT_K(ptr));
   15d10:	00000593          	li	a1,0
   15d14:	00040513          	mv	a0,s0
   15d18:	03013c23          	sd	a6,56(sp)
   15d1c:	731010ef          	jal	17c4c <_Balloc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:400
    {
      mode -= 4;
      try_quick = 0;
    }
  leftright = 1;
  ilim = ilim1 = -1;
   15d20:	fff00a93          	li	s5,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:399
  if (mode > 5)
    {
      mode -= 4;
      try_quick = 0;
    }
  leftright = 1;
   15d24:	00100793          	li	a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:430
    }
  j = sizeof (__ULong);
  for (_REENT_MP_RESULT_K(ptr) = 0; sizeof (_Bigint) - sizeof (__ULong) + j <= i;
       j <<= 1)
    _REENT_MP_RESULT_K(ptr)++;
  _REENT_MP_RESULT(ptr) = Balloc (ptr, _REENT_MP_RESULT_K(ptr));
   15d28:	00a13423          	sd	a0,8(sp)
   15d2c:	06a43023          	sd	a0,96(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:400
    {
      mode -= 4;
      try_quick = 0;
    }
  leftright = 1;
  ilim = ilim1 = -1;
   15d30:	03512a23          	sw	s5,52(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:406
  switch (mode)
    {
    case 0:
    case 1:
      i = 18;
      ndigits = 0;
   15d34:	00000c93          	li	s9,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:399
  if (mode > 5)
    {
      mode -= 4;
      try_quick = 0;
    }
  leftright = 1;
   15d38:	00f12823          	sw	a5,16(sp)
   15d3c:	03813803          	ld	a6,56(sp)
   15d40:	8b5ff06f          	j	155f4 <_dtoa_r+0x598>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:724 (discriminator 1)
	  if (leftright)
	    mhi = multadd (ptr, mhi, 10, 0);
	  ilim = ilim1;
	}
    }
  if (ilim <= 0 && mode > 2)
   15d44:	00200793          	li	a5,2
   15d48:	c137d2e3          	ble	s3,a5,1594c <_dtoa_r+0x8f0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:726
    {
      if (ilim < 0 || cmp (b, S = multadd (ptr, S, 5, 0)) <= 0)
   15d4c:	300a9663          	bnez	s5,16058 <_dtoa_r+0xffc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:726 (discriminator 1)
   15d50:	000c0593          	mv	a1,s8
   15d54:	00000693          	li	a3,0
   15d58:	00500613          	li	a2,5
   15d5c:	00040513          	mv	a0,s0
   15d60:	7bd010ef          	jal	17d1c <__multadd>
   15d64:	00050593          	mv	a1,a0
   15d68:	00050c13          	mv	s8,a0
   15d6c:	00090513          	mv	a0,s2
   15d70:	7d4020ef          	jal	18544 <__mcmp>
   15d74:	03213023          	sd	s2,32(sp)
   15d78:	eaa05ae3          	blez	a0,15c2c <_dtoa_r+0xbd0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:734
	no_digits:
	  k = -1 - ndigits;
	  goto ret;
	}
    one_digit:
      *s++ = '1';
   15d7c:	00813703          	ld	a4,8(sp)
   15d80:	03100793          	li	a5,49
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:735
      k++;
   15d84:	001b8b9b          	addiw	s7,s7,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:734
	no_digits:
	  k = -1 - ndigits;
	  goto ret;
	}
    one_digit:
      *s++ = '1';
   15d88:	00170493          	addi	s1,a4,1
   15d8c:	00f70023          	sb	a5,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:736
      k++;
      goto ret;
   15d90:	ea5ff06f          	j	15c34 <_dtoa_r+0xbd8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:837
    roundoff:
      while (*--s == '9')
	if (s == s0)
	  {
	    k++;
	    *s++ = '1';
   15d94:	00813703          	ld	a4,8(sp)
   15d98:	03100793          	li	a5,49
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:836
    {
    roundoff:
      while (*--s == '9')
	if (s == s0)
	  {
	    k++;
   15d9c:	001b8b9b          	addiw	s7,s7,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:837
	    *s++ = '1';
   15da0:	00f70023          	sb	a5,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:838
	    goto ret;
   15da4:	d99ff06f          	j	15b3c <_dtoa_r+0xae0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:417
      if (ndigits <= 0)
	ndigits = 1;
      ilim = ilim1 = i = ndigits;
      break;
    case 3:
      leftright = 0;
   15da8:	00012823          	sw	zero,16(sp)
   15dac:	d78ff06f          	j	15324 <_dtoa_r+0x2c8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:480
	  ilim = ilim1;
	  k--;
	  d.d *= 10.;
	  ieps++;
	}
      eps.d = ieps * d.d + 7.;
   15db0:	000247b7          	lui	a5,0x24
   15db4:	d20706d3          	fcvt.d.w	fa3,a4
   15db8:	4d07b707          	fld	fa4,1232(a5) # 244d0 <mask+0x38>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:481
      word0 (eps) -= (P - 1) * Exp_msk1;
   15dbc:	fcc006b7          	lui	a3,0xfcc00
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:480
	  ilim = ilim1;
	  k--;
	  d.d *= 10.;
	  ieps++;
	}
      eps.d = ieps * d.d + 7.;
   15dc0:	72d7f743          	fmadd.d	fa4,fa5,fa3,fa4
   15dc4:	e2070753          	fmv.x.d	a4,fa4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:481
      word0 (eps) -= (P - 1) * Exp_msk1;
   15dc8:	42075793          	srai	a5,a4,0x20
   15dcc:	00d787bb          	addw	a5,a5,a3
   15dd0:	02071713          	slli	a4,a4,0x20
   15dd4:	02079793          	slli	a5,a5,0x20
   15dd8:	02075713          	srli	a4,a4,0x20
   15ddc:	00f76733          	or	a4,a4,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:485
      if (ilim == 0)
	{
	  S = mhi = 0;
	  d.d -= 5.;
   15de0:	000247b7          	lui	a5,0x24
   15de4:	4d87b707          	fld	fa4,1240(a5) # 244d8 <mask+0x40>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:486
	  if (d.d > eps.d)
   15de8:	f20706d3          	fmv.d.x	fa3,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:485
      eps.d = ieps * d.d + 7.;
      word0 (eps) -= (P - 1) * Exp_msk1;
      if (ilim == 0)
	{
	  S = mhi = 0;
	  d.d -= 5.;
   15dec:	0ae7f7d3          	fsub.d	fa5,fa5,fa4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:486
	  if (d.d > eps.d)
   15df0:	a2f697d3          	flt.d	a5,fa3,fa5
   15df4:	16079463          	bnez	a5,15f5c <_dtoa_r+0xf00>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:488
	    goto one_digit;
	  if (d.d < -eps.d)
   15df8:	22d69753          	fneg.d	fa4,fa3
   15dfc:	a2e797d3          	flt.d	a5,fa5,fa4
   15e00:	06078e63          	beqz	a5,15e7c <_dtoa_r+0xe20>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:555
    {
      /* Yes. */
      ds = tens[k];
      if (ndigits < 0 && ilim <= 0)
	{
	  S = mhi = 0;
   15e04:	00000c13          	li	s8,0
   15e08:	00000a13          	li	s4,0
   15e0c:	e21ff06f          	j	15c2c <_dtoa_r+0xbd0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:656
	    }
         if ((j = b5 - m5) != 0)
	    b = pow5mult (ptr, b, j);
	}
      else
	b = pow5mult (ptr, b, b5);
   15e10:	00090593          	mv	a1,s2
   15e14:	000c0613          	mv	a2,s8
   15e18:	00040513          	mv	a0,s0
   15e1c:	03013023          	sd	a6,32(sp)
   15e20:	48c020ef          	jal	182ac <__pow5mult>
   15e24:	00050913          	mv	s2,a0
   15e28:	02013803          	ld	a6,32(sp)
   15e2c:	9b1ff06f          	j	157dc <_dtoa_r+0x780>
   15e30:	00813503          	ld	a0,8(sp)
   15e34:	af4ff06f          	j	15128 <_dtoa_r+0xcc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:620
	  j = ilim - 1;
	  if (m5 >= j)
	    m5 -= j;
	  else
	    {
	      s5 += j -= m5;
   15e38:	02812783          	lw	a5,40(sp)
   15e3c:	41868c3b          	subw	s8,a3,s8
   15e40:	018787bb          	addw	a5,a5,s8
   15e44:	02f12423          	sw	a5,40(sp)
   15e48:	00068c13          	mv	s8,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:622
	      b5 += j;
	      m5 = 0;
   15e4c:	00000693          	li	a3,0
   15e50:	8b9ff06f          	j	15708 <_dtoa_r+0x6ac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:830 (discriminator 1)

  /* Round off last digit */

  b = lshift (ptr, b, 1);
  j = cmp (b, S);
  if ((j > 0) || ((j == 0) && (dig & 1)))
   15e54:	00051663          	bnez	a0,15e60 <_dtoa_r+0xe04>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:830 (discriminator 2)
   15e58:	001d7d13          	andi	s10,s10,1
   15e5c:	ca0d1ae3          	bnez	s10,15b10 <_dtoa_r+0xab4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:844 (discriminator 1)
	  }
      ++*s++;
    }
  else
    {
      while (*--s == '0');
   15e60:	03000693          	li	a3,48
   15e64:	0080006f          	j	15e6c <_dtoa_r+0xe10>
   15e68:	00070493          	mv	s1,a4
   15e6c:	fff4c783          	lbu	a5,-1(s1)
   15e70:	fff48713          	addi	a4,s1,-1
   15e74:	fed78ae3          	beq	a5,a3,15e68 <_dtoa_r+0xe0c>
   15e78:	cc5ff06f          	j	15b3c <_dtoa_r+0xae0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:542
#ifndef No_leftright
	}
#endif
    fast_failed:
      s = s0;
      d.d = d2.d;
   15e7c:	03813d03          	ld	s10,56(sp)
   15e80:	f74ff06f          	j	155f4 <_dtoa_r+0x598>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:576 (discriminator 1)
#endif
	  *s++ = '0' + (int) L;
	  if (i == ilim)
	    {
	      d.d += d.d;
             if ((d.d > ds) || ((d.d == ds) && (L & 1)))
   15e84:	a2f6a753          	feq.d	a4,fa3,fa5
   15e88:	00068493          	mv	s1,a3
   15e8c:	ea070863          	beqz	a4,1553c <_dtoa_r+0x4e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:576 (discriminator 2)
   15e90:	0017f793          	andi	a5,a5,1
   15e94:	ea078463          	beqz	a5,1553c <_dtoa_r+0x4e0>
   15e98:	fff6c783          	lbu	a5,-1(a3) # fffffffffcbfffff <_end+0xfffffffffcbd91e7>
   15e9c:	825ff06f          	j	156c0 <_dtoa_r+0x664>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:461
		ieps++;
		ds *= bigtens[i];
	      }
	  d.d /= ds;
	}
      else if ((j1 = -k) != 0)
   15ea0:	417007bb          	negw	a5,s7
   15ea4:	03813787          	fld	fa5,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:441

      i = 0;
      d2.d = d.d;
      k0 = k;
      ilim0 = ilim;
      ieps = 2;			/* conservative */
   15ea8:	00200713          	li	a4,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:461
		ieps++;
		ds *= bigtens[i];
	      }
	  d.d /= ds;
	}
      else if ((j1 = -k) != 0)
   15eac:	d6078063          	beqz	a5,1540c <_dtoa_r+0x3b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:463
	{
	  d.d *= tens[j1 & 0xf];
   15eb0:	00f7f693          	andi	a3,a5,15
   15eb4:	00021637          	lui	a2,0x21
   15eb8:	00369693          	slli	a3,a3,0x3
   15ebc:	d2060613          	addi	a2,a2,-736 # 20d20 <__mprec_tens>
   15ec0:	00c686b3          	add	a3,a3,a2
   15ec4:	0006b787          	fld	fa5,0(a3)
   15ec8:	03813707          	fld	fa4,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:464
	  for (j = j1 >> 4; j; j >>= 1, i++)
   15ecc:	4047d79b          	sraiw	a5,a5,0x4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:463
	      }
	  d.d /= ds;
	}
      else if ((j1 = -k) != 0)
	{
	  d.d *= tens[j1 & 0xf];
   15ed0:	12f777d3          	fmul.d	fa5,fa4,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:464
	  for (j = j1 >> 4; j; j >>= 1, i++)
   15ed4:	d2078c63          	beqz	a5,1540c <_dtoa_r+0x3b0>
   15ed8:	000216b7          	lui	a3,0x21
   15edc:	e1068693          	addi	a3,a3,-496 # 20e10 <__mprec_bigtens>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:465
	    if (j & 1)
   15ee0:	0017f613          	andi	a2,a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:464
	  d.d /= ds;
	}
      else if ((j1 = -k) != 0)
	{
	  d.d *= tens[j1 & 0xf];
	  for (j = j1 >> 4; j; j >>= 1, i++)
   15ee4:	4017d79b          	sraiw	a5,a5,0x1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:465
	    if (j & 1)
   15ee8:	00060863          	beqz	a2,15ef8 <_dtoa_r+0xe9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:468
	      {
		ieps++;
		d.d *= bigtens[i];
   15eec:	0006b707          	fld	fa4,0(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:467
	{
	  d.d *= tens[j1 & 0xf];
	  for (j = j1 >> 4; j; j >>= 1, i++)
	    if (j & 1)
	      {
		ieps++;
   15ef0:	0017071b          	addiw	a4,a4,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:468
		d.d *= bigtens[i];
   15ef4:	12e7f7d3          	fmul.d	fa5,fa5,fa4
   15ef8:	00868693          	addi	a3,a3,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:464 (discriminator 2)
	  d.d /= ds;
	}
      else if ((j1 = -k) != 0)
	{
	  d.d *= tens[j1 & 0xf];
	  for (j = j1 >> 4; j; j >>= 1, i++)
   15efc:	fe0792e3          	bnez	a5,15ee0 <_dtoa_r+0xe84>
   15f00:	d0cff06f          	j	1540c <_dtoa_r+0x3b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:583
		bump_up:
		  while (*--s == '9')
		    if (s == s0)
		      {
			k++;
			*s = '0';
   15f04:	00813683          	ld	a3,8(sp)
   15f08:	03000793          	li	a5,48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:582
		{
		bump_up:
		  while (*--s == '9')
		    if (s == s0)
		      {
			k++;
   15f0c:	001b8b9b          	addiw	s7,s7,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:583
			*s = '0';
   15f10:	00f68023          	sb	a5,0(a3)
   15f14:	fff4c783          	lbu	a5,-1(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:584
			break;
   15f18:	fc8ff06f          	j	156e0 <_dtoa_r+0x684>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:750
       */

      mlo = mhi;
      if (spec_case)
	{
	  mhi = Balloc (ptr, mhi->_k);
   15f1c:	008a2583          	lw	a1,8(s4)
   15f20:	00040513          	mv	a0,s0
   15f24:	529010ef          	jal	17c4c <_Balloc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:751
	  Bcopy (mhi, mlo);
   15f28:	014a2603          	lw	a2,20(s4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:750
       */

      mlo = mhi;
      if (spec_case)
	{
	  mhi = Balloc (ptr, mhi->_k);
   15f2c:	00050493          	mv	s1,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:751
	  Bcopy (mhi, mlo);
   15f30:	010a0593          	addi	a1,s4,16
   15f34:	00260613          	addi	a2,a2,2
   15f38:	00261613          	slli	a2,a2,0x2
   15f3c:	01050513          	addi	a0,a0,16
   15f40:	a95fa0ef          	jal	109d4 <memcpy>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:752
	  mhi = lshift (ptr, mhi, Log2P);
   15f44:	00100613          	li	a2,1
   15f48:	00048593          	mv	a1,s1
   15f4c:	00040513          	mv	a0,s0
   15f50:	494020ef          	jal	183e4 <__lshift>
   15f54:	00050d93          	mv	s11,a0
   15f58:	a21ff06f          	j	15978 <_dtoa_r+0x91c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:484
	}
      eps.d = ieps * d.d + 7.;
      word0 (eps) -= (P - 1) * Exp_msk1;
      if (ilim == 0)
	{
	  S = mhi = 0;
   15f5c:	00000c13          	li	s8,0
   15f60:	00000a13          	li	s4,0
   15f64:	e19ff06f          	j	15d7c <_dtoa_r+0xd20>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:518
	}
      else
	{
#endif
	  /* Generate ilim digits, then fix them up. */
	  eps.d *= tens[ilim - 1];
   15f68:	fff6079b          	addiw	a5,a2,-1
   15f6c:	00021537          	lui	a0,0x21
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:521
	  for (i = 1;; i++, d.d *= 10.)
	    {
	      L = d.d;
   15f70:	c20795d3          	fcvt.w.d	a1,fa5,rtz
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:518
	}
      else
	{
#endif
	  /* Generate ilim digits, then fix them up. */
	  eps.d *= tens[ilim - 1];
   15f74:	00379793          	slli	a5,a5,0x3
   15f78:	d2050513          	addi	a0,a0,-736 # 20d20 <__mprec_tens>
   15f7c:	00a787b3          	add	a5,a5,a0
   15f80:	0007b707          	fld	fa4,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:523
	  for (i = 1;; i++, d.d *= 10.)
	    {
	      L = d.d;
	      d.d -= L;
	      *s++ = '0' + (int) L;
   15f84:	00813783          	ld	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:522
	  /* Generate ilim digits, then fix them up. */
	  eps.d *= tens[ilim - 1];
	  for (i = 1;; i++, d.d *= 10.)
	    {
	      L = d.d;
	      d.d -= L;
   15f88:	d20586d3          	fcvt.d.w	fa3,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:518
	}
      else
	{
#endif
	  /* Generate ilim digits, then fix them up. */
	  eps.d *= tens[ilim - 1];
   15f8c:	f2070653          	fmv.d.x	fa2,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:523
	  for (i = 1;; i++, d.d *= 10.)
	    {
	      L = d.d;
	      d.d -= L;
	      *s++ = '0' + (int) L;
   15f90:	0305859b          	addiw	a1,a1,48
   15f94:	00b78023          	sb	a1,0(a5)
   15f98:	00178493          	addi	s1,a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:524
	      if (i == ilim)
   15f9c:	00100793          	li	a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:518
	}
      else
	{
#endif
	  /* Generate ilim digits, then fix them up. */
	  eps.d *= tens[ilim - 1];
   15fa0:	12c77653          	fmul.d	fa2,fa4,fa2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:522
	  for (i = 1;; i++, d.d *= 10.)
	    {
	      L = d.d;
	      d.d -= L;
   15fa4:	0ad7f7d3          	fsub.d	fa5,fa5,fa3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:524
	      *s++ = '0' + (int) L;
	      if (i == ilim)
   15fa8:	04f60863          	beq	a2,a5,15ff8 <_dtoa_r+0xf9c>
   15fac:	ffe6061b          	addiw	a2,a2,-2
   15fb0:	000247b7          	lui	a5,0x24
   15fb4:	02061593          	slli	a1,a2,0x20
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:519
      else
	{
#endif
	  /* Generate ilim digits, then fix them up. */
	  eps.d *= tens[ilim - 1];
	  for (i = 1;; i++, d.d *= 10.)
   15fb8:	4c87b687          	fld	fa3,1224(a5) # 244c8 <mask+0x30>
   15fbc:	00813783          	ld	a5,8(sp)
   15fc0:	0205d593          	srli	a1,a1,0x20
   15fc4:	00258513          	addi	a0,a1,2
   15fc8:	00a78533          	add	a0,a5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:524
	    {
	      L = d.d;
	      d.d -= L;
	      *s++ = '0' + (int) L;
	      if (i == ilim)
   15fcc:	00048613          	mv	a2,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:519
      else
	{
#endif
	  /* Generate ilim digits, then fix them up. */
	  eps.d *= tens[ilim - 1];
	  for (i = 1;; i++, d.d *= 10.)
   15fd0:	12d7f7d3          	fmul.d	fa5,fa5,fa3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:523
	    {
	      L = d.d;
	      d.d -= L;
	      *s++ = '0' + (int) L;
   15fd4:	00160613          	addi	a2,a2,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:521
#endif
	  /* Generate ilim digits, then fix them up. */
	  eps.d *= tens[ilim - 1];
	  for (i = 1;; i++, d.d *= 10.)
	    {
	      L = d.d;
   15fd8:	c20797d3          	fcvt.w.d	a5,fa5,rtz
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:522
	      d.d -= L;
   15fdc:	d2078753          	fcvt.d.w	fa4,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:523
	      *s++ = '0' + (int) L;
   15fe0:	0307879b          	addiw	a5,a5,48
   15fe4:	fef60fa3          	sb	a5,-1(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:522
	  /* Generate ilim digits, then fix them up. */
	  eps.d *= tens[ilim - 1];
	  for (i = 1;; i++, d.d *= 10.)
	    {
	      L = d.d;
	      d.d -= L;
   15fe8:	0ae7f7d3          	fsub.d	fa5,fa5,fa4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:524
	      *s++ = '0' + (int) L;
	      if (i == ilim)
   15fec:	fea612e3          	bne	a2,a0,15fd0 <_dtoa_r+0xf74>
   15ff0:	00158593          	addi	a1,a1,1
   15ff4:	00b484b3          	add	s1,s1,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:526
		{
		  if (d.d > 0.5 + eps.d)
   15ff8:	000247b7          	lui	a5,0x24
   15ffc:	4e07b707          	fld	fa4,1248(a5) # 244e0 <mask+0x48>
   16000:	02e676d3          	fadd.d	fa3,fa2,fa4
   16004:	a2f697d3          	flt.d	a5,fa3,fa5
   16008:	0a078663          	beqz	a5,160b4 <_dtoa_r+0x1058>
   1600c:	fff4c783          	lbu	a5,-1(s1)
   16010:	00068b93          	mv	s7,a3
   16014:	eacff06f          	j	156c0 <_dtoa_r+0x664>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:795
	      *s++ = dig;
	      goto ret;
	    }
	  if (j1 > 0)
	    {
	      if (dig == '9')
   16018:	03900793          	li	a5,57
   1601c:	c8fd0ce3          	beq	s10,a5,15cb4 <_dtoa_r+0xc58>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:801
		{		/* possible if i == 1 */
		round_9_up:
		  *s++ = '9';
		  goto roundoff;
		}
	      *s++ = dig + 1;
   16020:	001d0d1b          	addiw	s10,s10,1
   16024:	c4dff06f          	j	15c70 <_dtoa_r+0xc14>
   16028:	000a0993          	mv	s3,s4
   1602c:	000d8a13          	mv	s4,s11
   16030:	ac1ff06f          	j	15af0 <_dtoa_r+0xa94>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:626
	      b5 += j;
	      m5 = 0;
	    }
	  if ((i = ilim) < 0)
	    {
	      m2 -= i;
   16034:	415804bb          	subw	s1,a6,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:627
	      i = 0;
   16038:	00000793          	li	a5,0
   1603c:	ed8ff06f          	j	15714 <_dtoa_r+0x6b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:605 (discriminator 2)
    {
      if (mode < 2)
	{
	  i =
#ifndef Sudden_Underflow
	    denorm ? be + (Bias + (P - 1) - 1 + 1) :
   16040:	05812603          	lw	a2,88(sp)
   16044:	03600793          	li	a5,54
   16048:	000c0693          	mv	a3,s8
   1604c:	40c787bb          	subw	a5,a5,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:596
	    break;
	}
      goto ret1;
    }

  m2 = b2;
   16050:	00080493          	mv	s1,a6
   16054:	ec0ff06f          	j	15714 <_dtoa_r+0x6b8>
   16058:	03213023          	sd	s2,32(sp)
   1605c:	bd1ff06f          	j	15c2c <_dtoa_r+0xbd0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:471
	      {
		ieps++;
		d.d *= bigtens[i];
	      }
	}
      if (k_check && d.d < 1. && ilim > 0)
   16060:	d40a88e3          	beqz	s5,15db0 <_dtoa_r+0xd54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:473
	{
	  if (ilim1 <= 0)
   16064:	03412603          	lw	a2,52(sp)
   16068:	e0c05ae3          	blez	a2,15e7c <_dtoa_r+0xe20>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:477
	    goto fast_failed;
	  ilim = ilim1;
	  k--;
	  d.d *= 10.;
   1606c:	000247b7          	lui	a5,0x24
   16070:	4c87b707          	fld	fa4,1224(a5) # 244c8 <mask+0x30>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:480
	  ieps++;
	}
      eps.d = ieps * d.d + 7.;
   16074:	0017071b          	addiw	a4,a4,1
   16078:	000247b7          	lui	a5,0x24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:477
	{
	  if (ilim1 <= 0)
	    goto fast_failed;
	  ilim = ilim1;
	  k--;
	  d.d *= 10.;
   1607c:	12e7f7d3          	fmul.d	fa5,fa5,fa4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:480
	  ieps++;
	}
      eps.d = ieps * d.d + 7.;
   16080:	d20706d3          	fcvt.d.w	fa3,a4
   16084:	4d07b707          	fld	fa4,1232(a5) # 244d0 <mask+0x38>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:481
      word0 (eps) -= (P - 1) * Exp_msk1;
   16088:	fcc005b7          	lui	a1,0xfcc00
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:476
      if (k_check && d.d < 1. && ilim > 0)
	{
	  if (ilim1 <= 0)
	    goto fast_failed;
	  ilim = ilim1;
	  k--;
   1608c:	fffb869b          	addiw	a3,s7,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:480
	  d.d *= 10.;
	  ieps++;
	}
      eps.d = ieps * d.d + 7.;
   16090:	72d7f743          	fmadd.d	fa4,fa5,fa3,fa4
   16094:	e2070753          	fmv.x.d	a4,fa4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:481
      word0 (eps) -= (P - 1) * Exp_msk1;
   16098:	42075793          	srai	a5,a4,0x20
   1609c:	00b787bb          	addw	a5,a5,a1
   160a0:	02071713          	slli	a4,a4,0x20
   160a4:	02079793          	slli	a5,a5,0x20
   160a8:	02075713          	srli	a4,a4,0x20
   160ac:	00f76733          	or	a4,a4,a5
   160b0:	bb0ff06f          	j	15460 <_dtoa_r+0x404>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:528
	      *s++ = '0' + (int) L;
	      if (i == ilim)
		{
		  if (d.d > 0.5 + eps.d)
		    goto bump_up;
		  else if (d.d < 0.5 - eps.d)
   160b4:	0ac77753          	fsub.d	fa4,fa4,fa2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:530
		    {
		      while (*--s == '0');
   160b8:	03000613          	li	a2,48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:528
	      *s++ = '0' + (int) L;
	      if (i == ilim)
		{
		  if (d.d > 0.5 + eps.d)
		    goto bump_up;
		  else if (d.d < 0.5 - eps.d)
   160bc:	a2e797d3          	flt.d	a5,fa5,fa4
   160c0:	00079663          	bnez	a5,160cc <_dtoa_r+0x1070>
   160c4:	db9ff06f          	j	15e7c <_dtoa_r+0xe20>
   160c8:	00070493          	mv	s1,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:530 (discriminator 1)
		    {
		      while (*--s == '0');
   160cc:	fff4c783          	lbu	a5,-1(s1)
   160d0:	fff48713          	addi	a4,s1,-1
   160d4:	fec78ae3          	beq	a5,a2,160c8 <_dtoa_r+0x106c>
   160d8:	00068b93          	mv	s7,a3
   160dc:	c60ff06f          	j	1553c <_dtoa_r+0x4e0>
   160e0:	00068b93          	mv	s7,a3
   160e4:	ddcff06f          	j	156c0 <_dtoa_r+0x664>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:786
	    {
	      if (j1 > 0)
		{
		  b = lshift (ptr, b, 1);
		  j1 = cmp (b, S);
                 if (((j1 > 0) || ((j1 == 0) && (dig & 1)))
   160e8:	b80514e3          	bnez	a0,15c70 <_dtoa_r+0xc14>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:786 (discriminator 2)
   160ec:	001d7793          	andi	a5,s10,1
   160f0:	b80780e3          	beqz	a5,15c70 <_dtoa_r+0xc14>
   160f4:	bb9ff06f          	j	15cac <_dtoa_r+0xc50>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:572
	    {
	      L--;
	      d.d += ds;
	    }
#endif
	  *s++ = '0' + (int) L;
   160f8:	00048693          	mv	a3,s1
   160fc:	db0ff06f          	j	156ac <_dtoa_r+0x650>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:720
      if (cmp (b, S) < 0)
	{
	  k--;
	  b = multadd (ptr, b, 10, 0);	/* we botched the k estimate */
	  if (leftright)
	    mhi = multadd (ptr, mhi, 10, 0);
   16100:	000a0593          	mv	a1,s4
   16104:	00000693          	li	a3,0
   16108:	00a00613          	li	a2,10
   1610c:	00040513          	mv	a0,s0
   16110:	40d010ef          	jal	17d1c <__multadd>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:724
	  ilim = ilim1;
	}
    }
  if (ilim <= 0 && mode > 2)
   16114:	03412783          	lw	a5,52(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:720
      if (cmp (b, S) < 0)
	{
	  k--;
	  b = multadd (ptr, b, 10, 0);	/* we botched the k estimate */
	  if (leftright)
	    mhi = multadd (ptr, mhi, 10, 0);
   16118:	00050a13          	mv	s4,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:724
	  ilim = ilim1;
	}
    }
  if (ilim <= 0 && mode > 2)
   1611c:	00078a93          	mv	s5,a5
   16120:	82f04ae3          	bgtz	a5,15954 <_dtoa_r+0x8f8>
   16124:	00200793          	li	a5,2
   16128:	0137c663          	blt	a5,s3,16134 <_dtoa_r+0x10d8>
   1612c:	03412a83          	lw	s5,52(sp)
   16130:	825ff06f          	j	15954 <_dtoa_r+0x8f8>
   16134:	03412a83          	lw	s5,52(sp)
   16138:	c15ff06f          	j	15d4c <_dtoa_r+0xcf0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:667
  /* Check for special case that d is a normalized power of 2. */

  spec_case = 0;
  if (mode < 2)
    {
      if (!word1 (d) && !(word0 (d) & Bndry_mask)
   1613c:	00cd1713          	slli	a4,s10,0xc
   16140:	ee070263          	beqz	a4,15824 <_dtoa_r+0x7c8>
   16144:	f94ff06f          	j	158d8 <_dtoa_r+0x87c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/dtoa.c:702
      i -= 4;
      b2 += i;
      m2 += i;
      s2 += i;
    }
  else if (i < 4)
   16148:	fcc68463          	beq	a3,a2,15910 <_dtoa_r+0x8b4>
   1614c:	03c00693          	li	a3,60
   16150:	40f687bb          	subw	a5,a3,a5
   16154:	945ff06f          	j	15a98 <_dtoa_r+0xa3c>

0000000000016158 <__sflush_r>:
__sflush_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:112
  register unsigned char *p;
  register _READ_WRITE_BUFSIZE_TYPE n;
  register _READ_WRITE_RETURN_TYPE t;
  short flags;

  flags = fp->_flags;
   16158:	01059683          	lh	a3,16(a1) # fffffffffcc00010 <_end+0xfffffffffcbd91f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:106
   directly from __srefill. */
int
_DEFUN(__sflush_r, (ptr, fp),
       struct _reent *ptr _AND
       register FILE * fp)
{
   1615c:	fd010113          	addi	sp,sp,-48
   16160:	00913c23          	sd	s1,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:113
  register _READ_WRITE_BUFSIZE_TYPE n;
  register _READ_WRITE_RETURN_TYPE t;
  short flags;

  flags = fp->_flags;
  if ((flags & __SWR) == 0)
   16164:	03069713          	slli	a4,a3,0x30
   16168:	03075713          	srli	a4,a4,0x30
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:106
   directly from __srefill. */
int
_DEFUN(__sflush_r, (ptr, fp),
       struct _reent *ptr _AND
       register FILE * fp)
{
   1616c:	01313423          	sd	s3,8(sp)
   16170:	02113423          	sd	ra,40(sp)
   16174:	02813023          	sd	s0,32(sp)
   16178:	01213823          	sd	s2,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:113
  register _READ_WRITE_BUFSIZE_TYPE n;
  register _READ_WRITE_RETURN_TYPE t;
  short flags;

  flags = fp->_flags;
  if ((flags & __SWR) == 0)
   1617c:	00877793          	andi	a5,a4,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:106
   directly from __srefill. */
int
_DEFUN(__sflush_r, (ptr, fp),
       struct _reent *ptr _AND
       register FILE * fp)
{
   16180:	00058493          	mv	s1,a1
   16184:	00050993          	mv	s3,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:113
  register _READ_WRITE_BUFSIZE_TYPE n;
  register _READ_WRITE_RETURN_TYPE t;
  short flags;

  flags = fp->_flags;
  if ((flags & __SWR) == 0)
   16188:	0e079863          	bnez	a5,16278 <__sflush_r+0x120>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:119
    {
#ifdef _FSEEK_OPTIMIZATION
      /* For a read stream, an fflush causes the next seek to be
         unoptimized (i.e. forces a system-level seek).  This conforms
         to the POSIX and SUSv3 standards.  */
      fp->_flags |= __SNPT;
   1618c:	000017b7          	lui	a5,0x1
   16190:	8007879b          	addiw	a5,a5,-2048
   16194:	00f6e7b3          	or	a5,a3,a5
   16198:	0107979b          	slliw	a5,a5,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:129
         the next byte from the file rather than the buffer.  This conforms
         to the POSIX and SUSv3 standards.  Note that the standards allow
         this seek to be deferred until necessary, but we choose to do it here
         to make the change simpler, more contained, and less likely
         to miss a code scenario.  */
      if ((fp->_r > 0 || fp->_ur > 0) && fp->_seek != NULL)
   1619c:	0085a703          	lw	a4,8(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:119
    {
#ifdef _FSEEK_OPTIMIZATION
      /* For a read stream, an fflush causes the next seek to be
         unoptimized (i.e. forces a system-level seek).  This conforms
         to the POSIX and SUSv3 standards.  */
      fp->_flags |= __SNPT;
   161a0:	4107d79b          	sraiw	a5,a5,0x10
   161a4:	00f59823          	sh	a5,16(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:129
         the next byte from the file rather than the buffer.  This conforms
         to the POSIX and SUSv3 standards.  Note that the standards allow
         this seek to be deferred until necessary, but we choose to do it here
         to make the change simpler, more contained, and less likely
         to miss a code scenario.  */
      if ((fp->_r > 0 || fp->_ur > 0) && fp->_seek != NULL)
   161a8:	1ae05863          	blez	a4,16358 <__sflush_r+0x200>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:129 (discriminator 3)
   161ac:	0484b703          	ld	a4,72(s1)
   161b0:	0a070463          	beqz	a4,16258 <__sflush_r+0x100>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:144
	     returns with a valid position -1.  We restore the last errno if
	     no other error condition has been encountered. */
	  tmp_errno = ptr->_errno;
	  ptr->_errno = 0;
	  /* Get the physical position we are at in the file.  */
	  if (fp->_flags & __SOFF)
   161b4:	03079793          	slli	a5,a5,0x30
   161b8:	0307d793          	srli	a5,a5,0x30
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:141
#endif

	  /* Save last errno and set errno to 0, so we can check if a device
	     returns with a valid position -1.  We restore the last errno if
	     no other error condition has been encountered. */
	  tmp_errno = ptr->_errno;
   161bc:	0009a403          	lw	s0,0(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:144
	  ptr->_errno = 0;
	  /* Get the physical position we are at in the file.  */
	  if (fp->_flags & __SOFF)
   161c0:	03379693          	slli	a3,a5,0x33
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:142

	  /* Save last errno and set errno to 0, so we can check if a device
	     returns with a valid position -1.  We restore the last errno if
	     no other error condition has been encountered. */
	  tmp_errno = ptr->_errno;
	  ptr->_errno = 0;
   161c4:	0009a023          	sw	zero,0(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:144
	  /* Get the physical position we are at in the file.  */
	  if (fp->_flags & __SOFF)
   161c8:	1806de63          	bgez	a3,16364 <__sflush_r+0x20c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:145
	    curoff = fp->_offset;
   161cc:	0904b603          	ld	a2,144(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:169
		  else
		    fp->_flags |= __SERR;
		  return result;
		}
            }
          if (fp->_flags & __SRD)
   161d0:	0047f793          	andi	a5,a5,4
   161d4:	00078e63          	beqz	a5,161f0 <__sflush_r+0x98>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:173
            {
              /* Current offset is at end of buffer.  Compensate for
                 characters not yet read.  */
              curoff -= fp->_r;
   161d8:	0084a683          	lw	a3,8(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:174
              if (HASUB (fp))
   161dc:	0584b783          	ld	a5,88(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:173
            }
          if (fp->_flags & __SRD)
            {
              /* Current offset is at end of buffer.  Compensate for
                 characters not yet read.  */
              curoff -= fp->_r;
   161e0:	40d60633          	sub	a2,a2,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:174
              if (HASUB (fp))
   161e4:	00078663          	beqz	a5,161f0 <__sflush_r+0x98>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:175
                curoff -= fp->_ur;
   161e8:	0704a783          	lw	a5,112(s1)
   161ec:	40f60633          	sub	a2,a2,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:183
#ifdef __LARGE64_FILES
	  if (fp->_flags & __SL64)
	    curoff = fp->_seek64 (ptr, fp->_cookie, curoff, SEEK_SET);
	  else
#endif
	    curoff = fp->_seek (ptr, fp->_cookie, curoff, SEEK_SET);
   161f0:	0304b583          	ld	a1,48(s1)
   161f4:	00000693          	li	a3,0
   161f8:	00098513          	mv	a0,s3
   161fc:	000700e7          	jalr	a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:184
	  if (curoff != -1 || ptr->_errno == 0
   16200:	fff00793          	li	a5,-1
   16204:	0ef50c63          	beq	a0,a5,162fc <__sflush_r+0x1a4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:190
	      || ptr->_errno == ESPIPE || ptr->_errno == EINVAL)
	    {
	      /* Seek successful or ignorable error condition.
		 We can clear read buffer now.  */
#ifdef _FSEEK_OPTIMIZATION
	      fp->_flags &= ~__SNPT;
   16208:	0104d683          	lhu	a3,16(s1)
   1620c:	fffff7b7          	lui	a5,0xfffff
   16210:	7ff7879b          	addiw	a5,a5,2047
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:193
#endif
	      fp->_r = 0;
	      fp->_p = fp->_bf._base;
   16214:	0184b703          	ld	a4,24(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:190
	      || ptr->_errno == ESPIPE || ptr->_errno == EINVAL)
	    {
	      /* Seek successful or ignorable error condition.
		 We can clear read buffer now.  */
#ifdef _FSEEK_OPTIMIZATION
	      fp->_flags &= ~__SNPT;
   16218:	00f6f7b3          	and	a5,a3,a5
   1621c:	0107979b          	slliw	a5,a5,0x10
   16220:	4107d79b          	sraiw	a5,a5,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:193
#endif
	      fp->_r = 0;
	      fp->_p = fp->_bf._base;
   16224:	00e4b023          	sd	a4,0(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:190
	      || ptr->_errno == ESPIPE || ptr->_errno == EINVAL)
	    {
	      /* Seek successful or ignorable error condition.
		 We can clear read buffer now.  */
#ifdef _FSEEK_OPTIMIZATION
	      fp->_flags &= ~__SNPT;
   16228:	00f49823          	sh	a5,16(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:192
#endif
	      fp->_r = 0;
   1622c:	0004a423          	sw	zero,8(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:194
	      fp->_p = fp->_bf._base;
	      if ((fp->_flags & __SOFF) && (curoff != -1 || ptr->_errno == 0))
   16230:	03379713          	slli	a4,a5,0x33
   16234:	10074e63          	bltz	a4,16350 <__sflush_r+0x1f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:197
		fp->_offset = curoff;
	      ptr->_errno = tmp_errno;
	      if (HASUB (fp))
   16238:	0584b583          	ld	a1,88(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:196
#endif
	      fp->_r = 0;
	      fp->_p = fp->_bf._base;
	      if ((fp->_flags & __SOFF) && (curoff != -1 || ptr->_errno == 0))
		fp->_offset = curoff;
	      ptr->_errno = tmp_errno;
   1623c:	0089a023          	sw	s0,0(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:197
	      if (HASUB (fp))
   16240:	00058c63          	beqz	a1,16258 <__sflush_r+0x100>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:198
		FREEUB (ptr, fp);
   16244:	07448793          	addi	a5,s1,116
   16248:	00f58663          	beq	a1,a5,16254 <__sflush_r+0xfc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:198 (discriminator 1)
   1624c:	00098513          	mv	a0,s3
   16250:	0e5000ef          	jal	16b34 <_free_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:198 (discriminator 3)
   16254:	0404bc23          	sd	zero,88(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:206
	    {
	      fp->_flags |= __SERR;
	      return EOF;
	    }
	}
      return 0;
   16258:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:235
	}
      p += t;
      n -= t;
    }
  return 0;
}
   1625c:	02813083          	ld	ra,40(sp)
   16260:	02013403          	ld	s0,32(sp)
   16264:	01813483          	ld	s1,24(sp)
   16268:	01013903          	ld	s2,16(sp)
   1626c:	00813983          	ld	s3,8(sp)
   16270:	03010113          	addi	sp,sp,48
   16274:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:208
	      return EOF;
	    }
	}
      return 0;
    }
  if ((p = fp->_bf._base) == NULL)
   16278:	0185b903          	ld	s2,24(a1)
   1627c:	fc090ee3          	beqz	s2,16258 <__sflush_r+0x100>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:213
    {
      /* Nothing to flush.  */
      return 0;
    }
  n = fp->_p - p;		/* write this much */
   16280:	0005b403          	ld	s0,0(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:221
   * Set these immediately to avoid problems with longjmp
   * and to allow exchange buffering (via setvbuf) in user
   * write function.
   */
  fp->_p = p;
  fp->_w = flags & (__SLBF | __SNBF) ? 0 : fp->_bf._size;
   16284:	00377713          	andi	a4,a4,3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:220
  /*
   * Set these immediately to avoid problems with longjmp
   * and to allow exchange buffering (via setvbuf) in user
   * write function.
   */
  fp->_p = p;
   16288:	0125b023          	sd	s2,0(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:213
  if ((p = fp->_bf._base) == NULL)
    {
      /* Nothing to flush.  */
      return 0;
    }
  n = fp->_p - p;		/* write this much */
   1628c:	4124043b          	subw	s0,s0,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:221
   * Set these immediately to avoid problems with longjmp
   * and to allow exchange buffering (via setvbuf) in user
   * write function.
   */
  fp->_p = p;
  fp->_w = flags & (__SLBF | __SNBF) ? 0 : fp->_bf._size;
   16290:	00000793          	li	a5,0
   16294:	00071463          	bnez	a4,1629c <__sflush_r+0x144>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:221 (discriminator 1)
   16298:	0205a783          	lw	a5,32(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:221 (discriminator 4)
   1629c:	00f4a623          	sw	a5,12(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:223

  while (n > 0)
   162a0:	00804863          	bgtz	s0,162b0 <__sflush_r+0x158>
   162a4:	fb5ff06f          	j	16258 <__sflush_r+0x100>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:231
      if (t <= 0)
	{
          fp->_flags |= __SERR;
          return EOF;
	}
      p += t;
   162a8:	00a90933          	add	s2,s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:223
   * write function.
   */
  fp->_p = p;
  fp->_w = flags & (__SLBF | __SNBF) ? 0 : fp->_bf._size;

  while (n > 0)
   162ac:	fa8056e3          	blez	s0,16258 <__sflush_r+0x100>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:225
    {
      t = fp->_write (ptr, fp->_cookie, (char *) p, n);
   162b0:	0404b783          	ld	a5,64(s1)
   162b4:	0304b583          	ld	a1,48(s1)
   162b8:	00040693          	mv	a3,s0
   162bc:	00090613          	mv	a2,s2
   162c0:	00098513          	mv	a0,s3
   162c4:	000780e7          	jalr	a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:232
	{
          fp->_flags |= __SERR;
          return EOF;
	}
      p += t;
      n -= t;
   162c8:	40a4043b          	subw	s0,s0,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:226
  fp->_w = flags & (__SLBF | __SNBF) ? 0 : fp->_bf._size;

  while (n > 0)
    {
      t = fp->_write (ptr, fp->_cookie, (char *) p, n);
      if (t <= 0)
   162cc:	fca04ee3          	bgtz	a0,162a8 <__sflush_r+0x150>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:228
	{
          fp->_flags |= __SERR;
   162d0:	0104d783          	lhu	a5,16(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:235
	}
      p += t;
      n -= t;
    }
  return 0;
}
   162d4:	02813083          	ld	ra,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:229
    {
      t = fp->_write (ptr, fp->_cookie, (char *) p, n);
      if (t <= 0)
	{
          fp->_flags |= __SERR;
          return EOF;
   162d8:	fff00513          	li	a0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:228
  while (n > 0)
    {
      t = fp->_write (ptr, fp->_cookie, (char *) p, n);
      if (t <= 0)
	{
          fp->_flags |= __SERR;
   162dc:	0407e793          	ori	a5,a5,64
   162e0:	00f49823          	sh	a5,16(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:235
	}
      p += t;
      n -= t;
    }
  return 0;
}
   162e4:	02013403          	ld	s0,32(sp)
   162e8:	01813483          	ld	s1,24(sp)
   162ec:	01013903          	ld	s2,16(sp)
   162f0:	00813983          	ld	s3,8(sp)
   162f4:	03010113          	addi	sp,sp,48
   162f8:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:184 (discriminator 1)
	  if (fp->_flags & __SL64)
	    curoff = fp->_seek64 (ptr, fp->_cookie, curoff, SEEK_SET);
	  else
#endif
	    curoff = fp->_seek (ptr, fp->_cookie, curoff, SEEK_SET);
	  if (curoff != -1 || ptr->_errno == 0
   162fc:	0009a703          	lw	a4,0(s3)
   16300:	01d00793          	li	a5,29
   16304:	fce7e6e3          	bltu	a5,a4,162d0 <__sflush_r+0x178>
   16308:	204007b7          	lui	a5,0x20400
   1630c:	00178793          	addi	a5,a5,1 # 20400001 <_end+0x203d91e9>
   16310:	00e7d7b3          	srl	a5,a5,a4
   16314:	0017f793          	andi	a5,a5,1
   16318:	fa078ce3          	beqz	a5,162d0 <__sflush_r+0x178>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:190
	      || ptr->_errno == ESPIPE || ptr->_errno == EINVAL)
	    {
	      /* Seek successful or ignorable error condition.
		 We can clear read buffer now.  */
#ifdef _FSEEK_OPTIMIZATION
	      fp->_flags &= ~__SNPT;
   1631c:	0104d603          	lhu	a2,16(s1)
   16320:	fffff7b7          	lui	a5,0xfffff
   16324:	7ff7879b          	addiw	a5,a5,2047
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:193
#endif
	      fp->_r = 0;
	      fp->_p = fp->_bf._base;
   16328:	0184b683          	ld	a3,24(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:190
	      || ptr->_errno == ESPIPE || ptr->_errno == EINVAL)
	    {
	      /* Seek successful or ignorable error condition.
		 We can clear read buffer now.  */
#ifdef _FSEEK_OPTIMIZATION
	      fp->_flags &= ~__SNPT;
   1632c:	00f677b3          	and	a5,a2,a5
   16330:	0107979b          	slliw	a5,a5,0x10
   16334:	4107d79b          	sraiw	a5,a5,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:193
#endif
	      fp->_r = 0;
	      fp->_p = fp->_bf._base;
   16338:	00d4b023          	sd	a3,0(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:190
	      || ptr->_errno == ESPIPE || ptr->_errno == EINVAL)
	    {
	      /* Seek successful or ignorable error condition.
		 We can clear read buffer now.  */
#ifdef _FSEEK_OPTIMIZATION
	      fp->_flags &= ~__SNPT;
   1633c:	00f49823          	sh	a5,16(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:192
#endif
	      fp->_r = 0;
   16340:	0004a423          	sw	zero,8(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:194
	      fp->_p = fp->_bf._base;
	      if ((fp->_flags & __SOFF) && (curoff != -1 || ptr->_errno == 0))
   16344:	03379693          	slli	a3,a5,0x33
   16348:	ee06d8e3          	bgez	a3,16238 <__sflush_r+0xe0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:194 (discriminator 2)
   1634c:	ee0716e3          	bnez	a4,16238 <__sflush_r+0xe0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:195
		fp->_offset = curoff;
   16350:	08a4b823          	sd	a0,144(s1)
   16354:	ee5ff06f          	j	16238 <__sflush_r+0xe0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:129 (discriminator 2)
         the next byte from the file rather than the buffer.  This conforms
         to the POSIX and SUSv3 standards.  Note that the standards allow
         this seek to be deferred until necessary, but we choose to do it here
         to make the change simpler, more contained, and less likely
         to miss a code scenario.  */
      if ((fp->_r > 0 || fp->_ur > 0) && fp->_seek != NULL)
   16358:	0705a703          	lw	a4,112(a1)
   1635c:	e4e048e3          	bgtz	a4,161ac <__sflush_r+0x54>
   16360:	ef9ff06f          	j	16258 <__sflush_r+0x100>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:155
#ifdef __LARGE64_FILES
	      if (fp->_flags & __SL64)
		curoff = fp->_seek64 (ptr, fp->_cookie, 0, SEEK_CUR);
	      else
#endif
		curoff = fp->_seek (ptr, fp->_cookie, 0, SEEK_CUR);
   16364:	0304b583          	ld	a1,48(s1)
   16368:	00000613          	li	a2,0
   1636c:	00100693          	li	a3,1
   16370:	00098513          	mv	a0,s3
   16374:	000700e7          	jalr	a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:156
	      if (curoff == -1L && ptr->_errno != 0)
   16378:	fff00793          	li	a5,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:155
#ifdef __LARGE64_FILES
	      if (fp->_flags & __SL64)
		curoff = fp->_seek64 (ptr, fp->_cookie, 0, SEEK_CUR);
	      else
#endif
		curoff = fp->_seek (ptr, fp->_cookie, 0, SEEK_CUR);
   1637c:	00050613          	mv	a2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:156
	      if (curoff == -1L && ptr->_errno != 0)
   16380:	00f50863          	beq	a0,a5,16390 <__sflush_r+0x238>
   16384:	0104d783          	lhu	a5,16(s1)
   16388:	0484b703          	ld	a4,72(s1)
   1638c:	e45ff06f          	j	161d0 <__sflush_r+0x78>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:156 (discriminator 1)
   16390:	0009a783          	lw	a5,0(s3)
   16394:	fe0788e3          	beqz	a5,16384 <__sflush_r+0x22c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:159
		{
		  int result = EOF;
		  if (ptr->_errno == ESPIPE || ptr->_errno == EINVAL)
   16398:	01d00713          	li	a4,29
   1639c:	00e78663          	beq	a5,a4,163a8 <__sflush_r+0x250>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:159 (discriminator 1)
   163a0:	01600713          	li	a4,22
   163a4:	00e79863          	bne	a5,a4,163b4 <__sflush_r+0x25c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:162
		    {
		      result = 0;
		      ptr->_errno = tmp_errno;
   163a8:	0089a023          	sw	s0,0(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:161
	      if (curoff == -1L && ptr->_errno != 0)
		{
		  int result = EOF;
		  if (ptr->_errno == ESPIPE || ptr->_errno == EINVAL)
		    {
		      result = 0;
   163ac:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:162
		      ptr->_errno = tmp_errno;
   163b0:	eadff06f          	j	1625c <__sflush_r+0x104>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:165
		    }
		  else
		    fp->_flags |= __SERR;
   163b4:	0104d783          	lhu	a5,16(s1)
   163b8:	0407e793          	ori	a5,a5,64
   163bc:	00f49823          	sh	a5,16(s1)
   163c0:	e9dff06f          	j	1625c <__sflush_r+0x104>

00000000000163c4 <_fflush_r>:
_fflush_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:256

int
_DEFUN(_fflush_r, (ptr, fp),
       struct _reent *ptr _AND
       register FILE * fp)
{
   163c4:	fe010113          	addi	sp,sp,-32
   163c8:	00813823          	sd	s0,16(sp)
   163cc:	00113c23          	sd	ra,24(sp)
   163d0:	00050413          	mv	s0,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:275
     2 is implemented here due to its simplicity.  */
  if (fp->_bf._base == NULL)
    return 0;
#endif /* _REENT_SMALL  */

  CHECK_INIT (ptr, fp);
   163d4:	00050663          	beqz	a0,163e0 <_fflush_r+0x1c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:275 (discriminator 1)
   163d8:	05052783          	lw	a5,80(a0)
   163dc:	02078a63          	beqz	a5,16410 <_fflush_r+0x4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:277

  if (!fp->_flags)
   163e0:	01059783          	lh	a5,16(a1)
   163e4:	00079c63          	bnez	a5,163fc <_fflush_r+0x38>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:284

  _newlib_flockfile_start (fp);
  ret = __sflush_r (ptr, fp);
  _newlib_flockfile_end (fp);
  return ret;
}
   163e8:	01813083          	ld	ra,24(sp)
   163ec:	00000513          	li	a0,0
   163f0:	01013403          	ld	s0,16(sp)
   163f4:	02010113          	addi	sp,sp,32
   163f8:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:281

  if (!fp->_flags)
    return 0;

  _newlib_flockfile_start (fp);
  ret = __sflush_r (ptr, fp);
   163fc:	00040513          	mv	a0,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:284
  _newlib_flockfile_end (fp);
  return ret;
}
   16400:	01813083          	ld	ra,24(sp)
   16404:	01013403          	ld	s0,16(sp)
   16408:	02010113          	addi	sp,sp,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:281

  if (!fp->_flags)
    return 0;

  _newlib_flockfile_start (fp);
  ret = __sflush_r (ptr, fp);
   1640c:	d4dff06f          	j	16158 <__sflush_r>
   16410:	00b13423          	sd	a1,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:275 (discriminator 2)
     2 is implemented here due to its simplicity.  */
  if (fp->_bf._base == NULL)
    return 0;
#endif /* _REENT_SMALL  */

  CHECK_INIT (ptr, fp);
   16414:	35c000ef          	jal	16770 <__sinit>
   16418:	00813583          	ld	a1,8(sp)
   1641c:	fc5ff06f          	j	163e0 <_fflush_r+0x1c>

0000000000016420 <fflush>:
fflush():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:291
#ifndef _REENT_ONLY

int
_DEFUN(fflush, (fp),
       register FILE * fp)
{
   16420:	00050593          	mv	a1,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:292
  if (fp == NULL)
   16424:	00050663          	beqz	a0,16430 <fflush+0x10>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:295
    return _fwalk_reent (_GLOBAL_REENT, _fflush_r);

  return _fflush_r (_REENT, fp);
   16428:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
   1642c:	f99ff06f          	j	163c4 <_fflush_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fflush.c:293
int
_DEFUN(fflush, (fp),
       register FILE * fp)
{
  if (fp == NULL)
    return _fwalk_reent (_GLOBAL_REENT, _fflush_r);
   16430:	8081b503          	ld	a0,-2040(gp) # 24448 <_global_impure_ptr>
   16434:	000165b7          	lui	a1,0x16
   16438:	3c458593          	addi	a1,a1,964 # 163c4 <_fflush_r>
   1643c:	76d0006f          	j	173a8 <_fwalk_reent>

0000000000016440 <__fp_unlock>:
__fp_unlock():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:309
       FILE * ptr)
{
  _funlockfile (ptr);

  return 0;
}
   16440:	00000513          	li	a0,0
   16444:	00008067          	ret

0000000000016448 <_cleanup_r>:
_cleanup_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:192
  cleanup_func = _fflush_r;
#else
  cleanup_func = _fclose_r;
#endif
#endif
  _CAST_VOID _fwalk_reent (ptr, cleanup_func);
   16448:	0001e5b7          	lui	a1,0x1e
   1644c:	0ec58593          	addi	a1,a1,236 # 1e0ec <_fclose_r>
   16450:	7590006f          	j	173a8 <_fwalk_reent>

0000000000016454 <__sinit.part.1>:
__sinit():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:208
/*
 * __sinit() is called whenever stdio's internal variables must be set up.
 */

_VOID
_DEFUN(__sinit, (s),
   16454:	fc010113          	addi	sp,sp,-64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:220
      __sinit_lock_release ();
      return;
    }

  /* make sure we clean up on exit */
  s->__cleanup = _cleanup_r;	/* conservative */
   16458:	000167b7          	lui	a5,0x16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:208
/*
 * __sinit() is called whenever stdio's internal variables must be set up.
 */

_VOID
_DEFUN(__sinit, (s),
   1645c:	02113c23          	sd	ra,56(sp)
   16460:	02813823          	sd	s0,48(sp)
   16464:	02913423          	sd	s1,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:239
  s->_stdin = __sfp(s);
  s->_stdout = __sfp(s);
  s->_stderr = __sfp(s);
#endif

  std (s->_stdin,  __SRD, 0, s);
   16468:	00853403          	ld	s0,8(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:208
/*
 * __sinit() is called whenever stdio's internal variables must be set up.
 */

_VOID
_DEFUN(__sinit, (s),
   1646c:	03213023          	sd	s2,32(sp)
   16470:	01313c23          	sd	s3,24(sp)
   16474:	01413823          	sd	s4,16(sp)
   16478:	01513423          	sd	s5,8(sp)
   1647c:	01613023          	sd	s6,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:220
      __sinit_lock_release ();
      return;
    }

  /* make sure we clean up on exit */
  s->__cleanup = _cleanup_r;	/* conservative */
   16480:	44878793          	addi	a5,a5,1096 # 16448 <_cleanup_r>
   16484:	04f53c23          	sd	a5,88(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:225

  s->__sglue._next = NULL;
#ifndef _REENT_SMALL
  s->__sglue._niobs = 3;
  s->__sglue._iobs = &s->__sf[0];
   16488:	53850713          	addi	a4,a0,1336
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:224
  /* make sure we clean up on exit */
  s->__cleanup = _cleanup_r;	/* conservative */

  s->__sglue._next = NULL;
#ifndef _REENT_SMALL
  s->__sglue._niobs = 3;
   1648c:	00300793          	li	a5,3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:225
  s->__sglue._iobs = &s->__sf[0];
   16490:	52e53823          	sd	a4,1328(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:224
  /* make sure we clean up on exit */
  s->__cleanup = _cleanup_r;	/* conservative */

  s->__sglue._next = NULL;
#ifndef _REENT_SMALL
  s->__sglue._niobs = 3;
   16494:	52f52423          	sw	a5,1320(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:222
    }

  /* make sure we clean up on exit */
  s->__cleanup = _cleanup_r;	/* conservative */

  s->__sglue._next = NULL;
   16498:	52053023          	sd	zero,1312(a0)
std():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:52
            struct _reent *data)
{
  ptr->_p = 0;
  ptr->_r = 0;
  ptr->_w = 0;
  ptr->_flags = flags;
   1649c:	00400793          	li	a5,4
__sinit():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:208
/*
 * __sinit() is called whenever stdio's internal variables must be set up.
 */

_VOID
_DEFUN(__sinit, (s),
   164a0:	00050913          	mv	s2,a0
std():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:52
            struct _reent *data)
{
  ptr->_p = 0;
  ptr->_r = 0;
  ptr->_w = 0;
  ptr->_flags = flags;
   164a4:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:58
  ptr->_flags2 = 0;
  ptr->_file = file;
  ptr->_bf._base = 0;
  ptr->_bf._size = 0;
  ptr->_lbfsize = 0;
  memset (&ptr->_mbstate, 0, sizeof (_mbstate_t));
   164a8:	00800613          	li	a2,8
   164ac:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:49
            FILE *ptr _AND
            int flags _AND
            int file  _AND
            struct _reent *data)
{
  ptr->_p = 0;
   164b0:	00043023          	sd	zero,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:50
  ptr->_r = 0;
   164b4:	00042423          	sw	zero,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:51
  ptr->_w = 0;
   164b8:	00042623          	sw	zero,12(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:53
  ptr->_flags = flags;
  ptr->_flags2 = 0;
   164bc:	0a042623          	sw	zero,172(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:54
  ptr->_file = file;
   164c0:	00041923          	sh	zero,18(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:55
  ptr->_bf._base = 0;
   164c4:	00043c23          	sd	zero,24(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:56
  ptr->_bf._size = 0;
   164c8:	02042023          	sw	zero,32(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:57
  ptr->_lbfsize = 0;
   164cc:	02042423          	sw	zero,40(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:58
  memset (&ptr->_mbstate, 0, sizeof (_mbstate_t));
   164d0:	0a440513          	addi	a0,s0,164
   164d4:	69c010ef          	jal	17b70 <memset>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:60
  ptr->_cookie = ptr;
  ptr->_read = __sread;
   164d8:	00019b37          	lui	s6,0x19
__sinit():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:250
     requires both stdin and stdout to be line-buffered, but tradition
     leaves stdin alone on systems without fcntl.  */
#ifdef HAVE_FCNTL
  std (s->_stdout, __SWR, 1, s);
#else
  std (s->_stdout, __SWR | __SLBF, 1, s);
   164dc:	01093483          	ld	s1,16(s2)
std():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:62
  ptr->_lbfsize = 0;
  memset (&ptr->_mbstate, 0, sizeof (_mbstate_t));
  ptr->_cookie = ptr;
  ptr->_read = __sread;
#ifndef __LARGE64_FILES
  ptr->_write = __swrite;
   164e0:	00019ab7          	lui	s5,0x19
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:68
#else /* __LARGE64_FILES */
  ptr->_write = __swrite64;
  ptr->_seek64 = __sseek64;
  ptr->_flags |= __SL64;
#endif /* __LARGE64_FILES */
  ptr->_seek = __sseek;
   164e4:	00019a37          	lui	s4,0x19
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:70
#ifdef _STDIO_CLOSE_PER_REENT_STD_STREAMS
  ptr->_close = __sclose;
   164e8:	0001a9b7          	lui	s3,0x1a
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:60
  ptr->_bf._base = 0;
  ptr->_bf._size = 0;
  ptr->_lbfsize = 0;
  memset (&ptr->_mbstate, 0, sizeof (_mbstate_t));
  ptr->_cookie = ptr;
  ptr->_read = __sread;
   164ec:	6b8b0b13          	addi	s6,s6,1720 # 196b8 <__sread>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:62
#ifndef __LARGE64_FILES
  ptr->_write = __swrite;
   164f0:	724a8a93          	addi	s5,s5,1828 # 19724 <__swrite>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:68
#else /* __LARGE64_FILES */
  ptr->_write = __swrite64;
  ptr->_seek64 = __sseek64;
  ptr->_flags |= __SL64;
#endif /* __LARGE64_FILES */
  ptr->_seek = __sseek;
   164f4:	794a0a13          	addi	s4,s4,1940 # 19794 <__sseek>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:70
#ifdef _STDIO_CLOSE_PER_REENT_STD_STREAMS
  ptr->_close = __sclose;
   164f8:	80098993          	addi	s3,s3,-2048 # 19800 <__sclose>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:60
  ptr->_bf._base = 0;
  ptr->_bf._size = 0;
  ptr->_lbfsize = 0;
  memset (&ptr->_mbstate, 0, sizeof (_mbstate_t));
  ptr->_cookie = ptr;
  ptr->_read = __sread;
   164fc:	03643c23          	sd	s6,56(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:62
#ifndef __LARGE64_FILES
  ptr->_write = __swrite;
   16500:	05543023          	sd	s5,64(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:68
#else /* __LARGE64_FILES */
  ptr->_write = __swrite64;
  ptr->_seek64 = __sseek64;
  ptr->_flags |= __SL64;
#endif /* __LARGE64_FILES */
  ptr->_seek = __sseek;
   16504:	05443423          	sd	s4,72(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:70
#ifdef _STDIO_CLOSE_PER_REENT_STD_STREAMS
  ptr->_close = __sclose;
   16508:	05343823          	sd	s3,80(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:59
  ptr->_file = file;
  ptr->_bf._base = 0;
  ptr->_bf._size = 0;
  ptr->_lbfsize = 0;
  memset (&ptr->_mbstate, 0, sizeof (_mbstate_t));
  ptr->_cookie = ptr;
   1650c:	02843823          	sd	s0,48(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:52
            struct _reent *data)
{
  ptr->_p = 0;
  ptr->_r = 0;
  ptr->_w = 0;
  ptr->_flags = flags;
   16510:	00900793          	li	a5,9
   16514:	00f49823          	sh	a5,16(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:54
  ptr->_flags2 = 0;
  ptr->_file = file;
   16518:	00100793          	li	a5,1
   1651c:	00f49923          	sh	a5,18(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:58
  ptr->_bf._base = 0;
  ptr->_bf._size = 0;
  ptr->_lbfsize = 0;
  memset (&ptr->_mbstate, 0, sizeof (_mbstate_t));
   16520:	00800613          	li	a2,8
   16524:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:49
            FILE *ptr _AND
            int flags _AND
            int file  _AND
            struct _reent *data)
{
  ptr->_p = 0;
   16528:	0004b023          	sd	zero,0(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:50
  ptr->_r = 0;
   1652c:	0004a423          	sw	zero,8(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:51
  ptr->_w = 0;
   16530:	0004a623          	sw	zero,12(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:53
  ptr->_flags = flags;
  ptr->_flags2 = 0;
   16534:	0a04a623          	sw	zero,172(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:55
  ptr->_file = file;
  ptr->_bf._base = 0;
   16538:	0004bc23          	sd	zero,24(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:56
  ptr->_bf._size = 0;
   1653c:	0204a023          	sw	zero,32(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:57
  ptr->_lbfsize = 0;
   16540:	0204a423          	sw	zero,40(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:58
  memset (&ptr->_mbstate, 0, sizeof (_mbstate_t));
   16544:	0a448513          	addi	a0,s1,164
   16548:	628010ef          	jal	17b70 <memset>
__sinit():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:255
  std (s->_stdout, __SWR | __SLBF, 1, s);
#endif

  /* POSIX requires stderr to be opened for reading and writing, even
     when the underlying fd 2 is write-only.  */
  std (s->_stderr, __SRW | __SNBF, 2, s);
   1654c:	01893403          	ld	s0,24(s2)
std():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:52
            struct _reent *data)
{
  ptr->_p = 0;
  ptr->_r = 0;
  ptr->_w = 0;
  ptr->_flags = flags;
   16550:	01200793          	li	a5,18
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:60
  ptr->_bf._base = 0;
  ptr->_bf._size = 0;
  ptr->_lbfsize = 0;
  memset (&ptr->_mbstate, 0, sizeof (_mbstate_t));
  ptr->_cookie = ptr;
  ptr->_read = __sread;
   16554:	0364bc23          	sd	s6,56(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:62
#ifndef __LARGE64_FILES
  ptr->_write = __swrite;
   16558:	0554b023          	sd	s5,64(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:68
#else /* __LARGE64_FILES */
  ptr->_write = __swrite64;
  ptr->_seek64 = __sseek64;
  ptr->_flags |= __SL64;
#endif /* __LARGE64_FILES */
  ptr->_seek = __sseek;
   1655c:	0544b423          	sd	s4,72(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:70
#ifdef _STDIO_CLOSE_PER_REENT_STD_STREAMS
  ptr->_close = __sclose;
   16560:	0534b823          	sd	s3,80(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:59
  ptr->_file = file;
  ptr->_bf._base = 0;
  ptr->_bf._size = 0;
  ptr->_lbfsize = 0;
  memset (&ptr->_mbstate, 0, sizeof (_mbstate_t));
  ptr->_cookie = ptr;
   16564:	0294b823          	sd	s1,48(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:52
            struct _reent *data)
{
  ptr->_p = 0;
  ptr->_r = 0;
  ptr->_w = 0;
  ptr->_flags = flags;
   16568:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:54
  ptr->_flags2 = 0;
  ptr->_file = file;
   1656c:	00200793          	li	a5,2
   16570:	00f41923          	sh	a5,18(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:49
            FILE *ptr _AND
            int flags _AND
            int file  _AND
            struct _reent *data)
{
  ptr->_p = 0;
   16574:	00043023          	sd	zero,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:50
  ptr->_r = 0;
   16578:	00042423          	sw	zero,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:51
  ptr->_w = 0;
   1657c:	00042623          	sw	zero,12(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:53
  ptr->_flags = flags;
  ptr->_flags2 = 0;
   16580:	0a042623          	sw	zero,172(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:55
  ptr->_file = file;
  ptr->_bf._base = 0;
   16584:	00043c23          	sd	zero,24(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:56
  ptr->_bf._size = 0;
   16588:	02042023          	sw	zero,32(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:57
  ptr->_lbfsize = 0;
   1658c:	02042423          	sw	zero,40(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:58
  memset (&ptr->_mbstate, 0, sizeof (_mbstate_t));
   16590:	0a440513          	addi	a0,s0,164
   16594:	00800613          	li	a2,8
   16598:	00000593          	li	a1,0
   1659c:	5d4010ef          	jal	17b70 <memset>
__sinit():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:260
  std (s->_stderr, __SRW | __SNBF, 2, s);

  s->__sdidinit = 1;

  __sinit_lock_release ();
}
   165a0:	03813083          	ld	ra,56(sp)
std():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:60
  ptr->_bf._base = 0;
  ptr->_bf._size = 0;
  ptr->_lbfsize = 0;
  memset (&ptr->_mbstate, 0, sizeof (_mbstate_t));
  ptr->_cookie = ptr;
  ptr->_read = __sread;
   165a4:	03643c23          	sd	s6,56(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:62
#ifndef __LARGE64_FILES
  ptr->_write = __swrite;
   165a8:	05543023          	sd	s5,64(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:68
#else /* __LARGE64_FILES */
  ptr->_write = __swrite64;
  ptr->_seek64 = __sseek64;
  ptr->_flags |= __SL64;
#endif /* __LARGE64_FILES */
  ptr->_seek = __sseek;
   165ac:	05443423          	sd	s4,72(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:70
#ifdef _STDIO_CLOSE_PER_REENT_STD_STREAMS
  ptr->_close = __sclose;
   165b0:	05343823          	sd	s3,80(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:59
  ptr->_file = file;
  ptr->_bf._base = 0;
  ptr->_bf._size = 0;
  ptr->_lbfsize = 0;
  memset (&ptr->_mbstate, 0, sizeof (_mbstate_t));
  ptr->_cookie = ptr;
   165b4:	02843823          	sd	s0,48(s0)
__sinit():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:257

  /* POSIX requires stderr to be opened for reading and writing, even
     when the underlying fd 2 is write-only.  */
  std (s->_stderr, __SRW | __SNBF, 2, s);

  s->__sdidinit = 1;
   165b8:	00100793          	li	a5,1
   165bc:	04f92823          	sw	a5,80(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:260

  __sinit_lock_release ();
}
   165c0:	03013403          	ld	s0,48(sp)
   165c4:	02813483          	ld	s1,40(sp)
   165c8:	02013903          	ld	s2,32(sp)
   165cc:	01813983          	ld	s3,24(sp)
   165d0:	01013a03          	ld	s4,16(sp)
   165d4:	00813a83          	ld	s5,8(sp)
   165d8:	00013b03          	ld	s6,0(sp)
   165dc:	04010113          	addi	sp,sp,64
   165e0:	00008067          	ret

00000000000165e4 <__fp_lock>:
__fp_lock():
   165e4:	00000513          	li	a0,0
   165e8:	00008067          	ret

00000000000165ec <__sfmoreglue>:
__sfmoreglue():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:97

struct _glue *
_DEFUN(__sfmoreglue, (d, n),
       struct _reent *d _AND
       register int n)
{
   165ec:	fe010113          	addi	sp,sp,-32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:101
  struct glue_with_file *g;

  g = (struct glue_with_file *)
    _malloc_r (d, sizeof (*g) + (n - 1) * sizeof (FILE));
   165f0:	fff5879b          	addiw	a5,a1,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:97

struct _glue *
_DEFUN(__sfmoreglue, (d, n),
       struct _reent *d _AND
       register int n)
{
   165f4:	00913423          	sd	s1,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:101
  struct glue_with_file *g;

  g = (struct glue_with_file *)
    _malloc_r (d, sizeof (*g) + (n - 1) * sizeof (FILE));
   165f8:	0b000493          	li	s1,176
   165fc:	029784b3          	mul	s1,a5,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:97

struct _glue *
_DEFUN(__sfmoreglue, (d, n),
       struct _reent *d _AND
       register int n)
{
   16600:	01213023          	sd	s2,0(sp)
   16604:	00058913          	mv	s2,a1
   16608:	00813823          	sd	s0,16(sp)
   1660c:	00113c23          	sd	ra,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:100
  struct glue_with_file *g;

  g = (struct glue_with_file *)
   16610:	0c848593          	addi	a1,s1,200
   16614:	ef8fa0ef          	jal	10d0c <_malloc_r>
   16618:	00050413          	mv	s0,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:102
    _malloc_r (d, sizeof (*g) + (n - 1) * sizeof (FILE));
  if (g == NULL)
   1661c:	02050063          	beqz	a0,1663c <__sfmoreglue+0x50>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:106
    return NULL;
  g->glue._next = NULL;
  g->glue._niobs = n;
  g->glue._iobs = &g->file;
   16620:	01850513          	addi	a0,a0,24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:104

  g = (struct glue_with_file *)
    _malloc_r (d, sizeof (*g) + (n - 1) * sizeof (FILE));
  if (g == NULL)
    return NULL;
  g->glue._next = NULL;
   16624:	00043023          	sd	zero,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:105
  g->glue._niobs = n;
   16628:	01242423          	sw	s2,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:106
  g->glue._iobs = &g->file;
   1662c:	00a43823          	sd	a0,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:107
  memset (&g->file, 0, n * sizeof (FILE));
   16630:	0b048613          	addi	a2,s1,176
   16634:	00000593          	li	a1,0
   16638:	538010ef          	jal	17b70 <memset>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:109
  return &g->glue;
}
   1663c:	01813083          	ld	ra,24(sp)
   16640:	00040513          	mv	a0,s0
   16644:	00813483          	ld	s1,8(sp)
   16648:	01013403          	ld	s0,16(sp)
   1664c:	00013903          	ld	s2,0(sp)
   16650:	02010113          	addi	sp,sp,32
   16654:	00008067          	ret

0000000000016658 <__sfp>:
__sfp():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:118
 */

FILE *
_DEFUN(__sfp, (d),
       struct _reent *d)
{
   16658:	fd010113          	addi	sp,sp,-48
   1665c:	01213823          	sd	s2,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:125
  int n;
  struct _glue *g;

  _newlib_sfp_lock_start ();

  if (!_GLOBAL_REENT->__sdidinit)
   16660:	8081b903          	ld	s2,-2040(gp) # 24448 <_global_impure_ptr>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:118
 */

FILE *
_DEFUN(__sfp, (d),
       struct _reent *d)
{
   16664:	01313423          	sd	s3,8(sp)
   16668:	02113423          	sd	ra,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:125
  int n;
  struct _glue *g;

  _newlib_sfp_lock_start ();

  if (!_GLOBAL_REENT->__sdidinit)
   1666c:	05092783          	lw	a5,80(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:118
 */

FILE *
_DEFUN(__sfp, (d),
       struct _reent *d)
{
   16670:	02813023          	sd	s0,32(sp)
   16674:	00913c23          	sd	s1,24(sp)
   16678:	00050993          	mv	s3,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:125
  int n;
  struct _glue *g;

  _newlib_sfp_lock_start ();

  if (!_GLOBAL_REENT->__sdidinit)
   1667c:	00079663          	bnez	a5,16688 <__sfp+0x30>
__sinit():
   16680:	00090513          	mv	a0,s2
   16684:	dd1ff0ef          	jal	16454 <__sinit.part.1>
__sfp():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:127
    __sinit (_GLOBAL_REENT);
  for (g = &_GLOBAL_REENT->__sglue;; g = g->_next)
   16688:	52090913          	addi	s2,s2,1312
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:129
    {
      for (fp = g->_iobs, n = g->_niobs; --n >= 0; fp++)
   1668c:	fff00493          	li	s1,-1
   16690:	00892783          	lw	a5,8(s2)
   16694:	01093403          	ld	s0,16(s2)
   16698:	fff7879b          	addiw	a5,a5,-1
   1669c:	0007da63          	bgez	a5,166b0 <__sfp+0x58>
   166a0:	0840006f          	j	16724 <__sfp+0xcc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:129 (discriminator 2)
   166a4:	fff7879b          	addiw	a5,a5,-1
   166a8:	0b040413          	addi	s0,s0,176
   166ac:	06978c63          	beq	a5,s1,16724 <__sfp+0xcc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:130
	if (fp->_flags == 0)
   166b0:	01041703          	lh	a4,16(s0)
   166b4:	fe0718e3          	bnez	a4,166a4 <__sfp+0x4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:141
  _newlib_sfp_lock_exit ();
  d->_errno = ENOMEM;
  return NULL;

found:
  fp->_file = -1;		/* no file */
   166b8:	fff00793          	li	a5,-1
   166bc:	00f41923          	sh	a5,18(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:142
  fp->_flags = 1;		/* reserve this slot; caller sets real flags */
   166c0:	00100793          	li	a5,1
   166c4:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:143
  fp->_flags2 = 0;
   166c8:	0a042623          	sw	zero,172(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:149
#ifndef __SINGLE_THREAD__
  __lock_init_recursive (fp->_lock);
#endif
  _newlib_sfp_lock_end ();

  fp->_p = NULL;		/* no current pointer */
   166cc:	00043023          	sd	zero,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:150
  fp->_w = 0;			/* nothing to read or write */
   166d0:	00042623          	sw	zero,12(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:151
  fp->_r = 0;
   166d4:	00042423          	sw	zero,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:152
  fp->_bf._base = NULL;		/* no buffer */
   166d8:	00043c23          	sd	zero,24(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:153
  fp->_bf._size = 0;
   166dc:	02042023          	sw	zero,32(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:154
  fp->_lbfsize = 0;		/* not line buffered */
   166e0:	02042423          	sw	zero,40(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:155
  memset (&fp->_mbstate, 0, sizeof (_mbstate_t));
   166e4:	00800613          	li	a2,8
   166e8:	00000593          	li	a1,0
   166ec:	0a440513          	addi	a0,s0,164
   166f0:	480010ef          	jal	17b70 <memset>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:162
  fp->_ub._base = NULL;		/* no ungetc buffer */
  fp->_ub._size = 0;
  fp->_lb._base = NULL;		/* no line buffer */
  fp->_lb._size = 0;

  return fp;
   166f4:	00040513          	mv	a0,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:157
  fp->_bf._base = NULL;		/* no buffer */
  fp->_bf._size = 0;
  fp->_lbfsize = 0;		/* not line buffered */
  memset (&fp->_mbstate, 0, sizeof (_mbstate_t));
  /* fp->_cookie = <any>; */	/* caller sets cookie, _read/_write etc */
  fp->_ub._base = NULL;		/* no ungetc buffer */
   166f8:	04043c23          	sd	zero,88(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:158
  fp->_ub._size = 0;
   166fc:	06042023          	sw	zero,96(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:159
  fp->_lb._base = NULL;		/* no line buffer */
   16700:	06043c23          	sd	zero,120(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:160
  fp->_lb._size = 0;
   16704:	08042023          	sw	zero,128(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:163

  return fp;
}
   16708:	02813083          	ld	ra,40(sp)
   1670c:	02013403          	ld	s0,32(sp)
   16710:	01813483          	ld	s1,24(sp)
   16714:	01013903          	ld	s2,16(sp)
   16718:	00813983          	ld	s3,8(sp)
   1671c:	03010113          	addi	sp,sp,48
   16720:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:132
  for (g = &_GLOBAL_REENT->__sglue;; g = g->_next)
    {
      for (fp = g->_iobs, n = g->_niobs; --n >= 0; fp++)
	if (fp->_flags == 0)
	  goto found;
      if (g->_next == NULL &&
   16724:	00093783          	ld	a5,0(s2)
   16728:	00078663          	beqz	a5,16734 <__sfp+0xdc>
   1672c:	00078913          	mv	s2,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:135
	  (g->_next = __sfmoreglue (d, NDYNAMIC)) == NULL)
	break;
    }
   16730:	f61ff06f          	j	16690 <__sfp+0x38>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:133 (discriminator 1)
    {
      for (fp = g->_iobs, n = g->_niobs; --n >= 0; fp++)
	if (fp->_flags == 0)
	  goto found;
      if (g->_next == NULL &&
	  (g->_next = __sfmoreglue (d, NDYNAMIC)) == NULL)
   16734:	00400593          	li	a1,4
   16738:	00098513          	mv	a0,s3
   1673c:	eb1ff0ef          	jal	165ec <__sfmoreglue>
   16740:	00a93023          	sd	a0,0(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:132
  for (g = &_GLOBAL_REENT->__sglue;; g = g->_next)
    {
      for (fp = g->_iobs, n = g->_niobs; --n >= 0; fp++)
	if (fp->_flags == 0)
	  goto found;
      if (g->_next == NULL &&
   16744:	00050663          	beqz	a0,16750 <__sfp+0xf8>
   16748:	00050913          	mv	s2,a0
   1674c:	f45ff06f          	j	16690 <__sfp+0x38>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:137
	  (g->_next = __sfmoreglue (d, NDYNAMIC)) == NULL)
	break;
    }
  _newlib_sfp_lock_exit ();
  d->_errno = ENOMEM;
   16750:	00c00793          	li	a5,12
   16754:	00f9a023          	sw	a5,0(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:138
  return NULL;
   16758:	00000513          	li	a0,0
   1675c:	fadff06f          	j	16708 <__sfp+0xb0>

0000000000016760 <_cleanup>:
_cleanup_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:192
  cleanup_func = _fflush_r;
#else
  cleanup_func = _fclose_r;
#endif
#endif
  _CAST_VOID _fwalk_reent (ptr, cleanup_func);
   16760:	8081b503          	ld	a0,-2040(gp) # 24448 <_global_impure_ptr>
   16764:	0001e5b7          	lui	a1,0x1e
   16768:	0ec58593          	addi	a1,a1,236 # 1e0ec <_fclose_r>
   1676c:	43d0006f          	j	173a8 <_fwalk_reent>

0000000000016770 <__sinit>:
__sinit():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:213
_DEFUN(__sinit, (s),
       struct _reent *s)
{
  __sinit_lock_acquire ();

  if (s->__sdidinit)
   16770:	05052783          	lw	a5,80(a0)
   16774:	00078463          	beqz	a5,1677c <__sinit+0xc>
   16778:	00008067          	ret
   1677c:	cd9ff06f          	j	16454 <__sinit.part.1>

0000000000016780 <__sfp_lock_acquire>:
__sfp_lock_acquire():
   16780:	00008067          	ret

0000000000016784 <__sfp_lock_release>:
__sfp_lock_release():
   16784:	00008067          	ret

0000000000016788 <__sinit_lock_acquire>:
__sinit_lock_acquire():
   16788:	00008067          	ret

000000000001678c <__sinit_lock_release>:
__sinit_lock_release():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:287
  __lock_acquire_recursive (__sinit_lock);
}

_VOID
_DEFUN_VOID(__sinit_lock_release)
{
   1678c:	00008067          	ret

0000000000016790 <__fp_lock_all>:
__fp_lock_all():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:316
_VOID
_DEFUN_VOID(__fp_lock_all)
{
  __sfp_lock_acquire ();

  _CAST_VOID _fwalk (_REENT, __fp_lock);
   16790:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
   16794:	000165b7          	lui	a1,0x16
   16798:	5e458593          	addi	a1,a1,1508 # 165e4 <__fp_lock>
   1679c:	35d0006f          	j	172f8 <_fwalk>

00000000000167a0 <__fp_unlock_all>:
__fp_unlock_all():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/findfp.c:322
}

_VOID
_DEFUN_VOID(__fp_unlock_all)
{
  _CAST_VOID _fwalk (_REENT, __fp_unlock);
   167a0:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
   167a4:	000165b7          	lui	a1,0x16
   167a8:	44058593          	addi	a1,a1,1088 # 16440 <__fp_unlock>
   167ac:	34d0006f          	j	172f8 <_fwalk>

00000000000167b0 <_fread_r>:
_fread_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:183
       struct _reent * ptr _AND
       _PTR __restrict buf _AND
       size_t size _AND
       size_t count _AND
       FILE * __restrict fp)
{
   167b0:	fa010113          	addi	sp,sp,-96
   167b4:	03613023          	sd	s6,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:189
  register size_t resid;
  register char *p;
  register int r;
  size_t total;

  if ((resid = count * size) == 0)
   167b8:	02c68b33          	mul	s6,a3,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:183
       struct _reent * ptr _AND
       _PTR __restrict buf _AND
       size_t size _AND
       size_t count _AND
       FILE * __restrict fp)
{
   167bc:	04113c23          	sd	ra,88(sp)
   167c0:	04813823          	sd	s0,80(sp)
   167c4:	04913423          	sd	s1,72(sp)
   167c8:	05213023          	sd	s2,64(sp)
   167cc:	03313c23          	sd	s3,56(sp)
   167d0:	03413823          	sd	s4,48(sp)
   167d4:	03513423          	sd	s5,40(sp)
   167d8:	01713c23          	sd	s7,24(sp)
   167dc:	01813823          	sd	s8,16(sp)
   167e0:	01913423          	sd	s9,8(sp)
   167e4:	01a13023          	sd	s10,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:189
  register size_t resid;
  register char *p;
  register int r;
  size_t total;

  if ((resid = count * size) == 0)
   167e8:	1c0b0863          	beqz	s6,169b8 <_fread_r+0x208>
   167ec:	00060b93          	mv	s7,a2
   167f0:	00068a93          	mv	s5,a3
   167f4:	00050a13          	mv	s4,a0
   167f8:	00058913          	mv	s2,a1
   167fc:	00070413          	mv	s0,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:192
    return 0;

  CHECK_INIT(ptr, fp);
   16800:	00050663          	beqz	a0,1680c <_fread_r+0x5c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:192 (discriminator 1)
   16804:	05052783          	lw	a5,80(a0)
   16808:	1c078a63          	beqz	a5,169dc <_fread_r+0x22c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:195

  _newlib_flockfile_start (fp);
  ORIENT (fp, -1);
   1680c:	01041683          	lh	a3,16(s0)
   16810:	03069793          	slli	a5,a3,0x30
   16814:	0307d793          	srli	a5,a5,0x30
   16818:	03279713          	slli	a4,a5,0x32
   1681c:	02074a63          	bltz	a4,16850 <_fread_r+0xa0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:195 (discriminator 1)
   16820:	000027b7          	lui	a5,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:194
  if ((resid = count * size) == 0)
    return 0;

  CHECK_INIT(ptr, fp);

  _newlib_flockfile_start (fp);
   16824:	0ac42603          	lw	a2,172(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:195
  ORIENT (fp, -1);
   16828:	00f6e7b3          	or	a5,a3,a5
   1682c:	0107979b          	slliw	a5,a5,0x10
   16830:	ffffe737          	lui	a4,0xffffe
   16834:	4107d79b          	sraiw	a5,a5,0x10
   16838:	fff7071b          	addiw	a4,a4,-1
   1683c:	00e67733          	and	a4,a2,a4
   16840:	00f41823          	sh	a5,16(s0)
   16844:	03079793          	slli	a5,a5,0x30
   16848:	0ae42623          	sw	a4,172(s0)
   1684c:	0307d793          	srli	a5,a5,0x30
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:196
  if (fp->_r < 0)
   16850:	00842483          	lw	s1,8(s0)
   16854:	00048713          	mv	a4,s1
   16858:	1604c463          	bltz	s1,169c0 <_fread_r+0x210>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:204
  p = buf;

#if !defined(PREFER_SIZE_OVER_SPEED) && !defined(__OPTIMIZE_SIZE__)

  /* Optimize unbuffered I/O.  */
  if (fp->_flags & __SNBF)
   1685c:	0027f793          	andi	a5,a5,2
   16860:	000b0993          	mv	s3,s6
   16864:	0e078463          	beqz	a5,1694c <_fread_r+0x19c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:207
    {
      /* First copy any available characters from ungetc buffer.  */
      int copy_size = resid > fp->_r ? fp->_r : resid;
   16868:	000b0493          	mv	s1,s6
   1686c:	01677463          	bleu	s6,a4,16874 <_fread_r+0xc4>
   16870:	00070493          	mv	s1,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:208
      _CAST_VOID memcpy ((_PTR) p, (_PTR) fp->_p, (size_t) copy_size);
   16874:	00043583          	ld	a1,0(s0)
   16878:	00048613          	mv	a2,s1
   1687c:	00090513          	mv	a0,s2
   16880:	954fa0ef          	jal	109d4 <memcpy>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:210
      fp->_p += copy_size;
      fp->_r -= copy_size;
   16884:	00842703          	lw	a4,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:209
  if (fp->_flags & __SNBF)
    {
      /* First copy any available characters from ungetc buffer.  */
      int copy_size = resid > fp->_r ? fp->_r : resid;
      _CAST_VOID memcpy ((_PTR) p, (_PTR) fp->_p, (size_t) copy_size);
      fp->_p += copy_size;
   16888:	00043c03          	ld	s8,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:207

  /* Optimize unbuffered I/O.  */
  if (fp->_flags & __SNBF)
    {
      /* First copy any available characters from ungetc buffer.  */
      int copy_size = resid > fp->_r ? fp->_r : resid;
   1688c:	0004879b          	sext.w	a5,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:215
      fp->_r -= copy_size;
      p += copy_size;
      resid -= copy_size;

      /* If still more data needed, free any allocated ungetc buffer.  */
      if (HASUB (fp) && resid > 0)
   16890:	05843583          	ld	a1,88(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:209
  if (fp->_flags & __SNBF)
    {
      /* First copy any available characters from ungetc buffer.  */
      int copy_size = resid > fp->_r ? fp->_r : resid;
      _CAST_VOID memcpy ((_PTR) p, (_PTR) fp->_p, (size_t) copy_size);
      fp->_p += copy_size;
   16894:	009c0c33          	add	s8,s8,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:210
      fp->_r -= copy_size;
   16898:	40f707bb          	subw	a5,a4,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:209
  if (fp->_flags & __SNBF)
    {
      /* First copy any available characters from ungetc buffer.  */
      int copy_size = resid > fp->_r ? fp->_r : resid;
      _CAST_VOID memcpy ((_PTR) p, (_PTR) fp->_p, (size_t) copy_size);
      fp->_p += copy_size;
   1689c:	01843023          	sd	s8,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:210
      fp->_r -= copy_size;
   168a0:	00f42423          	sw	a5,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:212
      p += copy_size;
      resid -= copy_size;
   168a4:	409b09b3          	sub	s3,s6,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:215

      /* If still more data needed, free any allocated ungetc buffer.  */
      if (HASUB (fp) && resid > 0)
   168a8:	14058863          	beqz	a1,169f8 <_fread_r+0x248>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:215 (discriminator 1)
   168ac:	14098863          	beqz	s3,169fc <_fread_r+0x24c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:216
	FREEUB (ptr, fp);
   168b0:	07440793          	addi	a5,s0,116
   168b4:	00f58863          	beq	a1,a5,168c4 <_fread_r+0x114>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:216 (discriminator 1)
   168b8:	000a0513          	mv	a0,s4
   168bc:	278000ef          	jal	16b34 <_free_r>
   168c0:	00043c03          	ld	s8,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:216 (discriminator 3)
   168c4:	04043c23          	sd	zero,88(s0)
   168c8:	01843d03          	ld	s10,24(s0)
   168cc:	02042c83          	lw	s9,32(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:211
      /* First copy any available characters from ungetc buffer.  */
      int copy_size = resid > fp->_r ? fp->_r : resid;
      _CAST_VOID memcpy ((_PTR) p, (_PTR) fp->_p, (size_t) copy_size);
      fp->_p += copy_size;
      fp->_r -= copy_size;
      p += copy_size;
   168d0:	00990933          	add	s2,s2,s1
   168d4:	0080006f          	j	168dc <_fread_r+0x12c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:219
      /* If still more data needed, free any allocated ungetc buffer.  */
      if (HASUB (fp) && resid > 0)
	FREEUB (ptr, fp);

      /* Finally read directly into user's buffer if needed.  */
      while (resid > 0)
   168d8:	12098263          	beqz	s3,169fc <_fread_r+0x24c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:227
	  /* save fp buffering state */
	  void *old_base = fp->_bf._base;
	  void * old_p = fp->_p;
	  int old_size = fp->_bf._size;
	  /* allow __refill to use user's buffer */
	  fp->_bf._base = (unsigned char *) p;
   168dc:	01243c23          	sd	s2,24(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:228
	  fp->_bf._size = resid;
   168e0:	03342023          	sw	s3,32(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:229
	  fp->_p = (unsigned char *) p;
   168e4:	01243023          	sd	s2,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:230
	  rc = __srefill_r (ptr, fp);
   168e8:	00040593          	mv	a1,s0
   168ec:	000a0513          	mv	a0,s4
   168f0:	159020ef          	jal	19248 <__srefill_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:235
	  /* restore fp buffering back to original state */
	  fp->_bf._base = old_base;
	  fp->_bf._size = old_size;
	  fp->_p = old_p;
	  resid -= fp->_r;
   168f4:	00842783          	lw	a5,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:232
	  fp->_bf._base = (unsigned char *) p;
	  fp->_bf._size = resid;
	  fp->_p = (unsigned char *) p;
	  rc = __srefill_r (ptr, fp);
	  /* restore fp buffering back to original state */
	  fp->_bf._base = old_base;
   168f8:	01a43c23          	sd	s10,24(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:233
	  fp->_bf._size = old_size;
   168fc:	03942023          	sw	s9,32(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:234
	  fp->_p = old_p;
   16900:	01843023          	sd	s8,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:237
	  resid -= fp->_r;
	  p += fp->_r;
	  fp->_r = 0;
   16904:	00042423          	sw	zero,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:235
	  rc = __srefill_r (ptr, fp);
	  /* restore fp buffering back to original state */
	  fp->_bf._base = old_base;
	  fp->_bf._size = old_size;
	  fp->_p = old_p;
	  resid -= fp->_r;
   16908:	40f989b3          	sub	s3,s3,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:236
	  p += fp->_r;
   1690c:	00f90933          	add	s2,s2,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:238
	  fp->_r = 0;
	  if (rc)
   16910:	fc0504e3          	beqz	a0,168d8 <_fread_r+0x128>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:273
		  _newlib_flockfile_exit (fp);
		  return crlf_r (ptr, fp, buf, total-resid, 1) / size;
		}
#endif
	      _newlib_flockfile_exit (fp);
	      return (total - resid) / size;
   16914:	413b09b3          	sub	s3,s6,s3
   16918:	0379d533          	divu	a0,s3,s7
   1691c:	0640006f          	j	16980 <_fread_r+0x1d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:257
  else
#endif /* !PREFER_SIZE_OVER_SPEED && !__OPTIMIZE_SIZE__ */
    {
      while (resid > (r = fp->_r))
	{
	  _CAST_VOID memcpy ((_PTR) p, (_PTR) fp->_p, (size_t) r);
   16920:	8b4fa0ef          	jal	109d4 <memcpy>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:258
	  fp->_p += r;
   16924:	00043783          	ld	a5,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:260
	  /* fp->_r = 0 ... done in __srefill */
	  p += r;
   16928:	00990933          	add	s2,s2,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:261
	  resid -= r;
   1692c:	409989b3          	sub	s3,s3,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:258
#endif /* !PREFER_SIZE_OVER_SPEED && !__OPTIMIZE_SIZE__ */
    {
      while (resid > (r = fp->_r))
	{
	  _CAST_VOID memcpy ((_PTR) p, (_PTR) fp->_p, (size_t) r);
	  fp->_p += r;
   16930:	009784b3          	add	s1,a5,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:262
	  /* fp->_r = 0 ... done in __srefill */
	  p += r;
	  resid -= r;
	  if (__srefill_r (ptr, fp))
   16934:	00040593          	mv	a1,s0
   16938:	000a0513          	mv	a0,s4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:258
#endif /* !PREFER_SIZE_OVER_SPEED && !__OPTIMIZE_SIZE__ */
    {
      while (resid > (r = fp->_r))
	{
	  _CAST_VOID memcpy ((_PTR) p, (_PTR) fp->_p, (size_t) r);
	  fp->_p += r;
   1693c:	00943023          	sd	s1,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:262
	  /* fp->_r = 0 ... done in __srefill */
	  p += r;
	  resid -= r;
	  if (__srefill_r (ptr, fp))
   16940:	109020ef          	jal	19248 <__srefill_r>
   16944:	fc0518e3          	bnez	a0,16914 <_fread_r+0x164>
   16948:	00842483          	lw	s1,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:257
  else
#endif /* !PREFER_SIZE_OVER_SPEED && !__OPTIMIZE_SIZE__ */
    {
      while (resid > (r = fp->_r))
	{
	  _CAST_VOID memcpy ((_PTR) p, (_PTR) fp->_p, (size_t) r);
   1694c:	00048613          	mv	a2,s1
   16950:	00090513          	mv	a0,s2
   16954:	00043583          	ld	a1,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:255
	}
    }
  else
#endif /* !PREFER_SIZE_OVER_SPEED && !__OPTIMIZE_SIZE__ */
    {
      while (resid > (r = fp->_r))
   16958:	fd34e4e3          	bltu	s1,s3,16920 <_fread_r+0x170>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:276
#endif
	      _newlib_flockfile_exit (fp);
	      return (total - resid) / size;
	    }
	}
      _CAST_VOID memcpy ((_PTR) p, (_PTR) fp->_p, resid);
   1695c:	00098613          	mv	a2,s3
   16960:	874fa0ef          	jal	109d4 <memcpy>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:277
      fp->_r -= resid;
   16964:	00842703          	lw	a4,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:278
      fp->_p += resid;
   16968:	00043783          	ld	a5,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:290
      _newlib_flockfile_exit (fp);
      return crlf_r(ptr, fp, buf, total, 0) / size;
    }
#endif
  _newlib_flockfile_end (fp);
  return count;
   1696c:	000a8513          	mv	a0,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:277
	      _newlib_flockfile_exit (fp);
	      return (total - resid) / size;
	    }
	}
      _CAST_VOID memcpy ((_PTR) p, (_PTR) fp->_p, resid);
      fp->_r -= resid;
   16970:	4137073b          	subw	a4,a4,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:278
      fp->_p += resid;
   16974:	013789b3          	add	s3,a5,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:277
	      _newlib_flockfile_exit (fp);
	      return (total - resid) / size;
	    }
	}
      _CAST_VOID memcpy ((_PTR) p, (_PTR) fp->_p, resid);
      fp->_r -= resid;
   16978:	00e42423          	sw	a4,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:278
      fp->_p += resid;
   1697c:	01343023          	sd	s3,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:291
      return crlf_r(ptr, fp, buf, total, 0) / size;
    }
#endif
  _newlib_flockfile_end (fp);
  return count;
}
   16980:	05813083          	ld	ra,88(sp)
   16984:	05013403          	ld	s0,80(sp)
   16988:	04813483          	ld	s1,72(sp)
   1698c:	04013903          	ld	s2,64(sp)
   16990:	03813983          	ld	s3,56(sp)
   16994:	03013a03          	ld	s4,48(sp)
   16998:	02813a83          	ld	s5,40(sp)
   1699c:	02013b03          	ld	s6,32(sp)
   169a0:	01813b83          	ld	s7,24(sp)
   169a4:	01013c03          	ld	s8,16(sp)
   169a8:	00813c83          	ld	s9,8(sp)
   169ac:	00013d03          	ld	s10,0(sp)
   169b0:	06010113          	addi	sp,sp,96
   169b4:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:190
  register char *p;
  register int r;
  size_t total;

  if ((resid = count * size) == 0)
    return 0;
   169b8:	00000513          	li	a0,0
   169bc:	fc5ff06f          	j	16980 <_fread_r+0x1d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:197
  CHECK_INIT(ptr, fp);

  _newlib_flockfile_start (fp);
  ORIENT (fp, -1);
  if (fp->_r < 0)
    fp->_r = 0;
   169c0:	00042423          	sw	zero,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:204
  p = buf;

#if !defined(PREFER_SIZE_OVER_SPEED) && !defined(__OPTIMIZE_SIZE__)

  /* Optimize unbuffered I/O.  */
  if (fp->_flags & __SNBF)
   169c4:	0027f793          	andi	a5,a5,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:197
  CHECK_INIT(ptr, fp);

  _newlib_flockfile_start (fp);
  ORIENT (fp, -1);
  if (fp->_r < 0)
    fp->_r = 0;
   169c8:	00000713          	li	a4,0
   169cc:	00000493          	li	s1,0
   169d0:	000b0993          	mv	s3,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:204
  p = buf;

#if !defined(PREFER_SIZE_OVER_SPEED) && !defined(__OPTIMIZE_SIZE__)

  /* Optimize unbuffered I/O.  */
  if (fp->_flags & __SNBF)
   169d4:	f6078ce3          	beqz	a5,1694c <_fread_r+0x19c>
   169d8:	e91ff06f          	j	16868 <_fread_r+0xb8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:192 (discriminator 2)
  size_t total;

  if ((resid = count * size) == 0)
    return 0;

  CHECK_INIT(ptr, fp);
   169dc:	d95ff0ef          	jal	16770 <__sinit>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:195

  _newlib_flockfile_start (fp);
  ORIENT (fp, -1);
   169e0:	01041683          	lh	a3,16(s0)
   169e4:	03069793          	slli	a5,a3,0x30
   169e8:	0307d793          	srli	a5,a5,0x30
   169ec:	03279713          	slli	a4,a5,0x32
   169f0:	e60740e3          	bltz	a4,16850 <_fread_r+0xa0>
   169f4:	e2dff06f          	j	16820 <_fread_r+0x70>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:219
      /* If still more data needed, free any allocated ungetc buffer.  */
      if (HASUB (fp) && resid > 0)
	FREEUB (ptr, fp);

      /* Finally read directly into user's buffer if needed.  */
      while (resid > 0)
   169f8:	ec0998e3          	bnez	s3,168c8 <_fread_r+0x118>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:290
      _newlib_flockfile_exit (fp);
      return crlf_r(ptr, fp, buf, total, 0) / size;
    }
#endif
  _newlib_flockfile_end (fp);
  return count;
   169fc:	000a8513          	mv	a0,s5
   16a00:	f81ff06f          	j	16980 <_fread_r+0x1d0>

0000000000016a04 <fread>:
fread():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fread.c:301
       _PTR __restrict  buf _AND
       size_t size _AND
       size_t count _AND
       FILE *__restrict fp)
{
   return _fread_r (_REENT, buf, size, count, fp);
   16a04:	00068713          	mv	a4,a3
   16a08:	00060693          	mv	a3,a2
   16a0c:	00058613          	mv	a2,a1
   16a10:	00050593          	mv	a1,a0
   16a14:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
   16a18:	d99ff06f          	j	167b0 <_fread_r>

0000000000016a1c <_malloc_trim_r>:
_malloc_trim_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3309
#if __STD_C
int malloc_trim(RARG size_t pad)
#else
int malloc_trim(RARG pad) RDECL size_t pad;
#endif
{
   16a1c:	fd010113          	addi	sp,sp,-48
   16a20:	01213823          	sd	s2,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3319

  unsigned long pagesz = malloc_getpagesize;

  MALLOC_LOCK;

  top_size = chunksize(top);
   16a24:	00024937          	lui	s2,0x24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3309
#if __STD_C
int malloc_trim(RARG size_t pad)
#else
int malloc_trim(RARG pad) RDECL size_t pad;
#endif
{
   16a28:	02813023          	sd	s0,32(sp)
   16a2c:	00913c23          	sd	s1,24(sp)
   16a30:	00058413          	mv	s0,a1
   16a34:	01313423          	sd	s3,8(sp)
   16a38:	02113423          	sd	ra,40(sp)
   16a3c:	00050993          	mv	s3,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3319

  unsigned long pagesz = malloc_getpagesize;

  MALLOC_LOCK;

  top_size = chunksize(top);
   16a40:	b8890913          	addi	s2,s2,-1144 # 23b88 <__malloc_av_>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3317
  char* current_brk;     /* address returned by pre-check sbrk call */
  char* new_brk;         /* address returned by negative sbrk call */

  unsigned long pagesz = malloc_getpagesize;

  MALLOC_LOCK;
   16a44:	a39fa0ef          	jal	1147c <__malloc_lock>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3319

  top_size = chunksize(top);
   16a48:	01093703          	ld	a4,16(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3320
  extra = ((top_size - pad - MINSIZE + (pagesz-1)) / pagesz - 1) * pagesz;
   16a4c:	000017b7          	lui	a5,0x1
   16a50:	fdf78593          	addi	a1,a5,-33 # fdf <_ftext-0xf021>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3319

  unsigned long pagesz = malloc_getpagesize;

  MALLOC_LOCK;

  top_size = chunksize(top);
   16a54:	00873483          	ld	s1,8(a4) # ffffffffffffe008 <_end+0xfffffffffffd71f0>
   16a58:	ffc4f493          	andi	s1,s1,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3320
  extra = ((top_size - pad - MINSIZE + (pagesz-1)) / pagesz - 1) * pagesz;
   16a5c:	40848433          	sub	s0,s1,s0
   16a60:	00b40433          	add	s0,s0,a1
   16a64:	00c45413          	srli	s0,s0,0xc
   16a68:	fff40413          	addi	s0,s0,-1
   16a6c:	00c41413          	slli	s0,s0,0xc
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3322

  if (extra < (long)pagesz)  /* Not enough memory to release */
   16a70:	00f44c63          	blt	s0,a5,16a88 <_malloc_trim_r+0x6c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3331
  }

  else
  {
    /* Test to make sure no one else called sbrk */
    current_brk = (char*)(MORECORE (0));
   16a74:	00000513          	li	a0,0
   16a78:	2a9090ef          	jal	20520 <sbrk>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3332
    if (current_brk != (char*)(top) + top_size)
   16a7c:	01093783          	ld	a5,16(s2)
   16a80:	009787b3          	add	a5,a5,s1
   16a84:	02f50663          	beq	a0,a5,16ab0 <_malloc_trim_r+0x94>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3324
  top_size = chunksize(top);
  extra = ((top_size - pad - MINSIZE + (pagesz-1)) / pagesz - 1) * pagesz;

  if (extra < (long)pagesz)  /* Not enough memory to release */
  {
    MALLOC_UNLOCK;
   16a88:	00098513          	mv	a0,s3
   16a8c:	9f5fa0ef          	jal	11480 <__malloc_unlock>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3368
	MALLOC_UNLOCK;
        return 1;
      }
    }
  }
}
   16a90:	02813083          	ld	ra,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3325
  extra = ((top_size - pad - MINSIZE + (pagesz-1)) / pagesz - 1) * pagesz;

  if (extra < (long)pagesz)  /* Not enough memory to release */
  {
    MALLOC_UNLOCK;
    return 0;
   16a94:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3368
	MALLOC_UNLOCK;
        return 1;
      }
    }
  }
}
   16a98:	02013403          	ld	s0,32(sp)
   16a9c:	01813483          	ld	s1,24(sp)
   16aa0:	01013903          	ld	s2,16(sp)
   16aa4:	00813983          	ld	s3,8(sp)
   16aa8:	03010113          	addi	sp,sp,48
   16aac:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3340
      return 0;     /* Apparently we don't own memory; must fail */
    }

    else
    {
      new_brk = (char*)(MORECORE (-extra));
   16ab0:	40800533          	neg	a0,s0
   16ab4:	26d090ef          	jal	20520 <sbrk>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3342
      
      if (new_brk == (char*)(MORECORE_FAILURE)) /* sbrk failed? */
   16ab8:	fff00793          	li	a5,-1
   16abc:	04f50463          	beq	a0,a5,16b04 <_malloc_trim_r+0xe8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3361

      else
      {
        /* Success. Adjust top accordingly. */
        set_head(top, (top_size - extra) | PREV_INUSE);
        sbrked_mem -= extra;
   16ac0:	9681a783          	lw	a5,-1688(gp) # 245a8 <__malloc_current_mallinfo>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3360
      }

      else
      {
        /* Success. Adjust top accordingly. */
        set_head(top, (top_size - extra) | PREV_INUSE);
   16ac4:	01093683          	ld	a3,16(s2)
   16ac8:	408484b3          	sub	s1,s1,s0
   16acc:	0014e493          	ori	s1,s1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3361
        sbrked_mem -= extra;
   16ad0:	4087843b          	subw	s0,a5,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3363
        check_chunk(top);
	MALLOC_UNLOCK;
   16ad4:	00098513          	mv	a0,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3360
      }

      else
      {
        /* Success. Adjust top accordingly. */
        set_head(top, (top_size - extra) | PREV_INUSE);
   16ad8:	0096b423          	sd	s1,8(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3361
        sbrked_mem -= extra;
   16adc:	9681a423          	sw	s0,-1688(gp) # 245a8 <__malloc_current_mallinfo>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3363
        check_chunk(top);
	MALLOC_UNLOCK;
   16ae0:	9a1fa0ef          	jal	11480 <__malloc_unlock>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3368
        return 1;
      }
    }
  }
}
   16ae4:	02813083          	ld	ra,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3364
        /* Success. Adjust top accordingly. */
        set_head(top, (top_size - extra) | PREV_INUSE);
        sbrked_mem -= extra;
        check_chunk(top);
	MALLOC_UNLOCK;
        return 1;
   16ae8:	00100513          	li	a0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3368
      }
    }
  }
}
   16aec:	02013403          	ld	s0,32(sp)
   16af0:	01813483          	ld	s1,24(sp)
   16af4:	01013903          	ld	s2,16(sp)
   16af8:	00813983          	ld	s3,8(sp)
   16afc:	03010113          	addi	sp,sp,48
   16b00:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3345
      new_brk = (char*)(MORECORE (-extra));
      
      if (new_brk == (char*)(MORECORE_FAILURE)) /* sbrk failed? */
      {
        /* Try to figure out what we have */
        current_brk = (char*)(MORECORE (0));
   16b04:	00000513          	li	a0,0
   16b08:	219090ef          	jal	20520 <sbrk>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3346
        top_size = current_brk - (char*)top;
   16b0c:	01093703          	ld	a4,16(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3347
        if (top_size >= (long)MINSIZE) /* if not, we are very very dead! */
   16b10:	01f00693          	li	a3,31
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3346
      
      if (new_brk == (char*)(MORECORE_FAILURE)) /* sbrk failed? */
      {
        /* Try to figure out what we have */
        current_brk = (char*)(MORECORE (0));
        top_size = current_brk - (char*)top;
   16b14:	40e507b3          	sub	a5,a0,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3347
        if (top_size >= (long)MINSIZE) /* if not, we are very very dead! */
   16b18:	f6f6d8e3          	ble	a5,a3,16a88 <_malloc_trim_r+0x6c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3349
        {
          sbrked_mem = current_brk - sbrk_base;
   16b1c:	8181b683          	ld	a3,-2024(gp) # 24458 <__malloc_sbrk_base>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3350
          set_head(top, top_size | PREV_INUSE);
   16b20:	0017e793          	ori	a5,a5,1
   16b24:	00f73423          	sd	a5,8(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3349
        /* Try to figure out what we have */
        current_brk = (char*)(MORECORE (0));
        top_size = current_brk - (char*)top;
        if (top_size >= (long)MINSIZE) /* if not, we are very very dead! */
        {
          sbrked_mem = current_brk - sbrk_base;
   16b28:	40d50533          	sub	a0,a0,a3
   16b2c:	96a1a423          	sw	a0,-1688(gp) # 245a8 <__malloc_current_mallinfo>
   16b30:	f59ff06f          	j	16a88 <_malloc_trim_r+0x6c>

0000000000016b34 <_free_r>:
_free_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2644
  INTERNAL_SIZE_T prevsz; /* size of previous contiguous chunk */
  mchunkptr bck;       /* misc temp for linking */
  mchunkptr fwd;       /* misc temp for linking */
  int       islr;      /* track whether merging with last_remainder */

  if (mem == 0)                              /* free(0) has no effect */
   16b34:	10058263          	beqz	a1,16c38 <_free_r+0x104>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2626
#if __STD_C
void fREe(RARG Void_t* mem)
#else
void fREe(RARG mem) RDECL Void_t* mem;
#endif
{
   16b38:	fe010113          	addi	sp,sp,-32
   16b3c:	00813823          	sd	s0,16(sp)
   16b40:	00913423          	sd	s1,8(sp)
   16b44:	00058413          	mv	s0,a1
   16b48:	00050493          	mv	s1,a0
   16b4c:	00113c23          	sd	ra,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2647
  int       islr;      /* track whether merging with last_remainder */

  if (mem == 0)                              /* free(0) has no effect */
    return;

  MALLOC_LOCK;
   16b50:	92dfa0ef          	jal	1147c <__malloc_lock>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2650

  p = mem2chunk(mem);
  hd = p->size;
   16b54:	ff843503          	ld	a0,-8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2649
  if (mem == 0)                              /* free(0) has no effect */
    return;

  MALLOC_LOCK;

  p = mem2chunk(mem);
   16b58:	ff040693          	addi	a3,s0,-16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2667
  
  sz = hd & ~PREV_INUSE;
  next = chunk_at_offset(p, sz);
  nextsz = chunksize(next);
  
  if (next == top)                            /* merge with top */
   16b5c:	000245b7          	lui	a1,0x24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2663
  }
#endif
  
  check_inuse_chunk(p);
  
  sz = hd & ~PREV_INUSE;
   16b60:	ffe57793          	andi	a5,a0,-2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2664
  next = chunk_at_offset(p, sz);
   16b64:	00f68633          	add	a2,a3,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2667
  nextsz = chunksize(next);
  
  if (next == top)                            /* merge with top */
   16b68:	b8858593          	addi	a1,a1,-1144 # 23b88 <__malloc_av_>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2665
  
  check_inuse_chunk(p);
  
  sz = hd & ~PREV_INUSE;
  next = chunk_at_offset(p, sz);
  nextsz = chunksize(next);
   16b6c:	00863703          	ld	a4,8(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2667
  
  if (next == top)                            /* merge with top */
   16b70:	0105b803          	ld	a6,16(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2665
  
  check_inuse_chunk(p);
  
  sz = hd & ~PREV_INUSE;
  next = chunk_at_offset(p, sz);
  nextsz = chunksize(next);
   16b74:	ffc77713          	andi	a4,a4,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2667
  
  if (next == top)                            /* merge with top */
   16b78:	17060663          	beq	a2,a6,16ce4 <_free_r+0x1b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2687
      malloc_trim(RCALL top_pad); 
    MALLOC_UNLOCK;
    return;
  }

  set_head(next, nextsz);                    /* clear inuse bit */
   16b7c:	00e63423          	sd	a4,8(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2691

  islr = 0;

  if (!(hd & PREV_INUSE))                    /* consolidate backward */
   16b80:	00157513          	andi	a0,a0,1
   16b84:	02051663          	bnez	a0,16bb0 <_free_r+0x7c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2693
  {
    prevsz = p->prev_size;
   16b88:	ff043503          	ld	a0,-16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2694
    p = chunk_at_offset(p, -prevsz);
   16b8c:	40a686b3          	sub	a3,a3,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2697
    sz += prevsz;
    
    if (p->fd == last_remainder)             /* keep as last_remainder */
   16b90:	0106b803          	ld	a6,16(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2695

  if (!(hd & PREV_INUSE))                    /* consolidate backward */
  {
    prevsz = p->prev_size;
    p = chunk_at_offset(p, -prevsz);
    sz += prevsz;
   16b94:	00a787b3          	add	a5,a5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2697
    
    if (p->fd == last_remainder)             /* keep as last_remainder */
   16b98:	00024537          	lui	a0,0x24
   16b9c:	b9850513          	addi	a0,a0,-1128 # 23b98 <__malloc_av_+0x10>
   16ba0:	18a80863          	beq	a6,a0,16d30 <_free_r+0x1fc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2700
      islr = 1;
    else
      unlink(p, bck, fwd);
   16ba4:	0186b503          	ld	a0,24(a3)
   16ba8:	00a83c23          	sd	a0,24(a6)
   16bac:	01053823          	sd	a6,16(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2703
  }
  
  if (!(inuse_bit_at_offset(next, nextsz)))   /* consolidate forward */
   16bb0:	00e60533          	add	a0,a2,a4
   16bb4:	00853503          	ld	a0,8(a0)
   16bb8:	00157513          	andi	a0,a0,1
   16bbc:	0e050a63          	beqz	a0,16cb0 <_free_r+0x17c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2717
    else
      unlink(next, bck, fwd);
  }


  set_head(p, sz | PREV_INUSE);
   16bc0:	0017e713          	ori	a4,a5,1
   16bc4:	00e6b423          	sd	a4,8(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2718
  set_foot(p, sz);
   16bc8:	00f68733          	add	a4,a3,a5
   16bcc:	00f73023          	sd	a5,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2720
  if (!islr)
    frontlink(p, sz, idx, bck, fwd);  
   16bd0:	1ff00713          	li	a4,511
   16bd4:	06f76463          	bltu	a4,a5,16c3c <_free_r+0x108>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2720 (discriminator 1)
   16bd8:	0037d793          	srli	a5,a5,0x3
   16bdc:	0007879b          	sext.w	a5,a5
   16be0:	0017871b          	addiw	a4,a5,1
   16be4:	0017171b          	slliw	a4,a4,0x1
   16be8:	00371713          	slli	a4,a4,0x3
   16bec:	0085b603          	ld	a2,8(a1)
   16bf0:	00e58733          	add	a4,a1,a4
   16bf4:	00073803          	ld	a6,0(a4)
   16bf8:	4027d79b          	sraiw	a5,a5,0x2
   16bfc:	00100513          	li	a0,1
   16c00:	00f517b3          	sll	a5,a0,a5
   16c04:	00c7e7b3          	or	a5,a5,a2
   16c08:	ff070613          	addi	a2,a4,-16
   16c0c:	00c6bc23          	sd	a2,24(a3)
   16c10:	0106b823          	sd	a6,16(a3)
   16c14:	00f5b423          	sd	a5,8(a1)
   16c18:	00d73023          	sd	a3,0(a4)
   16c1c:	00d83c23          	sd	a3,24(a6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2683

    set_head(p, sz | PREV_INUSE);
    top = p;
    if ((unsigned long)(sz) >= (unsigned long)trim_threshold) 
      malloc_trim(RCALL top_pad); 
    MALLOC_UNLOCK;
   16c20:	00048513          	mv	a0,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2725
    frontlink(p, sz, idx, bck, fwd);  

  MALLOC_UNLOCK;

#endif /* MALLOC_PROVIDED */
}
   16c24:	01813083          	ld	ra,24(sp)
   16c28:	01013403          	ld	s0,16(sp)
   16c2c:	00813483          	ld	s1,8(sp)
   16c30:	02010113          	addi	sp,sp,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2683

    set_head(p, sz | PREV_INUSE);
    top = p;
    if ((unsigned long)(sz) >= (unsigned long)trim_threshold) 
      malloc_trim(RCALL top_pad); 
    MALLOC_UNLOCK;
   16c34:	84dfa06f          	j	11480 <__malloc_unlock>
   16c38:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2720 (discriminator 2)


  set_head(p, sz | PREV_INUSE);
  set_foot(p, sz);
  if (!islr)
    frontlink(p, sz, idx, bck, fwd);  
   16c3c:	0097d713          	srli	a4,a5,0x9
   16c40:	00400613          	li	a2,4
   16c44:	12e66263          	bltu	a2,a4,16d68 <_free_r+0x234>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2720 (discriminator 6)
   16c48:	0067d713          	srli	a4,a5,0x6
   16c4c:	0007071b          	sext.w	a4,a4
   16c50:	0397051b          	addiw	a0,a4,57
   16c54:	0387061b          	addiw	a2,a4,56
   16c58:	0015151b          	slliw	a0,a0,0x1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2720 (discriminator 26)
   16c5c:	00351513          	slli	a0,a0,0x3
   16c60:	00a58533          	add	a0,a1,a0
   16c64:	00053703          	ld	a4,0(a0)
   16c68:	ff050513          	addi	a0,a0,-16
   16c6c:	10e50c63          	beq	a0,a4,16d84 <_free_r+0x250>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2720 (discriminator 30)
   16c70:	00873603          	ld	a2,8(a4)
   16c74:	ffc67613          	andi	a2,a2,-4
   16c78:	00c7f663          	bleu	a2,a5,16c84 <_free_r+0x150>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2720 (discriminator 32)
   16c7c:	01073703          	ld	a4,16(a4)
   16c80:	fee518e3          	bne	a0,a4,16c70 <_free_r+0x13c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2720 (discriminator 33)
   16c84:	01873503          	ld	a0,24(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2720 (discriminator 34)
   16c88:	00a6bc23          	sd	a0,24(a3)
   16c8c:	00e6b823          	sd	a4,16(a3)
   16c90:	00d53823          	sd	a3,16(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2725

  MALLOC_UNLOCK;

#endif /* MALLOC_PROVIDED */
}
   16c94:	01813083          	ld	ra,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2683

    set_head(p, sz | PREV_INUSE);
    top = p;
    if ((unsigned long)(sz) >= (unsigned long)trim_threshold) 
      malloc_trim(RCALL top_pad); 
    MALLOC_UNLOCK;
   16c98:	00048513          	mv	a0,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2725
    frontlink(p, sz, idx, bck, fwd);  

  MALLOC_UNLOCK;

#endif /* MALLOC_PROVIDED */
}
   16c9c:	01013403          	ld	s0,16(sp)
   16ca0:	00813483          	ld	s1,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2720


  set_head(p, sz | PREV_INUSE);
  set_foot(p, sz);
  if (!islr)
    frontlink(p, sz, idx, bck, fwd);  
   16ca4:	00d73c23          	sd	a3,24(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2725

  MALLOC_UNLOCK;

#endif /* MALLOC_PROVIDED */
}
   16ca8:	02010113          	addi	sp,sp,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2683

    set_head(p, sz | PREV_INUSE);
    top = p;
    if ((unsigned long)(sz) >= (unsigned long)trim_threshold) 
      malloc_trim(RCALL top_pad); 
    MALLOC_UNLOCK;
   16cac:	fd4fa06f          	j	11480 <__malloc_unlock>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2707
  
  if (!(inuse_bit_at_offset(next, nextsz)))   /* consolidate forward */
  {
    sz += nextsz;
    
    if (!islr && next->fd == last_remainder)  /* re-insert last_remainder */
   16cb0:	01063503          	ld	a0,16(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2705
      unlink(p, bck, fwd);
  }
  
  if (!(inuse_bit_at_offset(next, nextsz)))   /* consolidate forward */
  {
    sz += nextsz;
   16cb4:	00e787b3          	add	a5,a5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2707
    
    if (!islr && next->fd == last_remainder)  /* re-insert last_remainder */
   16cb8:	00024737          	lui	a4,0x24
   16cbc:	b9870713          	addi	a4,a4,-1128 # 23b98 <__malloc_av_+0x10>
   16cc0:	0ee50263          	beq	a0,a4,16da4 <_free_r+0x270>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2713
    {
      islr = 1;
      link_last_remainder(p);   
    }
    else
      unlink(next, bck, fwd);
   16cc4:	01863803          	ld	a6,24(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2717
  }


  set_head(p, sz | PREV_INUSE);
   16cc8:	0017e613          	ori	a2,a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2718
  set_foot(p, sz);
   16ccc:	00f68733          	add	a4,a3,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2713
    {
      islr = 1;
      link_last_remainder(p);   
    }
    else
      unlink(next, bck, fwd);
   16cd0:	01053c23          	sd	a6,24(a0)
   16cd4:	00a83823          	sd	a0,16(a6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2717
  }


  set_head(p, sz | PREV_INUSE);
   16cd8:	00c6b423          	sd	a2,8(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2718
  set_foot(p, sz);
   16cdc:	00f73023          	sd	a5,0(a4)
   16ce0:	ef1ff06f          	j	16bd0 <_free_r+0x9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2671
  
  if (next == top)                            /* merge with top */
  {
    sz += nextsz;

    if (!(hd & PREV_INUSE))                    /* consolidate backward */
   16ce4:	00157513          	andi	a0,a0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2669
  next = chunk_at_offset(p, sz);
  nextsz = chunksize(next);
  
  if (next == top)                            /* merge with top */
  {
    sz += nextsz;
   16ce8:	00e787b3          	add	a5,a5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2671

    if (!(hd & PREV_INUSE))                    /* consolidate backward */
   16cec:	02051063          	bnez	a0,16d0c <_free_r+0x1d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2673
    {
      prevsz = p->prev_size;
   16cf0:	ff043503          	ld	a0,-16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2674
      p = chunk_at_offset(p, -prevsz);
   16cf4:	40a686b3          	sub	a3,a3,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2676
      sz += prevsz;
      unlink(p, bck, fwd);
   16cf8:	0186b703          	ld	a4,24(a3)
   16cfc:	0106b603          	ld	a2,16(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2675

    if (!(hd & PREV_INUSE))                    /* consolidate backward */
    {
      prevsz = p->prev_size;
      p = chunk_at_offset(p, -prevsz);
      sz += prevsz;
   16d00:	00a787b3          	add	a5,a5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2676
      unlink(p, bck, fwd);
   16d04:	00e63c23          	sd	a4,24(a2)
   16d08:	00c73823          	sd	a2,16(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2679
    }

    set_head(p, sz | PREV_INUSE);
   16d0c:	0017e613          	ori	a2,a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2681
    top = p;
    if ((unsigned long)(sz) >= (unsigned long)trim_threshold) 
   16d10:	8201b703          	ld	a4,-2016(gp) # 24460 <__malloc_trim_threshold>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2679
      p = chunk_at_offset(p, -prevsz);
      sz += prevsz;
      unlink(p, bck, fwd);
    }

    set_head(p, sz | PREV_INUSE);
   16d14:	00c6b423          	sd	a2,8(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2680
    top = p;
   16d18:	00d5b823          	sd	a3,16(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2681
    if ((unsigned long)(sz) >= (unsigned long)trim_threshold) 
   16d1c:	f0e7e2e3          	bltu	a5,a4,16c20 <_free_r+0xec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2682
      malloc_trim(RCALL top_pad); 
   16d20:	9101b583          	ld	a1,-1776(gp) # 24550 <__malloc_top_pad>
   16d24:	00048513          	mv	a0,s1
   16d28:	cf5ff0ef          	jal	16a1c <_malloc_trim_r>
   16d2c:	ef5ff06f          	j	16c20 <_free_r+0xec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2703
      islr = 1;
    else
      unlink(p, bck, fwd);
  }
  
  if (!(inuse_bit_at_offset(next, nextsz)))   /* consolidate forward */
   16d30:	00e605b3          	add	a1,a2,a4
   16d34:	0085b583          	ld	a1,8(a1)
   16d38:	0015f593          	andi	a1,a1,1
   16d3c:	0e059a63          	bnez	a1,16e30 <_free_r+0x2fc>
   16d40:	01063583          	ld	a1,16(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2713
    {
      islr = 1;
      link_last_remainder(p);   
    }
    else
      unlink(next, bck, fwd);
   16d44:	01863603          	ld	a2,24(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2705
      unlink(p, bck, fwd);
  }
  
  if (!(inuse_bit_at_offset(next, nextsz)))   /* consolidate forward */
  {
    sz += nextsz;
   16d48:	00f707b3          	add	a5,a4,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2717
    else
      unlink(next, bck, fwd);
  }


  set_head(p, sz | PREV_INUSE);
   16d4c:	0017e713          	ori	a4,a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2713
    {
      islr = 1;
      link_last_remainder(p);   
    }
    else
      unlink(next, bck, fwd);
   16d50:	00c5bc23          	sd	a2,24(a1)
   16d54:	00b63823          	sd	a1,16(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2717
  }


  set_head(p, sz | PREV_INUSE);
   16d58:	00e6b423          	sd	a4,8(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2718
  set_foot(p, sz);
   16d5c:	00f686b3          	add	a3,a3,a5
   16d60:	00f6b023          	sd	a5,0(a3)
   16d64:	ebdff06f          	j	16c20 <_free_r+0xec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2720 (discriminator 7)
  if (!islr)
    frontlink(p, sz, idx, bck, fwd);  
   16d68:	01400613          	li	a2,20
   16d6c:	04e66e63          	bltu	a2,a4,16dc8 <_free_r+0x294>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2720 (discriminator 9)
   16d70:	0007071b          	sext.w	a4,a4
   16d74:	05c7051b          	addiw	a0,a4,92
   16d78:	05b7061b          	addiw	a2,a4,91
   16d7c:	0015151b          	slliw	a0,a0,0x1
   16d80:	eddff06f          	j	16c5c <_free_r+0x128>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2720 (discriminator 27)
   16d84:	0085b783          	ld	a5,8(a1)
   16d88:	4026571b          	sraiw	a4,a2,0x2
   16d8c:	00100613          	li	a2,1
   16d90:	00e61733          	sll	a4,a2,a4
   16d94:	00f767b3          	or	a5,a4,a5
   16d98:	00f5b423          	sd	a5,8(a1)
   16d9c:	00050713          	mv	a4,a0
   16da0:	ee9ff06f          	j	16c88 <_free_r+0x154>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2710
    sz += nextsz;
    
    if (!islr && next->fd == last_remainder)  /* re-insert last_remainder */
    {
      islr = 1;
      link_last_remainder(p);   
   16da4:	02d5b423          	sd	a3,40(a1)
   16da8:	02d5b023          	sd	a3,32(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2717
    else
      unlink(next, bck, fwd);
  }


  set_head(p, sz | PREV_INUSE);
   16dac:	0017e713          	ori	a4,a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2710
    sz += nextsz;
    
    if (!islr && next->fd == last_remainder)  /* re-insert last_remainder */
    {
      islr = 1;
      link_last_remainder(p);   
   16db0:	00a6bc23          	sd	a0,24(a3)
   16db4:	00a6b823          	sd	a0,16(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2717
    else
      unlink(next, bck, fwd);
  }


  set_head(p, sz | PREV_INUSE);
   16db8:	00e6b423          	sd	a4,8(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2718
  set_foot(p, sz);
   16dbc:	00f686b3          	add	a3,a3,a5
   16dc0:	00f6b023          	sd	a5,0(a3)
   16dc4:	e5dff06f          	j	16c20 <_free_r+0xec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2720 (discriminator 10)
  if (!islr)
    frontlink(p, sz, idx, bck, fwd);  
   16dc8:	05400613          	li	a2,84
   16dcc:	00e66e63          	bltu	a2,a4,16de8 <_free_r+0x2b4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2720 (discriminator 12)
   16dd0:	00c7d713          	srli	a4,a5,0xc
   16dd4:	0007071b          	sext.w	a4,a4
   16dd8:	06f7051b          	addiw	a0,a4,111
   16ddc:	06e7061b          	addiw	a2,a4,110
   16de0:	0015151b          	slliw	a0,a0,0x1
   16de4:	e79ff06f          	j	16c5c <_free_r+0x128>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2720 (discriminator 13)
   16de8:	15400613          	li	a2,340
   16dec:	00e66e63          	bltu	a2,a4,16e08 <_free_r+0x2d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2720 (discriminator 15)
   16df0:	00f7d713          	srli	a4,a5,0xf
   16df4:	0007071b          	sext.w	a4,a4
   16df8:	0787051b          	addiw	a0,a4,120
   16dfc:	0777061b          	addiw	a2,a4,119
   16e00:	0015151b          	slliw	a0,a0,0x1
   16e04:	e59ff06f          	j	16c5c <_free_r+0x128>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2720 (discriminator 16)
   16e08:	55400813          	li	a6,1364
   16e0c:	0fe00513          	li	a0,254
   16e10:	07e00613          	li	a2,126
   16e14:	e4e864e3          	bltu	a6,a4,16c5c <_free_r+0x128>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2720 (discriminator 18)
   16e18:	0127d713          	srli	a4,a5,0x12
   16e1c:	0007071b          	sext.w	a4,a4
   16e20:	07d7051b          	addiw	a0,a4,125
   16e24:	07c7061b          	addiw	a2,a4,124
   16e28:	0015151b          	slliw	a0,a0,0x1
   16e2c:	e31ff06f          	j	16c5c <_free_r+0x128>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2717
    else
      unlink(next, bck, fwd);
  }


  set_head(p, sz | PREV_INUSE);
   16e30:	0017e713          	ori	a4,a5,1
   16e34:	00e6b423          	sd	a4,8(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2718
  set_foot(p, sz);
   16e38:	00f686b3          	add	a3,a3,a5
   16e3c:	00f6b023          	sd	a5,0(a3)
   16e40:	de1ff06f          	j	16c20 <_free_r+0xec>

0000000000016e44 <__sfvwrite_r>:
__sfvwrite_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:60
  register struct __siov *iov;
  register _READ_WRITE_RETURN_TYPE w, s;
  char *nl;
  int nlknown, nldist;

  if ((len = uio->uio_resid) == 0)
   16e44:	01063783          	ld	a5,16(a2)
   16e48:	26078a63          	beqz	a5,170bc <__sfvwrite_r+0x278>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:64
    return 0;

  /* make sure we can write */
  if (cantwrite (ptr, fp))
   16e4c:	0105d703          	lhu	a4,16(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:52
int
_DEFUN(__sfvwrite_r, (ptr, fp, uio),
       struct _reent *ptr _AND
       register FILE *fp _AND
       register struct __suio *uio)
{
   16e50:	f9010113          	addi	sp,sp,-112
   16e54:	06813023          	sd	s0,96(sp)
   16e58:	03513c23          	sd	s5,56(sp)
   16e5c:	03613823          	sd	s6,48(sp)
   16e60:	06113423          	sd	ra,104(sp)
   16e64:	04913c23          	sd	s1,88(sp)
   16e68:	05213823          	sd	s2,80(sp)
   16e6c:	05313423          	sd	s3,72(sp)
   16e70:	05413023          	sd	s4,64(sp)
   16e74:	03713423          	sd	s7,40(sp)
   16e78:	03813023          	sd	s8,32(sp)
   16e7c:	01913c23          	sd	s9,24(sp)
   16e80:	01a13823          	sd	s10,16(sp)
   16e84:	01b13423          	sd	s11,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:64

  if ((len = uio->uio_resid) == 0)
    return 0;

  /* make sure we can write */
  if (cantwrite (ptr, fp))
   16e88:	00877793          	andi	a5,a4,8
   16e8c:	00058413          	mv	s0,a1
   16e90:	00050b13          	mv	s6,a0
   16e94:	00060a93          	mv	s5,a2
   16e98:	0a078863          	beqz	a5,16f48 <__sfvwrite_r+0x104>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:64 (discriminator 2)
   16e9c:	0185b783          	ld	a5,24(a1)
   16ea0:	0a078463          	beqz	a5,16f48 <__sfvwrite_r+0x104>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:90
      while (uio->uio_resid > 0);
      return 0;
    }
#endif

  if (fp->_flags & __SNBF)
   16ea4:	00277793          	andi	a5,a4,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:67

  /* make sure we can write */
  if (cantwrite (ptr, fp))
    return EOF;

  iov = uio->uio_iov;
   16ea8:	000ab483          	ld	s1,0(s5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:90
      while (uio->uio_resid > 0);
      return 0;
    }
#endif

  if (fp->_flags & __SNBF)
   16eac:	0c078063          	beqz	a5,16f6c <__sfvwrite_r+0x128>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:99 (discriminator 1)
       * as some legacy code may expect int instead of size_t.
       */
      do
	{
	  GETIOV (;);
	  w = fp->_write (ptr, fp->_cookie, p,
   16eb0:	80000a37          	lui	s4,0x80000
   16eb4:	00000993          	li	s3,0
   16eb8:	00000913          	li	s2,0
   16ebc:	c00a4a13          	xori	s4,s4,-1024
   16ec0:	00098613          	mv	a2,s3
   16ec4:	000b0513          	mv	a0,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:98
       * Unbuffered: Split buffer in the largest multiple of BUFSIZ < INT_MAX
       * as some legacy code may expect int instead of size_t.
       */
      do
	{
	  GETIOV (;);
   16ec8:	1e090263          	beqz	s2,170ac <__sfvwrite_r+0x268>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:99
	  w = fp->_write (ptr, fp->_cookie, p,
   16ecc:	00090693          	mv	a3,s2
   16ed0:	012a7463          	bleu	s2,s4,16ed8 <__sfvwrite_r+0x94>
   16ed4:	000a0693          	mv	a3,s4
   16ed8:	04043783          	ld	a5,64(s0)
   16edc:	03043583          	ld	a1,48(s0)
   16ee0:	0006869b          	sext.w	a3,a3
   16ee4:	000780e7          	jalr	a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:101
			  MIN (len, INT_MAX - INT_MAX % BUFSIZ));
	  if (w <= 0)
   16ee8:	22a05063          	blez	a0,17108 <__sfvwrite_r+0x2c4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:106
	    goto err;
	  p += w;
	  len -= w;
	}
      while ((uio->uio_resid -= w) != 0);
   16eec:	010ab783          	ld	a5,16(s5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:103
	  GETIOV (;);
	  w = fp->_write (ptr, fp->_cookie, p,
			  MIN (len, INT_MAX - INT_MAX % BUFSIZ));
	  if (w <= 0)
	    goto err;
	  p += w;
   16ef0:	00a989b3          	add	s3,s3,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:104
	  len -= w;
   16ef4:	40a90933          	sub	s2,s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:106
	}
      while ((uio->uio_resid -= w) != 0);
   16ef8:	40a78533          	sub	a0,a5,a0
   16efc:	00aab823          	sd	a0,16(s5)
   16f00:	fc0510e3          	bnez	a0,16ec0 <__sfvwrite_r+0x7c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:61
  register _READ_WRITE_RETURN_TYPE w, s;
  char *nl;
  int nlknown, nldist;

  if ((len = uio->uio_resid) == 0)
    return 0;
   16f04:	00000793          	li	a5,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:266
  return 0;

err:
  fp->_flags |= __SERR;
  return EOF;
}
   16f08:	06813083          	ld	ra,104(sp)
   16f0c:	00078513          	mv	a0,a5
   16f10:	06013403          	ld	s0,96(sp)
   16f14:	05813483          	ld	s1,88(sp)
   16f18:	05013903          	ld	s2,80(sp)
   16f1c:	04813983          	ld	s3,72(sp)
   16f20:	04013a03          	ld	s4,64(sp)
   16f24:	03813a83          	ld	s5,56(sp)
   16f28:	03013b03          	ld	s6,48(sp)
   16f2c:	02813b83          	ld	s7,40(sp)
   16f30:	02013c03          	ld	s8,32(sp)
   16f34:	01813c83          	ld	s9,24(sp)
   16f38:	01013d03          	ld	s10,16(sp)
   16f3c:	00813d83          	ld	s11,8(sp)
   16f40:	07010113          	addi	sp,sp,112
   16f44:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:64 (discriminator 3)

  if ((len = uio->uio_resid) == 0)
    return 0;

  /* make sure we can write */
  if (cantwrite (ptr, fp))
   16f48:	00040593          	mv	a1,s0
   16f4c:	000b0513          	mv	a0,s6
   16f50:	b1dfd0ef          	jal	14a6c <__swsetup_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:65
    return EOF;
   16f54:	fff00793          	li	a5,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:64

  if ((len = uio->uio_resid) == 0)
    return 0;

  /* make sure we can write */
  if (cantwrite (ptr, fp))
   16f58:	fa0518e3          	bnez	a0,16f08 <__sfvwrite_r+0xc4>
   16f5c:	01045703          	lhu	a4,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:67
    return EOF;

  iov = uio->uio_iov;
   16f60:	000ab483          	ld	s1,0(s5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:90
      while (uio->uio_resid > 0);
      return 0;
    }
#endif

  if (fp->_flags & __SNBF)
   16f64:	00277793          	andi	a5,a4,2
   16f68:	f40794e3          	bnez	a5,16eb0 <__sfvwrite_r+0x6c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:108
	  p += w;
	  len -= w;
	}
      while ((uio->uio_resid -= w) != 0);
    }
  else if ((fp->_flags & __SLBF) == 0)
   16f6c:	00177793          	andi	a5,a4,1
   16f70:	1a079663          	bnez	a5,1711c <__sfvwrite_r+0x2d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:196 (discriminator 1)
		goto err;
	    }
	  else
	    {
	      /* write directly */
	      w = ((int)MIN (len, INT_MAX)) / fp->_bf._size * fp->_bf._size;
   16f74:	80000bb7          	lui	s7,0x80000
   16f78:	ffebcc13          	xori	s8,s7,-2
   16f7c:	00000c93          	li	s9,0
   16f80:	00000913          	li	s2,0
   16f84:	fffbcb93          	not	s7,s7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:125
       * we are dealing with the asprintf routines, we will
       * dynamically increase the buffer size as needed.
       */
      do
	{
	  GETIOV (;);
   16f88:	10090a63          	beqz	s2,1709c <__sfvwrite_r+0x258>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:126
	  w = fp->_w;
   16f8c:	00c42983          	lw	s3,12(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:127
	  if (fp->_flags & __SSTR)
   16f90:	20077793          	andi	a5,a4,512
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:126
       * dynamically increase the buffer size as needed.
       */
      do
	{
	  GETIOV (;);
	  w = fp->_w;
   16f94:	00098a13          	mv	s4,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:127
	  if (fp->_flags & __SSTR)
   16f98:	26078863          	beqz	a5,17208 <__sfvwrite_r+0x3c4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:129
	    {
	      if (len >= w && fp->_flags & (__SMBF | __SOPT))
   16f9c:	2b396a63          	bltu	s2,s3,17250 <__sfvwrite_r+0x40c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:129 (discriminator 1)
   16fa0:	48077793          	andi	a5,a4,1152
   16fa4:	2a078663          	beqz	a5,17250 <__sfvwrite_r+0x40c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:140
		     than (1+sqrt(5))/2 to accomodate malloc
		     overhead. asprintf EXPECTS us to overallocate, so
		     that it can add a trailing \0 without
		     reallocating.  The new allocation should thus be
		     max(prev_size*1.5, curpos+len+1). */
		  int newsize = fp->_bf._size * 3 / 2;
   16fa8:	02042a03          	lw	s4,32(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:132
	  if (fp->_flags & __SSTR)
	    {
	      if (len >= w && fp->_flags & (__SMBF | __SOPT))
		{ /* must be asprintf family */
		  unsigned char *str;
		  int curpos = (fp->_p - fp->_bf._base);
   16fac:	01843583          	ld	a1,24(s0)
   16fb0:	00043d03          	ld	s10,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:140
		     than (1+sqrt(5))/2 to accomodate malloc
		     overhead. asprintf EXPECTS us to overallocate, so
		     that it can add a trailing \0 without
		     reallocating.  The new allocation should thus be
		     max(prev_size*1.5, curpos+len+1). */
		  int newsize = fp->_bf._size * 3 / 2;
   16fb4:	001a179b          	slliw	a5,s4,0x1
   16fb8:	01478a3b          	addw	s4,a5,s4
   16fbc:	01fa579b          	srliw	a5,s4,0x1f
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:132
	  if (fp->_flags & __SSTR)
	    {
	      if (len >= w && fp->_flags & (__SMBF | __SOPT))
		{ /* must be asprintf family */
		  unsigned char *str;
		  int curpos = (fp->_p - fp->_bf._base);
   16fc0:	40bd0d3b          	subw	s10,s10,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:140
		     than (1+sqrt(5))/2 to accomodate malloc
		     overhead. asprintf EXPECTS us to overallocate, so
		     that it can add a trailing \0 without
		     reallocating.  The new allocation should thus be
		     max(prev_size*1.5, curpos+len+1). */
		  int newsize = fp->_bf._size * 3 / 2;
   16fc4:	01478a3b          	addw	s4,a5,s4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:141
		  if (newsize < curpos + len + 1)
   16fc8:	000d0993          	mv	s3,s10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:140
		     than (1+sqrt(5))/2 to accomodate malloc
		     overhead. asprintf EXPECTS us to overallocate, so
		     that it can add a trailing \0 without
		     reallocating.  The new allocation should thus be
		     max(prev_size*1.5, curpos+len+1). */
		  int newsize = fp->_bf._size * 3 / 2;
   16fcc:	401a5a1b          	sraiw	s4,s4,0x1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:141
		  if (newsize < curpos + len + 1)
   16fd0:	00198793          	addi	a5,s3,1
   16fd4:	000a0613          	mv	a2,s4
   16fd8:	012787b3          	add	a5,a5,s2
   16fdc:	00f67863          	bleu	a5,a2,16fec <__sfvwrite_r+0x1a8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:142
		    newsize = curpos + len + 1;
   16fe0:	001d0a1b          	addiw	s4,s10,1
   16fe4:	01490a3b          	addw	s4,s2,s4
   16fe8:	000a0613          	mv	a2,s4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:143
		  if (fp->_flags & __SOPT)
   16fec:	40077713          	andi	a4,a4,1024
   16ff0:	2a070a63          	beqz	a4,172a4 <__sfvwrite_r+0x460>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:146
		    {
		      /* asnprintf leaves original buffer alone.  */
		      str = (unsigned char *)_malloc_r (ptr, newsize);
   16ff4:	00060593          	mv	a1,a2
   16ff8:	000b0513          	mv	a0,s6
   16ffc:	d11f90ef          	jal	10d0c <_malloc_r>
   17000:	00050d93          	mv	s11,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:147
		      if (!str)
   17004:	2e050263          	beqz	a0,172e8 <__sfvwrite_r+0x4a4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:152
			{
			  ptr->_errno = ENOMEM;
			  goto err;
			}
		      memcpy (str, fp->_bf._base, curpos);
   17008:	01843583          	ld	a1,24(s0)
   1700c:	00098613          	mv	a2,s3
   17010:	9c5f90ef          	jal	109d4 <memcpy>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:153
		      fp->_flags = (fp->_flags & ~__SOPT) | __SMBF;
   17014:	01045783          	lhu	a5,16(s0)
   17018:	b7f7f793          	andi	a5,a5,-1153
   1701c:	0807e793          	ori	a5,a5,128
   17020:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:174
		    }
		  fp->_bf._base = str;
		  fp->_p = str + curpos;
		  fp->_bf._size = newsize;
		  w = len;
		  fp->_w = newsize - curpos;
   17024:	41aa0d3b          	subw	s10,s4,s10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:171
			  ptr->_errno = ENOMEM;
			  goto err;
			}
		    }
		  fp->_bf._base = str;
		  fp->_p = str + curpos;
   17028:	013d8533          	add	a0,s11,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:172
		  fp->_bf._size = newsize;
   1702c:	03442023          	sw	s4,32(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:170
			  /* Ensure correct errno, even if free changed it.  */
			  ptr->_errno = ENOMEM;
			  goto err;
			}
		    }
		  fp->_bf._base = str;
   17030:	01b43c23          	sd	s11,24(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:171
		  fp->_p = str + curpos;
   17034:	00a43023          	sd	a0,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:173
		  fp->_bf._size = newsize;
		  w = len;
   17038:	00090a13          	mv	s4,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:174
		  fp->_w = newsize - curpos;
   1703c:	01a42623          	sw	s10,12(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:176
		}
	      if (len < w)
   17040:	000a0d13          	mv	s10,s4
   17044:	00090993          	mv	s3,s2
   17048:	01497863          	bleu	s4,s2,17058 <__sfvwrite_r+0x214>
   1704c:	00090d13          	mv	s10,s2
   17050:	00090993          	mv	s3,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:177
		w = len;
   17054:	00090a13          	mv	s4,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:178
	      COPY (w);		/* copy MIN(fp->_w,len), */
   17058:	000d0613          	mv	a2,s10
   1705c:	000c8593          	mv	a1,s9
   17060:	1f1000ef          	jal	17a50 <memmove>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:179
	      fp->_w -= w;
   17064:	00c42783          	lw	a5,12(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:180
	      fp->_p += w;
   17068:	00043603          	ld	a2,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:179
		  fp->_w = newsize - curpos;
		}
	      if (len < w)
		w = len;
	      COPY (w);		/* copy MIN(fp->_w,len), */
	      fp->_w -= w;
   1706c:	41478a3b          	subw	s4,a5,s4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:180
	      fp->_p += w;
   17070:	01a60633          	add	a2,a2,s10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:179
		  fp->_w = newsize - curpos;
		}
	      if (len < w)
		w = len;
	      COPY (w);		/* copy MIN(fp->_w,len), */
	      fp->_w -= w;
   17074:	01442623          	sw	s4,12(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:180
	      fp->_p += w;
   17078:	00c43023          	sd	a2,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:204
		goto err;
	    }
	  p += w;
	  len -= w;
	}
      while ((uio->uio_resid -= w) != 0);
   1707c:	010ab503          	ld	a0,16(s5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:201
	      w = ((int)MIN (len, INT_MAX)) / fp->_bf._size * fp->_bf._size;
	      w = fp->_write (ptr, fp->_cookie, p, w);
	      if (w <= 0)
		goto err;
	    }
	  p += w;
   17080:	013c8cb3          	add	s9,s9,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:202
	  len -= w;
   17084:	41390933          	sub	s2,s2,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:204
	}
      while ((uio->uio_resid -= w) != 0);
   17088:	413509b3          	sub	s3,a0,s3
   1708c:	013ab823          	sd	s3,16(s5)
   17090:	e6098ae3          	beqz	s3,16f04 <__sfvwrite_r+0xc0>
   17094:	01045703          	lhu	a4,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:125
       * we are dealing with the asprintf routines, we will
       * dynamically increase the buffer size as needed.
       */
      do
	{
	  GETIOV (;);
   17098:	ee091ae3          	bnez	s2,16f8c <__sfvwrite_r+0x148>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:125 (discriminator 2)
   1709c:	0004bc83          	ld	s9,0(s1)
   170a0:	0084b903          	ld	s2,8(s1)
   170a4:	01048493          	addi	s1,s1,16
   170a8:	ee1ff06f          	j	16f88 <__sfvwrite_r+0x144>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:98
       * Unbuffered: Split buffer in the largest multiple of BUFSIZ < INT_MAX
       * as some legacy code may expect int instead of size_t.
       */
      do
	{
	  GETIOV (;);
   170ac:	0004b983          	ld	s3,0(s1)
   170b0:	0084b903          	ld	s2,8(s1)
   170b4:	01048493          	addi	s1,s1,16
   170b8:	e09ff06f          	j	16ec0 <__sfvwrite_r+0x7c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:61
  register _READ_WRITE_RETURN_TYPE w, s;
  char *nl;
  int nlknown, nldist;

  if ((len = uio->uio_resid) == 0)
    return 0;
   170bc:	00000793          	li	a5,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:266
  return 0;

err:
  fp->_flags |= __SERR;
  return EOF;
}
   170c0:	00078513          	mv	a0,a5
   170c4:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:186
	      w = len;		/* but pretend copied all */
	    }
	  else if (fp->_p > fp->_bf._base || len < fp->_bf._size)
	    {
	      /* pass through the buffer */
	      w = MIN (len, w);
   170c8:	01397463          	bleu	s3,s2,170d0 <__sfvwrite_r+0x28c>
   170cc:	00090993          	mv	s3,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:187
	      COPY (w);
   170d0:	00098613          	mv	a2,s3
   170d4:	000c8593          	mv	a1,s9
   170d8:	179000ef          	jal	17a50 <memmove>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:188
	      fp->_w -= w;
   170dc:	00c42783          	lw	a5,12(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:189
	      fp->_p += w;
   170e0:	00043703          	ld	a4,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:188
	  else if (fp->_p > fp->_bf._base || len < fp->_bf._size)
	    {
	      /* pass through the buffer */
	      w = MIN (len, w);
	      COPY (w);
	      fp->_w -= w;
   170e4:	413787bb          	subw	a5,a5,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:189
	      fp->_p += w;
   170e8:	01370733          	add	a4,a4,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:188
	  else if (fp->_p > fp->_bf._base || len < fp->_bf._size)
	    {
	      /* pass through the buffer */
	      w = MIN (len, w);
	      COPY (w);
	      fp->_w -= w;
   170ec:	00f42623          	sw	a5,12(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:189
	      fp->_p += w;
   170f0:	00e43023          	sd	a4,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:190
	      if (fp->_w == 0 && _fflush_r (ptr, fp))
   170f4:	f80794e3          	bnez	a5,1707c <__sfvwrite_r+0x238>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:190 (discriminator 1)
   170f8:	00040593          	mv	a1,s0
   170fc:	000b0513          	mv	a0,s6
   17100:	ac4ff0ef          	jal	163c4 <_fflush_r>
   17104:	f6050ce3          	beqz	a0,1707c <__sfvwrite_r+0x238>
   17108:	01041783          	lh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:264
      while ((uio->uio_resid -= w) != 0);
    }
  return 0;

err:
  fp->_flags |= __SERR;
   1710c:	0407e793          	ori	a5,a5,64
   17110:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:265
  return EOF;
   17114:	fff00793          	li	a5,-1
   17118:	df1ff06f          	j	16f08 <__sfvwrite_r+0xc4>
   1711c:	00000a13          	li	s4,0
   17120:	00000c13          	li	s8,0
   17124:	00000d13          	li	s10,0
   17128:	00000913          	li	s2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:219 (discriminator 1)
       */
      nlknown = 0;
      nldist = 0;
      do
	{
	  GETIOV (nlknown = 0);
   1712c:	06090e63          	beqz	s2,171a8 <__sfvwrite_r+0x364>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:220
	  if (!nlknown)
   17130:	140c0863          	beqz	s8,17280 <__sfvwrite_r+0x43c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:226
	    {
	      nl = memchr ((_PTR) p, '\n', len);
	      nldist = nl ? nl + 1 - p : len + 1;
	      nlknown = 1;
	    }
	  s = MIN (len, nldist);
   17134:	000a0993          	mv	s3,s4
   17138:	01497463          	bleu	s4,s2,17140 <__sfvwrite_r+0x2fc>
   1713c:	00090993          	mv	s3,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:228
	  w = fp->_w + fp->_bf._size;
	  if (fp->_p > fp->_bf._base && s > w)
   17140:	00043503          	ld	a0,0(s0)
   17144:	01843783          	ld	a5,24(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:226
	    {
	      nl = memchr ((_PTR) p, '\n', len);
	      nldist = nl ? nl + 1 - p : len + 1;
	      nlknown = 1;
	    }
	  s = MIN (len, nldist);
   17148:	00098b93          	mv	s7,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:227
	  w = fp->_w + fp->_bf._size;
   1714c:	02042683          	lw	a3,32(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:228
	  if (fp->_p > fp->_bf._base && s > w)
   17150:	00a7fa63          	bleu	a0,a5,17164 <__sfvwrite_r+0x320>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:227 (discriminator 1)
	      nl = memchr ((_PTR) p, '\n', len);
	      nldist = nl ? nl + 1 - p : len + 1;
	      nlknown = 1;
	    }
	  s = MIN (len, nldist);
	  w = fp->_w + fp->_bf._size;
   17154:	00c42c83          	lw	s9,12(s0)
   17158:	01968cbb          	addw	s9,a3,s9
   1715c:	000c8d93          	mv	s11,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:228
	  if (fp->_p > fp->_bf._base && s > w)
   17160:	053dce63          	blt	s11,s3,171bc <__sfvwrite_r+0x378>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:236
	      /* fp->_w -= w; */
	      fp->_p += w;
	      if (_fflush_r (ptr, fp))
		goto err;
	    }
	  else if (s >= (w = fp->_bf._size))
   17164:	0ed9ca63          	blt	s3,a3,17258 <__sfvwrite_r+0x414>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:238
	    {
	      w = fp->_write (ptr, fp->_cookie, p, w);
   17168:	04043783          	ld	a5,64(s0)
   1716c:	03043583          	ld	a1,48(s0)
   17170:	000d0613          	mv	a2,s10
   17174:	000b0513          	mv	a0,s6
   17178:	000780e7          	jalr	a5
   1717c:	00050b93          	mv	s7,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:239
	      if (w <= 0)
   17180:	f8a054e3          	blez	a0,17108 <__sfvwrite_r+0x2c4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:249
	      w = s;
	      COPY (w);
	      fp->_w -= w;
	      fp->_p += w;
	    }
	  if ((nldist -= w) == 0)
   17184:	417a0a3b          	subw	s4,s4,s7
   17188:	060a0463          	beqz	s4,171f0 <__sfvwrite_r+0x3ac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:259
	      nlknown = 0;
	    }
	  p += w;
	  len -= w;
	}
      while ((uio->uio_resid -= w) != 0);
   1718c:	010ab783          	ld	a5,16(s5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:256
	      /* copied the newline: flush and forget */
	      if (_fflush_r (ptr, fp))
		goto err;
	      nlknown = 0;
	    }
	  p += w;
   17190:	017d0d33          	add	s10,s10,s7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:257
	  len -= w;
   17194:	41790933          	sub	s2,s2,s7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:259
	}
      while ((uio->uio_resid -= w) != 0);
   17198:	41778bb3          	sub	s7,a5,s7
   1719c:	017ab823          	sd	s7,16(s5)
   171a0:	d60b82e3          	beqz	s7,16f04 <__sfvwrite_r+0xc0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:219
       */
      nlknown = 0;
      nldist = 0;
      do
	{
	  GETIOV (nlknown = 0);
   171a4:	f80916e3          	bnez	s2,17130 <__sfvwrite_r+0x2ec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:219 (discriminator 2)
   171a8:	0004bd03          	ld	s10,0(s1)
   171ac:	0084b903          	ld	s2,8(s1)
   171b0:	00000c13          	li	s8,0
   171b4:	01048493          	addi	s1,s1,16
   171b8:	f75ff06f          	j	1712c <__sfvwrite_r+0x2e8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:230
	    }
	  s = MIN (len, nldist);
	  w = fp->_w + fp->_bf._size;
	  if (fp->_p > fp->_bf._base && s > w)
	    {
	      COPY (w);
   171bc:	000d0593          	mv	a1,s10
   171c0:	000c8613          	mv	a2,s9
   171c4:	08d000ef          	jal	17a50 <memmove>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:232
	      /* fp->_w -= w; */
	      fp->_p += w;
   171c8:	00043783          	ld	a5,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:233
	      if (_fflush_r (ptr, fp))
   171cc:	00040593          	mv	a1,s0
   171d0:	000b0513          	mv	a0,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:232
	  w = fp->_w + fp->_bf._size;
	  if (fp->_p > fp->_bf._base && s > w)
	    {
	      COPY (w);
	      /* fp->_w -= w; */
	      fp->_p += w;
   171d4:	01b78db3          	add	s11,a5,s11
   171d8:	01b43023          	sd	s11,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:233
	      if (_fflush_r (ptr, fp))
   171dc:	9e8ff0ef          	jal	163c4 <_fflush_r>
   171e0:	f20514e3          	bnez	a0,17108 <__sfvwrite_r+0x2c4>
   171e4:	000c8b93          	mv	s7,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:249
	      w = s;
	      COPY (w);
	      fp->_w -= w;
	      fp->_p += w;
	    }
	  if ((nldist -= w) == 0)
   171e8:	417a0a3b          	subw	s4,s4,s7
   171ec:	fa0a10e3          	bnez	s4,1718c <__sfvwrite_r+0x348>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:252
	    {
	      /* copied the newline: flush and forget */
	      if (_fflush_r (ptr, fp))
   171f0:	00040593          	mv	a1,s0
   171f4:	000b0513          	mv	a0,s6
   171f8:	9ccff0ef          	jal	163c4 <_fflush_r>
   171fc:	f00516e3          	bnez	a0,17108 <__sfvwrite_r+0x2c4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:254
		goto err;
	      nlknown = 0;
   17200:	00000c13          	li	s8,0
   17204:	f89ff06f          	j	1718c <__sfvwrite_r+0x348>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:183
	      COPY (w);		/* copy MIN(fp->_w,len), */
	      fp->_w -= w;
	      fp->_p += w;
	      w = len;		/* but pretend copied all */
	    }
	  else if (fp->_p > fp->_bf._base || len < fp->_bf._size)
   17208:	00043503          	ld	a0,0(s0)
   1720c:	01843783          	ld	a5,24(s0)
   17210:	eaa7ece3          	bltu	a5,a0,170c8 <__sfvwrite_r+0x284>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:183 (discriminator 1)
   17214:	02042783          	lw	a5,32(s0)
   17218:	eaf968e3          	bltu	s2,a5,170c8 <__sfvwrite_r+0x284>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:196
		goto err;
	    }
	  else
	    {
	      /* write directly */
	      w = ((int)MIN (len, INT_MAX)) / fp->_bf._size * fp->_bf._size;
   1721c:	000b8693          	mv	a3,s7
   17220:	012c6463          	bltu	s8,s2,17228 <__sfvwrite_r+0x3e4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:196 (discriminator 1)
   17224:	0009069b          	sext.w	a3,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:197 (discriminator 4)
	      w = fp->_write (ptr, fp->_cookie, p, w);
   17228:	02f6c6bb          	divw	a3,a3,a5
   1722c:	04043703          	ld	a4,64(s0)
   17230:	03043583          	ld	a1,48(s0)
   17234:	000c8613          	mv	a2,s9
   17238:	000b0513          	mv	a0,s6
   1723c:	02f686bb          	mulw	a3,a3,a5
   17240:	000700e7          	jalr	a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:198
	      if (w <= 0)
   17244:	eca052e3          	blez	a0,17108 <__sfvwrite_r+0x2c4>
   17248:	00050993          	mv	s3,a0
   1724c:	e31ff06f          	j	1707c <__sfvwrite_r+0x238>
   17250:	00043503          	ld	a0,0(s0)
   17254:	dedff06f          	j	17040 <__sfvwrite_r+0x1fc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:245
		goto err;
	    }
	  else
	    {
	      w = s;
	      COPY (w);
   17258:	00098613          	mv	a2,s3
   1725c:	000d0593          	mv	a1,s10
   17260:	7f0000ef          	jal	17a50 <memmove>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:246
	      fp->_w -= w;
   17264:	00c42703          	lw	a4,12(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:247
	      fp->_p += w;
   17268:	00043783          	ld	a5,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:246
	    }
	  else
	    {
	      w = s;
	      COPY (w);
	      fp->_w -= w;
   1726c:	4137073b          	subw	a4,a4,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:247
	      fp->_p += w;
   17270:	013789b3          	add	s3,a5,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:246
	    }
	  else
	    {
	      w = s;
	      COPY (w);
	      fp->_w -= w;
   17274:	00e42623          	sw	a4,12(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:247
	      fp->_p += w;
   17278:	01343023          	sd	s3,0(s0)
   1727c:	f09ff06f          	j	17184 <__sfvwrite_r+0x340>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:222
      do
	{
	  GETIOV (nlknown = 0);
	  if (!nlknown)
	    {
	      nl = memchr ((_PTR) p, '\n', len);
   17280:	00090613          	mv	a2,s2
   17284:	00a00593          	li	a1,10
   17288:	000d0513          	mv	a0,s10
   1728c:	6dc000ef          	jal	17968 <memchr>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:223
	      nldist = nl ? nl + 1 - p : len + 1;
   17290:	04050663          	beqz	a0,172dc <__sfvwrite_r+0x498>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:223 (discriminator 1)
   17294:	00150a13          	addi	s4,a0,1
   17298:	41aa0a3b          	subw	s4,s4,s10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:224
	      nlknown = 1;
   1729c:	00100c13          	li	s8,1
   172a0:	e95ff06f          	j	17134 <__sfvwrite_r+0x2f0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:157
		      memcpy (str, fp->_bf._base, curpos);
		      fp->_flags = (fp->_flags & ~__SOPT) | __SMBF;
		    }
		  else
		    {
		      str = (unsigned char *)_realloc_r (ptr, fp->_bf._base,
   172a4:	000b0513          	mv	a0,s6
   172a8:	209010ef          	jal	18cb0 <_realloc_r>
   172ac:	00050d93          	mv	s11,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:159
							 newsize);
		      if (!str)
   172b0:	d6051ae3          	bnez	a0,17024 <__sfvwrite_r+0x1e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:163
			{
			  /* Free buffer which is no longer used and clear
			     __SMBF flag to avoid double free in fclose.  */
			  _free_r (ptr, fp->_bf._base);
   172b4:	01843583          	ld	a1,24(s0)
   172b8:	000b0513          	mv	a0,s6
   172bc:	879ff0ef          	jal	16b34 <_free_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:164
			  fp->_flags &=  ~__SMBF;
   172c0:	01045783          	lhu	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:166
			  /* Ensure correct errno, even if free changed it.  */
			  ptr->_errno = ENOMEM;
   172c4:	00c00713          	li	a4,12
   172c8:	00eb2023          	sw	a4,0(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:164
		      if (!str)
			{
			  /* Free buffer which is no longer used and clear
			     __SMBF flag to avoid double free in fclose.  */
			  _free_r (ptr, fp->_bf._base);
			  fp->_flags &=  ~__SMBF;
   172cc:	f7f7f793          	andi	a5,a5,-129
   172d0:	0107979b          	slliw	a5,a5,0x10
   172d4:	4107d79b          	sraiw	a5,a5,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:167
			  /* Ensure correct errno, even if free changed it.  */
			  ptr->_errno = ENOMEM;
			  goto err;
   172d8:	e35ff06f          	j	1710c <__sfvwrite_r+0x2c8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:223 (discriminator 2)
	{
	  GETIOV (nlknown = 0);
	  if (!nlknown)
	    {
	      nl = memchr ((_PTR) p, '\n', len);
	      nldist = nl ? nl + 1 - p : len + 1;
   172dc:	00190a1b          	addiw	s4,s2,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:224
	      nlknown = 1;
   172e0:	00100c13          	li	s8,1
   172e4:	e51ff06f          	j	17134 <__sfvwrite_r+0x2f0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:149
		    {
		      /* asnprintf leaves original buffer alone.  */
		      str = (unsigned char *)_malloc_r (ptr, newsize);
		      if (!str)
			{
			  ptr->_errno = ENOMEM;
   172e8:	00c00793          	li	a5,12
   172ec:	00fb2023          	sw	a5,0(s6)
   172f0:	01041783          	lh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fvwrite.c:150
			  goto err;
   172f4:	e19ff06f          	j	1710c <__sfvwrite_r+0x2c8>

00000000000172f8 <_fwalk>:
_fwalk():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:34

int
_DEFUN(_fwalk, (ptr, function),
       struct _reent *ptr _AND
       register int (*function) (FILE *))
{
   172f8:	fc010113          	addi	sp,sp,-64
   172fc:	01513423          	sd	s5,8(sp)
   17300:	02113c23          	sd	ra,56(sp)
   17304:	02813823          	sd	s0,48(sp)
   17308:	02913423          	sd	s1,40(sp)
   1730c:	03213023          	sd	s2,32(sp)
   17310:	01313c23          	sd	s3,24(sp)
   17314:	01413823          	sd	s4,16(sp)
   17318:	01613023          	sd	s6,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:47
   * removed.
   *
   * Avoid locking this list while walking it or else you will
   * introduce a potential deadlock in [at least] refill.c.
   */
  for (g = &ptr->__sglue; g != NULL; g = g->_next)
   1731c:	52050a93          	addi	s5,a0,1312
   17320:	080a8063          	beqz	s5,173a0 <_fwalk+0xa8>
   17324:	00058b13          	mv	s6,a1
   17328:	00000a13          	li	s4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:49
    for (fp = g->_iobs, n = g->_niobs; --n >= 0; fp++)
      if (fp->_flags != 0 && fp->_flags != 1 && fp->_file != -1)
   1732c:	00100993          	li	s3,1
   17330:	fff00913          	li	s2,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:48
   *
   * Avoid locking this list while walking it or else you will
   * introduce a potential deadlock in [at least] refill.c.
   */
  for (g = &ptr->__sglue; g != NULL; g = g->_next)
    for (fp = g->_iobs, n = g->_niobs; --n >= 0; fp++)
   17334:	008aa483          	lw	s1,8(s5)
   17338:	010ab403          	ld	s0,16(s5)
   1733c:	fff4849b          	addiw	s1,s1,-1
   17340:	0204c663          	bltz	s1,1736c <_fwalk+0x74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:49
      if (fp->_flags != 0 && fp->_flags != 1 && fp->_file != -1)
   17344:	01045783          	lhu	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:48
   *
   * Avoid locking this list while walking it or else you will
   * introduce a potential deadlock in [at least] refill.c.
   */
  for (g = &ptr->__sglue; g != NULL; g = g->_next)
    for (fp = g->_iobs, n = g->_niobs; --n >= 0; fp++)
   17348:	fff4849b          	addiw	s1,s1,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:49
      if (fp->_flags != 0 && fp->_flags != 1 && fp->_file != -1)
   1734c:	00f9fc63          	bleu	a5,s3,17364 <_fwalk+0x6c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:49 (discriminator 1)
   17350:	01241783          	lh	a5,18(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:50
	ret |= (*function) (fp);
   17354:	00040513          	mv	a0,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:49
   * Avoid locking this list while walking it or else you will
   * introduce a potential deadlock in [at least] refill.c.
   */
  for (g = &ptr->__sglue; g != NULL; g = g->_next)
    for (fp = g->_iobs, n = g->_niobs; --n >= 0; fp++)
      if (fp->_flags != 0 && fp->_flags != 1 && fp->_file != -1)
   17358:	01278663          	beq	a5,s2,17364 <_fwalk+0x6c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:50
	ret |= (*function) (fp);
   1735c:	000b00e7          	jalr	s6
   17360:	00aa6a33          	or	s4,s4,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:48 (discriminator 2)
   *
   * Avoid locking this list while walking it or else you will
   * introduce a potential deadlock in [at least] refill.c.
   */
  for (g = &ptr->__sglue; g != NULL; g = g->_next)
    for (fp = g->_iobs, n = g->_niobs; --n >= 0; fp++)
   17364:	0b040413          	addi	s0,s0,176
   17368:	fd249ee3          	bne	s1,s2,17344 <_fwalk+0x4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:47
   * removed.
   *
   * Avoid locking this list while walking it or else you will
   * introduce a potential deadlock in [at least] refill.c.
   */
  for (g = &ptr->__sglue; g != NULL; g = g->_next)
   1736c:	000aba83          	ld	s5,0(s5)
   17370:	fc0a92e3          	bnez	s5,17334 <_fwalk+0x3c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:53
    for (fp = g->_iobs, n = g->_niobs; --n >= 0; fp++)
      if (fp->_flags != 0 && fp->_flags != 1 && fp->_file != -1)
	ret |= (*function) (fp);

  return ret;
}
   17374:	03813083          	ld	ra,56(sp)
   17378:	000a0513          	mv	a0,s4
   1737c:	03013403          	ld	s0,48(sp)
   17380:	02813483          	ld	s1,40(sp)
   17384:	02013903          	ld	s2,32(sp)
   17388:	01813983          	ld	s3,24(sp)
   1738c:	01013a03          	ld	s4,16(sp)
   17390:	00813a83          	ld	s5,8(sp)
   17394:	00013b03          	ld	s6,0(sp)
   17398:	04010113          	addi	sp,sp,64
   1739c:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:36
_DEFUN(_fwalk, (ptr, function),
       struct _reent *ptr _AND
       register int (*function) (FILE *))
{
  register FILE *fp;
  register int n, ret = 0;
   173a0:	00000a13          	li	s4,0
   173a4:	fd1ff06f          	j	17374 <_fwalk+0x7c>

00000000000173a8 <_fwalk_reent>:
_fwalk_reent():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:61
   I/O function (e.g. _fclose_r).  */
int
_DEFUN(_fwalk_reent, (ptr, reent_function),
       struct _reent *ptr _AND
       register int (*reent_function) (struct _reent *, FILE *))
{
   173a8:	fb010113          	addi	sp,sp,-80
   173ac:	01613823          	sd	s6,16(sp)
   173b0:	04113423          	sd	ra,72(sp)
   173b4:	04813023          	sd	s0,64(sp)
   173b8:	02913c23          	sd	s1,56(sp)
   173bc:	03213823          	sd	s2,48(sp)
   173c0:	03313423          	sd	s3,40(sp)
   173c4:	03413023          	sd	s4,32(sp)
   173c8:	01513c23          	sd	s5,24(sp)
   173cc:	01713423          	sd	s7,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:74
   * removed.
   *
   * Avoid locking this list while walking it or else you will
   * introduce a potential deadlock in [at least] refill.c.
   */
  for (g = &ptr->__sglue; g != NULL; g = g->_next)
   173d0:	52050b13          	addi	s6,a0,1312
   173d4:	080b0663          	beqz	s6,17460 <_fwalk_reent+0xb8>
   173d8:	00058b93          	mv	s7,a1
   173dc:	00050a93          	mv	s5,a0
   173e0:	00000a13          	li	s4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:76
    for (fp = g->_iobs, n = g->_niobs; --n >= 0; fp++)
      if (fp->_flags != 0 && fp->_flags != 1 && fp->_file != -1)
   173e4:	00100993          	li	s3,1
   173e8:	fff00913          	li	s2,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:75
   *
   * Avoid locking this list while walking it or else you will
   * introduce a potential deadlock in [at least] refill.c.
   */
  for (g = &ptr->__sglue; g != NULL; g = g->_next)
    for (fp = g->_iobs, n = g->_niobs; --n >= 0; fp++)
   173ec:	008b2483          	lw	s1,8(s6)
   173f0:	010b3403          	ld	s0,16(s6)
   173f4:	fff4849b          	addiw	s1,s1,-1
   173f8:	0204c863          	bltz	s1,17428 <_fwalk_reent+0x80>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:76
      if (fp->_flags != 0 && fp->_flags != 1 && fp->_file != -1)
   173fc:	01045783          	lhu	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:75
   *
   * Avoid locking this list while walking it or else you will
   * introduce a potential deadlock in [at least] refill.c.
   */
  for (g = &ptr->__sglue; g != NULL; g = g->_next)
    for (fp = g->_iobs, n = g->_niobs; --n >= 0; fp++)
   17400:	fff4849b          	addiw	s1,s1,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:76
      if (fp->_flags != 0 && fp->_flags != 1 && fp->_file != -1)
   17404:	00f9fe63          	bleu	a5,s3,17420 <_fwalk_reent+0x78>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:76 (discriminator 1)
   17408:	01241783          	lh	a5,18(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:77
	ret |= (*reent_function) (ptr, fp);
   1740c:	00040593          	mv	a1,s0
   17410:	000a8513          	mv	a0,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:76
   * Avoid locking this list while walking it or else you will
   * introduce a potential deadlock in [at least] refill.c.
   */
  for (g = &ptr->__sglue; g != NULL; g = g->_next)
    for (fp = g->_iobs, n = g->_niobs; --n >= 0; fp++)
      if (fp->_flags != 0 && fp->_flags != 1 && fp->_file != -1)
   17414:	01278663          	beq	a5,s2,17420 <_fwalk_reent+0x78>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:77
	ret |= (*reent_function) (ptr, fp);
   17418:	000b80e7          	jalr	s7
   1741c:	00aa6a33          	or	s4,s4,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:75 (discriminator 2)
   *
   * Avoid locking this list while walking it or else you will
   * introduce a potential deadlock in [at least] refill.c.
   */
  for (g = &ptr->__sglue; g != NULL; g = g->_next)
    for (fp = g->_iobs, n = g->_niobs; --n >= 0; fp++)
   17420:	0b040413          	addi	s0,s0,176
   17424:	fd249ce3          	bne	s1,s2,173fc <_fwalk_reent+0x54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:74
   * removed.
   *
   * Avoid locking this list while walking it or else you will
   * introduce a potential deadlock in [at least] refill.c.
   */
  for (g = &ptr->__sglue; g != NULL; g = g->_next)
   17428:	000b3b03          	ld	s6,0(s6)
   1742c:	fc0b10e3          	bnez	s6,173ec <_fwalk_reent+0x44>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:80
    for (fp = g->_iobs, n = g->_niobs; --n >= 0; fp++)
      if (fp->_flags != 0 && fp->_flags != 1 && fp->_file != -1)
	ret |= (*reent_function) (ptr, fp);

  return ret;
}
   17430:	04813083          	ld	ra,72(sp)
   17434:	000a0513          	mv	a0,s4
   17438:	04013403          	ld	s0,64(sp)
   1743c:	03813483          	ld	s1,56(sp)
   17440:	03013903          	ld	s2,48(sp)
   17444:	02813983          	ld	s3,40(sp)
   17448:	02013a03          	ld	s4,32(sp)
   1744c:	01813a83          	ld	s5,24(sp)
   17450:	01013b03          	ld	s6,16(sp)
   17454:	00813b83          	ld	s7,8(sp)
   17458:	05010113          	addi	sp,sp,80
   1745c:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fwalk.c:63
_DEFUN(_fwalk_reent, (ptr, reent_function),
       struct _reent *ptr _AND
       register int (*reent_function) (struct _reent *, FILE *))
{
  register FILE *fp;
  register int n, ret = 0;
   17460:	00000a13          	li	s4,0
   17464:	fcdff06f          	j	17430 <_fwalk_reent+0x88>

0000000000017468 <iswspace>:
iswspace():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/ctype/iswspace.c:80
	  (c >= 0x2000 && c <= 0x2006) ||
	  (c >= 0x2008 && c <= 0x200a) ||
	  c == 0x2028 || c == 0x2029 ||
	  c == 0x205f || c == 0x3000);
#else
  return (c < 0x100 ? isspace (c) : 0);
   17468:	0ff00793          	li	a5,255
   1746c:	02a7e263          	bltu	a5,a0,17490 <iswspace+0x28>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/ctype/iswspace.c:80 (discriminator 1)
   17470:	8281b783          	ld	a5,-2008(gp) # 24468 <__ctype_ptr__>
   17474:	02051513          	slli	a0,a0,0x20
   17478:	02055513          	srli	a0,a0,0x20
   1747c:	00a78533          	add	a0,a5,a0
   17480:	00154503          	lbu	a0,1(a0)
   17484:	00857513          	andi	a0,a0,8
   17488:	0ff57513          	andi	a0,a0,255
   1748c:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/ctype/iswspace.c:80
   17490:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/ctype/iswspace.c:82
#endif /* _MB_CAPABLE */
}
   17494:	00008067          	ret

0000000000017498 <_setlocale_r>:
_setlocale_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/locale/locale.c:280
char *
_DEFUN(_setlocale_r, (p, category, locale),
       struct _reent *p _AND
       int category _AND
       _CONST char *locale)
{
   17498:	fe010113          	addi	sp,sp,-32
   1749c:	00913423          	sd	s1,8(sp)
   174a0:	00113c23          	sd	ra,24(sp)
   174a4:	00813823          	sd	s0,16(sp)
   174a8:	000224b7          	lui	s1,0x22
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/locale/locale.c:282
#ifndef _MB_CAPABLE
  if (locale)
   174ac:	02060063          	beqz	a2,174cc <_setlocale_r+0x34>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/locale/locale.c:284
    { 
      if (strcmp (locale, "POSIX") && strcmp (locale, "C")
   174b0:	000225b7          	lui	a1,0x22
   174b4:	c1858593          	addi	a1,a1,-1000 # 21c18 <zeroes.4123+0x728>
   174b8:	00060513          	mv	a0,a2
   174bc:	00060413          	mv	s0,a2
   174c0:	b24fa0ef          	jal	117e4 <strcmp>
   174c4:	000224b7          	lui	s1,0x22
   174c8:	00051e63          	bnez	a0,174e4 <_setlocale_r+0x4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/locale/locale.c:288
	  && strcmp (locale, ""))
        return NULL;
    }
  return "C";
   174cc:	b8848513          	addi	a0,s1,-1144 # 21b88 <zeroes.4123+0x698>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/locale/locale.c:417
	  return NULL;
	}
    }
  return currentlocale ();
#endif /* !_MB_CAPABLE */
}
   174d0:	01813083          	ld	ra,24(sp)
   174d4:	01013403          	ld	s0,16(sp)
   174d8:	00813483          	ld	s1,8(sp)
   174dc:	02010113          	addi	sp,sp,32
   174e0:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/locale/locale.c:284 (discriminator 1)
       _CONST char *locale)
{
#ifndef _MB_CAPABLE
  if (locale)
    { 
      if (strcmp (locale, "POSIX") && strcmp (locale, "C")
   174e4:	b8848593          	addi	a1,s1,-1144
   174e8:	00040513          	mv	a0,s0
   174ec:	af8fa0ef          	jal	117e4 <strcmp>
   174f0:	fc050ee3          	beqz	a0,174cc <_setlocale_r+0x34>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/locale/locale.c:285
	  && strcmp (locale, ""))
   174f4:	000215b7          	lui	a1,0x21
   174f8:	6e058593          	addi	a1,a1,1760 # 216e0 <zeroes.4123+0x1f0>
   174fc:	00040513          	mv	a0,s0
   17500:	ae4fa0ef          	jal	117e4 <strcmp>
   17504:	fc0504e3          	beqz	a0,174cc <_setlocale_r+0x34>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/locale/locale.c:286
        return NULL;
   17508:	00000513          	li	a0,0
   1750c:	fc5ff06f          	j	174d0 <_setlocale_r+0x38>

0000000000017510 <__locale_charset>:
__locale_charset():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/locale/locale.c:940
_DEFUN_VOID(__locale_charset)
{
#if 0//def __HAVE_LOCALE_INFO__
  return __get_current_ctype_locale ()->codeset;
#else
  return lc_ctype_charset;
   17510:	00024537          	lui	a0,0x24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/locale/locale.c:942
#endif
}
   17514:	39850513          	addi	a0,a0,920 # 24398 <lc_ctype_charset>
   17518:	00008067          	ret

000000000001751c <__locale_mb_cur_max>:
__locale_mb_cur_max():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/locale/locale.c:952
#if 0//def __HAVE_LOCALE_INFO__
  return __get_current_ctype_locale ()->mb_cur_max[0];
#else
  return __mb_cur_max;
#endif
}
   1751c:	8301a503          	lw	a0,-2000(gp) # 24470 <__mb_cur_max>
   17520:	00008067          	ret

0000000000017524 <__locale_msgcharset>:
__locale_msgcharset():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/locale/locale.c:961
_DEFUN_VOID(__locale_msgcharset)
{
#ifdef __HAVE_LOCALE_INFO__
  return (char *) __get_current_messages_locale ()->codeset;
#else
  return lc_message_charset;
   17524:	00024537          	lui	a0,0x24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/locale/locale.c:963
#endif
}
   17528:	3b850513          	addi	a0,a0,952 # 243b8 <lc_message_charset>
   1752c:	00008067          	ret

0000000000017530 <__locale_cjk_lang>:
__locale_cjk_lang():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/locale/locale.c:969

int
_DEFUN_VOID(__locale_cjk_lang)
{
  return lc_ctype_cjk_lang;
}
   17530:	00000513          	li	a0,0
   17534:	00008067          	ret

0000000000017538 <_localeconv_r>:
_localeconv_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/locale/locale.c:1020
      lconv.int_p_sign_posn = m->p_sign_posn[0];
#endif /* !__HAVE_LOCALE_INFO_EXTENDED__ */
      __mlocale_changed = 0;
    }
#endif /* __HAVE_LOCALE_INFO__ */
  return (struct lconv *) &lconv;
   17538:	00024537          	lui	a0,0x24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/locale/locale.c:1021
}
   1753c:	3d850513          	addi	a0,a0,984 # 243d8 <lconv>
   17540:	00008067          	ret

0000000000017544 <setlocale>:
setlocale():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/locale/locale.c:1033
char *
_DEFUN(setlocale, (category, locale),
       int category _AND
       _CONST char *locale)
{
  return _setlocale_r (_REENT, category, locale);
   17544:	00058613          	mv	a2,a1
   17548:	00050593          	mv	a1,a0
   1754c:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
   17550:	f49ff06f          	j	17498 <_setlocale_r>

0000000000017554 <localeconv>:
localeconv():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/locale/locale.c:1040
#endif /* __CYGWIN__ */

struct lconv *
_DEFUN_VOID(localeconv)
{
  return _localeconv_r (_REENT);
   17554:	00024537          	lui	a0,0x24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/locale/locale.c:1041
}
   17558:	3d850513          	addi	a0,a0,984 # 243d8 <lconv>
   1755c:	00008067          	ret

0000000000017560 <__smakebuf_r>:
__smakebuf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:50
  struct stat64 st;
#else
  struct stat st;
#endif

  if (fp->_flags & __SNBF)
   17560:	01059783          	lh	a5,16(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:41

_VOID
_DEFUN(__smakebuf_r, (ptr, fp),
       struct _reent *ptr _AND
       register FILE *fp)
{
   17564:	f5010113          	addi	sp,sp,-176
   17568:	08913c23          	sd	s1,152(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:50
  struct stat64 st;
#else
  struct stat st;
#endif

  if (fp->_flags & __SNBF)
   1756c:	03079493          	slli	s1,a5,0x30
   17570:	0304d493          	srli	s1,s1,0x30
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:41

_VOID
_DEFUN(__smakebuf_r, (ptr, fp),
       struct _reent *ptr _AND
       register FILE *fp)
{
   17574:	0a113423          	sd	ra,168(sp)
   17578:	0a813023          	sd	s0,160(sp)
   1757c:	09213823          	sd	s2,144(sp)
   17580:	09313423          	sd	s3,136(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:50
  struct stat64 st;
#else
  struct stat st;
#endif

  if (fp->_flags & __SNBF)
   17584:	0024f713          	andi	a4,s1,2
   17588:	0e071063          	bnez	a4,17668 <__smakebuf_r+0x108>
   1758c:	00050913          	mv	s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:59
      return;
    }
#ifdef __USE_INTERNAL_STAT64
  if (fp->_file < 0 || _fstat64_r (ptr, fp->_file, &st) < 0)
#else
  if (fp->_file < 0 || _fstat_r (ptr, fp->_file, &st) < 0)
   17590:	01259503          	lh	a0,18(a1)
   17594:	00058413          	mv	s0,a1
   17598:	04054c63          	bltz	a0,175f0 <__smakebuf_r+0x90>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:59 (discriminator 1)
   1759c:	00010593          	mv	a1,sp
   175a0:	4b5080ef          	jal	20254 <fstat>
   175a4:	04054063          	bltz	a0,175e4 <__smakebuf_r+0x84>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:75
      fp->_flags |= __SNPT;
#endif
    }
  else
    {
      couldbetty = (st.st_mode & S_IFMT) == S_IFCHR;
   175a8:	01012703          	lw	a4,16(sp)
   175ac:	0000f7b7          	lui	a5,0xf
   175b0:	ffffe9b7          	lui	s3,0xffffe
   175b4:	00f777b3          	and	a5,a4,a5
   175b8:	013789bb          	addw	s3,a5,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:86
#ifdef _FSEEK_OPTIMIZATION
      /*
       * Optimize fseek() only if it is a regular file.
       * (The test for __sseek is mainly paranoia.)
       */
      if ((st.st_mode & S_IFMT) == S_IFREG && fp->_seek == __sseek)
   175bc:	00008737          	lui	a4,0x8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:75
      fp->_flags |= __SNPT;
#endif
    }
  else
    {
      couldbetty = (st.st_mode & S_IFMT) == S_IFCHR;
   175c0:	0019b993          	seqz	s3,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:86
#ifdef _FSEEK_OPTIMIZATION
      /*
       * Optimize fseek() only if it is a regular file.
       * (The test for __sseek is mainly paranoia.)
       */
      if ((st.st_mode & S_IFMT) == S_IFREG && fp->_seek == __sseek)
   175c4:	0ce78a63          	beq	a5,a4,17698 <__smakebuf_r+0x138>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:96
#else
	  fp->_blksize = 1024;
#endif
	}
      else
	fp->_flags |= __SNPT;
   175c8:	01045703          	lhu	a4,16(s0)
   175cc:	000017b7          	lui	a5,0x1
   175d0:	8007879b          	addiw	a5,a5,-2048
   175d4:	00f767b3          	or	a5,a4,a5
   175d8:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:79
    {
      couldbetty = (st.st_mode & S_IFMT) == S_IFCHR;
#ifdef HAVE_BLKSIZE
      size = st.st_blksize <= 0 ? BUFSIZ : st.st_blksize;
#else
      size = BUFSIZ;
   175dc:	40000493          	li	s1,1024
   175e0:	0340006f          	j	17614 <__smakebuf_r+0xb4>
   175e4:	01041783          	lh	a5,16(s0)
   175e8:	03079493          	slli	s1,a5,0x30
   175ec:	0304d493          	srli	s1,s1,0x30
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:67
      couldbetty = 0;
      /* Check if we are be called by asprintf family for initial buffer.  */
      if (fp->_flags & __SMBF)
        size = _DEFAULT_ASPRINTF_BUFSIZE;
      else
        size = BUFSIZ;
   175f0:	03849493          	slli	s1,s1,0x38
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:70
#ifdef _FSEEK_OPTIMIZATION
      /* do not try to optimise fseek() */
      fp->_flags |= __SNPT;
   175f4:	00001737          	lui	a4,0x1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:67
      couldbetty = 0;
      /* Check if we are be called by asprintf family for initial buffer.  */
      if (fp->_flags & __SMBF)
        size = _DEFAULT_ASPRINTF_BUFSIZE;
      else
        size = BUFSIZ;
   175f8:	43f4d493          	srai	s1,s1,0x3f
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:70
#ifdef _FSEEK_OPTIMIZATION
      /* do not try to optimise fseek() */
      fp->_flags |= __SNPT;
   175fc:	8007071b          	addiw	a4,a4,-2048
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:67
      couldbetty = 0;
      /* Check if we are be called by asprintf family for initial buffer.  */
      if (fp->_flags & __SMBF)
        size = _DEFAULT_ASPRINTF_BUFSIZE;
      else
        size = BUFSIZ;
   17600:	c404f493          	andi	s1,s1,-960
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:70
#ifdef _FSEEK_OPTIMIZATION
      /* do not try to optimise fseek() */
      fp->_flags |= __SNPT;
   17604:	00e7e7b3          	or	a5,a5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:67
      couldbetty = 0;
      /* Check if we are be called by asprintf family for initial buffer.  */
      if (fp->_flags & __SMBF)
        size = _DEFAULT_ASPRINTF_BUFSIZE;
      else
        size = BUFSIZ;
   17608:	40048493          	addi	s1,s1,1024
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:70
#ifdef _FSEEK_OPTIMIZATION
      /* do not try to optimise fseek() */
      fp->_flags |= __SNPT;
   1760c:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:62
  if (fp->_file < 0 || _fstat64_r (ptr, fp->_file, &st) < 0)
#else
  if (fp->_file < 0 || _fstat_r (ptr, fp->_file, &st) < 0)
#endif
    {
      couldbetty = 0;
   17610:	00000993          	li	s3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:99
	}
      else
	fp->_flags |= __SNPT;
#endif
    }
  if ((p = _malloc_r (ptr, size)) == NULL)
   17614:	00048593          	mv	a1,s1
   17618:	00090513          	mv	a0,s2
   1761c:	ef0f90ef          	jal	10d0c <_malloc_r>
   17620:	0c050063          	beqz	a0,176e0 <__smakebuf_r+0x180>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:111
	}
    }
  else
    {
      ptr->__cleanup = _cleanup_r;
      fp->_flags |= __SMBF;
   17624:	01045783          	lhu	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:110
	  fp->_bf._size = 1;
	}
    }
  else
    {
      ptr->__cleanup = _cleanup_r;
   17628:	00016737          	lui	a4,0x16
   1762c:	44870713          	addi	a4,a4,1096 # 16448 <_cleanup_r>
   17630:	04e93c23          	sd	a4,88(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:111
      fp->_flags |= __SMBF;
   17634:	0807e793          	ori	a5,a5,128
   17638:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:112
      fp->_bf._base = fp->_p = (unsigned char *) p;
   1763c:	00a43023          	sd	a0,0(s0)
   17640:	00a43c23          	sd	a0,24(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:113
      fp->_bf._size = size;
   17644:	02942023          	sw	s1,32(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:114
      if (couldbetty && _isatty_r (ptr, fp->_file))
   17648:	06099e63          	bnez	s3,176c4 <__smakebuf_r+0x164>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:117
	fp->_flags |= __SLBF;
    }
}
   1764c:	0a813083          	ld	ra,168(sp)
   17650:	0a013403          	ld	s0,160(sp)
   17654:	09813483          	ld	s1,152(sp)
   17658:	09013903          	ld	s2,144(sp)
   1765c:	08813983          	ld	s3,136(sp)
   17660:	0b010113          	addi	sp,sp,176
   17664:	00008067          	ret
   17668:	0a813083          	ld	ra,168(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:52
  struct stat st;
#endif

  if (fp->_flags & __SNBF)
    {
      fp->_bf._base = fp->_p = fp->_nbuf;
   1766c:	07758793          	addi	a5,a1,119
   17670:	00f5b023          	sd	a5,0(a1)
   17674:	00f5bc23          	sd	a5,24(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:53
      fp->_bf._size = 1;
   17678:	00100793          	li	a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:117
      fp->_bf._base = fp->_p = (unsigned char *) p;
      fp->_bf._size = size;
      if (couldbetty && _isatty_r (ptr, fp->_file))
	fp->_flags |= __SLBF;
    }
}
   1767c:	0a013403          	ld	s0,160(sp)
   17680:	09813483          	ld	s1,152(sp)
   17684:	09013903          	ld	s2,144(sp)
   17688:	08813983          	ld	s3,136(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:53
#endif

  if (fp->_flags & __SNBF)
    {
      fp->_bf._base = fp->_p = fp->_nbuf;
      fp->_bf._size = 1;
   1768c:	02f5a023          	sw	a5,32(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:117
      fp->_bf._base = fp->_p = (unsigned char *) p;
      fp->_bf._size = size;
      if (couldbetty && _isatty_r (ptr, fp->_file))
	fp->_flags |= __SLBF;
    }
}
   17690:	0b010113          	addi	sp,sp,176
   17694:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:86 (discriminator 1)
#ifdef _FSEEK_OPTIMIZATION
      /*
       * Optimize fseek() only if it is a regular file.
       * (The test for __sseek is mainly paranoia.)
       */
      if ((st.st_mode & S_IFMT) == S_IFREG && fp->_seek == __sseek)
   17698:	04843703          	ld	a4,72(s0)
   1769c:	000197b7          	lui	a5,0x19
   176a0:	79478793          	addi	a5,a5,1940 # 19794 <__sseek>
   176a4:	f2f712e3          	bne	a4,a5,175c8 <__smakebuf_r+0x68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:88
	{
	  fp->_flags |= __SOPT;
   176a8:	01045783          	lhu	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:92
#ifdef HAVE_BLKSIZE
	  fp->_blksize = st.st_blksize;
#else
	  fp->_blksize = 1024;
   176ac:	40000713          	li	a4,1024
   176b0:	08e42423          	sw	a4,136(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:88
       * Optimize fseek() only if it is a regular file.
       * (The test for __sseek is mainly paranoia.)
       */
      if ((st.st_mode & S_IFMT) == S_IFREG && fp->_seek == __sseek)
	{
	  fp->_flags |= __SOPT;
   176b4:	00e7e7b3          	or	a5,a5,a4
   176b8:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:79
    {
      couldbetty = (st.st_mode & S_IFMT) == S_IFCHR;
#ifdef HAVE_BLKSIZE
      size = st.st_blksize <= 0 ? BUFSIZ : st.st_blksize;
#else
      size = BUFSIZ;
   176bc:	40000493          	li	s1,1024
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:92
	{
	  fp->_flags |= __SOPT;
#ifdef HAVE_BLKSIZE
	  fp->_blksize = st.st_blksize;
#else
	  fp->_blksize = 1024;
   176c0:	f55ff06f          	j	17614 <__smakebuf_r+0xb4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:114 (discriminator 1)
    {
      ptr->__cleanup = _cleanup_r;
      fp->_flags |= __SMBF;
      fp->_bf._base = fp->_p = (unsigned char *) p;
      fp->_bf._size = size;
      if (couldbetty && _isatty_r (ptr, fp->_file))
   176c4:	01241503          	lh	a0,18(s0)
   176c8:	519080ef          	jal	203e0 <isatty>
   176cc:	f80500e3          	beqz	a0,1764c <__smakebuf_r+0xec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:115
	fp->_flags |= __SLBF;
   176d0:	01045783          	lhu	a5,16(s0)
   176d4:	0017e793          	ori	a5,a5,1
   176d8:	00f41823          	sh	a5,16(s0)
   176dc:	f71ff06f          	j	1764c <__smakebuf_r+0xec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:101
	fp->_flags |= __SNPT;
#endif
    }
  if ((p = _malloc_r (ptr, size)) == NULL)
    {
      if (!(fp->_flags & __SSTR))
   176e0:	01041783          	lh	a5,16(s0)
   176e4:	2007f713          	andi	a4,a5,512
   176e8:	f60712e3          	bnez	a4,1764c <__smakebuf_r+0xec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:103
	{
	  fp->_flags |= __SNBF;
   176ec:	0027e793          	ori	a5,a5,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:104
	  fp->_bf._base = fp->_p = fp->_nbuf;
   176f0:	07740713          	addi	a4,s0,119
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:103
    }
  if ((p = _malloc_r (ptr, size)) == NULL)
    {
      if (!(fp->_flags & __SSTR))
	{
	  fp->_flags |= __SNBF;
   176f4:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:105
	  fp->_bf._base = fp->_p = fp->_nbuf;
	  fp->_bf._size = 1;
   176f8:	00100793          	li	a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:104
  if ((p = _malloc_r (ptr, size)) == NULL)
    {
      if (!(fp->_flags & __SSTR))
	{
	  fp->_flags |= __SNBF;
	  fp->_bf._base = fp->_p = fp->_nbuf;
   176fc:	00e43023          	sd	a4,0(s0)
   17700:	00e43c23          	sd	a4,24(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/makebuf.c:105
	  fp->_bf._size = 1;
   17704:	02f42023          	sw	a5,32(s0)
   17708:	f45ff06f          	j	1764c <__smakebuf_r+0xec>

000000000001770c <_mbrtowc_r>:
_mbrtowc_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:17
	struct _reent *ptr _AND
	wchar_t *pwc _AND
	const char *s _AND
	size_t n _AND
	mbstate_t *ps)
{
   1770c:	fc010113          	addi	sp,sp,-64
   17710:	02913423          	sd	s1,40(sp)
   17714:	03213023          	sd	s2,32(sp)
   17718:	02113c23          	sd	ra,56(sp)
   1771c:	02813823          	sd	s0,48(sp)
   17720:	01313c23          	sd	s3,24(sp)
   17724:	01413823          	sd	s4,16(sp)
   17728:	01513423          	sd	s5,8(sp)
   1772c:	00050493          	mv	s1,a0
   17730:	00070913          	mv	s2,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:28
      _REENT_CHECK_MISC(ptr);
      ps = &(_REENT_MBRTOWC_STATE(ptr));
    }
#endif

  if (s == NULL)
   17734:	06060c63          	beqz	a2,177ac <_mbrtowc_r+0xa0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:31
    retval = __mbtowc (ptr, NULL, "", 1, __locale_charset (), ps);
  else
    retval = __mbtowc (ptr, pwc, s, n, __locale_charset (), ps);
   17738:	8381ba83          	ld	s5,-1992(gp) # 24478 <__mbtowc>
   1773c:	00060413          	mv	s0,a2
   17740:	00058993          	mv	s3,a1
   17744:	00068a13          	mv	s4,a3
   17748:	dc9ff0ef          	jal	17510 <__locale_charset>
   1774c:	00090793          	mv	a5,s2
   17750:	00050713          	mv	a4,a0
   17754:	000a0693          	mv	a3,s4
   17758:	00040613          	mv	a2,s0
   1775c:	00098593          	mv	a1,s3
   17760:	00048513          	mv	a0,s1
   17764:	000a80e7          	jalr	s5
   17768:	00050793          	mv	a5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:33

  if (retval == -1)
   1776c:	fff00713          	li	a4,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:40
      ps->__count = 0;
      ptr->_errno = EILSEQ;
      return (size_t)(-1);
    }
  else
    return (size_t)retval;
   17770:	00078513          	mv	a0,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:33
  if (s == NULL)
    retval = __mbtowc (ptr, NULL, "", 1, __locale_charset (), ps);
  else
    retval = __mbtowc (ptr, pwc, s, n, __locale_charset (), ps);

  if (retval == -1)
   17774:	00e79a63          	bne	a5,a4,17788 <_mbrtowc_r+0x7c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:35
    {
      ps->__count = 0;
   17778:	00092023          	sw	zero,0(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:36
      ptr->_errno = EILSEQ;
   1777c:	08a00793          	li	a5,138
   17780:	00f4a023          	sw	a5,0(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:37
      return (size_t)(-1);
   17784:	fff00513          	li	a0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:41
    }
  else
    return (size_t)retval;
}
   17788:	03813083          	ld	ra,56(sp)
   1778c:	03013403          	ld	s0,48(sp)
   17790:	02813483          	ld	s1,40(sp)
   17794:	02013903          	ld	s2,32(sp)
   17798:	01813983          	ld	s3,24(sp)
   1779c:	01013a03          	ld	s4,16(sp)
   177a0:	00813a83          	ld	s5,8(sp)
   177a4:	04010113          	addi	sp,sp,64
   177a8:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:29
      ps = &(_REENT_MBRTOWC_STATE(ptr));
    }
#endif

  if (s == NULL)
    retval = __mbtowc (ptr, NULL, "", 1, __locale_charset (), ps);
   177ac:	8381b403          	ld	s0,-1992(gp) # 24478 <__mbtowc>
   177b0:	d61ff0ef          	jal	17510 <__locale_charset>
   177b4:	00021637          	lui	a2,0x21
   177b8:	00090793          	mv	a5,s2
   177bc:	00050713          	mv	a4,a0
   177c0:	00100693          	li	a3,1
   177c4:	6e060613          	addi	a2,a2,1760 # 216e0 <zeroes.4123+0x1f0>
   177c8:	00000593          	li	a1,0
   177cc:	00048513          	mv	a0,s1
   177d0:	000400e7          	jalr	s0
   177d4:	00050793          	mv	a5,a0
   177d8:	f95ff06f          	j	1776c <_mbrtowc_r+0x60>

00000000000177dc <mbrtowc>:
mbrtowc():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:50
_DEFUN (mbrtowc, (pwc, s, n, ps),
	wchar_t *__restrict pwc _AND
	const char *__restrict s _AND
	size_t n _AND
	mbstate_t *__restrict ps)
{
   177dc:	fc010113          	addi	sp,sp,-64
   177e0:	02913423          	sd	s1,40(sp)
   177e4:	03213023          	sd	s2,32(sp)
   177e8:	02113c23          	sd	ra,56(sp)
   177ec:	02813823          	sd	s0,48(sp)
   177f0:	01313c23          	sd	s3,24(sp)
   177f4:	01413823          	sd	s4,16(sp)
   177f8:	01513423          	sd	s5,8(sp)
   177fc:	00068913          	mv	s2,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:55
#if defined(PREFER_SIZE_OVER_SPEED) || defined(__OPTIMIZE_SIZE__)
  return _mbrtowc_r (_REENT, pwc, s, n, ps);
#else
  int retval = 0;
  struct _reent *reent = _REENT;
   17800:	8101b483          	ld	s1,-2032(gp) # 24450 <_impure_ptr>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:65
      _REENT_CHECK_MISC(reent);
      ps = &(_REENT_MBRTOWC_STATE(reent));
    }
#endif

  if (s == NULL)
   17804:	06058c63          	beqz	a1,1787c <mbrtowc+0xa0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:68
    retval = __mbtowc (reent, NULL, "", 1, __locale_charset (), ps);
  else
    retval = __mbtowc (reent, pwc, s, n, __locale_charset (), ps);
   17808:	8381ba83          	ld	s5,-1992(gp) # 24478 <__mbtowc>
   1780c:	00058413          	mv	s0,a1
   17810:	00060a13          	mv	s4,a2
   17814:	00050993          	mv	s3,a0
   17818:	cf9ff0ef          	jal	17510 <__locale_charset>
   1781c:	00090793          	mv	a5,s2
   17820:	00050713          	mv	a4,a0
   17824:	000a0693          	mv	a3,s4
   17828:	00040613          	mv	a2,s0
   1782c:	00098593          	mv	a1,s3
   17830:	00048513          	mv	a0,s1
   17834:	000a80e7          	jalr	s5
   17838:	00050793          	mv	a5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:70

  if (retval == -1)
   1783c:	fff00713          	li	a4,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:77
      ps->__count = 0;
      reent->_errno = EILSEQ;
      return (size_t)(-1);
    }
  else
    return (size_t)retval;
   17840:	00078513          	mv	a0,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:70
  if (s == NULL)
    retval = __mbtowc (reent, NULL, "", 1, __locale_charset (), ps);
  else
    retval = __mbtowc (reent, pwc, s, n, __locale_charset (), ps);

  if (retval == -1)
   17844:	00e79a63          	bne	a5,a4,17858 <mbrtowc+0x7c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:72
    {
      ps->__count = 0;
   17848:	00092023          	sw	zero,0(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:73
      reent->_errno = EILSEQ;
   1784c:	08a00793          	li	a5,138
   17850:	00f4a023          	sw	a5,0(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:74
      return (size_t)(-1);
   17854:	fff00513          	li	a0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:79
    }
  else
    return (size_t)retval;
#endif /* not PREFER_SIZE_OVER_SPEED */
}
   17858:	03813083          	ld	ra,56(sp)
   1785c:	03013403          	ld	s0,48(sp)
   17860:	02813483          	ld	s1,40(sp)
   17864:	02013903          	ld	s2,32(sp)
   17868:	01813983          	ld	s3,24(sp)
   1786c:	01013a03          	ld	s4,16(sp)
   17870:	00813a83          	ld	s5,8(sp)
   17874:	04010113          	addi	sp,sp,64
   17878:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbrtowc.c:66
      ps = &(_REENT_MBRTOWC_STATE(reent));
    }
#endif

  if (s == NULL)
    retval = __mbtowc (reent, NULL, "", 1, __locale_charset (), ps);
   1787c:	8381b403          	ld	s0,-1992(gp) # 24478 <__mbtowc>
   17880:	c91ff0ef          	jal	17510 <__locale_charset>
   17884:	00021637          	lui	a2,0x21
   17888:	00090793          	mv	a5,s2
   1788c:	00050713          	mv	a4,a0
   17890:	00100693          	li	a3,1
   17894:	6e060613          	addi	a2,a2,1760 # 216e0 <zeroes.4123+0x1f0>
   17898:	00000593          	li	a1,0
   1789c:	00048513          	mv	a0,s1
   178a0:	000400e7          	jalr	s0
   178a4:	00050793          	mv	a5,a0
   178a8:	f95ff06f          	j	1783c <mbrtowc+0x60>

00000000000178ac <__ascii_mbtowc>:
__ascii_mbtowc():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbtowc_r.c:38
        wchar_t       *pwc     _AND 
        const char    *s       _AND        
        size_t         n       _AND
	const char    *charset _AND
        mbstate_t      *state)
{
   178ac:	ff010113          	addi	sp,sp,-16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbtowc_r.c:42
  wchar_t dummy;
  unsigned char *t = (unsigned char *)s;

  if (pwc == NULL)
   178b0:	02058463          	beqz	a1,178d8 <__ascii_mbtowc+0x2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbtowc_r.c:45
    pwc = &dummy;

  if (s == NULL)
   178b4:	02060663          	beqz	a2,178e0 <__ascii_mbtowc+0x34>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbtowc_r.c:49
    return 0;

  if (n == 0)
    return -2;
   178b8:	ffe00513          	li	a0,-2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbtowc_r.c:48
    pwc = &dummy;

  if (s == NULL)
    return 0;

  if (n == 0)
   178bc:	00068a63          	beqz	a3,178d0 <__ascii_mbtowc+0x24>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbtowc_r.c:59
      r->_errno = EILSEQ;
      return -1;
    }
#endif

  *pwc = (wchar_t)*t;
   178c0:	00064783          	lbu	a5,0(a2)
   178c4:	00f5a023          	sw	a5,0(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbtowc_r.c:46

  if (pwc == NULL)
    pwc = &dummy;

  if (s == NULL)
    return 0;
   178c8:	00064503          	lbu	a0,0(a2)
   178cc:	00a03533          	snez	a0,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbtowc_r.c:65
  
  if (*t == '\0')
    return 0;

  return 1;
}
   178d0:	01010113          	addi	sp,sp,16
   178d4:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbtowc_r.c:43
{
  wchar_t dummy;
  unsigned char *t = (unsigned char *)s;

  if (pwc == NULL)
    pwc = &dummy;
   178d8:	00c10593          	addi	a1,sp,12
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbtowc_r.c:45

  if (s == NULL)
   178dc:	fc061ee3          	bnez	a2,178b8 <__ascii_mbtowc+0xc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbtowc_r.c:46
    return 0;
   178e0:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbtowc_r.c:65
  
  if (*t == '\0')
    return 0;

  return 1;
}
   178e4:	01010113          	addi	sp,sp,16
   178e8:	00008067          	ret

00000000000178ec <_mbtowc_r>:
_mbtowc_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbtowc_r.c:26
        struct _reent *r   _AND
        wchar_t       *__restrict pwc _AND 
        const char    *__restrict s   _AND        
        size_t         n   _AND
        mbstate_t      *state)
{
   178ec:	fc010113          	addi	sp,sp,-64
   178f0:	02813823          	sd	s0,48(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbtowc_r.c:27
  return __mbtowc (r, pwc, s, n, __locale_charset (), state);
   178f4:	8381b403          	ld	s0,-1992(gp) # 24478 <__mbtowc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbtowc_r.c:26
        struct _reent *r   _AND
        wchar_t       *__restrict pwc _AND 
        const char    *__restrict s   _AND        
        size_t         n   _AND
        mbstate_t      *state)
{
   178f8:	02113c23          	sd	ra,56(sp)
   178fc:	02913423          	sd	s1,40(sp)
   17900:	03213023          	sd	s2,32(sp)
   17904:	01313c23          	sd	s3,24(sp)
   17908:	01413823          	sd	s4,16(sp)
   1790c:	01513423          	sd	s5,8(sp)
   17910:	00050493          	mv	s1,a0
   17914:	00070a93          	mv	s5,a4
   17918:	00058913          	mv	s2,a1
   1791c:	00060993          	mv	s3,a2
   17920:	00068a13          	mv	s4,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbtowc_r.c:27
  return __mbtowc (r, pwc, s, n, __locale_charset (), state);
   17924:	bedff0ef          	jal	17510 <__locale_charset>
   17928:	000a8793          	mv	a5,s5
   1792c:	00050713          	mv	a4,a0
   17930:	000a0693          	mv	a3,s4
   17934:	00098613          	mv	a2,s3
   17938:	00090593          	mv	a1,s2
   1793c:	00048513          	mv	a0,s1
   17940:	00040313          	mv	t1,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbtowc_r.c:28
}
   17944:	03813083          	ld	ra,56(sp)
   17948:	03013403          	ld	s0,48(sp)
   1794c:	02813483          	ld	s1,40(sp)
   17950:	02013903          	ld	s2,32(sp)
   17954:	01813983          	ld	s3,24(sp)
   17958:	01013a03          	ld	s4,16(sp)
   1795c:	00813a83          	ld	s5,8(sp)
   17960:	04010113          	addi	sp,sp,64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mbtowc_r.c:27
        wchar_t       *__restrict pwc _AND 
        const char    *__restrict s   _AND        
        size_t         n   _AND
        mbstate_t      *state)
{
  return __mbtowc (r, pwc, s, n, __locale_charset (), state);
   17964:	00030067          	jr	t1

0000000000017968 <memchr>:
memchr():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:85
#if !defined(PREFER_SIZE_OVER_SPEED) && !defined(__OPTIMIZE_SIZE__)
  unsigned long *asrc;
  unsigned long  mask;
  unsigned int i;

  while (UNALIGNED (src))
   17968:	00757793          	andi	a5,a0,7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:78
	_CONST _PTR src_void _AND
	int c _AND
	size_t length)
{
  _CONST unsigned char *src = (_CONST unsigned char *) src_void;
  unsigned char d = c;
   1796c:	0ff5f813          	andi	a6,a1,255
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:85
#if !defined(PREFER_SIZE_OVER_SPEED) && !defined(__OPTIMIZE_SIZE__)
  unsigned long *asrc;
  unsigned long  mask;
  unsigned int i;

  while (UNALIGNED (src))
   17970:	0c078c63          	beqz	a5,17a48 <memchr+0xe0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:87
    {
      if (!length--)
   17974:	fff60793          	addi	a5,a2,-1
   17978:	06060463          	beqz	a2,179e0 <memchr+0x78>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:89
        return NULL;
      if (*src == d)
   1797c:	00054703          	lbu	a4,0(a0)
   17980:	07070263          	beq	a4,a6,179e4 <memchr+0x7c>
   17984:	00080693          	mv	a3,a6
   17988:	0140006f          	j	1799c <memchr+0x34>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:87
  unsigned long  mask;
  unsigned int i;

  while (UNALIGNED (src))
    {
      if (!length--)
   1798c:	04078a63          	beqz	a5,179e0 <memchr+0x78>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:89
        return NULL;
      if (*src == d)
   17990:	00054703          	lbu	a4,0(a0)
   17994:	fff78793          	addi	a5,a5,-1
   17998:	04d70663          	beq	a4,a3,179e4 <memchr+0x7c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:91
        return (void *) src;
      src++;
   1799c:	00150513          	addi	a0,a0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:85
#if !defined(PREFER_SIZE_OVER_SPEED) && !defined(__OPTIMIZE_SIZE__)
  unsigned long *asrc;
  unsigned long  mask;
  unsigned int i;

  while (UNALIGNED (src))
   179a0:	00757713          	andi	a4,a0,7
   179a4:	fe0714e3          	bnez	a4,1798c <memchr+0x24>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:94
      if (*src == d)
        return (void *) src;
      src++;
    }

  if (!TOO_SMALL (length))
   179a8:	00700693          	li	a3,7
   179ac:	02f6ee63          	bltu	a3,a5,179e8 <memchr+0x80>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:126
      src = (unsigned char *) asrc;
    }

#endif /* not PREFER_SIZE_OVER_SPEED */

  while (length--)
   179b0:	02078863          	beqz	a5,179e0 <memchr+0x78>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:128
    {
      if (*src == d)
   179b4:	00054703          	lbu	a4,0(a0)
   179b8:	03070663          	beq	a4,a6,179e4 <memchr+0x7c>
   179bc:	00150713          	addi	a4,a0,1
   179c0:	00f507b3          	add	a5,a0,a5
   179c4:	00080613          	mv	a2,a6
   179c8:	0100006f          	j	179d8 <memchr+0x70>
   179cc:	00170713          	addi	a4,a4,1
   179d0:	fff74683          	lbu	a3,-1(a4)
   179d4:	00c68863          	beq	a3,a2,179e4 <memchr+0x7c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:130
        return (void *) src;
      src++;
   179d8:	00070513          	mv	a0,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:126
      src = (unsigned char *) asrc;
    }

#endif /* not PREFER_SIZE_OVER_SPEED */

  while (length--)
   179dc:	fee798e3          	bne	a5,a4,179cc <memchr+0x64>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:88
  unsigned int i;

  while (UNALIGNED (src))
    {
      if (!length--)
        return NULL;
   179e0:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:134
        return (void *) src;
      src++;
    }

  return NULL;
}
   179e4:	00008067          	ret
   179e8:	0ff5f593          	andi	a1,a1,255
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:105
         contain the search character, which is detected by XORing
         the word-sized segment with a word-sized block of the search
         character and then detecting for the presence of NUL in the
         result.  */
      asrc = (unsigned long *) src;
      mask = d << 8 | d;
   179ec:	0085971b          	slliw	a4,a1,0x8
   179f0:	00b765b3          	or	a1,a4,a1
   179f4:	00058713          	mv	a4,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:106
      mask = mask << 16 | mask;
   179f8:	01071613          	slli	a2,a4,0x10
   179fc:	00c76733          	or	a4,a4,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:112
      for (i = 32; i < LBLOCKSIZE * 8; i <<= 1)
        mask = (mask << i) | mask;

      while (length >= LBLOCKSIZE)
        {
          if (DETECTCHAR (*asrc, mask))
   17a00:	00024637          	lui	a2,0x24
   17a04:	4e863303          	ld	t1,1256(a2) # 244e8 <mask+0x50>
   17a08:	00024637          	lui	a2,0x24
   17a0c:	4f063883          	ld	a7,1264(a2) # 244f0 <mask+0x58>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:108
         result.  */
      asrc = (unsigned long *) src;
      mask = d << 8 | d;
      mask = mask << 16 | mask;
      for (i = 32; i < LBLOCKSIZE * 8; i <<= 1)
        mask = (mask << i) | mask;
   17a10:	02071613          	slli	a2,a4,0x20
   17a14:	00e66633          	or	a2,a2,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:110

      while (length >= LBLOCKSIZE)
   17a18:	00068593          	mv	a1,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:112
        {
          if (DETECTCHAR (*asrc, mask))
   17a1c:	00053703          	ld	a4,0(a0)
   17a20:	00e64733          	xor	a4,a2,a4
   17a24:	006706b3          	add	a3,a4,t1
   17a28:	fff74713          	not	a4,a4
   17a2c:	00e6f733          	and	a4,a3,a4
   17a30:	01177733          	and	a4,a4,a7
   17a34:	f80710e3          	bnez	a4,179b4 <memchr+0x4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:114
            break;
          length -= LBLOCKSIZE;
   17a38:	ff878793          	addi	a5,a5,-8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:115
          asrc++;
   17a3c:	00850513          	addi	a0,a0,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:110
      mask = d << 8 | d;
      mask = mask << 16 | mask;
      for (i = 32; i < LBLOCKSIZE * 8; i <<= 1)
        mask = (mask << i) | mask;

      while (length >= LBLOCKSIZE)
   17a40:	fcf5eee3          	bltu	a1,a5,17a1c <memchr+0xb4>
   17a44:	f6dff06f          	j	179b0 <memchr+0x48>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memchr.c:85
#if !defined(PREFER_SIZE_OVER_SPEED) && !defined(__OPTIMIZE_SIZE__)
  unsigned long *asrc;
  unsigned long  mask;
  unsigned int i;

  while (UNALIGNED (src))
   17a48:	00060793          	mv	a5,a2
   17a4c:	f5dff06f          	j	179a8 <memchr+0x40>

0000000000017a50 <memmove>:
memmove():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:94
  char *dst = dst_void;
  _CONST char *src = src_void;
  long *aligned_dst;
  _CONST long *aligned_src;

  if (src < dst && dst < src + length)
   17a50:	02a5f863          	bleu	a0,a1,17a80 <memmove+0x30>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:94 (discriminator 1)
   17a54:	00c58733          	add	a4,a1,a2
   17a58:	02e57463          	bleu	a4,a0,17a80 <memmove+0x30>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:98
    {
      /* Destructive overlap...have to copy backwards */
      src += length;
      dst += length;
   17a5c:	00c507b3          	add	a5,a0,a2
   17a60:	40c785b3          	sub	a1,a5,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:99
      while (length--)
   17a64:	0e060263          	beqz	a2,17b48 <memmove+0xf8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:101
	{
	  *--dst = *--src;
   17a68:	fff70713          	addi	a4,a4,-1
   17a6c:	00074683          	lbu	a3,0(a4)
   17a70:	fff78793          	addi	a5,a5,-1
   17a74:	00d78023          	sb	a3,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:99
  if (src < dst && dst < src + length)
    {
      /* Destructive overlap...have to copy backwards */
      src += length;
      dst += length;
      while (length--)
   17a78:	fef598e3          	bne	a1,a5,17a68 <memmove+0x18>
   17a7c:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:109
  else
    {
      /* Use optimizing algorithm for a non-destructive copy to closely 
         match memcpy. If the size is small or either SRC or DST is unaligned,
         then punt into the byte copy loop.  This should be rare.  */
      if (!TOO_SMALL(length) && !UNALIGNED (src, dst))
   17a80:	01f00893          	li	a7,31
   17a84:	0cc8f463          	bleu	a2,a7,17b4c <memmove+0xfc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:109 (discriminator 1)
   17a88:	00a5e7b3          	or	a5,a1,a0
   17a8c:	0077f793          	andi	a5,a5,7
   17a90:	0c079463          	bnez	a5,17b58 <memmove+0x108>
   17a94:	00058713          	mv	a4,a1
   17a98:	00050793          	mv	a5,a0
   17a9c:	00060693          	mv	a3,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:117
          aligned_src = (long*)src;

          /* Copy 4X long words at a time if possible.  */
          while (length >= BIGBLOCKSIZE)
            {
              *aligned_dst++ = *aligned_src++;
   17aa0:	00073803          	ld	a6,0(a4)
   17aa4:	02078793          	addi	a5,a5,32
   17aa8:	02070713          	addi	a4,a4,32
   17aac:	ff07b023          	sd	a6,-32(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:118
              *aligned_dst++ = *aligned_src++;
   17ab0:	fe873803          	ld	a6,-24(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:121
              *aligned_dst++ = *aligned_src++;
              *aligned_dst++ = *aligned_src++;
              length -= BIGBLOCKSIZE;
   17ab4:	fe068693          	addi	a3,a3,-32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:118

          /* Copy 4X long words at a time if possible.  */
          while (length >= BIGBLOCKSIZE)
            {
              *aligned_dst++ = *aligned_src++;
              *aligned_dst++ = *aligned_src++;
   17ab8:	ff07b423          	sd	a6,-24(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:119
              *aligned_dst++ = *aligned_src++;
   17abc:	ff073803          	ld	a6,-16(a4)
   17ac0:	ff07b823          	sd	a6,-16(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:120
              *aligned_dst++ = *aligned_src++;
   17ac4:	ff873803          	ld	a6,-8(a4)
   17ac8:	ff07bc23          	sd	a6,-8(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:115
        {
          aligned_dst = (long*)dst;
          aligned_src = (long*)src;

          /* Copy 4X long words at a time if possible.  */
          while (length >= BIGBLOCKSIZE)
   17acc:	fcd8eae3          	bltu	a7,a3,17aa0 <memmove+0x50>
   17ad0:	fe060713          	addi	a4,a2,-32
   17ad4:	fe077713          	andi	a4,a4,-32
   17ad8:	02070713          	addi	a4,a4,32
   17adc:	01f67e13          	andi	t3,a2,31
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:125
              *aligned_dst++ = *aligned_src++;
              length -= BIGBLOCKSIZE;
            }

          /* Copy one long word at a time if possible.  */
          while (length >= LITTLEBLOCKSIZE)
   17ae0:	00700313          	li	t1,7
   17ae4:	00e507b3          	add	a5,a0,a4
   17ae8:	00e585b3          	add	a1,a1,a4
   17aec:	07c37c63          	bleu	t3,t1,17b64 <memmove+0x114>
   17af0:	00058813          	mv	a6,a1
   17af4:	00078693          	mv	a3,a5
   17af8:	000e0713          	mv	a4,t3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:127
            {
              *aligned_dst++ = *aligned_src++;
   17afc:	00880813          	addi	a6,a6,8
   17b00:	ff883883          	ld	a7,-8(a6)
   17b04:	00868693          	addi	a3,a3,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:128
              length -= LITTLEBLOCKSIZE;
   17b08:	ff870713          	addi	a4,a4,-8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:127
            }

          /* Copy one long word at a time if possible.  */
          while (length >= LITTLEBLOCKSIZE)
            {
              *aligned_dst++ = *aligned_src++;
   17b0c:	ff16bc23          	sd	a7,-8(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:125
              *aligned_dst++ = *aligned_src++;
              length -= BIGBLOCKSIZE;
            }

          /* Copy one long word at a time if possible.  */
          while (length >= LITTLEBLOCKSIZE)
   17b10:	fee366e3          	bltu	t1,a4,17afc <memmove+0xac>
   17b14:	ff8e0713          	addi	a4,t3,-8
   17b18:	ff877713          	andi	a4,a4,-8
   17b1c:	00870713          	addi	a4,a4,8
   17b20:	00767613          	andi	a2,a2,7
   17b24:	00e787b3          	add	a5,a5,a4
   17b28:	00e585b3          	add	a1,a1,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:136
          /* Pick up any residual with a byte copier.  */
          dst = (char*)aligned_dst;
          src = (char*)aligned_src;
        }

      while (length--)
   17b2c:	02060a63          	beqz	a2,17b60 <memmove+0x110>
   17b30:	00c78633          	add	a2,a5,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:138
        {
          *dst++ = *src++;
   17b34:	00158593          	addi	a1,a1,1
   17b38:	fff5c703          	lbu	a4,-1(a1)
   17b3c:	00178793          	addi	a5,a5,1
   17b40:	fee78fa3          	sb	a4,-1(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:136
          /* Pick up any residual with a byte copier.  */
          dst = (char*)aligned_dst;
          src = (char*)aligned_src;
        }

      while (length--)
   17b44:	fec798e3          	bne	a5,a2,17b34 <memmove+0xe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:144
        }
    }

  return dst_void;
#endif /* not PREFER_SIZE_OVER_SPEED */
}
   17b48:	00008067          	ret
   17b4c:	00050793          	mv	a5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:136
          /* Pick up any residual with a byte copier.  */
          dst = (char*)aligned_dst;
          src = (char*)aligned_src;
        }

      while (length--)
   17b50:	fe0610e3          	bnez	a2,17b30 <memmove+0xe0>
   17b54:	00c0006f          	j	17b60 <memmove+0x110>
   17b58:	00050793          	mv	a5,a0
   17b5c:	fd5ff06f          	j	17b30 <memmove+0xe0>
   17b60:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:125
              *aligned_dst++ = *aligned_src++;
              length -= BIGBLOCKSIZE;
            }

          /* Copy one long word at a time if possible.  */
          while (length >= LITTLEBLOCKSIZE)
   17b64:	000e0613          	mv	a2,t3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/memmove.c:136
          /* Pick up any residual with a byte copier.  */
          dst = (char*)aligned_dst;
          src = (char*)aligned_src;
        }

      while (length--)
   17b68:	fc0614e3          	bnez	a2,17b30 <memmove+0xe0>
   17b6c:	ff5ff06f          	j	17b60 <memmove+0x110>

0000000000017b70 <memset>:
memset():
   17b70:	00f00813          	li	a6,15
   17b74:	00050713          	mv	a4,a0
   17b78:	02c87a63          	bleu	a2,a6,17bac <memset+0x3c>
   17b7c:	00f77793          	andi	a5,a4,15
   17b80:	0a079063          	bnez	a5,17c20 <memset+0xb0>
   17b84:	06059e63          	bnez	a1,17c00 <memset+0x90>
   17b88:	ff067693          	andi	a3,a2,-16
   17b8c:	00f67613          	andi	a2,a2,15
   17b90:	00e686b3          	add	a3,a3,a4
   17b94:	00b73023          	sd	a1,0(a4)
   17b98:	00b73423          	sd	a1,8(a4)
   17b9c:	01070713          	addi	a4,a4,16
   17ba0:	fed76ae3          	bltu	a4,a3,17b94 <memset+0x24>
   17ba4:	00061463          	bnez	a2,17bac <memset+0x3c>
   17ba8:	00008067          	ret
   17bac:	40c806b3          	sub	a3,a6,a2
   17bb0:	00269693          	slli	a3,a3,0x2
   17bb4:	00000297          	auipc	t0,0x0
   17bb8:	005686b3          	add	a3,a3,t0
   17bbc:	00c68067          	jr	a3,12
   17bc0:	00b70723          	sb	a1,14(a4)
   17bc4:	00b706a3          	sb	a1,13(a4)
   17bc8:	00b70623          	sb	a1,12(a4)
   17bcc:	00b705a3          	sb	a1,11(a4)
   17bd0:	00b70523          	sb	a1,10(a4)
   17bd4:	00b704a3          	sb	a1,9(a4)
   17bd8:	00b70423          	sb	a1,8(a4)
   17bdc:	00b703a3          	sb	a1,7(a4)
   17be0:	00b70323          	sb	a1,6(a4)
   17be4:	00b702a3          	sb	a1,5(a4)
   17be8:	00b70223          	sb	a1,4(a4)
   17bec:	00b701a3          	sb	a1,3(a4)
   17bf0:	00b70123          	sb	a1,2(a4)
   17bf4:	00b700a3          	sb	a1,1(a4)
   17bf8:	00b70023          	sb	a1,0(a4)
   17bfc:	00008067          	ret
   17c00:	0ff5f593          	andi	a1,a1,255
   17c04:	00859693          	slli	a3,a1,0x8
   17c08:	00d5e5b3          	or	a1,a1,a3
   17c0c:	01059693          	slli	a3,a1,0x10
   17c10:	00d5e5b3          	or	a1,a1,a3
   17c14:	02059693          	slli	a3,a1,0x20
   17c18:	00d5e5b3          	or	a1,a1,a3
   17c1c:	f6dff06f          	j	17b88 <memset+0x18>
   17c20:	00279693          	slli	a3,a5,0x2
   17c24:	00000297          	auipc	t0,0x0
   17c28:	005686b3          	add	a3,a3,t0
   17c2c:	00008293          	mv	t0,ra
   17c30:	f98680e7          	jalr	a3,-104
   17c34:	00028093          	mv	ra,t0
   17c38:	ff078793          	addi	a5,a5,-16
   17c3c:	40f70733          	sub	a4,a4,a5
   17c40:	00f60633          	add	a2,a2,a5
   17c44:	f6c874e3          	bleu	a2,a6,17bac <memset+0x3c>
   17c48:	f3dff06f          	j	17b84 <memset+0x14>

0000000000017c4c <_Balloc>:
_Balloc():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:103
{
  int x;
  _Bigint *rv ;

  _REENT_CHECK_MP(ptr);
  if (_REENT_MP_FREELIST(ptr) == NULL)
   17c4c:	07853783          	ld	a5,120(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:98
#define _Kmax 15
*/

_Bigint *
_DEFUN (Balloc, (ptr, k), struct _reent *ptr _AND int k)
{
   17c50:	fe010113          	addi	sp,sp,-32
   17c54:	00813823          	sd	s0,16(sp)
   17c58:	00913423          	sd	s1,8(sp)
   17c5c:	00113c23          	sd	ra,24(sp)
   17c60:	01213023          	sd	s2,0(sp)
   17c64:	00050413          	mv	s0,a0
   17c68:	00058493          	mv	s1,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:103
  int x;
  _Bigint *rv ;

  _REENT_CHECK_MP(ptr);
  if (_REENT_MP_FREELIST(ptr) == NULL)
   17c6c:	02078e63          	beqz	a5,17ca8 <_Balloc+0x5c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:115
	{
	  return NULL;
	}
    }

  if ((rv = _REENT_MP_FREELIST(ptr)[k]) != 0)
   17c70:	00349513          	slli	a0,s1,0x3
   17c74:	00a787b3          	add	a5,a5,a0
   17c78:	0007b503          	ld	a0,0(a5)
   17c7c:	04050663          	beqz	a0,17cc8 <_Balloc+0x7c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:117
    {
      _REENT_MP_FREELIST(ptr)[k] = rv->_next;
   17c80:	00053703          	ld	a4,0(a0)
   17c84:	00e7b023          	sd	a4,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:131
				  (x-1) * sizeof(rv->_x));
      if (rv == NULL) return NULL;
      rv->_k = k;
      rv->_maxwds = x;
    }
  rv->_sign = rv->_wds = 0;
   17c88:	00052a23          	sw	zero,20(a0)
   17c8c:	00052823          	sw	zero,16(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:133
  return rv;
}
   17c90:	01813083          	ld	ra,24(sp)
   17c94:	01013403          	ld	s0,16(sp)
   17c98:	00813483          	ld	s1,8(sp)
   17c9c:	00013903          	ld	s2,0(sp)
   17ca0:	02010113          	addi	sp,sp,32
   17ca4:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:106

  _REENT_CHECK_MP(ptr);
  if (_REENT_MP_FREELIST(ptr) == NULL)
    {
      /* Allocate a list of pointers to the mprec objects */
      _REENT_MP_FREELIST(ptr) = (struct _Bigint **) _calloc_r (ptr, 
   17ca8:	04100613          	li	a2,65
   17cac:	00800593          	li	a1,8
   17cb0:	388060ef          	jal	1e038 <_calloc_r>
   17cb4:	06a43c23          	sd	a0,120(s0)
   17cb8:	00050793          	mv	a5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:109
						      sizeof (struct _Bigint *),
						      _Kmax + 1);
      if (_REENT_MP_FREELIST(ptr) == NULL)
   17cbc:	fa051ae3          	bnez	a0,17c70 <_Balloc+0x24>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:111
	{
	  return NULL;
   17cc0:	00000513          	li	a0,0
   17cc4:	fcdff06f          	j	17c90 <_Balloc+0x44>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:121
    {
      _REENT_MP_FREELIST(ptr)[k] = rv->_next;
    }
  else
    {
      x = 1 << k;
   17cc8:	00100913          	li	s2,1
   17ccc:	0099193b          	sllw	s2,s2,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:123
      /* Allocate an mprec Bigint and stick in in the freelist */
      rv = (_Bigint *) _calloc_r (ptr,
   17cd0:	fff9061b          	addiw	a2,s2,-1
   17cd4:	00860613          	addi	a2,a2,8
   17cd8:	00261613          	slli	a2,a2,0x2
   17cdc:	00100593          	li	a1,1
   17ce0:	00040513          	mv	a0,s0
   17ce4:	354060ef          	jal	1e038 <_calloc_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:127
				  1,
				  sizeof (_Bigint) +
				  (x-1) * sizeof(rv->_x));
      if (rv == NULL) return NULL;
   17ce8:	fc050ce3          	beqz	a0,17cc0 <_Balloc+0x74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:128
      rv->_k = k;
   17cec:	00952423          	sw	s1,8(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:129
      rv->_maxwds = x;
   17cf0:	01252623          	sw	s2,12(a0)
   17cf4:	f95ff06f          	j	17c88 <_Balloc+0x3c>

0000000000017cf8 <_Bfree>:
_Bfree():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:139

void
_DEFUN (Bfree, (ptr, v), struct _reent *ptr _AND _Bigint * v)
{
  _REENT_CHECK_MP(ptr);
  if (v)
   17cf8:	02058063          	beqz	a1,17d18 <_Bfree+0x20>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:141
    {
      v->_next = _REENT_MP_FREELIST(ptr)[v->_k];
   17cfc:	0085a783          	lw	a5,8(a1)
   17d00:	07853703          	ld	a4,120(a0)
   17d04:	00379793          	slli	a5,a5,0x3
   17d08:	00f707b3          	add	a5,a4,a5
   17d0c:	0007b703          	ld	a4,0(a5)
   17d10:	00e5b023          	sd	a4,0(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:142
      _REENT_MP_FREELIST(ptr)[v->_k] = v;
   17d14:	00b7b023          	sd	a1,0(a5)
   17d18:	00008067          	ret

0000000000017d1c <__multadd>:
__multadd():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:152
_DEFUN (multadd, (ptr, b, m, a),
	struct _reent *ptr _AND
	_Bigint * b _AND
	int m _AND
	int a)
{
   17d1c:	fc010113          	addi	sp,sp,-64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:167
  i = 0;
  do
    {
#ifdef Pack_32
      xi = *x;
      y = (xi & 0xffff) * m + a;
   17d20:	00010837          	lui	a6,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:152
_DEFUN (multadd, (ptr, b, m, a),
	struct _reent *ptr _AND
	_Bigint * b _AND
	int m _AND
	int a)
{
   17d24:	02813823          	sd	s0,48(sp)
   17d28:	02913423          	sd	s1,40(sp)
   17d2c:	03213023          	sd	s2,32(sp)
   17d30:	00058493          	mv	s1,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:160
#ifdef Pack_32
  __ULong xi, z;
#endif
  _Bigint *b1;

  wds = b->_wds;
   17d34:	0145a403          	lw	s0,20(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:152
_DEFUN (multadd, (ptr, b, m, a),
	struct _reent *ptr _AND
	_Bigint * b _AND
	int m _AND
	int a)
{
   17d38:	00050913          	mv	s2,a0
   17d3c:	02113c23          	sd	ra,56(sp)
   17d40:	01313c23          	sd	s3,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:161
  __ULong xi, z;
#endif
  _Bigint *b1;

  wds = b->_wds;
  x = b->_x;
   17d44:	01858593          	addi	a1,a1,24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:162
  i = 0;
   17d48:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:167
  do
    {
#ifdef Pack_32
      xi = *x;
      y = (xi & 0xffff) * m + a;
   17d4c:	fff8081b          	addiw	a6,a6,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:166 (discriminator 1)
  x = b->_x;
  i = 0;
  do
    {
#ifdef Pack_32
      xi = *x;
   17d50:	0005a783          	lw	a5,0(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:170
      y = (xi & 0xffff) * m + a;
      z = (xi >> 16) * m + (y >> 16);
      a = (int) (z >> 16);
      *x++ = (z << 16) + (y & 0xffff);
   17d54:	00458593          	addi	a1,a1,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:177
      y = *x * m + a;
      a = (int) (y >> 16);
      *x++ = y & 0xffff;
#endif
    }
  while (++i < wds);
   17d58:	0015051b          	addiw	a0,a0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:167
  i = 0;
  do
    {
#ifdef Pack_32
      xi = *x;
      y = (xi & 0xffff) * m + a;
   17d5c:	0107f733          	and	a4,a5,a6
   17d60:	02c7073b          	mulw	a4,a4,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:168
      z = (xi >> 16) * m + (y >> 16);
   17d64:	0107d79b          	srliw	a5,a5,0x10
   17d68:	02c787bb          	mulw	a5,a5,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:167
  i = 0;
  do
    {
#ifdef Pack_32
      xi = *x;
      y = (xi & 0xffff) * m + a;
   17d6c:	00d7073b          	addw	a4,a4,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:168
      z = (xi >> 16) * m + (y >> 16);
   17d70:	0107569b          	srliw	a3,a4,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:170
      a = (int) (z >> 16);
      *x++ = (z << 16) + (y & 0xffff);
   17d74:	01077733          	and	a4,a4,a6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:168
  do
    {
#ifdef Pack_32
      xi = *x;
      y = (xi & 0xffff) * m + a;
      z = (xi >> 16) * m + (y >> 16);
   17d78:	00d786bb          	addw	a3,a5,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:170
      a = (int) (z >> 16);
      *x++ = (z << 16) + (y & 0xffff);
   17d7c:	0106979b          	slliw	a5,a3,0x10
   17d80:	00e7873b          	addw	a4,a5,a4
   17d84:	fee5ae23          	sw	a4,-4(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:169
    {
#ifdef Pack_32
      xi = *x;
      y = (xi & 0xffff) * m + a;
      z = (xi >> 16) * m + (y >> 16);
      a = (int) (z >> 16);
   17d88:	0106d69b          	srliw	a3,a3,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:177
      y = *x * m + a;
      a = (int) (y >> 16);
      *x++ = y & 0xffff;
#endif
    }
  while (++i < wds);
   17d8c:	fc8542e3          	blt	a0,s0,17d50 <__multadd+0x34>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:178
  if (a)
   17d90:	02068263          	beqz	a3,17db4 <__multadd+0x98>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:180
    {
      if (wds >= b->_maxwds)
   17d94:	00c4a783          	lw	a5,12(s1)
   17d98:	02f45e63          	ble	a5,s0,17dd4 <__multadd+0xb8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:187
	  b1 = Balloc (ptr, b->_k + 1);
	  Bcopy (b1, b);
	  Bfree (ptr, b);
	  b = b1;
	}
      b->_x[wds++] = a;
   17d9c:	00440793          	addi	a5,s0,4
   17da0:	00279793          	slli	a5,a5,0x2
   17da4:	00f487b3          	add	a5,s1,a5
   17da8:	00d7a423          	sw	a3,8(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:188
      b->_wds = wds;
   17dac:	0014041b          	addiw	s0,s0,1
   17db0:	0084aa23          	sw	s0,20(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:191
    }
  return b;
}
   17db4:	03813083          	ld	ra,56(sp)
   17db8:	00048513          	mv	a0,s1
   17dbc:	03013403          	ld	s0,48(sp)
   17dc0:	02813483          	ld	s1,40(sp)
   17dc4:	02013903          	ld	s2,32(sp)
   17dc8:	01813983          	ld	s3,24(sp)
   17dcc:	04010113          	addi	sp,sp,64
   17dd0:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:182
  while (++i < wds);
  if (a)
    {
      if (wds >= b->_maxwds)
	{
	  b1 = Balloc (ptr, b->_k + 1);
   17dd4:	0084a583          	lw	a1,8(s1)
   17dd8:	00090513          	mv	a0,s2
   17ddc:	00d13423          	sd	a3,8(sp)
   17de0:	0015859b          	addiw	a1,a1,1
   17de4:	e69ff0ef          	jal	17c4c <_Balloc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:183
	  Bcopy (b1, b);
   17de8:	0144a603          	lw	a2,20(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:182
  while (++i < wds);
  if (a)
    {
      if (wds >= b->_maxwds)
	{
	  b1 = Balloc (ptr, b->_k + 1);
   17dec:	00050993          	mv	s3,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:183
	  Bcopy (b1, b);
   17df0:	01048593          	addi	a1,s1,16
   17df4:	00260613          	addi	a2,a2,2
   17df8:	01050513          	addi	a0,a0,16
   17dfc:	00261613          	slli	a2,a2,0x2
   17e00:	bd5f80ef          	jal	109d4 <memcpy>
_Bfree():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:141
_DEFUN (Bfree, (ptr, v), struct _reent *ptr _AND _Bigint * v)
{
  _REENT_CHECK_MP(ptr);
  if (v)
    {
      v->_next = _REENT_MP_FREELIST(ptr)[v->_k];
   17e04:	0084a703          	lw	a4,8(s1)
   17e08:	07893783          	ld	a5,120(s2)
__multadd():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:185
      if (wds >= b->_maxwds)
	{
	  b1 = Balloc (ptr, b->_k + 1);
	  Bcopy (b1, b);
	  Bfree (ptr, b);
	  b = b1;
   17e0c:	00813683          	ld	a3,8(sp)
_Bfree():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:141
_DEFUN (Bfree, (ptr, v), struct _reent *ptr _AND _Bigint * v)
{
  _REENT_CHECK_MP(ptr);
  if (v)
    {
      v->_next = _REENT_MP_FREELIST(ptr)[v->_k];
   17e10:	00371713          	slli	a4,a4,0x3
   17e14:	00e787b3          	add	a5,a5,a4
   17e18:	0007b703          	ld	a4,0(a5)
   17e1c:	00e4b023          	sd	a4,0(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:142
      _REENT_MP_FREELIST(ptr)[v->_k] = v;
   17e20:	0097b023          	sd	s1,0(a5)
__multadd():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:185
      if (wds >= b->_maxwds)
	{
	  b1 = Balloc (ptr, b->_k + 1);
	  Bcopy (b1, b);
	  Bfree (ptr, b);
	  b = b1;
   17e24:	00098493          	mv	s1,s3
   17e28:	f75ff06f          	j	17d9c <__multadd+0x80>

0000000000017e2c <__s2b>:
__s2b():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:200
	struct _reent * ptr _AND
	_CONST char *s _AND
	int nd0 _AND
	int nd _AND
	__ULong y9)
{
   17e2c:	fc010113          	addi	sp,sp,-64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:205
  _Bigint *b;
  int i, k;
  __Long x, y;

  x = (nd + 8) / 9;
   17e30:	0086879b          	addiw	a5,a3,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:200
	struct _reent * ptr _AND
	_CONST char *s _AND
	int nd0 _AND
	int nd _AND
	__ULong y9)
{
   17e34:	03213023          	sd	s2,32(sp)
   17e38:	00068913          	mv	s2,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:205
  _Bigint *b;
  int i, k;
  __Long x, y;

  x = (nd + 8) / 9;
   17e3c:	00900693          	li	a3,9
   17e40:	02d7c6bb          	divw	a3,a5,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:200
	struct _reent * ptr _AND
	_CONST char *s _AND
	int nd0 _AND
	int nd _AND
	__ULong y9)
{
   17e44:	02813823          	sd	s0,48(sp)
   17e48:	02913423          	sd	s1,40(sp)
   17e4c:	01313c23          	sd	s3,24(sp)
   17e50:	01413823          	sd	s4,16(sp)
   17e54:	02113c23          	sd	ra,56(sp)
   17e58:	01513423          	sd	s5,8(sp)
   17e5c:	01613023          	sd	s6,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:206
  _Bigint *b;
  int i, k;
  __Long x, y;

  x = (nd + 8) / 9;
  for (k = 0, y = 1; x > y; y <<= 1, k++);
   17e60:	00100793          	li	a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:200
	struct _reent * ptr _AND
	_CONST char *s _AND
	int nd0 _AND
	int nd _AND
	__ULong y9)
{
   17e64:	00058413          	mv	s0,a1
   17e68:	00050993          	mv	s3,a0
   17e6c:	00060a13          	mv	s4,a2
   17e70:	00070493          	mv	s1,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:206
  _Bigint *b;
  int i, k;
  __Long x, y;

  x = (nd + 8) / 9;
  for (k = 0, y = 1; x > y; y <<= 1, k++);
   17e74:	00000593          	li	a1,0
   17e78:	00d7d863          	ble	a3,a5,17e88 <__s2b+0x5c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:206 (discriminator 3)
   17e7c:	0017979b          	slliw	a5,a5,0x1
   17e80:	0015859b          	addiw	a1,a1,1
   17e84:	fed7cce3          	blt	a5,a3,17e7c <__s2b+0x50>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:208
#ifdef Pack_32
  b = Balloc (ptr, k);
   17e88:	00098513          	mv	a0,s3
   17e8c:	dc1ff0ef          	jal	17c4c <_Balloc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:210
  b->_x[0] = y9;
  b->_wds = 1;
   17e90:	00100793          	li	a5,1
   17e94:	00f52a23          	sw	a5,20(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:209

  x = (nd + 8) / 9;
  for (k = 0, y = 1; x > y; y <<= 1, k++);
#ifdef Pack_32
  b = Balloc (ptr, k);
  b->_x[0] = y9;
   17e98:	00952c23          	sw	s1,24(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:218
  b->_x[0] = y9 & 0xffff;
  b->_wds = (b->_x[1] = y9 >> 16) ? 2 : 1;
#endif

  i = 9;
  if (9 < nd0)
   17e9c:	00900793          	li	a5,9
   17ea0:	0b47d663          	ble	s4,a5,17f4c <__s2b+0x120>
   17ea4:	ff6a0b1b          	addiw	s6,s4,-10
   17ea8:	020b1b13          	slli	s6,s6,0x20
   17eac:	020b5b13          	srli	s6,s6,0x20
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:220
    {
      s += 9;
   17eb0:	00940a93          	addi	s5,s0,9
   17eb4:	00ab0793          	addi	a5,s6,10
   17eb8:	00f40433          	add	s0,s0,a5
   17ebc:	000a8493          	mv	s1,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:222 (discriminator 1)
      do
	b = multadd (ptr, b, 10, *s++ - '0');
   17ec0:	00148493          	addi	s1,s1,1
   17ec4:	fff4c683          	lbu	a3,-1(s1)
   17ec8:	00050593          	mv	a1,a0
   17ecc:	00a00613          	li	a2,10
   17ed0:	fd06869b          	addiw	a3,a3,-48
   17ed4:	00098513          	mv	a0,s3
   17ed8:	e45ff0ef          	jal	17d1c <__multadd>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:223
      while (++i < nd0);
   17edc:	fe8492e3          	bne	s1,s0,17ec0 <__s2b+0x94>
   17ee0:	016a8433          	add	s0,s5,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:224
      s++;
   17ee4:	00240413          	addi	s0,s0,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:228 (discriminator 1)
    }
  else
    s += 10;
  for (; i < nd; i++)
   17ee8:	032a5e63          	ble	s2,s4,17f24 <__s2b+0xf8>
   17eec:	fff9091b          	addiw	s2,s2,-1
   17ef0:	414904bb          	subw	s1,s2,s4
   17ef4:	02049493          	slli	s1,s1,0x20
   17ef8:	0204d493          	srli	s1,s1,0x20
   17efc:	00148493          	addi	s1,s1,1
   17f00:	009404b3          	add	s1,s0,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:229 (discriminator 2)
    b = multadd (ptr, b, 10, *s++ - '0');
   17f04:	00140413          	addi	s0,s0,1
   17f08:	fff44683          	lbu	a3,-1(s0)
   17f0c:	00050593          	mv	a1,a0
   17f10:	00a00613          	li	a2,10
   17f14:	fd06869b          	addiw	a3,a3,-48
   17f18:	00098513          	mv	a0,s3
   17f1c:	e01ff0ef          	jal	17d1c <__multadd>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:228
      while (++i < nd0);
      s++;
    }
  else
    s += 10;
  for (; i < nd; i++)
   17f20:	fe9412e3          	bne	s0,s1,17f04 <__s2b+0xd8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:231
    b = multadd (ptr, b, 10, *s++ - '0');
  return b;
}
   17f24:	03813083          	ld	ra,56(sp)
   17f28:	03013403          	ld	s0,48(sp)
   17f2c:	02813483          	ld	s1,40(sp)
   17f30:	02013903          	ld	s2,32(sp)
   17f34:	01813983          	ld	s3,24(sp)
   17f38:	01013a03          	ld	s4,16(sp)
   17f3c:	00813a83          	ld	s5,8(sp)
   17f40:	00013b03          	ld	s6,0(sp)
   17f44:	04010113          	addi	sp,sp,64
   17f48:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:227
	b = multadd (ptr, b, 10, *s++ - '0');
      while (++i < nd0);
      s++;
    }
  else
    s += 10;
   17f4c:	00a40413          	addi	s0,s0,10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:217
  b = Balloc (ptr, k + 1);
  b->_x[0] = y9 & 0xffff;
  b->_wds = (b->_x[1] = y9 >> 16) ? 2 : 1;
#endif

  i = 9;
   17f50:	00078a13          	mv	s4,a5
   17f54:	f95ff06f          	j	17ee8 <__s2b+0xbc>

0000000000017f58 <__hi0bits>:
__hi0bits():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:239
_DEFUN (hi0bits,
	(x), register __ULong x)
{
  register int k = 0;

  if (!(x & 0xffff0000))
   17f58:	ffff06b7          	lui	a3,0xffff0
   17f5c:	00d576b3          	and	a3,a0,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:236
}

int
_DEFUN (hi0bits,
	(x), register __ULong x)
{
   17f60:	00050793          	mv	a5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:237
  register int k = 0;
   17f64:	00000713          	li	a4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:239

  if (!(x & 0xffff0000))
   17f68:	00069663          	bnez	a3,17f74 <__hi0bits+0x1c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:242
    {
      k = 16;
      x <<= 16;
   17f6c:	0105179b          	slliw	a5,a0,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:241
{
  register int k = 0;

  if (!(x & 0xffff0000))
    {
      k = 16;
   17f70:	01000713          	li	a4,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:244
      x <<= 16;
    }
  if (!(x & 0xff000000))
   17f74:	ff0006b7          	lui	a3,0xff000
   17f78:	00d7f6b3          	and	a3,a5,a3
   17f7c:	00069663          	bnez	a3,17f88 <__hi0bits+0x30>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:246
    {
      k += 8;
   17f80:	0087071b          	addiw	a4,a4,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:247
      x <<= 8;
   17f84:	0087979b          	slliw	a5,a5,0x8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:249
    }
  if (!(x & 0xf0000000))
   17f88:	f00006b7          	lui	a3,0xf0000
   17f8c:	00d7f6b3          	and	a3,a5,a3
   17f90:	00069663          	bnez	a3,17f9c <__hi0bits+0x44>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:251
    {
      k += 4;
   17f94:	0047071b          	addiw	a4,a4,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:252
      x <<= 4;
   17f98:	0047979b          	slliw	a5,a5,0x4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:254
    }
  if (!(x & 0xc0000000))
   17f9c:	c00006b7          	lui	a3,0xc0000
   17fa0:	00d7f6b3          	and	a3,a5,a3
   17fa4:	00069663          	bnez	a3,17fb0 <__hi0bits+0x58>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:256
    {
      k += 2;
   17fa8:	0027071b          	addiw	a4,a4,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:257
      x <<= 2;
   17fac:	0027979b          	slliw	a5,a5,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:259
    }
  if (!(x & 0x80000000))
   17fb0:	0007ce63          	bltz	a5,17fcc <__hi0bits+0x74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:262
    {
      k++;
      if (!(x & 0x40000000))
   17fb4:	02179693          	slli	a3,a5,0x21
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:263
	return 32;
   17fb8:	02000513          	li	a0,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:262
      x <<= 2;
    }
  if (!(x & 0x80000000))
    {
      k++;
      if (!(x & 0x40000000))
   17fbc:	0006c463          	bltz	a3,17fc4 <__hi0bits+0x6c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:266
	return 32;
    }
  return k;
}
   17fc0:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:261
      k += 2;
      x <<= 2;
    }
  if (!(x & 0x80000000))
    {
      k++;
   17fc4:	0017051b          	addiw	a0,a4,1
   17fc8:	00008067          	ret
   17fcc:	00070513          	mv	a0,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:266
      if (!(x & 0x40000000))
	return 32;
    }
  return k;
}
   17fd0:	00008067          	ret

0000000000017fd4 <__lo0bits>:
__lo0bits():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:272

int
_DEFUN (lo0bits, (y), __ULong *y)
{
  register int k;
  register __ULong x = *y;
   17fd4:	00052783          	lw	a5,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:270
  return k;
}

int
_DEFUN (lo0bits, (y), __ULong *y)
{
   17fd8:	00050693          	mv	a3,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:274
  register int k;
  register __ULong x = *y;

  if (x & 7)
   17fdc:	0077f713          	andi	a4,a5,7
   17fe0:	02070463          	beqz	a4,18008 <__lo0bits+0x34>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:276
    {
      if (x & 1)
   17fe4:	0017f713          	andi	a4,a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:277
	return 0;
   17fe8:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:276
  register int k;
  register __ULong x = *y;

  if (x & 7)
    {
      if (x & 1)
   17fec:	08071263          	bnez	a4,18070 <__lo0bits+0x9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:278
	return 0;
      if (x & 2)
   17ff0:	0027f713          	andi	a4,a5,2
   17ff4:	08071063          	bnez	a4,18074 <__lo0bits+0xa0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:283
	{
	  *y = x >> 1;
	  return 1;
	}
      *y = x >> 2;
   17ff8:	0027d79b          	srliw	a5,a5,0x2
   17ffc:	00f6a023          	sw	a5,0(a3) # ffffffffc0000000 <_end+0xffffffffbffd91e8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:284
      return 2;
   18000:	00200513          	li	a0,2
   18004:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:287
    }
  k = 0;
  if (!(x & 0xffff))
   18008:	0107961b          	slliw	a2,a5,0x10
   1800c:	0106561b          	srliw	a2,a2,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:286
	  return 1;
	}
      *y = x >> 2;
      return 2;
    }
  k = 0;
   18010:	00000713          	li	a4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:287
  if (!(x & 0xffff))
   18014:	00061663          	bnez	a2,18020 <__lo0bits+0x4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:290
    {
      k = 16;
      x >>= 16;
   18018:	0107d79b          	srliw	a5,a5,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:289
      return 2;
    }
  k = 0;
  if (!(x & 0xffff))
    {
      k = 16;
   1801c:	01000713          	li	a4,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:292
      x >>= 16;
    }
  if (!(x & 0xff))
   18020:	0ff7f613          	andi	a2,a5,255
   18024:	00061663          	bnez	a2,18030 <__lo0bits+0x5c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:294
    {
      k += 8;
   18028:	0087071b          	addiw	a4,a4,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:295
      x >>= 8;
   1802c:	0087d79b          	srliw	a5,a5,0x8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:297
    }
  if (!(x & 0xf))
   18030:	00f7f613          	andi	a2,a5,15
   18034:	00061663          	bnez	a2,18040 <__lo0bits+0x6c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:299
    {
      k += 4;
   18038:	0047071b          	addiw	a4,a4,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:300
      x >>= 4;
   1803c:	0047d79b          	srliw	a5,a5,0x4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:302
    }
  if (!(x & 0x3))
   18040:	0037f613          	andi	a2,a5,3
   18044:	00061663          	bnez	a2,18050 <__lo0bits+0x7c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:304
    {
      k += 2;
   18048:	0027071b          	addiw	a4,a4,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:305
      x >>= 2;
   1804c:	0027d79b          	srliw	a5,a5,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:307
    }
  if (!(x & 1))
   18050:	0017f613          	andi	a2,a5,1
   18054:	00061a63          	bnez	a2,18068 <__lo0bits+0x94>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:310
    {
      k++;
      x >>= 1;
   18058:	0017d79b          	srliw	a5,a5,0x1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:312
      if (!x & 1)
	return 32;
   1805c:	02000513          	li	a0,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:311
    }
  if (!(x & 1))
    {
      k++;
      x >>= 1;
      if (!x & 1)
   18060:	00078863          	beqz	a5,18070 <__lo0bits+0x9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:309
      k += 2;
      x >>= 2;
    }
  if (!(x & 1))
    {
      k++;
   18064:	0017071b          	addiw	a4,a4,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:314
      x >>= 1;
      if (!x & 1)
	return 32;
    }
  *y = x;
   18068:	00f6a023          	sw	a5,0(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:315
  return k;
   1806c:	00070513          	mv	a0,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:316
}
   18070:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:280
    {
      if (x & 1)
	return 0;
      if (x & 2)
	{
	  *y = x >> 1;
   18074:	0017d79b          	srliw	a5,a5,0x1
   18078:	00f6a023          	sw	a5,0(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:281
	  return 1;
   1807c:	00100513          	li	a0,1
   18080:	00008067          	ret

0000000000018084 <__i2b>:
__i2b():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:320
  return k;
}

_Bigint *
_DEFUN (i2b, (ptr, i), struct _reent * ptr _AND int i)
{
   18084:	ff010113          	addi	sp,sp,-16
   18088:	00813023          	sd	s0,0(sp)
   1808c:	00058413          	mv	s0,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:323
  _Bigint *b;

  b = Balloc (ptr, 1);
   18090:	00100593          	li	a1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:320
  return k;
}

_Bigint *
_DEFUN (i2b, (ptr, i), struct _reent * ptr _AND int i)
{
   18094:	00113423          	sd	ra,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:323
  _Bigint *b;

  b = Balloc (ptr, 1);
   18098:	bb5ff0ef          	jal	17c4c <_Balloc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:327
  b->_x[0] = i;
  b->_wds = 1;
  return b;
}
   1809c:	00813083          	ld	ra,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:325
{
  _Bigint *b;

  b = Balloc (ptr, 1);
  b->_x[0] = i;
  b->_wds = 1;
   180a0:	00100713          	li	a4,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:324
_DEFUN (i2b, (ptr, i), struct _reent * ptr _AND int i)
{
  _Bigint *b;

  b = Balloc (ptr, 1);
  b->_x[0] = i;
   180a4:	00852c23          	sw	s0,24(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:325
  b->_wds = 1;
   180a8:	00e52a23          	sw	a4,20(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:327
  return b;
}
   180ac:	00013403          	ld	s0,0(sp)
   180b0:	01010113          	addi	sp,sp,16
   180b4:	00008067          	ret

00000000000180b8 <__multiply>:
__multiply():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:331

_Bigint *
_DEFUN (mult, (ptr, a, b), struct _reent * ptr _AND _Bigint * a _AND _Bigint * b)
{
   180b8:	fd010113          	addi	sp,sp,-48
   180bc:	01313423          	sd	s3,8(sp)
   180c0:	01413023          	sd	s4,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:340
  __ULong *x, *xa, *xae, *xb, *xbe, *xc, *xc0;
#ifdef Pack_32
  __ULong z2;
#endif

  if (a->_wds < b->_wds)
   180c4:	0145a983          	lw	s3,20(a1)
   180c8:	01462a03          	lw	s4,20(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:331
  return b;
}

_Bigint *
_DEFUN (mult, (ptr, a, b), struct _reent * ptr _AND _Bigint * a _AND _Bigint * b)
{
   180cc:	00913c23          	sd	s1,24(sp)
   180d0:	01213823          	sd	s2,16(sp)
   180d4:	02113423          	sd	ra,40(sp)
   180d8:	02813023          	sd	s0,32(sp)
   180dc:	00058913          	mv	s2,a1
   180e0:	00060493          	mv	s1,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:340
  __ULong *x, *xa, *xae, *xb, *xbe, *xc, *xc0;
#ifdef Pack_32
  __ULong z2;
#endif

  if (a->_wds < b->_wds)
   180e4:	0149dc63          	ble	s4,s3,180fc <__multiply+0x44>
   180e8:	00098713          	mv	a4,s3
   180ec:	00060913          	mv	s2,a2
   180f0:	000a0993          	mv	s3,s4
   180f4:	00058493          	mv	s1,a1
   180f8:	00070a13          	mv	s4,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:350
    }
  k = a->_k;
  wa = a->_wds;
  wb = b->_wds;
  wc = wa + wb;
  if (wc > a->_maxwds)
   180fc:	00c92783          	lw	a5,12(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:346
    {
      c = a;
      a = b;
      b = c;
    }
  k = a->_k;
   18100:	00892583          	lw	a1,8(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:349
  wa = a->_wds;
  wb = b->_wds;
  wc = wa + wb;
   18104:	0149843b          	addw	s0,s3,s4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:351
  if (wc > a->_maxwds)
    k++;
   18108:	0087a7b3          	slt	a5,a5,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:352
  c = Balloc (ptr, k);
   1810c:	00f585bb          	addw	a1,a1,a5
   18110:	b3dff0ef          	jal	17c4c <_Balloc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:353
  for (x = c->_x, xa = x + wc; x < xa; x++)
   18114:	00040893          	mv	a7,s0
   18118:	01850313          	addi	t1,a0,24
   1811c:	00289893          	slli	a7,a7,0x2
   18120:	011308b3          	add	a7,t1,a7
   18124:	00030793          	mv	a5,t1
   18128:	01137863          	bleu	a7,t1,18138 <__multiply+0x80>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:354 (discriminator 3)
    *x = 0;
   1812c:	0007a023          	sw	zero,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:353
  wb = b->_wds;
  wc = wa + wb;
  if (wc > a->_maxwds)
    k++;
  c = Balloc (ptr, k);
  for (x = c->_x, xa = x + wc; x < xa; x++)
   18130:	00478793          	addi	a5,a5,4
   18134:	ff17ece3          	bltu	a5,a7,1812c <__multiply+0x74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:357
    *x = 0;
  xa = a->_x;
  xae = xa + wa;
  xb = b->_x;
   18138:	01848613          	addi	a2,s1,24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:358
  xbe = xb + wb;
   1813c:	002a1e13          	slli	t3,s4,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:355
  if (wc > a->_maxwds)
    k++;
  c = Balloc (ptr, k);
  for (x = c->_x, xa = x + wc; x < xa; x++)
    *x = 0;
  xa = a->_x;
   18140:	01890e93          	addi	t4,s2,24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:356
  xae = xa + wa;
   18144:	00299813          	slli	a6,s3,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:363
  xbe = xb + wb;
  xc0 = c->_x;
#ifdef Pack_32
  for (; xb < xbe; xb++, xc0++)
    {
      if ((y = *xb & 0xffff) != 0)
   18148:	000105b7          	lui	a1,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:358
  for (x = c->_x, xa = x + wc; x < xa; x++)
    *x = 0;
  xa = a->_x;
  xae = xa + wa;
  xb = b->_x;
  xbe = xb + wb;
   1814c:	01c60e33          	add	t3,a2,t3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:356
    k++;
  c = Balloc (ptr, k);
  for (x = c->_x, xa = x + wc; x < xa; x++)
    *x = 0;
  xa = a->_x;
  xae = xa + wa;
   18150:	010e8833          	add	a6,t4,a6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:363
  xbe = xb + wb;
  xc0 = c->_x;
#ifdef Pack_32
  for (; xb < xbe; xb++, xc0++)
    {
      if ((y = *xb & 0xffff) != 0)
   18154:	fff5859b          	addiw	a1,a1,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:361
  xae = xa + wa;
  xb = b->_x;
  xbe = xb + wb;
  xc0 = c->_x;
#ifdef Pack_32
  for (; xb < xbe; xb++, xc0++)
   18158:	11c67463          	bleu	t3,a2,18260 <__multiply+0x1a8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:363
    {
      if ((y = *xb & 0xffff) != 0)
   1815c:	00062383          	lw	t2,0(a2)
   18160:	00b3f4b3          	and	s1,t2,a1
   18164:	06048a63          	beqz	s1,181d8 <__multiply+0x120>
   18168:	00030293          	mv	t0,t1
   1816c:	000e8f93          	mv	t6,t4
   18170:	00000793          	li	a5,0
   18174:	0080006f          	j	1817c <__multiply+0xc4>
   18178:	00038293          	mv	t0,t2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:370 (discriminator 1)
	  x = xa;
	  xc = xc0;
	  carry = 0;
	  do
	    {
	      z = (*x & 0xffff) * y + (*xc & 0xffff) + carry;
   1817c:	000fa683          	lw	a3,0(t6)
   18180:	0002af03          	lw	t5,0(t0) # 17c24 <memset+0xb4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:374
	      carry = z >> 16;
	      z2 = (*x++ >> 16) * y + (*xc >> 16) + carry;
	      carry = z2 >> 16;
	      Storeinc (xc, z2, z);
   18184:	00428393          	addi	t2,t0,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:370
	  x = xa;
	  xc = xc0;
	  carry = 0;
	  do
	    {
	      z = (*x & 0xffff) * y + (*xc & 0xffff) + carry;
   18188:	00b6f733          	and	a4,a3,a1
   1818c:	0297073b          	mulw	a4,a4,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:372
	      carry = z >> 16;
	      z2 = (*x++ >> 16) * y + (*xc >> 16) + carry;
   18190:	0106d69b          	srliw	a3,a3,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:370
	  x = xa;
	  xc = xc0;
	  carry = 0;
	  do
	    {
	      z = (*x & 0xffff) * y + (*xc & 0xffff) + carry;
   18194:	00bf7933          	and	s2,t5,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:372
	      carry = z >> 16;
	      z2 = (*x++ >> 16) * y + (*xc >> 16) + carry;
   18198:	010f5f1b          	srliw	t5,t5,0x10
   1819c:	004f8f93          	addi	t6,t6,4
   181a0:	029686bb          	mulw	a3,a3,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:370
	  x = xa;
	  xc = xc0;
	  carry = 0;
	  do
	    {
	      z = (*x & 0xffff) * y + (*xc & 0xffff) + carry;
   181a4:	0127073b          	addw	a4,a4,s2
   181a8:	00f707bb          	addw	a5,a4,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:372
	      carry = z >> 16;
	      z2 = (*x++ >> 16) * y + (*xc >> 16) + carry;
   181ac:	0107d71b          	srliw	a4,a5,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:374
	      carry = z2 >> 16;
	      Storeinc (xc, z2, z);
   181b0:	00b7f7b3          	and	a5,a5,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:372
	  carry = 0;
	  do
	    {
	      z = (*x & 0xffff) * y + (*xc & 0xffff) + carry;
	      carry = z >> 16;
	      z2 = (*x++ >> 16) * y + (*xc >> 16) + carry;
   181b4:	01e686bb          	addw	a3,a3,t5
   181b8:	00e6873b          	addw	a4,a3,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:374
	      carry = z2 >> 16;
	      Storeinc (xc, z2, z);
   181bc:	0107169b          	slliw	a3,a4,0x10
   181c0:	00f6e7b3          	or	a5,a3,a5
   181c4:	fef3ae23          	sw	a5,-4(t2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:373
	  do
	    {
	      z = (*x & 0xffff) * y + (*xc & 0xffff) + carry;
	      carry = z >> 16;
	      z2 = (*x++ >> 16) * y + (*xc >> 16) + carry;
	      carry = z2 >> 16;
   181c8:	0107579b          	srliw	a5,a4,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:376
	      Storeinc (xc, z2, z);
	    }
	  while (x < xae);
   181cc:	fb0fe6e3          	bltu	t6,a6,18178 <__multiply+0xc0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:377
	  *xc = carry;
   181d0:	00f2a223          	sw	a5,4(t0)
   181d4:	00062383          	lw	t2,0(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:379
	}
      if ((y = *xb >> 16) != 0)
   181d8:	0103d39b          	srliw	t2,t2,0x10
   181dc:	06038c63          	beqz	t2,18254 <__multiply+0x19c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:384
	{
	  x = xa;
	  xc = xc0;
	  carry = 0;
	  z2 = *xc;
   181e0:	00032783          	lw	a5,0(t1) # 10000 <_ftext>
   181e4:	00030293          	mv	t0,t1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:381
	  while (x < xae);
	  *xc = carry;
	}
      if ((y = *xb >> 16) != 0)
	{
	  x = xa;
   181e8:	000e8f93          	mv	t6,t4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:384
	  xc = xc0;
	  carry = 0;
	  z2 = *xc;
   181ec:	00078f13          	mv	t5,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:383
	}
      if ((y = *xb >> 16) != 0)
	{
	  x = xa;
	  xc = xc0;
	  carry = 0;
   181f0:	00000693          	li	a3,0
   181f4:	0080006f          	j	181fc <__multiply+0x144>
   181f8:	00048293          	mv	t0,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:387 (discriminator 1)
	  z2 = *xc;
	  do
	    {
	      z = (*x & 0xffff) * y + (*xc >> 16) + carry;
   181fc:	000fa703          	lw	a4,0(t6)
   18200:	010f5f1b          	srliw	t5,t5,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:389
	      carry = z >> 16;
	      Storeinc (xc, z, z2);
   18204:	00b7f7b3          	and	a5,a5,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:387
	  xc = xc0;
	  carry = 0;
	  z2 = *xc;
	  do
	    {
	      z = (*x & 0xffff) * y + (*xc >> 16) + carry;
   18208:	00b77733          	and	a4,a4,a1
   1820c:	0277073b          	mulw	a4,a4,t2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:389
	      carry = z >> 16;
	      Storeinc (xc, z, z2);
   18210:	00428493          	addi	s1,t0,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:390
	      z2 = (*x++ >> 16) * y + (*xc & 0xffff) + carry;
   18214:	004f8f93          	addi	t6,t6,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:387
	  xc = xc0;
	  carry = 0;
	  z2 = *xc;
	  do
	    {
	      z = (*x & 0xffff) * y + (*xc >> 16) + carry;
   18218:	01e7073b          	addw	a4,a4,t5
   1821c:	00d706bb          	addw	a3,a4,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:389
	      carry = z >> 16;
	      Storeinc (xc, z, z2);
   18220:	0106971b          	slliw	a4,a3,0x10
   18224:	00f767b3          	or	a5,a4,a5
   18228:	fef4ae23          	sw	a5,-4(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:390
	      z2 = (*x++ >> 16) * y + (*xc & 0xffff) + carry;
   1822c:	ffefd703          	lhu	a4,-2(t6)
   18230:	0042af03          	lw	t5,4(t0)
   18234:	0106d69b          	srliw	a3,a3,0x10
   18238:	0277073b          	mulw	a4,a4,t2
   1823c:	00bf77b3          	and	a5,t5,a1
   18240:	00f707bb          	addw	a5,a4,a5
   18244:	00d787bb          	addw	a5,a5,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:391
	      carry = z2 >> 16;
   18248:	0107d69b          	srliw	a3,a5,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:393
	    }
	  while (x < xae);
   1824c:	fb0fe6e3          	bltu	t6,a6,181f8 <__multiply+0x140>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:394
	  *xc = z2;
   18250:	00f2a223          	sw	a5,4(t0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:361
  xae = xa + wa;
  xb = b->_x;
  xbe = xb + wb;
  xc0 = c->_x;
#ifdef Pack_32
  for (; xb < xbe; xb++, xc0++)
   18254:	00460613          	addi	a2,a2,4
   18258:	00430313          	addi	t1,t1,4
   1825c:	f1c660e3          	bltu	a2,t3,1815c <__multiply+0xa4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:416
	  while (x < xae);
	  *xc = carry;
	}
    }
#endif
  for (xc0 = c->_x, xc = xc0 + wc; wc > 0 && !*--xc; --wc);
   18260:	02805463          	blez	s0,18288 <__multiply+0x1d0>
   18264:	ffc8a783          	lw	a5,-4(a7)
   18268:	ffc88893          	addi	a7,a7,-4
   1826c:	00078863          	beqz	a5,1827c <__multiply+0x1c4>
   18270:	0180006f          	j	18288 <__multiply+0x1d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:416 (discriminator 3)
   18274:	0008a783          	lw	a5,0(a7)
   18278:	00079863          	bnez	a5,18288 <__multiply+0x1d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:416 (discriminator 4)
   1827c:	fff4041b          	addiw	s0,s0,-1
   18280:	ffc88893          	addi	a7,a7,-4
   18284:	fe0418e3          	bnez	s0,18274 <__multiply+0x1bc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:419
  c->_wds = wc;
  return c;
}
   18288:	02813083          	ld	ra,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:417
	  *xc = carry;
	}
    }
#endif
  for (xc0 = c->_x, xc = xc0 + wc; wc > 0 && !*--xc; --wc);
  c->_wds = wc;
   1828c:	00852a23          	sw	s0,20(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:419
  return c;
}
   18290:	01813483          	ld	s1,24(sp)
   18294:	02013403          	ld	s0,32(sp)
   18298:	01013903          	ld	s2,16(sp)
   1829c:	00813983          	ld	s3,8(sp)
   182a0:	00013a03          	ld	s4,0(sp)
   182a4:	03010113          	addi	sp,sp,48
   182a8:	00008067          	ret

00000000000182ac <__pow5mult>:
__pow5mult():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:424

_Bigint *
_DEFUN (pow5mult,
	(ptr, b, k), struct _reent * ptr _AND _Bigint * b _AND int k)
{
   182ac:	fd010113          	addi	sp,sp,-48
   182b0:	02813023          	sd	s0,32(sp)
   182b4:	01213823          	sd	s2,16(sp)
   182b8:	01313423          	sd	s3,8(sp)
   182bc:	02113423          	sd	ra,40(sp)
   182c0:	00913c23          	sd	s1,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:429
  _Bigint *b1, *p5, *p51;
  int i;
  static _CONST int p05[3] = {5, 25, 125};

  if ((i = k & 3) != 0)
   182c4:	00367793          	andi	a5,a2,3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:424
}

_Bigint *
_DEFUN (pow5mult,
	(ptr, b, k), struct _reent * ptr _AND _Bigint * b _AND int k)
{
   182c8:	00060413          	mv	s0,a2
   182cc:	00050993          	mv	s3,a0
   182d0:	00058913          	mv	s2,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:429
  _Bigint *b1, *p5, *p51;
  int i;
  static _CONST int p05[3] = {5, 25, 125};

  if ((i = k & 3) != 0)
   182d4:	0a079e63          	bnez	a5,18390 <__pow5mult+0xe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:432
    b = multadd (ptr, b, p05[i - 1], 0);

  if (!(k >>= 2))
   182d8:	4024541b          	sraiw	s0,s0,0x2
   182dc:	06040663          	beqz	s0,18348 <__pow5mult+0x9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:435
    return b;
  _REENT_CHECK_MP(ptr);
  if (!(p5 = _REENT_MP_P5S(ptr)))
   182e0:	0709b483          	ld	s1,112(s3) # ffffffffffffe070 <_end+0xfffffffffffd7258>
   182e4:	0c048a63          	beqz	s1,183b8 <__pow5mult+0x10c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:443
      p5 = _REENT_MP_P5S(ptr) = i2b (ptr, 625);
      p5->_next = 0;
    }
  for (;;)
    {
      if (k & 1)
   182e8:	00147793          	andi	a5,s0,1
   182ec:	02079063          	bnez	a5,1830c <__pow5mult+0x60>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:449
	{
	  b1 = mult (ptr, b, p5);
	  Bfree (ptr, b);
	  b = b1;
	}
      if (!(k >>= 1))
   182f0:	4014541b          	sraiw	s0,s0,0x1
   182f4:	04040a63          	beqz	s0,18348 <__pow5mult+0x9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:451
	break;
      if (!(p51 = p5->_next))
   182f8:	0004b503          	ld	a0,0(s1)
   182fc:	06050663          	beqz	a0,18368 <__pow5mult+0xbc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:424
}

_Bigint *
_DEFUN (pow5mult,
	(ptr, b, k), struct _reent * ptr _AND _Bigint * b _AND int k)
{
   18300:	00050493          	mv	s1,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:443
      p5 = _REENT_MP_P5S(ptr) = i2b (ptr, 625);
      p5->_next = 0;
    }
  for (;;)
    {
      if (k & 1)
   18304:	00147793          	andi	a5,s0,1
   18308:	fe0784e3          	beqz	a5,182f0 <__pow5mult+0x44>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:445
	{
	  b1 = mult (ptr, b, p5);
   1830c:	00048613          	mv	a2,s1
   18310:	00090593          	mv	a1,s2
   18314:	00098513          	mv	a0,s3
   18318:	da1ff0ef          	jal	180b8 <__multiply>
_Bfree():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:139

void
_DEFUN (Bfree, (ptr, v), struct _reent *ptr _AND _Bigint * v)
{
  _REENT_CHECK_MP(ptr);
  if (v)
   1831c:	06090663          	beqz	s2,18388 <__pow5mult+0xdc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:141
    {
      v->_next = _REENT_MP_FREELIST(ptr)[v->_k];
   18320:	00892783          	lw	a5,8(s2)
   18324:	0789b703          	ld	a4,120(s3)
__pow5mult():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:449
	{
	  b1 = mult (ptr, b, p5);
	  Bfree (ptr, b);
	  b = b1;
	}
      if (!(k >>= 1))
   18328:	4014541b          	sraiw	s0,s0,0x1
_Bfree():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:141
_DEFUN (Bfree, (ptr, v), struct _reent *ptr _AND _Bigint * v)
{
  _REENT_CHECK_MP(ptr);
  if (v)
    {
      v->_next = _REENT_MP_FREELIST(ptr)[v->_k];
   1832c:	00379793          	slli	a5,a5,0x3
   18330:	00f707b3          	add	a5,a4,a5
   18334:	0007b703          	ld	a4,0(a5)
   18338:	00e93023          	sd	a4,0(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:142
      _REENT_MP_FREELIST(ptr)[v->_k] = v;
   1833c:	0127b023          	sd	s2,0(a5)
__pow5mult():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:447
    {
      if (k & 1)
	{
	  b1 = mult (ptr, b, p5);
	  Bfree (ptr, b);
	  b = b1;
   18340:	00050913          	mv	s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:449
	}
      if (!(k >>= 1))
   18344:	fa041ae3          	bnez	s0,182f8 <__pow5mult+0x4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:459
	  p51->_next = 0;
	}
      p5 = p51;
    }
  return b;
}
   18348:	02813083          	ld	ra,40(sp)
   1834c:	00090513          	mv	a0,s2
   18350:	02013403          	ld	s0,32(sp)
   18354:	01813483          	ld	s1,24(sp)
   18358:	01013903          	ld	s2,16(sp)
   1835c:	00813983          	ld	s3,8(sp)
   18360:	03010113          	addi	sp,sp,48
   18364:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:453
	}
      if (!(k >>= 1))
	break;
      if (!(p51 = p5->_next))
	{
	  p51 = p5->_next = mult (ptr, p5, p5);
   18368:	00048613          	mv	a2,s1
   1836c:	00048593          	mv	a1,s1
   18370:	00098513          	mv	a0,s3
   18374:	d45ff0ef          	jal	180b8 <__multiply>
   18378:	00a4b023          	sd	a0,0(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:454
	  p51->_next = 0;
   1837c:	00053023          	sd	zero,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:424
}

_Bigint *
_DEFUN (pow5mult,
	(ptr, b, k), struct _reent * ptr _AND _Bigint * b _AND int k)
{
   18380:	00050493          	mv	s1,a0
   18384:	f81ff06f          	j	18304 <__pow5mult+0x58>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:447
    {
      if (k & 1)
	{
	  b1 = mult (ptr, b, p5);
	  Bfree (ptr, b);
	  b = b1;
   18388:	00050913          	mv	s2,a0
   1838c:	f65ff06f          	j	182f0 <__pow5mult+0x44>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:430
  _Bigint *b1, *p5, *p51;
  int i;
  static _CONST int p05[3] = {5, 25, 125};

  if ((i = k & 3) != 0)
    b = multadd (ptr, b, p05[i - 1], 0);
   18390:	fff7879b          	addiw	a5,a5,-1
   18394:	00021737          	lui	a4,0x21
   18398:	d1070713          	addi	a4,a4,-752 # 20d10 <p05.2568>
   1839c:	00279793          	slli	a5,a5,0x2
   183a0:	00f707b3          	add	a5,a4,a5
   183a4:	0007a603          	lw	a2,0(a5)
   183a8:	00000693          	li	a3,0
   183ac:	971ff0ef          	jal	17d1c <__multadd>
   183b0:	00050913          	mv	s2,a0
   183b4:	f25ff06f          	j	182d8 <__pow5mult+0x2c>
__i2b():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:323
_Bigint *
_DEFUN (i2b, (ptr, i), struct _reent * ptr _AND int i)
{
  _Bigint *b;

  b = Balloc (ptr, 1);
   183b8:	00100593          	li	a1,1
   183bc:	00098513          	mv	a0,s3
   183c0:	88dff0ef          	jal	17c4c <_Balloc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:324
  b->_x[0] = i;
   183c4:	27100793          	li	a5,625
   183c8:	00f52c23          	sw	a5,24(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:325
  b->_wds = 1;
   183cc:	00100793          	li	a5,1
   183d0:	00f52a23          	sw	a5,20(a0)
__pow5mult():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:438
    return b;
  _REENT_CHECK_MP(ptr);
  if (!(p5 = _REENT_MP_P5S(ptr)))
    {
      /* first time */
      p5 = _REENT_MP_P5S(ptr) = i2b (ptr, 625);
   183d4:	06a9b823          	sd	a0,112(s3)
__i2b():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:323
_Bigint *
_DEFUN (i2b, (ptr, i), struct _reent * ptr _AND int i)
{
  _Bigint *b;

  b = Balloc (ptr, 1);
   183d8:	00050493          	mv	s1,a0
__pow5mult():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:439
  _REENT_CHECK_MP(ptr);
  if (!(p5 = _REENT_MP_P5S(ptr)))
    {
      /* first time */
      p5 = _REENT_MP_P5S(ptr) = i2b (ptr, 625);
      p5->_next = 0;
   183dc:	00053023          	sd	zero,0(a0)
   183e0:	f09ff06f          	j	182e8 <__pow5mult+0x3c>

00000000000183e4 <__lshift>:
__lshift():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:463
  return b;
}

_Bigint *
_DEFUN (lshift, (ptr, b, k), struct _reent * ptr _AND _Bigint * b _AND int k)
{
   183e4:	fc010113          	addi	sp,sp,-64
   183e8:	01513423          	sd	s5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:474
  n = k >> 5;
#else
  n = k >> 4;
#endif
  k1 = b->_k;
  n1 = n + b->_wds + 1;
   183ec:	0145aa83          	lw	s5,20(a1) # 10014 <_ftext+0x14>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:463
  return b;
}

_Bigint *
_DEFUN (lshift, (ptr, b, k), struct _reent * ptr _AND _Bigint * b _AND int k)
{
   183f0:	02813823          	sd	s0,48(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:475
#else
  n = k >> 4;
#endif
  k1 = b->_k;
  n1 = n + b->_wds + 1;
  for (i = b->_maxwds; n1 > i; i <<= 1)
   183f4:	00c5a783          	lw	a5,12(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:469
  int i, k1, n, n1;
  _Bigint *b1;
  __ULong *x, *x1, *xe, z;

#ifdef Pack_32
  n = k >> 5;
   183f8:	4056541b          	sraiw	s0,a2,0x5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:474
#else
  n = k >> 4;
#endif
  k1 = b->_k;
  n1 = n + b->_wds + 1;
   183fc:	01540abb          	addw	s5,s0,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:463
  return b;
}

_Bigint *
_DEFUN (lshift, (ptr, b, k), struct _reent * ptr _AND _Bigint * b _AND int k)
{
   18400:	02913423          	sd	s1,40(sp)
   18404:	03213023          	sd	s2,32(sp)
   18408:	01313c23          	sd	s3,24(sp)
   1840c:	01413823          	sd	s4,16(sp)
   18410:	02113c23          	sd	ra,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:474
  n = k >> 5;
#else
  n = k >> 4;
#endif
  k1 = b->_k;
  n1 = n + b->_wds + 1;
   18414:	001a849b          	addiw	s1,s5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:463
  return b;
}

_Bigint *
_DEFUN (lshift, (ptr, b, k), struct _reent * ptr _AND _Bigint * b _AND int k)
{
   18418:	00058913          	mv	s2,a1
   1841c:	00060993          	mv	s3,a2
   18420:	00050a13          	mv	s4,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:473
#ifdef Pack_32
  n = k >> 5;
#else
  n = k >> 4;
#endif
  k1 = b->_k;
   18424:	0085a583          	lw	a1,8(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:475
  n1 = n + b->_wds + 1;
  for (i = b->_maxwds; n1 > i; i <<= 1)
   18428:	0097d863          	ble	s1,a5,18438 <__lshift+0x54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:475 (discriminator 3)
   1842c:	0017979b          	slliw	a5,a5,0x1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:476
    k1++;
   18430:	0015859b          	addiw	a1,a1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:475
#else
  n = k >> 4;
#endif
  k1 = b->_k;
  n1 = n + b->_wds + 1;
  for (i = b->_maxwds; n1 > i; i <<= 1)
   18434:	fe97cce3          	blt	a5,s1,1842c <__lshift+0x48>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:477
    k1++;
  b1 = Balloc (ptr, k1);
   18438:	000a0513          	mv	a0,s4
   1843c:	811ff0ef          	jal	17c4c <_Balloc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:478
  x1 = b1->_x;
   18440:	01850793          	addi	a5,a0,24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:479
  for (i = 0; i < n; i++)
   18444:	0e805c63          	blez	s0,1853c <__lshift+0x158>
   18448:	fff4071b          	addiw	a4,s0,-1
   1844c:	02071713          	slli	a4,a4,0x20
   18450:	02075713          	srli	a4,a4,0x20
   18454:	00170713          	addi	a4,a4,1
   18458:	00271713          	slli	a4,a4,0x2
   1845c:	00e78733          	add	a4,a5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:480 (discriminator 3)
    *x1++ = 0;
   18460:	00478793          	addi	a5,a5,4
   18464:	fe07ae23          	sw	zero,-4(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:479
  n1 = n + b->_wds + 1;
  for (i = b->_maxwds; n1 > i; i <<= 1)
    k1++;
  b1 = Balloc (ptr, k1);
  x1 = b1->_x;
  for (i = 0; i < n; i++)
   18468:	fee79ce3          	bne	a5,a4,18460 <__lshift+0x7c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:482
    *x1++ = 0;
  x = b->_x;
  xe = x + b->_wds;
   1846c:	01492883          	lw	a7,20(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:481
    k1++;
  b1 = Balloc (ptr, k1);
  x1 = b1->_x;
  for (i = 0; i < n; i++)
    *x1++ = 0;
  x = b->_x;
   18470:	01890793          	addi	a5,s2,24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:484
  xe = x + b->_wds;
#ifdef Pack_32
  if (k &= 0x1f)
   18474:	01f9f613          	andi	a2,s3,31
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:482
  b1 = Balloc (ptr, k1);
  x1 = b1->_x;
  for (i = 0; i < n; i++)
    *x1++ = 0;
  x = b->_x;
  xe = x + b->_wds;
   18478:	00289893          	slli	a7,a7,0x2
   1847c:	011788b3          	add	a7,a5,a7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:484
#ifdef Pack_32
  if (k &= 0x1f)
   18480:	08060863          	beqz	a2,18510 <__lshift+0x12c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:486
    {
      k1 = 32 - k;
   18484:	02000313          	li	t1,32
   18488:	40c3033b          	subw	t1,t1,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:487
      z = 0;
   1848c:	00000693          	li	a3,0
   18490:	0080006f          	j	18498 <__lshift+0xb4>
   18494:	00080713          	mv	a4,a6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:490 (discriminator 1)
      do
	{
	  *x1++ = *x << k | z;
   18498:	0007a583          	lw	a1,0(a5)
   1849c:	00470813          	addi	a6,a4,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:491
	  z = *x++ >> k1;
   184a0:	00478793          	addi	a5,a5,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:490
    {
      k1 = 32 - k;
      z = 0;
      do
	{
	  *x1++ = *x << k | z;
   184a4:	00c595bb          	sllw	a1,a1,a2
   184a8:	00d5e6b3          	or	a3,a1,a3
   184ac:	fed82e23          	sw	a3,-4(a6) # fffc <_ftext-0x4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:491
	  z = *x++ >> k1;
   184b0:	ffc7a683          	lw	a3,-4(a5)
   184b4:	0066d6bb          	srlw	a3,a3,t1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:493
	}
      while (x < xe);
   184b8:	fd17eee3          	bltu	a5,a7,18494 <__lshift+0xb0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:494
      if ((*x1 = z) != 0)
   184bc:	00d72223          	sw	a3,4(a4)
   184c0:	00068463          	beqz	a3,184c8 <__lshift+0xe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:495
	++n1;
   184c4:	002a849b          	addiw	s1,s5,2
_Bfree():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:141
_DEFUN (Bfree, (ptr, v), struct _reent *ptr _AND _Bigint * v)
{
  _REENT_CHECK_MP(ptr);
  if (v)
    {
      v->_next = _REENT_MP_FREELIST(ptr)[v->_k];
   184c8:	00892783          	lw	a5,8(s2)
   184cc:	078a3703          	ld	a4,120(s4) # ffffffff80000078 <_end+0xffffffff7ffd9260>
__lshift():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:516
#endif
  else
    do
      *x1++ = *x++;
    while (x < xe);
  b1->_wds = n1 - 1;
   184d0:	fff4849b          	addiw	s1,s1,-1
_Bfree():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:141
_DEFUN (Bfree, (ptr, v), struct _reent *ptr _AND _Bigint * v)
{
  _REENT_CHECK_MP(ptr);
  if (v)
    {
      v->_next = _REENT_MP_FREELIST(ptr)[v->_k];
   184d4:	00379793          	slli	a5,a5,0x3
   184d8:	00f707b3          	add	a5,a4,a5
   184dc:	0007b703          	ld	a4,0(a5)
__lshift():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:519
      *x1++ = *x++;
    while (x < xe);
  b1->_wds = n1 - 1;
  Bfree (ptr, b);
  return b1;
}
   184e0:	03813083          	ld	ra,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:516
#endif
  else
    do
      *x1++ = *x++;
    while (x < xe);
  b1->_wds = n1 - 1;
   184e4:	00952a23          	sw	s1,20(a0)
_Bfree():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:141
_DEFUN (Bfree, (ptr, v), struct _reent *ptr _AND _Bigint * v)
{
  _REENT_CHECK_MP(ptr);
  if (v)
    {
      v->_next = _REENT_MP_FREELIST(ptr)[v->_k];
   184e8:	00e93023          	sd	a4,0(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:142
      _REENT_MP_FREELIST(ptr)[v->_k] = v;
   184ec:	0127b023          	sd	s2,0(a5)
__lshift():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:519
      *x1++ = *x++;
    while (x < xe);
  b1->_wds = n1 - 1;
  Bfree (ptr, b);
  return b1;
}
   184f0:	03013403          	ld	s0,48(sp)
   184f4:	02813483          	ld	s1,40(sp)
   184f8:	02013903          	ld	s2,32(sp)
   184fc:	01813983          	ld	s3,24(sp)
   18500:	01013a03          	ld	s4,16(sp)
   18504:	00813a83          	ld	s5,8(sp)
   18508:	04010113          	addi	sp,sp,64
   1850c:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:514 (discriminator 1)
	++n1;
    }
#endif
  else
    do
      *x1++ = *x++;
   18510:	00478793          	addi	a5,a5,4
   18514:	ffc7a683          	lw	a3,-4(a5)
   18518:	00470713          	addi	a4,a4,4
   1851c:	fed72e23          	sw	a3,-4(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:515
    while (x < xe);
   18520:	fb17f4e3          	bleu	a7,a5,184c8 <__lshift+0xe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:514
	++n1;
    }
#endif
  else
    do
      *x1++ = *x++;
   18524:	00478793          	addi	a5,a5,4
   18528:	ffc7a683          	lw	a3,-4(a5)
   1852c:	00470713          	addi	a4,a4,4
   18530:	fed72e23          	sw	a3,-4(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:515
    while (x < xe);
   18534:	fd17eee3          	bltu	a5,a7,18510 <__lshift+0x12c>
   18538:	f91ff06f          	j	184c8 <__lshift+0xe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:478
  k1 = b->_k;
  n1 = n + b->_wds + 1;
  for (i = b->_maxwds; n1 > i; i <<= 1)
    k1++;
  b1 = Balloc (ptr, k1);
  x1 = b1->_x;
   1853c:	00078713          	mv	a4,a5
   18540:	f2dff06f          	j	1846c <__lshift+0x88>

0000000000018544 <__mcmp>:
__mcmp():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:527
_DEFUN (cmp, (a, b), _Bigint * a _AND _Bigint * b)
{
  __ULong *xa, *xa0, *xb, *xb0;
  int i, j;

  i = a->_wds;
   18544:	01452783          	lw	a5,20(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:528
  j = b->_wds;
   18548:	0145a703          	lw	a4,20(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:535
  if (i > 1 && !a->_x[i - 1])
    Bug ("cmp called with a->_x[a->_wds-1] == 0");
  if (j > 1 && !b->_x[j - 1])
    Bug ("cmp called with b->_x[b->_wds-1] == 0");
#endif
  if (i -= j)
   1854c:	40e787bb          	subw	a5,a5,a4
   18550:	04079263          	bnez	a5,18594 <__mcmp+0x50>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:538
    return i;
  xa0 = a->_x;
  xa = xa0 + j;
   18554:	00271713          	slli	a4,a4,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:537
  if (j > 1 && !b->_x[j - 1])
    Bug ("cmp called with b->_x[b->_wds-1] == 0");
#endif
  if (i -= j)
    return i;
  xa0 = a->_x;
   18558:	01850513          	addi	a0,a0,24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:539
  xa = xa0 + j;
  xb0 = b->_x;
   1855c:	01858593          	addi	a1,a1,24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:538
    Bug ("cmp called with b->_x[b->_wds-1] == 0");
#endif
  if (i -= j)
    return i;
  xa0 = a->_x;
  xa = xa0 + j;
   18560:	00e507b3          	add	a5,a0,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:540
  xb0 = b->_x;
  xb = xb0 + j;
   18564:	00e585b3          	add	a1,a1,a4
   18568:	0080006f          	j	18570 <__mcmp+0x2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:545
  for (;;)
    {
      if (*--xa != *--xb)
	return *xa < *xb ? -1 : 1;
      if (xa <= xa0)
   1856c:	02f57863          	bleu	a5,a0,1859c <__mcmp+0x58>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:543
  xa = xa0 + j;
  xb0 = b->_x;
  xb = xb0 + j;
  for (;;)
    {
      if (*--xa != *--xb)
   18570:	ffc78793          	addi	a5,a5,-4
   18574:	ffc58593          	addi	a1,a1,-4
   18578:	0007a703          	lw	a4,0(a5)
   1857c:	0005a683          	lw	a3,0(a1)
   18580:	fed706e3          	beq	a4,a3,1856c <__mcmp+0x28>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:544
	return *xa < *xb ? -1 : 1;
   18584:	00d737b3          	sltu	a5,a4,a3
   18588:	40f007bb          	negw	a5,a5
   1858c:	0017e513          	ori	a0,a5,1
   18590:	00008067          	ret
   18594:	00078513          	mv	a0,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:549
      if (xa <= xa0)
	break;
    }
  return 0;
}
   18598:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:548
      if (*--xa != *--xb)
	return *xa < *xb ? -1 : 1;
      if (xa <= xa0)
	break;
    }
  return 0;
   1859c:	00000513          	li	a0,0
   185a0:	00008067          	ret

00000000000185a4 <__mdiff>:
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:527
_DEFUN (cmp, (a, b), _Bigint * a _AND _Bigint * b)
{
  __ULong *xa, *xa0, *xb, *xb0;
  int i, j;

  i = a->_wds;
   185a4:	0145a703          	lw	a4,20(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:528
  j = b->_wds;
   185a8:	01462783          	lw	a5,20(a2)
__mdiff():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:554
}

_Bigint *
_DEFUN (diff, (ptr, a, b), struct _reent * ptr _AND
	_Bigint * a _AND _Bigint * b)
{
   185ac:	fd010113          	addi	sp,sp,-48
   185b0:	01213823          	sd	s2,16(sp)
   185b4:	01313423          	sd	s3,8(sp)
   185b8:	02113423          	sd	ra,40(sp)
   185bc:	02813023          	sd	s0,32(sp)
   185c0:	00913c23          	sd	s1,24(sp)
   185c4:	01413023          	sd	s4,0(sp)
__mcmp():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:535
  if (i > 1 && !a->_x[i - 1])
    Bug ("cmp called with a->_x[a->_wds-1] == 0");
  if (j > 1 && !b->_x[j - 1])
    Bug ("cmp called with b->_x[b->_wds-1] == 0");
#endif
  if (i -= j)
   185c8:	40f7073b          	subw	a4,a4,a5
__mdiff():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:554
}

_Bigint *
_DEFUN (diff, (ptr, a, b), struct _reent * ptr _AND
	_Bigint * a _AND _Bigint * b)
{
   185cc:	00058913          	mv	s2,a1
   185d0:	00060993          	mv	s3,a2
__mcmp():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:535
  if (i > 1 && !a->_x[i - 1])
    Bug ("cmp called with a->_x[a->_wds-1] == 0");
  if (j > 1 && !b->_x[j - 1])
    Bug ("cmp called with b->_x[b->_wds-1] == 0");
#endif
  if (i -= j)
   185d4:	04071863          	bnez	a4,18624 <__mdiff+0x80>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:538
    return i;
  xa0 = a->_x;
  xa = xa0 + j;
   185d8:	00279713          	slli	a4,a5,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:537
  if (j > 1 && !b->_x[j - 1])
    Bug ("cmp called with b->_x[b->_wds-1] == 0");
#endif
  if (i -= j)
    return i;
  xa0 = a->_x;
   185dc:	01858813          	addi	a6,a1,24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:539
  xa = xa0 + j;
  xb0 = b->_x;
   185e0:	01860413          	addi	s0,a2,24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:538
    Bug ("cmp called with b->_x[b->_wds-1] == 0");
#endif
  if (i -= j)
    return i;
  xa0 = a->_x;
  xa = xa0 + j;
   185e4:	00e807b3          	add	a5,a6,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:540
  xb0 = b->_x;
  xb = xb0 + j;
   185e8:	00e40733          	add	a4,s0,a4
   185ec:	0080006f          	j	185f4 <__mdiff+0x50>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:545
  for (;;)
    {
      if (*--xa != *--xb)
	return *xa < *xb ? -1 : 1;
      if (xa <= xa0)
   185f0:	16f87263          	bleu	a5,a6,18754 <__mdiff+0x1b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:543
  xa = xa0 + j;
  xb0 = b->_x;
  xb = xb0 + j;
  for (;;)
    {
      if (*--xa != *--xb)
   185f4:	ffc78793          	addi	a5,a5,-4
   185f8:	ffc70713          	addi	a4,a4,-4
   185fc:	0007a583          	lw	a1,0(a5)
   18600:	00072683          	lw	a3,0(a4)
   18604:	fed586e3          	beq	a1,a3,185f0 <__mdiff+0x4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:544
	return *xa < *xb ? -1 : 1;
   18608:	18d5f063          	bleu	a3,a1,18788 <__mdiff+0x1e4>
   1860c:	00090793          	mv	a5,s2
   18610:	00080493          	mv	s1,a6
   18614:	00098913          	mv	s2,s3
__mdiff():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:576
  if (i < 0)
    {
      c = a;
      a = b;
      b = c;
      i = 1;
   18618:	00100a13          	li	s4,1
__mcmp():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:544
  xb0 = b->_x;
  xb = xb0 + j;
  for (;;)
    {
      if (*--xa != *--xb)
	return *xa < *xb ? -1 : 1;
   1861c:	00078993          	mv	s3,a5
   18620:	0140006f          	j	18634 <__mdiff+0x90>
__mdiff():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:571
      c = Balloc (ptr, 0);
      c->_wds = 1;
      c->_x[0] = 0;
      return c;
    }
  if (i < 0)
   18624:	16074a63          	bltz	a4,18798 <__mdiff+0x1f4>
   18628:	01860493          	addi	s1,a2,24
   1862c:	01858413          	addi	s0,a1,24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:579
      a = b;
      b = c;
      i = 1;
    }
  else
    i = 0;
   18630:	00000a13          	li	s4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:580
  c = Balloc (ptr, a->_k);
   18634:	00892583          	lw	a1,8(s2)
   18638:	e14ff0ef          	jal	17c4c <_Balloc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:582
  c->_sign = i;
  wa = a->_wds;
   1863c:	01492e03          	lw	t3,20(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:587
  xa = a->_x;
  xae = xa + wa;
  wb = b->_wds;
  xb = b->_x;
  xbe = xb + wb;
   18640:	0149af03          	lw	t5,20(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:593
  xc = c->_x;
  borrow = 0;
#ifdef Pack_32
  do
    {
      y = (*xa & 0xffff) - (*xb & 0xffff) + borrow;
   18644:	00010337          	lui	t1,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:584
    i = 0;
  c = Balloc (ptr, a->_k);
  c->_sign = i;
  wa = a->_wds;
  xa = a->_x;
  xae = xa + wa;
   18648:	002e1e93          	slli	t4,t3,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:587
  wb = b->_wds;
  xb = b->_x;
  xbe = xb + wb;
   1864c:	002f1f13          	slli	t5,t5,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:581
      i = 1;
    }
  else
    i = 0;
  c = Balloc (ptr, a->_k);
  c->_sign = i;
   18650:	01452823          	sw	s4,16(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:584
  wa = a->_wds;
  xa = a->_x;
  xae = xa + wa;
   18654:	01d40eb3          	add	t4,s0,t4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:587
  wb = b->_wds;
  xb = b->_x;
  xbe = xb + wb;
   18658:	01e48f33          	add	t5,s1,t5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:588
  xc = c->_x;
   1865c:	01850813          	addi	a6,a0,24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:589
  borrow = 0;
   18660:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:593
#ifdef Pack_32
  do
    {
      y = (*xa & 0xffff) - (*xb & 0xffff) + borrow;
   18664:	fff3031b          	addiw	t1,t1,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:593 (discriminator 1)
   18668:	00042583          	lw	a1,0(s0)
   1866c:	0004a883          	lw	a7,0(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:599
      borrow = y >> 16;
      Sign_Extend (borrow, y);
      z = (*xa++ >> 16) - (*xb++ >> 16) + borrow;
      borrow = z >> 16;
      Sign_Extend (borrow, z);
      Storeinc (xc, z, y);
   18670:	00480813          	addi	a6,a6,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:593
  xc = c->_x;
  borrow = 0;
#ifdef Pack_32
  do
    {
      y = (*xa & 0xffff) - (*xb & 0xffff) + borrow;
   18674:	0065f633          	and	a2,a1,t1
   18678:	00d606bb          	addw	a3,a2,a3
   1867c:	0068f733          	and	a4,a7,t1
   18680:	40e6873b          	subw	a4,a3,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:596
      borrow = y >> 16;
      Sign_Extend (borrow, y);
      z = (*xa++ >> 16) - (*xb++ >> 16) + borrow;
   18684:	0105d59b          	srliw	a1,a1,0x10
   18688:	0108d69b          	srliw	a3,a7,0x10
   1868c:	40d585bb          	subw	a1,a1,a3
   18690:	4107569b          	sraiw	a3,a4,0x10
   18694:	00d586bb          	addw	a3,a1,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:599
      borrow = z >> 16;
      Sign_Extend (borrow, z);
      Storeinc (xc, z, y);
   18698:	0106979b          	slliw	a5,a3,0x10
   1869c:	00677733          	and	a4,a4,t1
   186a0:	00e7e7b3          	or	a5,a5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:596
  do
    {
      y = (*xa & 0xffff) - (*xb & 0xffff) + borrow;
      borrow = y >> 16;
      Sign_Extend (borrow, y);
      z = (*xa++ >> 16) - (*xb++ >> 16) + borrow;
   186a4:	00448493          	addi	s1,s1,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:599
      borrow = z >> 16;
      Sign_Extend (borrow, z);
      Storeinc (xc, z, y);
   186a8:	fef82e23          	sw	a5,-4(a6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:596
  do
    {
      y = (*xa & 0xffff) - (*xb & 0xffff) + borrow;
      borrow = y >> 16;
      Sign_Extend (borrow, y);
      z = (*xa++ >> 16) - (*xb++ >> 16) + borrow;
   186ac:	00440413          	addi	s0,s0,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:597
      borrow = z >> 16;
   186b0:	4106d69b          	sraiw	a3,a3,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:601
      Sign_Extend (borrow, z);
      Storeinc (xc, z, y);
    }
  while (xb < xbe);
   186b4:	fbe4eae3          	bltu	s1,t5,18668 <__mdiff+0xc4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:602
  while (xa < xae)
   186b8:	07d47063          	bleu	t4,s0,18718 <__mdiff+0x174>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:604
    {
      y = (*xa & 0xffff) + borrow;
   186bc:	00010f37          	lui	t5,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:599
      borrow = y >> 16;
      Sign_Extend (borrow, y);
      z = (*xa++ >> 16) - (*xb++ >> 16) + borrow;
      borrow = z >> 16;
      Sign_Extend (borrow, z);
      Storeinc (xc, z, y);
   186c0:	00080313          	mv	t1,a6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:602
    }
  while (xb < xbe);
  while (xa < xae)
   186c4:	00040893          	mv	a7,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:604
    {
      y = (*xa & 0xffff) + borrow;
   186c8:	ffff0f1b          	addiw	t5,t5,-1
   186cc:	0008a583          	lw	a1,0(a7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:610
      borrow = y >> 16;
      Sign_Extend (borrow, y);
      z = (*xa++ >> 16) + borrow;
      borrow = z >> 16;
      Sign_Extend (borrow, z);
      Storeinc (xc, z, y);
   186d0:	00430313          	addi	t1,t1,4 # 10004 <_ftext+0x4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:607
  while (xa < xae)
    {
      y = (*xa & 0xffff) + borrow;
      borrow = y >> 16;
      Sign_Extend (borrow, y);
      z = (*xa++ >> 16) + borrow;
   186d4:	00488893          	addi	a7,a7,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:604
      Storeinc (xc, z, y);
    }
  while (xb < xbe);
  while (xa < xae)
    {
      y = (*xa & 0xffff) + borrow;
   186d8:	01e5f633          	and	a2,a1,t5
   186dc:	00d606bb          	addw	a3,a2,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:607
      borrow = y >> 16;
      Sign_Extend (borrow, y);
      z = (*xa++ >> 16) + borrow;
   186e0:	4106d71b          	sraiw	a4,a3,0x10
   186e4:	0105d59b          	srliw	a1,a1,0x10
   186e8:	00e5873b          	addw	a4,a1,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:610
      borrow = z >> 16;
      Sign_Extend (borrow, z);
      Storeinc (xc, z, y);
   186ec:	01e6f6b3          	and	a3,a3,t5
   186f0:	0107179b          	slliw	a5,a4,0x10
   186f4:	00d7e7b3          	or	a5,a5,a3
   186f8:	fef32e23          	sw	a5,-4(t1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:608
    {
      y = (*xa & 0xffff) + borrow;
      borrow = y >> 16;
      Sign_Extend (borrow, y);
      z = (*xa++ >> 16) + borrow;
      borrow = z >> 16;
   186fc:	4107569b          	sraiw	a3,a4,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:602
      borrow = z >> 16;
      Sign_Extend (borrow, z);
      Storeinc (xc, z, y);
    }
  while (xb < xbe);
  while (xa < xae)
   18700:	fdd8e6e3          	bltu	a7,t4,186cc <__mdiff+0x128>
   18704:	fff44413          	not	s0,s0
   18708:	01d40eb3          	add	t4,s0,t4
   1870c:	ffcefe93          	andi	t4,t4,-4
   18710:	004e8e93          	addi	t4,t4,4
   18714:	01d80833          	add	a6,a6,t4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:629
      borrow = y >> 16;
      Sign_Extend (borrow, y);
      *xc++ = y & 0xffff;
    }
#endif
  while (!*--xc)
   18718:	ffc80813          	addi	a6,a6,-4
   1871c:	00079a63          	bnez	a5,18730 <__mdiff+0x18c>
   18720:	ffc80813          	addi	a6,a6,-4
   18724:	00082783          	lw	a5,0(a6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:630
    wa--;
   18728:	fffe0e1b          	addiw	t3,t3,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:629
      borrow = y >> 16;
      Sign_Extend (borrow, y);
      *xc++ = y & 0xffff;
    }
#endif
  while (!*--xc)
   1872c:	fe078ae3          	beqz	a5,18720 <__mdiff+0x17c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:633
    wa--;
  c->_wds = wa;
  return c;
}
   18730:	02813083          	ld	ra,40(sp)
   18734:	02013403          	ld	s0,32(sp)
   18738:	01813483          	ld	s1,24(sp)
   1873c:	01013903          	ld	s2,16(sp)
   18740:	00813983          	ld	s3,8(sp)
   18744:	00013a03          	ld	s4,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:631
      *xc++ = y & 0xffff;
    }
#endif
  while (!*--xc)
    wa--;
  c->_wds = wa;
   18748:	01c52a23          	sw	t3,20(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:633
  return c;
}
   1874c:	03010113          	addi	sp,sp,48
   18750:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:566
#endif

  i = cmp (a, b);
  if (!i)
    {
      c = Balloc (ptr, 0);
   18754:	00000593          	li	a1,0
   18758:	cf4ff0ef          	jal	17c4c <_Balloc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:633
#endif
  while (!*--xc)
    wa--;
  c->_wds = wa;
  return c;
}
   1875c:	02813083          	ld	ra,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:567

  i = cmp (a, b);
  if (!i)
    {
      c = Balloc (ptr, 0);
      c->_wds = 1;
   18760:	00100793          	li	a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:633
#endif
  while (!*--xc)
    wa--;
  c->_wds = wa;
  return c;
}
   18764:	02013403          	ld	s0,32(sp)
   18768:	01813483          	ld	s1,24(sp)
   1876c:	01013903          	ld	s2,16(sp)
   18770:	00813983          	ld	s3,8(sp)
   18774:	00013a03          	ld	s4,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:567

  i = cmp (a, b);
  if (!i)
    {
      c = Balloc (ptr, 0);
      c->_wds = 1;
   18778:	00f52a23          	sw	a5,20(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:568
      c->_x[0] = 0;
   1877c:	00052c23          	sw	zero,24(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:633
#endif
  while (!*--xc)
    wa--;
  c->_wds = wa;
  return c;
}
   18780:	03010113          	addi	sp,sp,48
   18784:	00008067          	ret
__mcmp():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:544
  xb0 = b->_x;
  xb = xb0 + j;
  for (;;)
    {
      if (*--xa != *--xb)
	return *xa < *xb ? -1 : 1;
   18788:	00040493          	mv	s1,s0
__mdiff():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:579
      a = b;
      b = c;
      i = 1;
    }
  else
    i = 0;
   1878c:	00000a13          	li	s4,0
__mcmp():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:544
  xb0 = b->_x;
  xb = xb0 + j;
  for (;;)
    {
      if (*--xa != *--xb)
	return *xa < *xb ? -1 : 1;
   18790:	00080413          	mv	s0,a6
   18794:	ea1ff06f          	j	18634 <__mdiff+0x90>
__mdiff():
   18798:	00090793          	mv	a5,s2
   1879c:	01890493          	addi	s1,s2,24
   187a0:	01898413          	addi	s0,s3,24
   187a4:	00098913          	mv	s2,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:576
  if (i < 0)
    {
      c = a;
      a = b;
      b = c;
      i = 1;
   187a8:	00100a13          	li	s4,1
   187ac:	00078993          	mv	s3,a5
   187b0:	e85ff06f          	j	18634 <__mdiff+0x90>

00000000000187b4 <__ulp>:
__ulp():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:637
  return c;
}

double
_DEFUN (ulp, (_x), double _x)
{
   187b4:	e20507d3          	fmv.x.d	a5,fa0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:643
  union double_union x, a;
  register __Long L;

  x.d = _x;

  L = (word0 (x) & Exp_mask) - (P - 1) * Exp_msk1;
   187b8:	7ff00737          	lui	a4,0x7ff00
   187bc:	4207d793          	srai	a5,a5,0x20
   187c0:	00e7f7b3          	and	a5,a5,a4
   187c4:	fcc00737          	lui	a4,0xfcc00
   187c8:	00e787bb          	addw	a5,a5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:645
#ifndef Sudden_Underflow
  if (L > 0)
   187cc:	00f05863          	blez	a5,187dc <__ulp+0x28>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:665
      L = -L >> Exp_shift;
      if (L < Exp_shift)
	{
	  word0 (a) = 0x80000 >> L;
#ifndef _DOUBLE_IS_32BITS
	  word1 (a) = 0;
   187d0:	02079793          	slli	a5,a5,0x20
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:678
         word1 (a) = L >= 31 ? 1 : 1 << (31 - L);
#endif
	}
    }
#endif
  return a.d;
   187d4:	f2078553          	fmv.d.x	fa0,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:679
}
   187d8:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:660

#ifndef Sudden_Underflow
    }
  else
    {
      L = -L >> Exp_shift;
   187dc:	40f007bb          	negw	a5,a5
   187e0:	4147d79b          	sraiw	a5,a5,0x14
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:661
      if (L < Exp_shift)
   187e4:	01300713          	li	a4,19
   187e8:	04f75063          	ble	a5,a4,18828 <__ulp+0x74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:671
#endif
	}
      else
	{
	  word0 (a) = 0;
	  L -= Exp_shift;
   187ec:	fec7869b          	addiw	a3,a5,-20
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:673
#ifndef _DOUBLE_IS_32BITS
         word1 (a) = L >= 31 ? 1 : 1 << (31 - L);
   187f0:	01e00613          	li	a2,30
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:670
	  word1 (a) = 0;
#endif
	}
      else
	{
	  word0 (a) = 0;
   187f4:	00000793          	li	a5,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:673
	  L -= Exp_shift;
#ifndef _DOUBLE_IS_32BITS
         word1 (a) = L >= 31 ? 1 : 1 << (31 - L);
   187f8:	00100713          	li	a4,1
   187fc:	00d64663          	blt	a2,a3,18808 <__ulp+0x54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:673 (discriminator 1)
   18800:	fff6c693          	not	a3,a3
   18804:	00d7173b          	sllw	a4,a4,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:673 (discriminator 4)
   18808:	fff00693          	li	a3,-1
   1880c:	02069693          	slli	a3,a3,0x20
   18810:	02071713          	slli	a4,a4,0x20
   18814:	02075713          	srli	a4,a4,0x20
   18818:	00d7f7b3          	and	a5,a5,a3
   1881c:	00e7e7b3          	or	a5,a5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:678
#endif
	}
    }
#endif
  return a.d;
   18820:	f2078553          	fmv.d.x	fa0,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:679
}
   18824:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:663
  else
    {
      L = -L >> Exp_shift;
      if (L < Exp_shift)
	{
	  word0 (a) = 0x80000 >> L;
   18828:	00080737          	lui	a4,0x80
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:665
#ifndef _DOUBLE_IS_32BITS
	  word1 (a) = 0;
   1882c:	40f757bb          	sraw	a5,a4,a5
   18830:	fa1ff06f          	j	187d0 <__ulp+0x1c>

0000000000018834 <__b2d>:
__b2d():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:684
}

double
_DEFUN (b2d, (a, e),
	_Bigint * a _AND int *e)
{
   18834:	fd010113          	addi	sp,sp,-48
   18838:	02813023          	sd	s0,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:696
#define d0 word0(d)
#define d1 word1(d)
#endif

  xa0 = a->_x;
  xa = xa0 + a->_wds;
   1883c:	01452403          	lw	s0,20(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:684
}

double
_DEFUN (b2d, (a, e),
	_Bigint * a _AND int *e)
{
   18840:	00913c23          	sd	s1,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:695
#else
#define d0 word0(d)
#define d1 word1(d)
#endif

  xa0 = a->_x;
   18844:	01850493          	addi	s1,a0,24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:696
  xa = xa0 + a->_wds;
   18848:	00241413          	slli	s0,s0,0x2
   1884c:	00848433          	add	s0,s1,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:684
}

double
_DEFUN (b2d, (a, e),
	_Bigint * a _AND int *e)
{
   18850:	01213823          	sd	s2,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:697
#define d1 word1(d)
#endif

  xa0 = a->_x;
  xa = xa0 + a->_wds;
  y = *--xa;
   18854:	ffc42903          	lw	s2,-4(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:684
}

double
_DEFUN (b2d, (a, e),
	_Bigint * a _AND int *e)
{
   18858:	01313423          	sd	s3,8(sp)
   1885c:	01413023          	sd	s4,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:702
  y = *--xa;
#ifdef DEBUG
  if (!y)
    Bug ("zero y in b2d");
#endif
  k = hi0bits (y);
   18860:	00090513          	mv	a0,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:684
}

double
_DEFUN (b2d, (a, e),
	_Bigint * a _AND int *e)
{
   18864:	00058a13          	mv	s4,a1
   18868:	02113423          	sd	ra,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:702
  y = *--xa;
#ifdef DEBUG
  if (!y)
    Bug ("zero y in b2d");
#endif
  k = hi0bits (y);
   1886c:	eecff0ef          	jal	17f58 <__hi0bits>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:703
  *e = 32 - k;
   18870:	02000793          	li	a5,32
   18874:	40a7873b          	subw	a4,a5,a0
   18878:	00ea2023          	sw	a4,0(s4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:705
#ifdef Pack_32
  if (k < Ebits)
   1887c:	00a00713          	li	a4,10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:697
#define d1 word1(d)
#endif

  xa0 = a->_x;
  xa = xa0 + a->_wds;
  y = *--xa;
   18880:	ffc40993          	addi	s3,s0,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:705
    Bug ("zero y in b2d");
#endif
  k = hi0bits (y);
  *e = 32 - k;
#ifdef Pack_32
  if (k < Ebits)
   18884:	06a74a63          	blt	a4,a0,188f8 <__b2d+0xc4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:707
    {
      d0 = Exp_1 | y >> (Ebits - k);
   18888:	00b00693          	li	a3,11
   1888c:	40a686bb          	subw	a3,a3,a0
   18890:	3ff00737          	lui	a4,0x3ff00
   18894:	00d957bb          	srlw	a5,s2,a3
   18898:	00e7e7b3          	or	a5,a5,a4
   1889c:	02079793          	slli	a5,a5,0x20
   188a0:	00000713          	li	a4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:708
      w = xa > xa0 ? *--xa : 0;
   188a4:	0134f663          	bleu	s3,s1,188b0 <__b2d+0x7c>
   188a8:	ff842703          	lw	a4,-8(s0)
   188ac:	00d7573b          	srlw	a4,a4,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:710 (discriminator 4)
#ifndef _DOUBLE_IS_32BITS
      d1 = y << ((32 - Ebits) + k) | w >> (Ebits - k);
   188b0:	0155051b          	addiw	a0,a0,21
   188b4:	00a9153b          	sllw	a0,s2,a0
   188b8:	00e56533          	or	a0,a0,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:720
  if (k -= Ebits)
    {
      d0 = Exp_1 | y << k | z >> (32 - k);
      y = xa > xa0 ? *--xa : 0;
#ifndef _DOUBLE_IS_32BITS
      d1 = z << k | y >> (32 - k);
   188bc:	fff00713          	li	a4,-1
   188c0:	02051513          	slli	a0,a0,0x20
   188c4:	02071713          	slli	a4,a4,0x20
   188c8:	02055513          	srli	a0,a0,0x20
   188cc:	00e7f7b3          	and	a5,a5,a4
   188d0:	00a7e7b3          	or	a5,a5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:756
#else
#undef d0
#undef d1
#endif
  return d.d;
}
   188d4:	02813083          	ld	ra,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:755
  word1 (d) = d1 >> 16 | d1 << 16;
#else
#undef d0
#undef d1
#endif
  return d.d;
   188d8:	f2078553          	fmv.d.x	fa0,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:756
}
   188dc:	02013403          	ld	s0,32(sp)
   188e0:	01813483          	ld	s1,24(sp)
   188e4:	01013903          	ld	s2,16(sp)
   188e8:	00813983          	ld	s3,8(sp)
   188ec:	00013a03          	ld	s4,0(sp)
   188f0:	03010113          	addi	sp,sp,48
   188f4:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:715
      d1 = y << ((32 - Ebits) + k) | w >> (Ebits - k);
#endif
      goto ret_d;
    }
  z = xa > xa0 ? *--xa : 0;
  if (k -= Ebits)
   188f8:	ff55051b          	addiw	a0,a0,-11
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:714
#ifndef _DOUBLE_IS_32BITS
      d1 = y << ((32 - Ebits) + k) | w >> (Ebits - k);
#endif
      goto ret_d;
    }
  z = xa > xa0 ? *--xa : 0;
   188fc:	0534f263          	bleu	s3,s1,18940 <__b2d+0x10c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:714 (discriminator 1)
   18900:	ff842683          	lw	a3,-8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:715
  if (k -= Ebits)
   18904:	04050263          	beqz	a0,18948 <__b2d+0x114>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:717
    {
      d0 = Exp_1 | y << k | z >> (32 - k);
   18908:	40a7863b          	subw	a2,a5,a0
   1890c:	00a917bb          	sllw	a5,s2,a0
   18910:	3ff00937          	lui	s2,0x3ff00
   18914:	00c6d73b          	srlw	a4,a3,a2
   18918:	0127e7b3          	or	a5,a5,s2
   1891c:	00e7e7b3          	or	a5,a5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:714
#ifndef _DOUBLE_IS_32BITS
      d1 = y << ((32 - Ebits) + k) | w >> (Ebits - k);
#endif
      goto ret_d;
    }
  z = xa > xa0 ? *--xa : 0;
   18920:	ff840713          	addi	a4,s0,-8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:717
  if (k -= Ebits)
    {
      d0 = Exp_1 | y << k | z >> (32 - k);
   18924:	02079793          	slli	a5,a5,0x20
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:718
      y = xa > xa0 ? *--xa : 0;
   18928:	04e4fa63          	bleu	a4,s1,1897c <__b2d+0x148>
   1892c:	ff442703          	lw	a4,-12(s0)
   18930:	00a6953b          	sllw	a0,a3,a0
   18934:	00c756bb          	srlw	a3,a4,a2
   18938:	00a6e533          	or	a0,a3,a0
   1893c:	f81ff06f          	j	188bc <__b2d+0x88>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:714
#ifndef _DOUBLE_IS_32BITS
      d1 = y << ((32 - Ebits) + k) | w >> (Ebits - k);
#endif
      goto ret_d;
    }
  z = xa > xa0 ? *--xa : 0;
   18940:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:715
  if (k -= Ebits)
   18944:	02051063          	bnez	a0,18964 <__b2d+0x130>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:725
      d1 = z << k | y >> (32 - k);
#endif
    }
  else
    {
      d0 = Exp_1 | y;
   18948:	3ff00737          	lui	a4,0x3ff00
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:727
#ifndef _DOUBLE_IS_32BITS
      d1 = z;
   1894c:	00e967b3          	or	a5,s2,a4
   18950:	02069693          	slli	a3,a3,0x20
   18954:	0206d693          	srli	a3,a3,0x20
   18958:	02079793          	slli	a5,a5,0x20
   1895c:	00d7e7b3          	or	a5,a5,a3
   18960:	f75ff06f          	j	188d4 <__b2d+0xa0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:717
      goto ret_d;
    }
  z = xa > xa0 ? *--xa : 0;
  if (k -= Ebits)
    {
      d0 = Exp_1 | y << k | z >> (32 - k);
   18964:	00a917bb          	sllw	a5,s2,a0
   18968:	3ff00737          	lui	a4,0x3ff00
   1896c:	00e7e7b3          	or	a5,a5,a4
   18970:	02079793          	slli	a5,a5,0x20
   18974:	00000513          	li	a0,0
   18978:	f45ff06f          	j	188bc <__b2d+0x88>
   1897c:	00a6953b          	sllw	a0,a3,a0
   18980:	f3dff06f          	j	188bc <__b2d+0x88>

0000000000018984 <__d2b>:
__d2b():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:766
	struct _reent * ptr _AND
	double _d _AND
	int *e _AND
	int *bits)

{
   18984:	fc010113          	addi	sp,sp,-64
   18988:	02813823          	sd	s0,48(sp)
   1898c:	e2058453          	fmv.x.d	s0,fa1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:785
#define d1 word1(d)
  d.d = _d;
#endif

#ifdef Pack_32
  b = Balloc (ptr, 1);
   18990:	00100593          	li	a1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:766
	struct _reent * ptr _AND
	double _d _AND
	int *e _AND
	int *bits)

{
   18994:	02913423          	sd	s1,40(sp)
   18998:	03213023          	sd	s2,32(sp)
   1899c:	01313c23          	sd	s3,24(sp)
   189a0:	01413823          	sd	s4,16(sp)
   189a4:	00068993          	mv	s3,a3
   189a8:	02113c23          	sd	ra,56(sp)
   189ac:	00060a13          	mv	s4,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:785
#define d1 word1(d)
  d.d = _d;
#endif

#ifdef Pack_32
  b = Balloc (ptr, 1);
   189b0:	a9cff0ef          	jal	17c4c <_Balloc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:791
#else
  b = Balloc (ptr, 2);
#endif
  x = b->_x;

  z = d0 & Frac_mask;
   189b4:	42045793          	srai	a5,s0,0x20
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:799
  de = (int) (d0 >> Exp_shift);
#ifndef IBM
  z |= Exp_msk11;
#endif
#else
  if ((de = (int) (d0 >> Exp_shift)) != 0)
   189b8:	02179493          	slli	s1,a5,0x21
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:791
#else
  b = Balloc (ptr, 2);
#endif
  x = b->_x;

  z = d0 & Frac_mask;
   189bc:	001006b7          	lui	a3,0x100
   189c0:	fff6871b          	addiw	a4,a3,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:799
  de = (int) (d0 >> Exp_shift);
#ifndef IBM
  z |= Exp_msk11;
#endif
#else
  if ((de = (int) (d0 >> Exp_shift)) != 0)
   189c4:	0354d493          	srli	s1,s1,0x35
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:785
#define d1 word1(d)
  d.d = _d;
#endif

#ifdef Pack_32
  b = Balloc (ptr, 1);
   189c8:	00050913          	mv	s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:791
#else
  b = Balloc (ptr, 2);
#endif
  x = b->_x;

  z = d0 & Frac_mask;
   189cc:	00e7f7b3          	and	a5,a5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:799
  de = (int) (d0 >> Exp_shift);
#ifndef IBM
  z |= Exp_msk11;
#endif
#else
  if ((de = (int) (d0 >> Exp_shift)) != 0)
   189d0:	00048463          	beqz	s1,189d8 <__d2b+0x54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:800
    z |= Exp_msk1;
   189d4:	00d7e7b3          	or	a5,a5,a3
   189d8:	00f12623          	sw	a5,12(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:804
#endif
#ifdef Pack_32
#ifndef _DOUBLE_IS_32BITS
  if (d1)
   189dc:	0004041b          	sext.w	s0,s0
   189e0:	08040063          	beqz	s0,18a60 <__d2b+0xdc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:807
    {
      y = d1;
      k = lo0bits (&y);
   189e4:	00810513          	addi	a0,sp,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:806
#endif
#ifdef Pack_32
#ifndef _DOUBLE_IS_32BITS
  if (d1)
    {
      y = d1;
   189e8:	00812423          	sw	s0,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:807
      k = lo0bits (&y);
   189ec:	de8ff0ef          	jal	17fd4 <__lo0bits>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:810
      if (k)
	{
         x[0] = y | z << (32 - k);
   189f0:	00c12783          	lw	a5,12(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:808
#ifndef _DOUBLE_IS_32BITS
  if (d1)
    {
      y = d1;
      k = lo0bits (&y);
      if (k)
   189f4:	0a051463          	bnez	a0,18a9c <__d2b+0x118>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:814
	{
         x[0] = y | z << (32 - k);
	  z >>= k;
	}
      else
	x[0] = y;
   189f8:	00812703          	lw	a4,8(sp)
   189fc:	00e92c23          	sw	a4,24(s2) # 3ff00018 <_end+0x3fed9200>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:815
      i = b->_wds = (x[1] = z) ? 2 : 1;
   18a00:	0017b413          	seqz	s0,a5
   18a04:	00200713          	li	a4,2
   18a08:	4087043b          	subw	s0,a4,s0
   18a0c:	00f92e23          	sw	a5,28(s2)
   18a10:	00892a23          	sw	s0,20(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:886
  while (!x[i])
    --i;
  b->_wds = i + 1;
#endif
#ifndef Sudden_Underflow
  if (de)
   18a14:	06049663          	bnez	s1,18a80 <__d2b+0xfc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:900
#endif
#ifndef Sudden_Underflow
    }
  else
    {
      *e = de - Bias - (P - 1) + 1 + k;
   18a18:	bce5051b          	addiw	a0,a0,-1074
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:902
#ifdef Pack_32
      *bits = 32 * i - hi0bits (x[i - 1]);
   18a1c:	00241793          	slli	a5,s0,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:900
#endif
#ifndef Sudden_Underflow
    }
  else
    {
      *e = de - Bias - (P - 1) + 1 + k;
   18a20:	00aa2023          	sw	a0,0(s4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:902
#ifdef Pack_32
      *bits = 32 * i - hi0bits (x[i - 1]);
   18a24:	00f907b3          	add	a5,s2,a5
   18a28:	0147a503          	lw	a0,20(a5)
   18a2c:	0054141b          	slliw	s0,s0,0x5
   18a30:	d28ff0ef          	jal	17f58 <__hi0bits>
   18a34:	40a4053b          	subw	a0,s0,a0
   18a38:	00a9a023          	sw	a0,0(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:909
      *bits = (i + 2) * 16 - hi0bits (x[i]);
#endif
    }
#endif
  return b;
}
   18a3c:	03813083          	ld	ra,56(sp)
   18a40:	00090513          	mv	a0,s2
   18a44:	03013403          	ld	s0,48(sp)
   18a48:	02813483          	ld	s1,40(sp)
   18a4c:	02013903          	ld	s2,32(sp)
   18a50:	01813983          	ld	s3,24(sp)
   18a54:	01013a03          	ld	s4,16(sp)
   18a58:	04010113          	addi	sp,sp,64
   18a5c:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:824
    {
#ifdef DEBUG
      if (!z)
	Bug ("Zero passed to d2b");
#endif
      k = lo0bits (&z);
   18a60:	00c10513          	addi	a0,sp,12
   18a64:	d70ff0ef          	jal	17fd4 <__lo0bits>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:825
      x[0] = z;
   18a68:	00c12783          	lw	a5,12(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:826
      i = b->_wds = 1;
   18a6c:	00100413          	li	s0,1
   18a70:	00892a23          	sw	s0,20(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:825
#ifdef DEBUG
      if (!z)
	Bug ("Zero passed to d2b");
#endif
      k = lo0bits (&z);
      x[0] = z;
   18a74:	00f92c23          	sw	a5,24(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:828
      i = b->_wds = 1;
#ifndef _DOUBLE_IS_32BITS
      k += 32;
   18a78:	0205051b          	addiw	a0,a0,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:886
  while (!x[i])
    --i;
  b->_wds = i + 1;
#endif
#ifndef Sudden_Underflow
  if (de)
   18a7c:	f8048ee3          	beqz	s1,18a18 <__d2b+0x94>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:893
#endif
#ifdef IBM
      *e = (de - Bias - (P - 1) << 2) + k;
      *bits = 4 * P + 8 - k - hi0bits (word0 (d) & Frac_mask);
#else
      *e = de - Bias - (P - 1) + k;
   18a80:	bcd4849b          	addiw	s1,s1,-1075
   18a84:	00a484bb          	addw	s1,s1,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:894
      *bits = P - k;
   18a88:	03500793          	li	a5,53
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:893
#endif
#ifdef IBM
      *e = (de - Bias - (P - 1) << 2) + k;
      *bits = 4 * P + 8 - k - hi0bits (word0 (d) & Frac_mask);
#else
      *e = de - Bias - (P - 1) + k;
   18a8c:	009a2023          	sw	s1,0(s4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:894
      *bits = P - k;
   18a90:	40a7853b          	subw	a0,a5,a0
   18a94:	00a9a023          	sw	a0,0(s3)
   18a98:	fa5ff06f          	j	18a3c <__d2b+0xb8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:810
    {
      y = d1;
      k = lo0bits (&y);
      if (k)
	{
         x[0] = y | z << (32 - k);
   18a9c:	02000713          	li	a4,32
   18aa0:	00812683          	lw	a3,8(sp)
   18aa4:	40a7073b          	subw	a4,a4,a0
   18aa8:	00e7973b          	sllw	a4,a5,a4
   18aac:	00d76733          	or	a4,a4,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:811
	  z >>= k;
   18ab0:	00a7d7bb          	srlw	a5,a5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:810
    {
      y = d1;
      k = lo0bits (&y);
      if (k)
	{
         x[0] = y | z << (32 - k);
   18ab4:	00e92c23          	sw	a4,24(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:811
	  z >>= k;
   18ab8:	00f12623          	sw	a5,12(sp)
   18abc:	f45ff06f          	j	18a00 <__d2b+0x7c>

0000000000018ac0 <__ratio>:
__ratio():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:916
#undef d1

double
_DEFUN (ratio, (a, b), _Bigint * a _AND _Bigint * b)

{
   18ac0:	fd010113          	addi	sp,sp,-48
   18ac4:	00913c23          	sd	s1,24(sp)
   18ac8:	00058493          	mv	s1,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:920
  union double_union da, db;
  int k, ka, kb;

  da.d = b2d (a, &ka);
   18acc:	00810593          	addi	a1,sp,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:916
#undef d1

double
_DEFUN (ratio, (a, b), _Bigint * a _AND _Bigint * b)

{
   18ad0:	02113423          	sd	ra,40(sp)
   18ad4:	02813023          	sd	s0,32(sp)
   18ad8:	01213823          	sd	s2,16(sp)
   18adc:	00050913          	mv	s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:920
  union double_union da, db;
  int k, ka, kb;

  da.d = b2d (a, &ka);
   18ae0:	d55ff0ef          	jal	18834 <__b2d>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:921
  db.d = b2d (b, &kb);
   18ae4:	00c10593          	addi	a1,sp,12
   18ae8:	00048513          	mv	a0,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:920

{
  union double_union da, db;
  int k, ka, kb;

  da.d = b2d (a, &ka);
   18aec:	e2050453          	fmv.x.d	s0,fa0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:921
  db.d = b2d (b, &kb);
   18af0:	d45ff0ef          	jal	18834 <__b2d>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:923
#ifdef Pack_32
  k = ka - kb + 32 * (a->_wds - b->_wds);
   18af4:	01492703          	lw	a4,20(s2)
   18af8:	0144a783          	lw	a5,20(s1)
   18afc:	00c12603          	lw	a2,12(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:921
{
  union double_union da, db;
  int k, ka, kb;

  da.d = b2d (a, &ka);
  db.d = b2d (b, &kb);
   18b00:	e20506d3          	fmv.x.d	a3,fa0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:923
#ifdef Pack_32
  k = ka - kb + 32 * (a->_wds - b->_wds);
   18b04:	40f707bb          	subw	a5,a4,a5
   18b08:	0057971b          	slliw	a4,a5,0x5
   18b0c:	00812783          	lw	a5,8(sp)
   18b10:	40c787bb          	subw	a5,a5,a2
   18b14:	00f707bb          	addw	a5,a4,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:942
      word0 (db) += (k >> 2) * Exp_msk1;
      if (k &= 3)
	db.d *= 1 << k;
    }
#else
  if (k > 0)
   18b18:	04f05463          	blez	a5,18b60 <__ratio+0xa0>
   18b1c:	00040713          	mv	a4,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:943
    word0 (da) += k * Exp_msk1;
   18b20:	0147979b          	slliw	a5,a5,0x14
   18b24:	42045413          	srai	s0,s0,0x20
   18b28:	00f407bb          	addw	a5,s0,a5
   18b2c:	02071413          	slli	s0,a4,0x20
   18b30:	02079793          	slli	a5,a5,0x20
   18b34:	02045413          	srli	s0,s0,0x20
   18b38:	00f46433          	or	s0,s0,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:951
      k = -k;
      word0 (db) += k * Exp_msk1;
    }
#endif
  return da.d / db.d;
}
   18b3c:	f20407d3          	fmv.d.x	fa5,s0
   18b40:	f2068753          	fmv.d.x	fa4,a3
   18b44:	02813083          	ld	ra,40(sp)
   18b48:	02013403          	ld	s0,32(sp)
   18b4c:	1ae7f553          	fdiv.d	fa0,fa5,fa4
   18b50:	01813483          	ld	s1,24(sp)
   18b54:	01013903          	ld	s2,16(sp)
   18b58:	03010113          	addi	sp,sp,48
   18b5c:	00008067          	ret
   18b60:	00068613          	mv	a2,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:947
  if (k > 0)
    word0 (da) += k * Exp_msk1;
  else
    {
      k = -k;
      word0 (db) += k * Exp_msk1;
   18b64:	0147979b          	slliw	a5,a5,0x14
   18b68:	4206d693          	srai	a3,a3,0x20
   18b6c:	40f687bb          	subw	a5,a3,a5
   18b70:	02061693          	slli	a3,a2,0x20
   18b74:	02079793          	slli	a5,a5,0x20
   18b78:	0206d693          	srli	a3,a3,0x20
   18b7c:	00f6e6b3          	or	a3,a3,a5
   18b80:	fbdff06f          	j	18b3c <__ratio+0x7c>

0000000000018b84 <_mprec_log10>:
_mprec_log10():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:983
double
_DEFUN (_mprec_log10, (dig),
	int dig)
{
  double v = 1.0;
  if (dig < 24)
   18b84:	01700793          	li	a5,23
   18b88:	02a7d263          	ble	a0,a5,18bac <_mprec_log10+0x28>
   18b8c:	000247b7          	lui	a5,0x24
   18b90:	4c07b507          	fld	fa0,1216(a5) # 244c0 <mask+0x28>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:987
    return tens[dig];
  while (dig > 0)
    {
      v *= 10;
   18b94:	000247b7          	lui	a5,0x24
   18b98:	4c87b787          	fld	fa5,1224(a5) # 244c8 <mask+0x30>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:988
      dig--;
   18b9c:	fff5051b          	addiw	a0,a0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:987
  double v = 1.0;
  if (dig < 24)
    return tens[dig];
  while (dig > 0)
    {
      v *= 10;
   18ba0:	12f57553          	fmul.d	fa0,fa0,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:985
	int dig)
{
  double v = 1.0;
  if (dig < 24)
    return tens[dig];
  while (dig > 0)
   18ba4:	fe051ce3          	bnez	a0,18b9c <_mprec_log10+0x18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:991
    {
      v *= 10;
      dig--;
    }
  return v;
}
   18ba8:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:984
_DEFUN (_mprec_log10, (dig),
	int dig)
{
  double v = 1.0;
  if (dig < 24)
    return tens[dig];
   18bac:	000217b7          	lui	a5,0x21
   18bb0:	d1078793          	addi	a5,a5,-752 # 20d10 <p05.2568>
   18bb4:	00351513          	slli	a0,a0,0x3
   18bb8:	00a78533          	add	a0,a5,a0
   18bbc:	01053507          	fld	fa0,16(a0)
   18bc0:	00008067          	ret

0000000000018bc4 <__copybits>:
__copybits():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1007
#endif

	ce = c + ((n-1) >> kshift) + 1;
	x = b->_x;
#ifdef Pack_32
	xe = x + b->_wds;
   18bc4:	01462703          	lw	a4,20(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1004
	__ULong *ce, *x, *xe;
#ifdef Pack_16
	int nw, nw1;
#endif

	ce = c + ((n-1) >> kshift) + 1;
   18bc8:	fff5859b          	addiw	a1,a1,-1
   18bcc:	4055d81b          	sraiw	a6,a1,0x5
   18bd0:	00180813          	addi	a6,a6,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1005
	x = b->_x;
   18bd4:	01860793          	addi	a5,a2,24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1007
#ifdef Pack_32
	xe = x + b->_wds;
   18bd8:	00271713          	slli	a4,a4,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1004
	__ULong *ce, *x, *xe;
#ifdef Pack_16
	int nw, nw1;
#endif

	ce = c + ((n-1) >> kshift) + 1;
   18bdc:	00281813          	slli	a6,a6,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1007
	x = b->_x;
#ifdef Pack_32
	xe = x + b->_wds;
   18be0:	00e786b3          	add	a3,a5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1004
	__ULong *ce, *x, *xe;
#ifdef Pack_16
	int nw, nw1;
#endif

	ce = c + ((n-1) >> kshift) + 1;
   18be4:	01050833          	add	a6,a0,a6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1008
	x = b->_x;
#ifdef Pack_32
	xe = x + b->_wds;
	while(x < xe)
   18be8:	02d7f863          	bleu	a3,a5,18c18 <__copybits+0x54>
   18bec:	00050713          	mv	a4,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1009
		*c++ = *x++;
   18bf0:	00478793          	addi	a5,a5,4
   18bf4:	ffc7a583          	lw	a1,-4(a5)
   18bf8:	00470713          	addi	a4,a4,4 # 3ff00004 <_end+0x3fed91ec>
   18bfc:	feb72e23          	sw	a1,-4(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1008

	ce = c + ((n-1) >> kshift) + 1;
	x = b->_x;
#ifdef Pack_32
	xe = x + b->_wds;
	while(x < xe)
   18c00:	fed7e8e3          	bltu	a5,a3,18bf0 <__copybits+0x2c>
   18c04:	40c687b3          	sub	a5,a3,a2
   18c08:	fe778793          	addi	a5,a5,-25
   18c0c:	ffc7f793          	andi	a5,a5,-4
   18c10:	00478793          	addi	a5,a5,4
   18c14:	00f50533          	add	a0,a0,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1018
	for(xe = x + (nw - nw1); x < xe; x += 2)
		Storeinc(c, x[1], x[0]);
	if (nw1)
		*c++ = *x;
#endif
	while(c < ce)
   18c18:	01057863          	bleu	a6,a0,18c28 <__copybits+0x64>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1019
		*c++ = 0;
   18c1c:	00450513          	addi	a0,a0,4
   18c20:	fe052e23          	sw	zero,-4(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1018
	for(xe = x + (nw - nw1); x < xe; x += 2)
		Storeinc(c, x[1], x[0]);
	if (nw1)
		*c++ = *x;
#endif
	while(c < ce)
   18c24:	ff056ce3          	bltu	a0,a6,18c1c <__copybits+0x58>
   18c28:	00008067          	ret

0000000000018c2c <__any_on>:
__any_on():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1031
{
	int n, nwds;
	__ULong *x, *x0, x1, x2;

	x = b->_x;
	nwds = b->_wds;
   18c2c:	01452783          	lw	a5,20(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1032
	n = k >> kshift;
   18c30:	4055d71b          	sraiw	a4,a1,0x5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1030
	int k)
{
	int n, nwds;
	__ULong *x, *x0, x1, x2;

	x = b->_x;
   18c34:	01850693          	addi	a3,a0,24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1033
	nwds = b->_wds;
	n = k >> kshift;
	if (n > nwds)
   18c38:	04e7c463          	blt	a5,a4,18c80 <__any_on+0x54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1035
		n = nwds;
	else if (n < nwds && (k &= kmask)) {
   18c3c:	04f75063          	ble	a5,a4,18c7c <__any_on+0x50>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1036 (discriminator 1)
		x1 = x2 = x[n];
   18c40:	00070793          	mv	a5,a4
   18c44:	00279793          	slli	a5,a5,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1035
	x = b->_x;
	nwds = b->_wds;
	n = k >> kshift;
	if (n > nwds)
		n = nwds;
	else if (n < nwds && (k &= kmask)) {
   18c48:	01f5f593          	andi	a1,a1,31
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1036
		x1 = x2 = x[n];
   18c4c:	00f687b3          	add	a5,a3,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1035
	x = b->_x;
	nwds = b->_wds;
	n = k >> kshift;
	if (n > nwds)
		n = nwds;
	else if (n < nwds && (k &= kmask)) {
   18c50:	04059063          	bnez	a1,18c90 <__any_on+0x64>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1044
		if (x1 != x2)
			return 1;
		}
	x0 = x;
	x += n;
	while(x > x0)
   18c54:	04f6fa63          	bleu	a5,a3,18ca8 <__any_on+0x7c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1045
		if (*--x)
   18c58:	ffc7a503          	lw	a0,-4(a5)
   18c5c:	ffc78793          	addi	a5,a5,-4
   18c60:	00051a63          	bnez	a0,18c74 <__any_on+0x48>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1044
		if (x1 != x2)
			return 1;
		}
	x0 = x;
	x += n;
	while(x > x0)
   18c64:	02f6f463          	bleu	a5,a3,18c8c <__any_on+0x60>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1045
		if (*--x)
   18c68:	ffc78793          	addi	a5,a5,-4
   18c6c:	0007a703          	lw	a4,0(a5)
   18c70:	fe070ae3          	beqz	a4,18c64 <__any_on+0x38>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1040
	else if (n < nwds && (k &= kmask)) {
		x1 = x2 = x[n];
		x1 >>= k;
		x1 <<= k;
		if (x1 != x2)
			return 1;
   18c74:	00100513          	li	a0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1048
	x += n;
	while(x > x0)
		if (*--x)
			return 1;
	return 0;
}
   18c78:	00008067          	ret
   18c7c:	00070793          	mv	a5,a4
   18c80:	00279793          	slli	a5,a5,0x2
   18c84:	00f687b3          	add	a5,a3,a5
   18c88:	fcdff06f          	j	18c54 <__any_on+0x28>
   18c8c:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1036
	nwds = b->_wds;
	n = k >> kshift;
	if (n > nwds)
		n = nwds;
	else if (n < nwds && (k &= kmask)) {
		x1 = x2 = x[n];
   18c90:	0007a603          	lw	a2,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1040
		x1 >>= k;
		x1 <<= k;
		if (x1 != x2)
			return 1;
   18c94:	00100513          	li	a0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1037
	n = k >> kshift;
	if (n > nwds)
		n = nwds;
	else if (n < nwds && (k &= kmask)) {
		x1 = x2 = x[n];
		x1 >>= k;
   18c98:	00b6573b          	srlw	a4,a2,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1039
		x1 <<= k;
		if (x1 != x2)
   18c9c:	00b715bb          	sllw	a1,a4,a1
   18ca0:	fab60ae3          	beq	a2,a1,18c54 <__any_on+0x28>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1048
	x += n;
	while(x > x0)
		if (*--x)
			return 1;
	return 0;
}
   18ca4:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mprec.c:1047
	x0 = x;
	x += n;
	while(x > x0)
		if (*--x)
			return 1;
	return 0;
   18ca8:	00000513          	li	a0,0
   18cac:	00008067          	ret

0000000000018cb0 <_realloc_r>:
_realloc_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2772
#if __STD_C
Void_t* rEALLOc(RARG Void_t* oldmem, size_t bytes)
#else
Void_t* rEALLOc(RARG oldmem, bytes) RDECL Void_t* oldmem; size_t bytes;
#endif
{
   18cb0:	fb010113          	addi	sp,sp,-80
   18cb4:	02913c23          	sd	s1,56(sp)
   18cb8:	04113423          	sd	ra,72(sp)
   18cbc:	04813023          	sd	s0,64(sp)
   18cc0:	03213823          	sd	s2,48(sp)
   18cc4:	03313423          	sd	s3,40(sp)
   18cc8:	03413023          	sd	s4,32(sp)
   18ccc:	01513c23          	sd	s5,24(sp)
   18cd0:	01613823          	sd	s6,16(sp)
   18cd4:	01713423          	sd	s7,8(sp)
   18cd8:	01813023          	sd	s8,0(sp)
   18cdc:	00060493          	mv	s1,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2806
  if (bytes == 0) { fREe(RCALL oldmem); return 0; }
#endif


  /* realloc of null is supposed to be same as malloc */
  if (oldmem == 0) return mALLOc(RCALL bytes);
   18ce0:	1c058a63          	beqz	a1,18eb4 <_realloc_r+0x204>
   18ce4:	00058993          	mv	s3,a1
   18ce8:	00050913          	mv	s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2808

  MALLOC_LOCK;
   18cec:	f90f80ef          	jal	1147c <__malloc_lock>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2811

  newp    = oldp    = mem2chunk(oldmem);
  newsize = oldsize = chunksize(oldp);
   18cf0:	ff89b783          	ld	a5,-8(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2814


  nb = request2size(bytes);
   18cf4:	01748413          	addi	s0,s1,23
   18cf8:	02e00713          	li	a4,46
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2810
  /* realloc of null is supposed to be same as malloc */
  if (oldmem == 0) return mALLOc(RCALL bytes);

  MALLOC_LOCK;

  newp    = oldp    = mem2chunk(oldmem);
   18cfc:	ff098a93          	addi	s5,s3,-16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2811
  newsize = oldsize = chunksize(oldp);
   18d00:	ffc7fa13          	andi	s4,a5,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2814


  nb = request2size(bytes);
   18d04:	0c877463          	bleu	s0,a4,18dcc <_realloc_r+0x11c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2817 (discriminator 1)

  /* Check for overflow and just fail, if so. */
  if (nb > INT_MAX || nb < bytes)
   18d08:	80000737          	lui	a4,0x80000
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2814

  newp    = oldp    = mem2chunk(oldmem);
  newsize = oldsize = chunksize(oldp);


  nb = request2size(bytes);
   18d0c:	ff047413          	andi	s0,s0,-16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2817

  /* Check for overflow and just fail, if so. */
  if (nb > INT_MAX || nb < bytes)
   18d10:	fff74713          	not	a4,a4
   18d14:	14876a63          	bltu	a4,s0,18e68 <_realloc_r+0x1b8>
   18d18:	14946863          	bltu	s0,s1,18e68 <_realloc_r+0x1b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2856
  }
#endif

  check_inuse_chunk(oldp);

  if ((long)(oldsize) < (long)(nb))  
   18d1c:	0a8a5c63          	ble	s0,s4,18dd4 <_realloc_r+0x124>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2862
  {

    /* Try expanding forward */

    next = chunk_at_offset(oldp, oldsize);
    if (next == top || !inuse(next)) 
   18d20:	00024b37          	lui	s6,0x24
   18d24:	b88b0b13          	addi	s6,s6,-1144 # 23b88 <__malloc_av_>
   18d28:	010b3703          	ld	a4,16(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2861
  if ((long)(oldsize) < (long)(nb))  
  {

    /* Try expanding forward */

    next = chunk_at_offset(oldp, oldsize);
   18d2c:	014a86b3          	add	a3,s5,s4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2862
    if (next == top || !inuse(next)) 
   18d30:	2ee68e63          	beq	a3,a4,1902c <_realloc_r+0x37c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2862 (discriminator 1)
   18d34:	0086b703          	ld	a4,8(a3) # 100008 <_end+0xd91f0>
   18d38:	ffe77613          	andi	a2,a4,-2
   18d3c:	00c68633          	add	a2,a3,a2
   18d40:	00863603          	ld	a2,8(a2)
   18d44:	00167613          	andi	a2,a2,1
   18d48:	0e060c63          	beqz	a2,18e40 <_realloc_r+0x190>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2896
      nextsize = 0;
    }

    /* Try shifting backwards. */

    if (!prev_inuse(oldp))
   18d4c:	0017f793          	andi	a5,a5,1
   18d50:	26078063          	beqz	a5,18fb0 <_realloc_r+0x300>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2950
      }
    }

    /* Must allocate */

    newmem = mALLOc (RCALL bytes);
   18d54:	00048593          	mv	a1,s1
   18d58:	00090513          	mv	a0,s2
   18d5c:	fb1f70ef          	jal	10d0c <_malloc_r>
   18d60:	00050493          	mv	s1,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2952

    if (newmem == 0)  /* propagate failure */
   18d64:	48050e63          	beqz	a0,19200 <_realloc_r+0x550>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2961
    }

    /* Avoid copy if newp is next chunk after oldp. */
    /* (This can only happen when new chunk is sbrk'ed.) */

    if ( (newp = mem2chunk(newmem)) == next_chunk(oldp)) 
   18d68:	ff89b783          	ld	a5,-8(s3)
   18d6c:	ff050713          	addi	a4,a0,-16
   18d70:	ffe7f793          	andi	a5,a5,-2
   18d74:	00fa87b3          	add	a5,s5,a5
   18d78:	40f70e63          	beq	a4,a5,19194 <_realloc_r+0x4e4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2969
      newp = oldp;
      goto split;
    }

    /* Otherwise copy, free, and exit */
    MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
   18d7c:	ff8a0613          	addi	a2,s4,-8
   18d80:	04800793          	li	a5,72
   18d84:	3ec7e263          	bltu	a5,a2,19168 <_realloc_r+0x4b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2969 (discriminator 1)
   18d88:	02700713          	li	a4,39
   18d8c:	36c76663          	bltu	a4,a2,190f8 <_realloc_r+0x448>
   18d90:	00050793          	mv	a5,a0
   18d94:	00098713          	mv	a4,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2969 (discriminator 9)
   18d98:	00073683          	ld	a3,0(a4) # ffffffff80000000 <_end+0xffffffff7ffd91e8>
   18d9c:	00d7b023          	sd	a3,0(a5)
   18da0:	00873683          	ld	a3,8(a4)
   18da4:	00d7b423          	sd	a3,8(a5)
   18da8:	01073703          	ld	a4,16(a4)
   18dac:	00e7b823          	sd	a4,16(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2970
    fREe(RCALL oldmem);
   18db0:	00098593          	mv	a1,s3
   18db4:	00090513          	mv	a0,s2
   18db8:	d7dfd0ef          	jal	16b34 <_free_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2971
    MALLOC_UNLOCK;
   18dbc:	00090513          	mv	a0,s2
   18dc0:	ec0f80ef          	jal	11480 <__malloc_unlock>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2972
    return newmem;
   18dc4:	00048513          	mv	a0,s1
   18dc8:	0480006f          	j	18e10 <_realloc_r+0x160>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2814

  newp    = oldp    = mem2chunk(oldmem);
  newsize = oldsize = chunksize(oldp);


  nb = request2size(bytes);
   18dcc:	02000413          	li	s0,32
   18dd0:	f49ff06f          	j	18d18 <_realloc_r+0x68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2856
  }
#endif

  check_inuse_chunk(oldp);

  if ((long)(oldsize) < (long)(nb))  
   18dd4:	00098493          	mv	s1,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2978
  }


 split:  /* split off extra room in old or expanded chunk */

  remainder_size = long_sub_size_t(newsize, nb);
   18dd8:	408a07b3          	sub	a5,s4,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2980

  if (remainder_size >= (long)MINSIZE) /* split off remainder */
   18ddc:	01f00713          	li	a4,31
   18de0:	08f76c63          	bltu	a4,a5,18e78 <_realloc_r+0x1c8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2990
    set_inuse_bit_at_offset(remainder, remainder_size);
    fREe(RCALL chunk2mem(remainder)); /* let free() deal with it */
  }
  else
  {
    set_head_size(newp, newsize);
   18de4:	008ab783          	ld	a5,8(s5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2991
    set_inuse_bit_at_offset(newp, newsize);
   18de8:	014a8733          	add	a4,s5,s4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2990
    set_inuse_bit_at_offset(remainder, remainder_size);
    fREe(RCALL chunk2mem(remainder)); /* let free() deal with it */
  }
  else
  {
    set_head_size(newp, newsize);
   18dec:	0017f793          	andi	a5,a5,1
   18df0:	0147e633          	or	a2,a5,s4
   18df4:	00cab423          	sd	a2,8(s5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2991
    set_inuse_bit_at_offset(newp, newsize);
   18df8:	00873783          	ld	a5,8(a4)
   18dfc:	0017e793          	ori	a5,a5,1
   18e00:	00f73423          	sd	a5,8(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2995
  }

  check_inuse_chunk(newp);
  MALLOC_UNLOCK;
   18e04:	00090513          	mv	a0,s2
   18e08:	e78f80ef          	jal	11480 <__malloc_unlock>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2996
  return chunk2mem(newp);
   18e0c:	00048513          	mv	a0,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2999

#endif /* MALLOC_PROVIDED */
}
   18e10:	04813083          	ld	ra,72(sp)
   18e14:	04013403          	ld	s0,64(sp)
   18e18:	03813483          	ld	s1,56(sp)
   18e1c:	03013903          	ld	s2,48(sp)
   18e20:	02813983          	ld	s3,40(sp)
   18e24:	02013a03          	ld	s4,32(sp)
   18e28:	01813a83          	ld	s5,24(sp)
   18e2c:	01013b03          	ld	s6,16(sp)
   18e30:	00813b83          	ld	s7,8(sp)
   18e34:	00013c03          	ld	s8,0(sp)
   18e38:	05010113          	addi	sp,sp,80
   18e3c:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2881
          return chunk2mem(oldp);
        }
      }

      /* Forward into next chunk */
      else if (((long)(nextsize + newsize) >= (long)(nb)))
   18e40:	ffc77713          	andi	a4,a4,-4
   18e44:	01470733          	add	a4,a4,s4
   18e48:	0a874063          	blt	a4,s0,18ee8 <_realloc_r+0x238>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2883
      { 
        unlink(next, bck, fwd);
   18e4c:	0186b783          	ld	a5,24(a3)
   18e50:	0106b683          	ld	a3,16(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2885
        newsize  += nextsize;
        goto split;
   18e54:	00098493          	mv	s1,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2884

      /* Forward into next chunk */
      else if (((long)(nextsize + newsize) >= (long)(nb)))
      { 
        unlink(next, bck, fwd);
        newsize  += nextsize;
   18e58:	00070a13          	mv	s4,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2883
      }

      /* Forward into next chunk */
      else if (((long)(nextsize + newsize) >= (long)(nb)))
      { 
        unlink(next, bck, fwd);
   18e5c:	00f6bc23          	sd	a5,24(a3)
   18e60:	00d7b823          	sd	a3,16(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2885
        newsize  += nextsize;
        goto split;
   18e64:	f75ff06f          	j	18dd8 <_realloc_r+0x128>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2819
  nb = request2size(bytes);

  /* Check for overflow and just fail, if so. */
  if (nb > INT_MAX || nb < bytes)
  {
    RERRNO = ENOMEM;
   18e68:	00c00793          	li	a5,12
   18e6c:	00f92023          	sw	a5,0(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2820
    return 0;
   18e70:	00000513          	li	a0,0
   18e74:	f9dff06f          	j	18e10 <_realloc_r+0x160>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2983
  remainder_size = long_sub_size_t(newsize, nb);

  if (remainder_size >= (long)MINSIZE) /* split off remainder */
  {
    remainder = chunk_at_offset(newp, nb);
    set_head_size(newp, nb);
   18e78:	008ab703          	ld	a4,8(s5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2982

  remainder_size = long_sub_size_t(newsize, nb);

  if (remainder_size >= (long)MINSIZE) /* split off remainder */
  {
    remainder = chunk_at_offset(newp, nb);
   18e7c:	008a85b3          	add	a1,s5,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2984
    set_head_size(newp, nb);
    set_head(remainder, remainder_size | PREV_INUSE);
   18e80:	0017e693          	ori	a3,a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2983
  remainder_size = long_sub_size_t(newsize, nb);

  if (remainder_size >= (long)MINSIZE) /* split off remainder */
  {
    remainder = chunk_at_offset(newp, nb);
    set_head_size(newp, nb);
   18e84:	00177713          	andi	a4,a4,1
   18e88:	00876433          	or	s0,a4,s0
   18e8c:	008ab423          	sd	s0,8(s5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2984
    set_head(remainder, remainder_size | PREV_INUSE);
   18e90:	00d5b423          	sd	a3,8(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2985
    set_inuse_bit_at_offset(remainder, remainder_size);
   18e94:	00f587b3          	add	a5,a1,a5
   18e98:	0087b703          	ld	a4,8(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2986
    fREe(RCALL chunk2mem(remainder)); /* let free() deal with it */
   18e9c:	01058593          	addi	a1,a1,16
   18ea0:	00090513          	mv	a0,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2985
  if (remainder_size >= (long)MINSIZE) /* split off remainder */
  {
    remainder = chunk_at_offset(newp, nb);
    set_head_size(newp, nb);
    set_head(remainder, remainder_size | PREV_INUSE);
    set_inuse_bit_at_offset(remainder, remainder_size);
   18ea4:	00176713          	ori	a4,a4,1
   18ea8:	00e7b423          	sd	a4,8(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2986
    fREe(RCALL chunk2mem(remainder)); /* let free() deal with it */
   18eac:	c89fd0ef          	jal	16b34 <_free_r>
   18eb0:	f55ff06f          	j	18e04 <_realloc_r+0x154>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2999 (discriminator 1)
  check_inuse_chunk(newp);
  MALLOC_UNLOCK;
  return chunk2mem(newp);

#endif /* MALLOC_PROVIDED */
}
   18eb4:	04813083          	ld	ra,72(sp)
   18eb8:	04013403          	ld	s0,64(sp)
   18ebc:	03813483          	ld	s1,56(sp)
   18ec0:	03013903          	ld	s2,48(sp)
   18ec4:	02813983          	ld	s3,40(sp)
   18ec8:	02013a03          	ld	s4,32(sp)
   18ecc:	01813a83          	ld	s5,24(sp)
   18ed0:	01013b03          	ld	s6,16(sp)
   18ed4:	00813b83          	ld	s7,8(sp)
   18ed8:	00013c03          	ld	s8,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2806
  if (bytes == 0) { fREe(RCALL oldmem); return 0; }
#endif


  /* realloc of null is supposed to be same as malloc */
  if (oldmem == 0) return mALLOc(RCALL bytes);
   18edc:	00060593          	mv	a1,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2999
  check_inuse_chunk(newp);
  MALLOC_UNLOCK;
  return chunk2mem(newp);

#endif /* MALLOC_PROVIDED */
}
   18ee0:	05010113          	addi	sp,sp,80
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2806
  if (bytes == 0) { fREe(RCALL oldmem); return 0; }
#endif


  /* realloc of null is supposed to be same as malloc */
  if (oldmem == 0) return mALLOc(RCALL bytes);
   18ee4:	e29f706f          	j	10d0c <_malloc_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2896
      nextsize = 0;
    }

    /* Try shifting backwards. */

    if (!prev_inuse(oldp))
   18ee8:	0017f793          	andi	a5,a5,1
   18eec:	e60794e3          	bnez	a5,18d54 <_realloc_r+0xa4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2898
    {
      prev = prev_chunk(oldp);
   18ef0:	ff09bb83          	ld	s7,-16(s3)
   18ef4:	417a8bb3          	sub	s7,s5,s7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2899
      prevsize = chunksize(prev);
   18ef8:	008bb783          	ld	a5,8(s7) # ffffffff80000008 <_end+0xffffffff7ffd91f0>
   18efc:	ffc7f793          	andi	a5,a5,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2924
            return newmem;
          }
        }

        /* into next chunk */
        else if (((long)(nextsize + prevsize + newsize) >= (long)(nb)))
   18f00:	00f70b33          	add	s6,a4,a5
   18f04:	0a8b4e63          	blt	s6,s0,18fc0 <_realloc_r+0x310>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2926
        {
          unlink(next, bck, fwd);
   18f08:	0186b783          	ld	a5,24(a3)
   18f0c:	0106b703          	ld	a4,16(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2931
          unlink(prev, bck, fwd);
          newp = prev;
          newsize += nextsize + prevsize;
          newmem = chunk2mem(newp);
          MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
   18f10:	ff8a0613          	addi	a2,s4,-8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2930
        {
          unlink(next, bck, fwd);
          unlink(prev, bck, fwd);
          newp = prev;
          newsize += nextsize + prevsize;
          newmem = chunk2mem(newp);
   18f14:	010b8493          	addi	s1,s7,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2926
        }

        /* into next chunk */
        else if (((long)(nextsize + prevsize + newsize) >= (long)(nb)))
        {
          unlink(next, bck, fwd);
   18f18:	00f73c23          	sd	a5,24(a4)
   18f1c:	00e7b823          	sd	a4,16(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2927
          unlink(prev, bck, fwd);
   18f20:	010bb703          	ld	a4,16(s7)
   18f24:	018bb783          	ld	a5,24(s7)
   18f28:	00f73c23          	sd	a5,24(a4)
   18f2c:	00e7b823          	sd	a4,16(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2931
          newp = prev;
          newsize += nextsize + prevsize;
          newmem = chunk2mem(newp);
          MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
   18f30:	04800793          	li	a5,72
   18f34:	1ec7e463          	bltu	a5,a2,1911c <_realloc_r+0x46c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2931 (discriminator 1)
   18f38:	02700713          	li	a4,39
   18f3c:	00048793          	mv	a5,s1
   18f40:	04c77663          	bleu	a2,a4,18f8c <_realloc_r+0x2dc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2931 (discriminator 3)
   18f44:	0009b783          	ld	a5,0(s3)
   18f48:	00fbb823          	sd	a5,16(s7)
   18f4c:	0089b783          	ld	a5,8(s3)
   18f50:	00fbbc23          	sd	a5,24(s7)
   18f54:	03700793          	li	a5,55
   18f58:	24c7f863          	bleu	a2,a5,191a8 <_realloc_r+0x4f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2931 (discriminator 5)
   18f5c:	0109b783          	ld	a5,16(s3)
   18f60:	02fbb023          	sd	a5,32(s7)
   18f64:	0189b783          	ld	a5,24(s3)
   18f68:	02fbb423          	sd	a5,40(s7)
   18f6c:	04800793          	li	a5,72
   18f70:	0af61863          	bne	a2,a5,19020 <_realloc_r+0x370>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2943 (discriminator 7)
      {
        unlink(prev, bck, fwd);
        newp = prev;
        newsize += prevsize;
        newmem = chunk2mem(newp);
        MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
   18f74:	0209b703          	ld	a4,32(s3)
   18f78:	040b8793          	addi	a5,s7,64
   18f7c:	03098993          	addi	s3,s3,48
   18f80:	02ebb823          	sd	a4,48(s7)
   18f84:	ff89b703          	ld	a4,-8(s3)
   18f88:	02ebbc23          	sd	a4,56(s7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2943 (discriminator 9)
   18f8c:	0009b703          	ld	a4,0(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2941
      /* backward only */
      if (prev != 0 && (long)(prevsize + newsize) >= (long)nb)  
      {
        unlink(prev, bck, fwd);
        newp = prev;
        newsize += prevsize;
   18f90:	000b0a13          	mv	s4,s6
   18f94:	000b8a93          	mv	s5,s7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2943
        newmem = chunk2mem(newp);
        MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
   18f98:	00e7b023          	sd	a4,0(a5)
   18f9c:	0089b703          	ld	a4,8(s3)
   18fa0:	00e7b423          	sd	a4,8(a5)
   18fa4:	0109b703          	ld	a4,16(s3)
   18fa8:	00e7b823          	sd	a4,16(a5)
   18fac:	e2dff06f          	j	18dd8 <_realloc_r+0x128>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2898

    /* Try shifting backwards. */

    if (!prev_inuse(oldp))
    {
      prev = prev_chunk(oldp);
   18fb0:	ff09bb83          	ld	s7,-16(s3)
   18fb4:	417a8bb3          	sub	s7,s5,s7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2899
      prevsize = chunksize(prev);
   18fb8:	008bb783          	ld	a5,8(s7)
   18fbc:	ffc7f793          	andi	a5,a5,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2937 (discriminator 1)
          goto split;
        }
      }
      
      /* backward only */
      if (prev != 0 && (long)(prevsize + newsize) >= (long)nb)  
   18fc0:	00fa0b33          	add	s6,s4,a5
   18fc4:	d88b48e3          	blt	s6,s0,18d54 <_realloc_r+0xa4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2939
      {
        unlink(prev, bck, fwd);
   18fc8:	018bb783          	ld	a5,24(s7)
   18fcc:	010bb703          	ld	a4,16(s7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2943
        newp = prev;
        newsize += prevsize;
        newmem = chunk2mem(newp);
        MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
   18fd0:	ff8a0613          	addi	a2,s4,-8
   18fd4:	04800693          	li	a3,72
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2939
      }
      
      /* backward only */
      if (prev != 0 && (long)(prevsize + newsize) >= (long)nb)  
      {
        unlink(prev, bck, fwd);
   18fd8:	00f73c23          	sd	a5,24(a4)
   18fdc:	00e7b823          	sd	a4,16(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2942
        newp = prev;
        newsize += prevsize;
        newmem = chunk2mem(newp);
   18fe0:	010b8493          	addi	s1,s7,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2943
        MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
   18fe4:	12c6ec63          	bltu	a3,a2,1911c <_realloc_r+0x46c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2943 (discriminator 1)
   18fe8:	02700713          	li	a4,39
   18fec:	00048793          	mv	a5,s1
   18ff0:	f8c77ee3          	bleu	a2,a4,18f8c <_realloc_r+0x2dc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2943 (discriminator 3)
   18ff4:	0009b783          	ld	a5,0(s3)
   18ff8:	00fbb823          	sd	a5,16(s7)
   18ffc:	0089b783          	ld	a5,8(s3)
   19000:	00fbbc23          	sd	a5,24(s7)
   19004:	03700793          	li	a5,55
   19008:	1ac7f063          	bleu	a2,a5,191a8 <_realloc_r+0x4f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2943 (discriminator 5)
   1900c:	0109b783          	ld	a5,16(s3)
   19010:	02fbb023          	sd	a5,32(s7)
   19014:	0189b783          	ld	a5,24(s3)
   19018:	02fbb423          	sd	a5,40(s7)
   1901c:	f4d60ce3          	beq	a2,a3,18f74 <_realloc_r+0x2c4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2943
   19020:	030b8793          	addi	a5,s7,48
   19024:	02098993          	addi	s3,s3,32
   19028:	f65ff06f          	j	18f8c <_realloc_r+0x2dc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2869
      nextsize = chunksize(next);

      /* Forward into top only if a remainder */
      if (next == top)
      {
        if ((long)(nextsize + newsize) >= (long)(nb + MINSIZE))
   1902c:	0086b703          	ld	a4,8(a3)
   19030:	02040693          	addi	a3,s0,32
   19034:	ffc77713          	andi	a4,a4,-4
   19038:	01470733          	add	a4,a4,s4
   1903c:	0ed75c63          	ble	a3,a4,19134 <_realloc_r+0x484>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2896
      nextsize = 0;
    }

    /* Try shifting backwards. */

    if (!prev_inuse(oldp))
   19040:	0017f793          	andi	a5,a5,1
   19044:	d00798e3          	bnez	a5,18d54 <_realloc_r+0xa4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2898
    {
      prev = prev_chunk(oldp);
   19048:	ff09bb83          	ld	s7,-16(s3)
   1904c:	417a8bb3          	sub	s7,s5,s7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2899
      prevsize = chunksize(prev);
   19050:	008bb783          	ld	a5,8(s7)
   19054:	ffc7f793          	andi	a5,a5,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2908
      if (next != 0)
      {
        /* into top */
        if (next == top)
        {
          if ((long)(nextsize + prevsize + newsize) >= (long)(nb + MINSIZE))
   19058:	00e78c33          	add	s8,a5,a4
   1905c:	f6dc42e3          	blt	s8,a3,18fc0 <_realloc_r+0x310>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2910
          {
            unlink(prev, bck, fwd);
   19060:	018bb783          	ld	a5,24(s7)
   19064:	010bb703          	ld	a4,16(s7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2914
            newp = prev;
            newsize += prevsize + nextsize;
            newmem = chunk2mem(newp);
            MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
   19068:	ff8a0613          	addi	a2,s4,-8
   1906c:	04800693          	li	a3,72
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2910
        /* into top */
        if (next == top)
        {
          if ((long)(nextsize + prevsize + newsize) >= (long)(nb + MINSIZE))
          {
            unlink(prev, bck, fwd);
   19070:	00f73c23          	sd	a5,24(a4)
   19074:	00e7b823          	sd	a4,16(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2913
            newp = prev;
            newsize += prevsize + nextsize;
            newmem = chunk2mem(newp);
   19078:	010b8493          	addi	s1,s7,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2914
            MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
   1907c:	14c6ea63          	bltu	a3,a2,191d0 <_realloc_r+0x520>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2914 (discriminator 1)
   19080:	02700713          	li	a4,39
   19084:	00048793          	mv	a5,s1
   19088:	02c77263          	bleu	a2,a4,190ac <_realloc_r+0x3fc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2914 (discriminator 3)
   1908c:	0009b783          	ld	a5,0(s3)
   19090:	00fbb823          	sd	a5,16(s7)
   19094:	0089b783          	ld	a5,8(s3)
   19098:	00fbbc23          	sd	a5,24(s7)
   1909c:	03700793          	li	a5,55
   190a0:	14c7e063          	bltu	a5,a2,191e0 <_realloc_r+0x530>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2914
   190a4:	020b8793          	addi	a5,s7,32
   190a8:	01098993          	addi	s3,s3,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2914 (discriminator 9)
   190ac:	0009b703          	ld	a4,0(s3)
   190b0:	00e7b023          	sd	a4,0(a5)
   190b4:	0089b703          	ld	a4,8(s3)
   190b8:	00e7b423          	sd	a4,8(a5)
   190bc:	0109b703          	ld	a4,16(s3)
   190c0:	00e7b823          	sd	a4,16(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2915
            top = chunk_at_offset(newp, nb);
   190c4:	008b8733          	add	a4,s7,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2916
            set_head(top, (newsize - nb) | PREV_INUSE);
   190c8:	408c07b3          	sub	a5,s8,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2915
            unlink(prev, bck, fwd);
            newp = prev;
            newsize += prevsize + nextsize;
            newmem = chunk2mem(newp);
            MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
            top = chunk_at_offset(newp, nb);
   190cc:	00eb3823          	sd	a4,16(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2916
            set_head(top, (newsize - nb) | PREV_INUSE);
   190d0:	0017e793          	ori	a5,a5,1
   190d4:	00f73423          	sd	a5,8(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2917
            set_head_size(newp, nb);
   190d8:	008bb783          	ld	a5,8(s7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2918
	    MALLOC_UNLOCK;
   190dc:	00090513          	mv	a0,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2917
            newsize += prevsize + nextsize;
            newmem = chunk2mem(newp);
            MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
            top = chunk_at_offset(newp, nb);
            set_head(top, (newsize - nb) | PREV_INUSE);
            set_head_size(newp, nb);
   190e0:	0017f793          	andi	a5,a5,1
   190e4:	0087e433          	or	s0,a5,s0
   190e8:	008bb423          	sd	s0,8(s7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2918
	    MALLOC_UNLOCK;
   190ec:	b94f80ef          	jal	11480 <__malloc_unlock>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2919
            return newmem;
   190f0:	00048513          	mv	a0,s1
   190f4:	d1dff06f          	j	18e10 <_realloc_r+0x160>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2969 (discriminator 3)
      newp = oldp;
      goto split;
    }

    /* Otherwise copy, free, and exit */
    MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
   190f8:	0009b703          	ld	a4,0(s3)
   190fc:	00e53023          	sd	a4,0(a0)
   19100:	0089b703          	ld	a4,8(s3)
   19104:	00e53423          	sd	a4,8(a0)
   19108:	03700713          	li	a4,55
   1910c:	06c76463          	bltu	a4,a2,19174 <_realloc_r+0x4c4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2969
   19110:	01050793          	addi	a5,a0,16
   19114:	01098713          	addi	a4,s3,16
   19118:	c81ff06f          	j	18d98 <_realloc_r+0xe8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2943 (discriminator 2)
      {
        unlink(prev, bck, fwd);
        newp = prev;
        newsize += prevsize;
        newmem = chunk2mem(newp);
        MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
   1911c:	00098593          	mv	a1,s3
   19120:	00048513          	mv	a0,s1
   19124:	92dfe0ef          	jal	17a50 <memmove>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2941
      /* backward only */
      if (prev != 0 && (long)(prevsize + newsize) >= (long)nb)  
      {
        unlink(prev, bck, fwd);
        newp = prev;
        newsize += prevsize;
   19128:	000b0a13          	mv	s4,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2943
        newmem = chunk2mem(newp);
        MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
   1912c:	000b8a93          	mv	s5,s7
   19130:	ca9ff06f          	j	18dd8 <_realloc_r+0x128>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2872
      if (next == top)
      {
        if ((long)(nextsize + newsize) >= (long)(nb + MINSIZE))
        {
          newsize += nextsize;
          top = chunk_at_offset(oldp, nb);
   19134:	008a8ab3          	add	s5,s5,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2873
          set_head(top, (newsize - nb) | PREV_INUSE);
   19138:	408707b3          	sub	a5,a4,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2872
      if (next == top)
      {
        if ((long)(nextsize + newsize) >= (long)(nb + MINSIZE))
        {
          newsize += nextsize;
          top = chunk_at_offset(oldp, nb);
   1913c:	015b3823          	sd	s5,16(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2873
          set_head(top, (newsize - nb) | PREV_INUSE);
   19140:	0017e793          	ori	a5,a5,1
   19144:	00fab423          	sd	a5,8(s5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2874
          set_head_size(oldp, nb);
   19148:	ff89b783          	ld	a5,-8(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2875
	  MALLOC_UNLOCK;
   1914c:	00090513          	mv	a0,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2874
        if ((long)(nextsize + newsize) >= (long)(nb + MINSIZE))
        {
          newsize += nextsize;
          top = chunk_at_offset(oldp, nb);
          set_head(top, (newsize - nb) | PREV_INUSE);
          set_head_size(oldp, nb);
   19150:	0017f793          	andi	a5,a5,1
   19154:	0087e433          	or	s0,a5,s0
   19158:	fe89bc23          	sd	s0,-8(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2875
	  MALLOC_UNLOCK;
   1915c:	b24f80ef          	jal	11480 <__malloc_unlock>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2876
          return chunk2mem(oldp);
   19160:	00098513          	mv	a0,s3
   19164:	cadff06f          	j	18e10 <_realloc_r+0x160>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2969 (discriminator 2)
      newp = oldp;
      goto split;
    }

    /* Otherwise copy, free, and exit */
    MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
   19168:	00098593          	mv	a1,s3
   1916c:	8e5fe0ef          	jal	17a50 <memmove>
   19170:	c41ff06f          	j	18db0 <_realloc_r+0x100>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2969 (discriminator 5)
   19174:	0109b703          	ld	a4,16(s3)
   19178:	00e53823          	sd	a4,16(a0)
   1917c:	0189b703          	ld	a4,24(s3)
   19180:	00e53c23          	sd	a4,24(a0)
   19184:	02f60863          	beq	a2,a5,191b4 <_realloc_r+0x504>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2969
   19188:	02050793          	addi	a5,a0,32
   1918c:	02098713          	addi	a4,s3,32
   19190:	c09ff06f          	j	18d98 <_realloc_r+0xe8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2963
    /* Avoid copy if newp is next chunk after oldp. */
    /* (This can only happen when new chunk is sbrk'ed.) */

    if ( (newp = mem2chunk(newmem)) == next_chunk(oldp)) 
    {
      newsize += chunksize(newp);
   19194:	ff853783          	ld	a5,-8(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2965
      newp = oldp;
      goto split;
   19198:	00098493          	mv	s1,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2963
    /* Avoid copy if newp is next chunk after oldp. */
    /* (This can only happen when new chunk is sbrk'ed.) */

    if ( (newp = mem2chunk(newmem)) == next_chunk(oldp)) 
    {
      newsize += chunksize(newp);
   1919c:	ffc7f793          	andi	a5,a5,-4
   191a0:	00fa0a33          	add	s4,s4,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2965
      newp = oldp;
      goto split;
   191a4:	c35ff06f          	j	18dd8 <_realloc_r+0x128>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2943
      {
        unlink(prev, bck, fwd);
        newp = prev;
        newsize += prevsize;
        newmem = chunk2mem(newp);
        MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
   191a8:	020b8793          	addi	a5,s7,32
   191ac:	01098993          	addi	s3,s3,16
   191b0:	dddff06f          	j	18f8c <_realloc_r+0x2dc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2969 (discriminator 7)
      newp = oldp;
      goto split;
    }

    /* Otherwise copy, free, and exit */
    MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
   191b4:	0209b683          	ld	a3,32(s3)
   191b8:	03050793          	addi	a5,a0,48
   191bc:	03098713          	addi	a4,s3,48
   191c0:	02d53023          	sd	a3,32(a0)
   191c4:	0289b683          	ld	a3,40(s3)
   191c8:	02d53423          	sd	a3,40(a0)
   191cc:	bcdff06f          	j	18d98 <_realloc_r+0xe8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2914 (discriminator 2)
          {
            unlink(prev, bck, fwd);
            newp = prev;
            newsize += prevsize + nextsize;
            newmem = chunk2mem(newp);
            MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
   191d0:	00098593          	mv	a1,s3
   191d4:	00048513          	mv	a0,s1
   191d8:	879fe0ef          	jal	17a50 <memmove>
   191dc:	ee9ff06f          	j	190c4 <_realloc_r+0x414>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2914 (discriminator 5)
   191e0:	0109b783          	ld	a5,16(s3)
   191e4:	02fbb023          	sd	a5,32(s7)
   191e8:	0189b783          	ld	a5,24(s3)
   191ec:	02fbb423          	sd	a5,40(s7)
   191f0:	02d60063          	beq	a2,a3,19210 <_realloc_r+0x560>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2914
   191f4:	030b8793          	addi	a5,s7,48
   191f8:	02098993          	addi	s3,s3,32
   191fc:	eb1ff06f          	j	190ac <_realloc_r+0x3fc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2954

    newmem = mALLOc (RCALL bytes);

    if (newmem == 0)  /* propagate failure */
    {
      MALLOC_UNLOCK;
   19200:	00090513          	mv	a0,s2
   19204:	a7cf80ef          	jal	11480 <__malloc_unlock>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2955
      return 0;
   19208:	00000513          	li	a0,0
   1920c:	c05ff06f          	j	18e10 <_realloc_r+0x160>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:2914 (discriminator 7)
          {
            unlink(prev, bck, fwd);
            newp = prev;
            newsize += prevsize + nextsize;
            newmem = chunk2mem(newp);
            MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
   19210:	0209b703          	ld	a4,32(s3)
   19214:	040b8793          	addi	a5,s7,64
   19218:	03098993          	addi	s3,s3,48
   1921c:	02ebb823          	sd	a4,48(s7)
   19220:	ff89b703          	ld	a4,-8(s3)
   19224:	02ebbc23          	sd	a4,56(s7)
   19228:	e85ff06f          	j	190ac <_realloc_r+0x3fc>

000000000001922c <lflush>:
lflush():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:29

static int
_DEFUN(lflush, (fp),
       FILE *fp)
{
  if ((fp->_flags & (__SLBF | __SWR)) == (__SLBF | __SWR))
   1922c:	01055783          	lhu	a5,16(a0)
   19230:	00900713          	li	a4,9
   19234:	0097f793          	andi	a5,a5,9
   19238:	00e78663          	beq	a5,a4,19244 <lflush+0x18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:32
    return fflush (fp);
  return 0;
}
   1923c:	00000513          	li	a0,0
   19240:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:30
static int
_DEFUN(lflush, (fp),
       FILE *fp)
{
  if ((fp->_flags & (__SLBF | __SWR)) == (__SLBF | __SWR))
    return fflush (fp);
   19244:	9dcfd06f          	j	16420 <fflush>

0000000000019248 <__srefill_r>:
__srefill_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:43

int
_DEFUN(__srefill_r, (ptr, fp),
       struct _reent * ptr _AND
       register FILE * fp)
{
   19248:	fd010113          	addi	sp,sp,-48
   1924c:	02813023          	sd	s0,32(sp)
   19250:	00913c23          	sd	s1,24(sp)
   19254:	02113423          	sd	ra,40(sp)
   19258:	01213823          	sd	s2,16(sp)
   1925c:	01313423          	sd	s3,8(sp)
   19260:	00050493          	mv	s1,a0
   19264:	00058413          	mv	s0,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:46
  /* make sure stdio is set up */

  CHECK_INIT (ptr, fp);
   19268:	00050663          	beqz	a0,19274 <__srefill_r+0x2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:46 (discriminator 1)
   1926c:	05052783          	lw	a5,80(a0)
   19270:	12078a63          	beqz	a5,193a4 <__srefill_r+0x15c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:48

  ORIENT (fp, -1);
   19274:	01041783          	lh	a5,16(s0)
   19278:	03079713          	slli	a4,a5,0x30
   1927c:	03075713          	srli	a4,a4,0x30
   19280:	03271693          	slli	a3,a4,0x32
   19284:	0206ca63          	bltz	a3,192b8 <__srefill_r+0x70>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:48 (discriminator 1)
   19288:	0ac42683          	lw	a3,172(s0)
   1928c:	00002737          	lui	a4,0x2
   19290:	00e7e7b3          	or	a5,a5,a4
   19294:	ffffe737          	lui	a4,0xffffe
   19298:	0107979b          	slliw	a5,a5,0x10
   1929c:	fff7071b          	addiw	a4,a4,-1
   192a0:	4107d79b          	sraiw	a5,a5,0x10
   192a4:	00e6f733          	and	a4,a3,a4
   192a8:	0ae42623          	sw	a4,172(s0)
   192ac:	03079713          	slli	a4,a5,0x30
   192b0:	00f41823          	sh	a5,16(s0)
   192b4:	03075713          	srli	a4,a4,0x30
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:50

  fp->_r = 0;			/* largely a convenience for callers */
   192b8:	00042423          	sw	zero,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:54

#ifndef __CYGWIN__
  /* SysV does not make this test; take it out for compatibility */
  if (fp->_flags & __SEOF)
   192bc:	02077693          	andi	a3,a4,32
   192c0:	1a069c63          	bnez	a3,19478 <__srefill_r+0x230>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:59
    return EOF;
#endif

  /* if not already reading, have to be reading and writing */
  if ((fp->_flags & __SRD) == 0)
   192c4:	00477693          	andi	a3,a4,4
   192c8:	08068863          	beqz	a3,19358 <__srefill_r+0x110>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:86
       * We were reading.  If there is an ungetc buffer,
       * we must have been reading from that.  Drop it,
       * restoring the previous buffer (if any).  If there
       * is anything in that buffer, return.
       */
      if (HASUB (fp))
   192cc:	05843583          	ld	a1,88(s0)
   192d0:	02058263          	beqz	a1,192f4 <__srefill_r+0xac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:88
	{
	  FREEUB (ptr, fp);
   192d4:	07440793          	addi	a5,s0,116
   192d8:	00f58663          	beq	a1,a5,192e4 <__srefill_r+0x9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:88 (discriminator 1)
   192dc:	00048513          	mv	a0,s1
   192e0:	855fd0ef          	jal	16b34 <_free_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:89 (discriminator 3)
	  if ((fp->_r = fp->_ur) != 0)
   192e4:	07042783          	lw	a5,112(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:88
       * restoring the previous buffer (if any).  If there
       * is anything in that buffer, return.
       */
      if (HASUB (fp))
	{
	  FREEUB (ptr, fp);
   192e8:	04043c23          	sd	zero,88(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:89
	  if ((fp->_r = fp->_ur) != 0)
   192ec:	00f42423          	sw	a5,8(s0)
   192f0:	12079263          	bnez	a5,19414 <__srefill_r+0x1cc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:97
	      return 0;
	    }
	}
    }

  if (fp->_bf._base == NULL)
   192f4:	01843783          	ld	a5,24(s0)
   192f8:	18078463          	beqz	a5,19480 <__srefill_r+0x238>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:105
  /*
   * Before reading from a line buffered or unbuffered file,
   * flush all line buffered output files, per the ANSI C
   * standard.
   */
  if (fp->_flags & (__SLBF | __SNBF))
   192fc:	01041983          	lh	s3,16(s0)
   19300:	03099913          	slli	s2,s3,0x30
   19304:	03095913          	srli	s2,s2,0x30
   19308:	00397793          	andi	a5,s2,3
   1930c:	0a079063          	bnez	a5,193ac <__srefill_r+0x164>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:118
      /* Now flush this file without locking it. */
      if ((fp->_flags & (__SLBF|__SWR)) == (__SLBF|__SWR))
	__sflush_r (ptr, fp);
    }

  fp->_p = fp->_bf._base;
   19310:	01843603          	ld	a2,24(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:119
  fp->_r = fp->_read (ptr, fp->_cookie, (char *) fp->_p, fp->_bf._size);
   19314:	03843783          	ld	a5,56(s0)
   19318:	02042683          	lw	a3,32(s0)
   1931c:	03043583          	ld	a1,48(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:118
      /* Now flush this file without locking it. */
      if ((fp->_flags & (__SLBF|__SWR)) == (__SLBF|__SWR))
	__sflush_r (ptr, fp);
    }

  fp->_p = fp->_bf._base;
   19320:	00c43023          	sd	a2,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:119
  fp->_r = fp->_read (ptr, fp->_cookie, (char *) fp->_p, fp->_bf._size);
   19324:	00048513          	mv	a0,s1
   19328:	000780e7          	jalr	a5
   1932c:	0005079b          	sext.w	a5,a0
   19330:	00f42423          	sw	a5,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:137
	  fp->_r = 0;
	  fp->_flags |= __SERR;
	}
      return EOF;
    }
  return 0;
   19334:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:121
    }

  fp->_p = fp->_bf._base;
  fp->_r = fp->_read (ptr, fp->_cookie, (char *) fp->_p, fp->_bf._size);
#ifndef __CYGWIN__
  if (fp->_r <= 0)
   19338:	02f05e63          	blez	a5,19374 <__srefill_r+0x12c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:138
	  fp->_flags |= __SERR;
	}
      return EOF;
    }
  return 0;
}
   1933c:	02813083          	ld	ra,40(sp)
   19340:	02013403          	ld	s0,32(sp)
   19344:	01813483          	ld	s1,24(sp)
   19348:	01013903          	ld	s2,16(sp)
   1934c:	00813983          	ld	s3,8(sp)
   19350:	03010113          	addi	sp,sp,48
   19354:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:61
#endif

  /* if not already reading, have to be reading and writing */
  if ((fp->_flags & __SRD) == 0)
    {
      if ((fp->_flags & __SRW) == 0)
   19358:	01077693          	andi	a3,a4,16
   1935c:	10068663          	beqz	a3,19468 <__srefill_r+0x220>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:68
	  ptr->_errno = EBADF;
	  fp->_flags |= __SERR;
	  return EOF;
	}
      /* switch to reading */
      if (fp->_flags & __SWR)
   19360:	00877713          	andi	a4,a4,8
   19364:	0c071c63          	bnez	a4,1943c <__srefill_r+0x1f4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:76
	    return EOF;
	  fp->_flags &= ~__SWR;
	  fp->_w = 0;
	  fp->_lbfsize = 0;
	}
      fp->_flags |= __SRD;
   19368:	0047e793          	ori	a5,a5,4
   1936c:	00f41823          	sh	a5,16(s0)
   19370:	f85ff06f          	j	192f4 <__srefill_r+0xac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:128
  if (fp->_r > 0)
    fp->_flags &= ~__SEOF;
  else
#endif
    {
      if (fp->_r == 0)
   19374:	06079863          	bnez	a5,193e4 <__srefill_r+0x19c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:129
	fp->_flags |= __SEOF;
   19378:	01045783          	lhu	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:138
	  fp->_flags |= __SERR;
	}
      return EOF;
    }
  return 0;
}
   1937c:	02813083          	ld	ra,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:135
      else
	{
	  fp->_r = 0;
	  fp->_flags |= __SERR;
	}
      return EOF;
   19380:	fff00513          	li	a0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:129
    fp->_flags &= ~__SEOF;
  else
#endif
    {
      if (fp->_r == 0)
	fp->_flags |= __SEOF;
   19384:	0207e793          	ori	a5,a5,32
   19388:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:138
	  fp->_flags |= __SERR;
	}
      return EOF;
    }
  return 0;
}
   1938c:	01813483          	ld	s1,24(sp)
   19390:	02013403          	ld	s0,32(sp)
   19394:	01013903          	ld	s2,16(sp)
   19398:	00813983          	ld	s3,8(sp)
   1939c:	03010113          	addi	sp,sp,48
   193a0:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:46 (discriminator 2)
       struct _reent * ptr _AND
       register FILE * fp)
{
  /* make sure stdio is set up */

  CHECK_INIT (ptr, fp);
   193a4:	bccfd0ef          	jal	16770 <__sinit>
   193a8:	ecdff06f          	j	19274 <__srefill_r+0x2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:110
  if (fp->_flags & (__SLBF | __SNBF))
    {
      /* Ignore this file in _fwalk to avoid potential deadlock. */
      short orig_flags = fp->_flags;
      fp->_flags = 1;
      _CAST_VOID _fwalk (_GLOBAL_REENT, lflush);
   193ac:	8081b503          	ld	a0,-2040(gp) # 24448 <_global_impure_ptr>
   193b0:	000195b7          	lui	a1,0x19
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:109
   */
  if (fp->_flags & (__SLBF | __SNBF))
    {
      /* Ignore this file in _fwalk to avoid potential deadlock. */
      short orig_flags = fp->_flags;
      fp->_flags = 1;
   193b4:	00100793          	li	a5,1
   193b8:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:110
      _CAST_VOID _fwalk (_GLOBAL_REENT, lflush);
   193bc:	22c58593          	addi	a1,a1,556 # 1922c <lflush>
   193c0:	f39fd0ef          	jal	172f8 <_fwalk>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:114
      fp->_flags = orig_flags;

      /* Now flush this file without locking it. */
      if ((fp->_flags & (__SLBF|__SWR)) == (__SLBF|__SWR))
   193c4:	00997913          	andi	s2,s2,9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:111
    {
      /* Ignore this file in _fwalk to avoid potential deadlock. */
      short orig_flags = fp->_flags;
      fp->_flags = 1;
      _CAST_VOID _fwalk (_GLOBAL_REENT, lflush);
      fp->_flags = orig_flags;
   193c8:	01341823          	sh	s3,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:114

      /* Now flush this file without locking it. */
      if ((fp->_flags & (__SLBF|__SWR)) == (__SLBF|__SWR))
   193cc:	00900793          	li	a5,9
   193d0:	f4f910e3          	bne	s2,a5,19310 <__srefill_r+0xc8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:115
	__sflush_r (ptr, fp);
   193d4:	00040593          	mv	a1,s0
   193d8:	00048513          	mv	a0,s1
   193dc:	d7dfc0ef          	jal	16158 <__sflush_r>
   193e0:	f31ff06f          	j	19310 <__srefill_r+0xc8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:133
      if (fp->_r == 0)
	fp->_flags |= __SEOF;
      else
	{
	  fp->_r = 0;
	  fp->_flags |= __SERR;
   193e4:	01045783          	lhu	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:138
	}
      return EOF;
    }
  return 0;
}
   193e8:	02813083          	ld	ra,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:132
    {
      if (fp->_r == 0)
	fp->_flags |= __SEOF;
      else
	{
	  fp->_r = 0;
   193ec:	00042423          	sw	zero,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:133
	  fp->_flags |= __SERR;
   193f0:	0407e793          	ori	a5,a5,64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:135
	}
      return EOF;
   193f4:	fff00513          	li	a0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:133
      if (fp->_r == 0)
	fp->_flags |= __SEOF;
      else
	{
	  fp->_r = 0;
	  fp->_flags |= __SERR;
   193f8:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:138
	}
      return EOF;
    }
  return 0;
}
   193fc:	01813483          	ld	s1,24(sp)
   19400:	02013403          	ld	s0,32(sp)
   19404:	01013903          	ld	s2,16(sp)
   19408:	00813983          	ld	s3,8(sp)
   1940c:	03010113          	addi	sp,sp,48
   19410:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:91
      if (HASUB (fp))
	{
	  FREEUB (ptr, fp);
	  if ((fp->_r = fp->_ur) != 0)
	    {
	      fp->_p = fp->_up;
   19414:	06843783          	ld	a5,104(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:138
	  fp->_flags |= __SERR;
	}
      return EOF;
    }
  return 0;
}
   19418:	02813083          	ld	ra,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:92
	{
	  FREEUB (ptr, fp);
	  if ((fp->_r = fp->_ur) != 0)
	    {
	      fp->_p = fp->_up;
	      return 0;
   1941c:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:91
      if (HASUB (fp))
	{
	  FREEUB (ptr, fp);
	  if ((fp->_r = fp->_ur) != 0)
	    {
	      fp->_p = fp->_up;
   19420:	00f43023          	sd	a5,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:138
	  fp->_flags |= __SERR;
	}
      return EOF;
    }
  return 0;
}
   19424:	01813483          	ld	s1,24(sp)
   19428:	02013403          	ld	s0,32(sp)
   1942c:	01013903          	ld	s2,16(sp)
   19430:	00813983          	ld	s3,8(sp)
   19434:	03010113          	addi	sp,sp,48
   19438:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:70
	  return EOF;
	}
      /* switch to reading */
      if (fp->_flags & __SWR)
	{
	  if (_fflush_r (ptr, fp))
   1943c:	00040593          	mv	a1,s0
   19440:	00048513          	mv	a0,s1
   19444:	f81fc0ef          	jal	163c4 <_fflush_r>
   19448:	02051863          	bnez	a0,19478 <__srefill_r+0x230>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:72
	    return EOF;
	  fp->_flags &= ~__SWR;
   1944c:	01045783          	lhu	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:73
	  fp->_w = 0;
   19450:	00042623          	sw	zero,12(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:74
	  fp->_lbfsize = 0;
   19454:	02042423          	sw	zero,40(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:72
      /* switch to reading */
      if (fp->_flags & __SWR)
	{
	  if (_fflush_r (ptr, fp))
	    return EOF;
	  fp->_flags &= ~__SWR;
   19458:	ff77f793          	andi	a5,a5,-9
   1945c:	0107979b          	slliw	a5,a5,0x10
   19460:	4107d79b          	sraiw	a5,a5,0x10
   19464:	f05ff06f          	j	19368 <__srefill_r+0x120>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:63
  /* if not already reading, have to be reading and writing */
  if ((fp->_flags & __SRD) == 0)
    {
      if ((fp->_flags & __SRW) == 0)
	{
	  ptr->_errno = EBADF;
   19468:	00900713          	li	a4,9
   1946c:	00e4a023          	sw	a4,0(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:64
	  fp->_flags |= __SERR;
   19470:	0407e793          	ori	a5,a5,64
   19474:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:65
	  return EOF;
   19478:	fff00513          	li	a0,-1
   1947c:	ec1ff06f          	j	1933c <__srefill_r+0xf4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/refill.c:98
	    }
	}
    }

  if (fp->_bf._base == NULL)
    __smakebuf_r (ptr, fp);
   19480:	00040593          	mv	a1,s0
   19484:	00048513          	mv	a0,s1
   19488:	8d8fe0ef          	jal	17560 <__smakebuf_r>
   1948c:	e71ff06f          	j	192fc <__srefill_r+0xb4>

0000000000019490 <__sccl>:
__sccl():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:41
       register u_char *fmt)
{
  register int c, n, v;

  /* first `clear' the whole table */
  c = *fmt++;			/* first char hat => negated scanset */
   19490:	0005c603          	lbu	a2,0(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:42
  if (c == '^')
   19494:	05e00793          	li	a5,94
   19498:	08f60e63          	beq	a2,a5,19534 <__sccl+0xa4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:41
       register u_char *fmt)
{
  register int c, n, v;

  /* first `clear' the whole table */
  c = *fmt++;			/* first char hat => negated scanset */
   1949c:	00158593          	addi	a1,a1,1
   194a0:	00000713          	li	a4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:48
    {
      v = 1;			/* default => accept */
      c = *fmt++;		/* get new first char */
    }
  else
    v = 0;			/* default => reject */
   194a4:	00000813          	li	a6,0
   194a8:	00050793          	mv	a5,a0
   194ac:	10050693          	addi	a3,a0,256
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:51 (discriminator 3)
  /* should probably use memset here */
  for (n = 0; n < 256; n++)
    tab[n] = v;
   194b0:	00e78023          	sb	a4,0(a5)
   194b4:	00178793          	addi	a5,a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:50
      c = *fmt++;		/* get new first char */
    }
  else
    v = 0;			/* default => reject */
  /* should probably use memset here */
  for (n = 0; n < 256; n++)
   194b8:	fed79ce3          	bne	a5,a3,194b0 <__sccl+0x20>
   194bc:	00183713          	seqz	a4,a6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:69
  for (;;)
    {
      tab[c] = v;		/* take character c */
    doswitch:
      n = *fmt++;		/* and examine the next */
      switch (n)
   194c0:	02d00313          	li	t1,45
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:89
	   * the character following it is either a close bracket (required by
	   * ANSI) or is not numerically greater than the character we just
	   * stored in the table (c).
	   */
	  n = *fmt;
	  if (n == ']' || n < c)
   194c4:	05d00893          	li	a7,93
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:52
  else
    v = 0;			/* default => reject */
  /* should probably use memset here */
  for (n = 0; n < 256; n++)
    tab[n] = v;
  if (c == 0)
   194c8:	02060a63          	beqz	a2,194fc <__sccl+0x6c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:66
   */

  v = 1 - v;
  for (;;)
    {
      tab[c] = v;		/* take character c */
   194cc:	00c507b3          	add	a5,a0,a2
   194d0:	00e78023          	sb	a4,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:68
    doswitch:
      n = *fmt++;		/* and examine the next */
   194d4:	0005c783          	lbu	a5,0(a1)
   194d8:	00158813          	addi	a6,a1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:69
      switch (n)
   194dc:	02678863          	beq	a5,t1,1950c <__sccl+0x7c>
   194e0:	03178263          	beq	a5,a7,19504 <__sccl+0x74>
   194e4:	00078863          	beqz	a5,194f4 <__sccl+0x64>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:91
	   * stored in the table (c).
	   */
	  n = *fmt;
	  if (n == ']' || n < c)
	    {
	      c = '-';
   194e8:	00078613          	mv	a2,a5
   194ec:	00080593          	mv	a1,a6
   194f0:	fddff06f          	j	194cc <__sccl+0x3c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:69
  for (;;)
    {
      tab[c] = v;		/* take character c */
    doswitch:
      n = *fmt++;		/* and examine the next */
      switch (n)
   194f4:	00058513          	mv	a0,a1
   194f8:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:53
    v = 0;			/* default => reject */
  /* should probably use memset here */
  for (n = 0; n < 256; n++)
    tab[n] = v;
  if (c == 0)
    return fmt - 1;		/* format ended before closing ] */
   194fc:	fff58513          	addi	a0,a1,-1
   19500:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:68
  v = 1 - v;
  for (;;)
    {
      tab[c] = v;		/* take character c */
    doswitch:
      n = *fmt++;		/* and examine the next */
   19504:	00080513          	mv	a0,a6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:127
	  c = n;
	  break;
	}
    }
  /* NOTREACHED */
}
   19508:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:88
	   * For compatibility, the `-' is not considerd to define a range if
	   * the character following it is either a close bracket (required by
	   * ANSI) or is not numerically greater than the character we just
	   * stored in the table (c).
	   */
	  n = *fmt;
   1950c:	0015c683          	lbu	a3,1(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:89
	  if (n == ']' || n < c)
   19510:	fd168ce3          	beq	a3,a7,194e8 <__sccl+0x58>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:89 (discriminator 1)
   19514:	fcc6cae3          	blt	a3,a2,194e8 <__sccl+0x58>
   19518:	00258593          	addi	a1,a1,2
   1951c:	00c507b3          	add	a5,a0,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:97
	      break;		/* resume the for(;;) */
	    }
	  fmt++;
	  do
	    {			/* fill in the range */
	      tab[++c] = v;
   19520:	00e780a3          	sb	a4,1(a5)
   19524:	0016061b          	addiw	a2,a2,1
   19528:	00178793          	addi	a5,a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:99
	    }
	  while (c < n);
   1952c:	fed64ae3          	blt	a2,a3,19520 <__sccl+0x90>
   19530:	fa5ff06f          	j	194d4 <__sccl+0x44>
   19534:	00100713          	li	a4,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:45
  /* first `clear' the whole table */
  c = *fmt++;			/* first char hat => negated scanset */
  if (c == '^')
    {
      v = 1;			/* default => accept */
      c = *fmt++;		/* get new first char */
   19538:	0015c603          	lbu	a2,1(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:44

  /* first `clear' the whole table */
  c = *fmt++;			/* first char hat => negated scanset */
  if (c == '^')
    {
      v = 1;			/* default => accept */
   1953c:	00070813          	mv	a6,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sccl.c:45
      c = *fmt++;		/* get new first char */
   19540:	00258593          	addi	a1,a1,2
   19544:	f65ff06f          	j	194a8 <__sccl+0x18>

0000000000019548 <nanf>:
nanf():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/sf_nan.c:17
#if __GNUC_PREREQ (3, 3)
	x = __builtin_nanf("");
#else
	SET_FLOAT_WORD(x,0x7fc00000);
#endif
	return x;
   19548:	000247b7          	lui	a5,0x24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/sf_nan.c:18
}
   1954c:	4f87a507          	flw	fa0,1272(a5) # 244f8 <mask+0x60>
   19550:	00008067          	ret

0000000000019554 <__fpclassifyd>:
__fpclassifyd():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:11

#include "fdlibm.h"

int
__fpclassifyd (double x)
{
   19554:	e20507d3          	fmv.x.d	a5,fa0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:18

  EXTRACT_WORDS(msw,lsw,x);

  if ((msw == 0x00000000 && lsw == 0x00000000) ||
      (msw == 0x80000000 && lsw == 0x00000000))
    return FP_ZERO;
   19558:	00200513          	li	a0,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:14
int
__fpclassifyd (double x)
{
  __uint32_t msw, lsw;

  EXTRACT_WORDS(msw,lsw,x);
   1955c:	4207d713          	srai	a4,a5,0x20
   19560:	0007879b          	sext.w	a5,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:16

  if ((msw == 0x00000000 && lsw == 0x00000000) ||
   19564:	00f766b3          	or	a3,a4,a5
   19568:	00069463          	bnez	a3,19570 <__fpclassifyd+0x1c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:31
  else if ((msw == 0x7ff00000 && lsw == 0x00000000) ||
           (msw == 0xfff00000 && lsw == 0x00000000))
    return FP_INFINITE;
  else
    return FP_NAN;
}
   1956c:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:16 (discriminator 1)
{
  __uint32_t msw, lsw;

  EXTRACT_WORDS(msw,lsw,x);

  if ((msw == 0x00000000 && lsw == 0x00000000) ||
   19570:	800006b7          	lui	a3,0x80000
   19574:	04d70863          	beq	a4,a3,195c4 <__fpclassifyd+0x70>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:19
      (msw == 0x80000000 && lsw == 0x00000000))
    return FP_ZERO;
  else if ((msw >= 0x00100000 && msw <= 0x7fefffff) ||
   19578:	fff006b7          	lui	a3,0xfff00
   1957c:	00d706bb          	addw	a3,a4,a3
   19580:	7fe00637          	lui	a2,0x7fe00
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:21
           (msw >= 0x80100000 && msw <= 0xffefffff))
    return FP_NORMAL;
   19584:	00400513          	li	a0,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:19
  EXTRACT_WORDS(msw,lsw,x);

  if ((msw == 0x00000000 && lsw == 0x00000000) ||
      (msw == 0x80000000 && lsw == 0x00000000))
    return FP_ZERO;
  else if ((msw >= 0x00100000 && msw <= 0x7fefffff) ||
   19588:	fec6e2e3          	bltu	a3,a2,1956c <__fpclassifyd+0x18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:19 (discriminator 1)
   1958c:	7ff006b7          	lui	a3,0x7ff00
   19590:	00d706bb          	addw	a3,a4,a3
   19594:	fcc6ece3          	bltu	a3,a2,1956c <__fpclassifyd+0x18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:22
           (msw >= 0x80100000 && msw <= 0xffefffff))
    return FP_NORMAL;
  else if ((msw >= 0x00000000 && msw <= 0x000fffff) ||
   19598:	800006b7          	lui	a3,0x80000
   1959c:	fff6c693          	not	a3,a3
   195a0:	00d77733          	and	a4,a4,a3
   195a4:	001006b7          	lui	a3,0x100
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:25
           (msw >= 0x80000000 && msw <= 0x800fffff))
    /* zero is already handled above */
    return FP_SUBNORMAL;
   195a8:	00300513          	li	a0,3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:22
      (msw == 0x80000000 && lsw == 0x00000000))
    return FP_ZERO;
  else if ((msw >= 0x00100000 && msw <= 0x7fefffff) ||
           (msw >= 0x80100000 && msw <= 0xffefffff))
    return FP_NORMAL;
  else if ((msw >= 0x00000000 && msw <= 0x000fffff) ||
   195ac:	fcd760e3          	bltu	a4,a3,1956c <__fpclassifyd+0x18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:26
           (msw >= 0x80000000 && msw <= 0x800fffff))
    /* zero is already handled above */
    return FP_SUBNORMAL;
  else if ((msw == 0x7ff00000 && lsw == 0x00000000) ||
   195b0:	7ff006b7          	lui	a3,0x7ff00
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:30
           (msw == 0xfff00000 && lsw == 0x00000000))
    return FP_INFINITE;
  else
    return FP_NAN;
   195b4:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:26
    return FP_NORMAL;
  else if ((msw >= 0x00000000 && msw <= 0x000fffff) ||
           (msw >= 0x80000000 && msw <= 0x800fffff))
    /* zero is already handled above */
    return FP_SUBNORMAL;
  else if ((msw == 0x7ff00000 && lsw == 0x00000000) ||
   195b8:	fad71ae3          	bne	a4,a3,1956c <__fpclassifyd+0x18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:21 (discriminator 3)
  if ((msw == 0x00000000 && lsw == 0x00000000) ||
      (msw == 0x80000000 && lsw == 0x00000000))
    return FP_ZERO;
  else if ((msw >= 0x00100000 && msw <= 0x7fefffff) ||
           (msw >= 0x80100000 && msw <= 0xffefffff))
    return FP_NORMAL;
   195bc:	0017b513          	seqz	a0,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:31
  else if ((msw == 0x7ff00000 && lsw == 0x00000000) ||
           (msw == 0xfff00000 && lsw == 0x00000000))
    return FP_INFINITE;
  else
    return FP_NAN;
}
   195c0:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:17
  __uint32_t msw, lsw;

  EXTRACT_WORDS(msw,lsw,x);

  if ((msw == 0x00000000 && lsw == 0x00000000) ||
      (msw == 0x80000000 && lsw == 0x00000000))
   195c4:	fc079ae3          	bnez	a5,19598 <__fpclassifyd+0x44>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libm/common/s_fpclassify.c:31
  else if ((msw == 0x7ff00000 && lsw == 0x00000000) ||
           (msw == 0xfff00000 && lsw == 0x00000000))
    return FP_INFINITE;
  else
    return FP_NAN;
}
   195c8:	00008067          	ret

00000000000195cc <_sprintf_r>:
_sprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:591
           struct _reent *ptr;
           char *__restrict str;
           _CONST char *__restrict fmt;
           va_dcl
#endif
{
   195cc:	f0010113          	addi	sp,sp,-256
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:601
  f._flags = __SWR | __SSTR;
  f._bf._base = f._p = (unsigned char *) str;
  f._bf._size = f._w = INT_MAX;
  f._file = -1;  /* No file. */
#ifdef _HAVE_STDC
  va_start (ap, fmt);
   195d0:	0d810e13          	addi	t3,sp,216
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:591
           struct _reent *ptr;
           char *__restrict str;
           _CONST char *__restrict fmt;
           va_dcl
#endif
{
   195d4:	0ef13423          	sd	a5,232(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:598
  va_list ap;
  FILE f;

  f._flags = __SWR | __SSTR;
  f._bf._base = f._p = (unsigned char *) str;
  f._bf._size = f._w = INT_MAX;
   195d8:	80000337          	lui	t1,0x80000
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:596
{
  int ret;
  va_list ap;
  FILE f;

  f._flags = __SWR | __SSTR;
   195dc:	20800793          	li	a5,520
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:591
           struct _reent *ptr;
           char *__restrict str;
           _CONST char *__restrict fmt;
           va_dcl
#endif
{
   195e0:	00058e93          	mv	t4,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:598
  va_list ap;
  FILE f;

  f._flags = __SWR | __SSTR;
  f._bf._base = f._p = (unsigned char *) str;
  f._bf._size = f._w = INT_MAX;
   195e4:	fff34313          	not	t1,t1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:591
           struct _reent *ptr;
           char *__restrict str;
           _CONST char *__restrict fmt;
           va_dcl
#endif
{
   195e8:	0cd13c23          	sd	a3,216(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:596
  int ret;
  va_list ap;
  FILE f;

  f._flags = __SWR | __SSTR;
   195ec:	02f11023          	sh	a5,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:605
#ifdef _HAVE_STDC
  va_start (ap, fmt);
#else
  va_start (ap);
#endif
  ret = _svfprintf_r (ptr, &f, fmt, ap);
   195f0:	01010593          	addi	a1,sp,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:599
  FILE f;

  f._flags = __SWR | __SSTR;
  f._bf._base = f._p = (unsigned char *) str;
  f._bf._size = f._w = INT_MAX;
  f._file = -1;  /* No file. */
   195f4:	fff00793          	li	a5,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:605
#ifdef _HAVE_STDC
  va_start (ap, fmt);
#else
  va_start (ap);
#endif
  ret = _svfprintf_r (ptr, &f, fmt, ap);
   195f8:	000e0693          	mv	a3,t3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:591
           struct _reent *ptr;
           char *__restrict str;
           _CONST char *__restrict fmt;
           va_dcl
#endif
{
   195fc:	0c113423          	sd	ra,200(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:599
  FILE f;

  f._flags = __SWR | __SSTR;
  f._bf._base = f._p = (unsigned char *) str;
  f._bf._size = f._w = INT_MAX;
  f._file = -1;  /* No file. */
   19600:	02f11123          	sh	a5,34(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:591
           struct _reent *ptr;
           char *__restrict str;
           _CONST char *__restrict fmt;
           va_dcl
#endif
{
   19604:	0ee13023          	sd	a4,224(sp)
   19608:	0f013823          	sd	a6,240(sp)
   1960c:	0f113c23          	sd	a7,248(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:597
  int ret;
  va_list ap;
  FILE f;

  f._flags = __SWR | __SSTR;
  f._bf._base = f._p = (unsigned char *) str;
   19610:	01d13823          	sd	t4,16(sp)
   19614:	03d13423          	sd	t4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:598
  f._bf._size = f._w = INT_MAX;
   19618:	00612e23          	sw	t1,28(sp)
   1961c:	02612823          	sw	t1,48(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:601
  f._file = -1;  /* No file. */
#ifdef _HAVE_STDC
  va_start (ap, fmt);
   19620:	01c13423          	sd	t3,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:605
#else
  va_start (ap);
#endif
  ret = _svfprintf_r (ptr, &f, fmt, ap);
   19624:	0d5010ef          	jal	1aef8 <_svfprintf_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:607
  va_end (ap);
  *f._p = '\0';	/* terminate the string */
   19628:	01013783          	ld	a5,16(sp)
   1962c:	00078023          	sb	zero,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:609
  return (ret);
}
   19630:	0c813083          	ld	ra,200(sp)
   19634:	10010113          	addi	sp,sp,256
   19638:	00008067          	ret

000000000001963c <sprintf>:
sprintf():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:630
sprintf(str, fmt, va_alist)
        char *str;
        _CONST char *fmt;
        va_dcl
#endif
{
   1963c:	00050e93          	mv	t4,a0
   19640:	f0010113          	addi	sp,sp,-256
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:644
#ifdef _HAVE_STDC
  va_start (ap, fmt);
#else
  va_start (ap);
#endif
  ret = _svfprintf_r (_REENT, &f, fmt, ap);
   19644:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:640
  f._flags = __SWR | __SSTR;
  f._bf._base = f._p = (unsigned char *) str;
  f._bf._size = f._w = INT_MAX;
  f._file = -1;  /* No file. */
#ifdef _HAVE_STDC
  va_start (ap, fmt);
   19648:	0d010e13          	addi	t3,sp,208
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:630
sprintf(str, fmt, va_alist)
        char *str;
        _CONST char *fmt;
        va_dcl
#endif
{
   1964c:	0ef13423          	sd	a5,232(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:637
  va_list ap;
  FILE f;

  f._flags = __SWR | __SSTR;
  f._bf._base = f._p = (unsigned char *) str;
  f._bf._size = f._w = INT_MAX;
   19650:	80000337          	lui	t1,0x80000
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:635
{
  int ret;
  va_list ap;
  FILE f;

  f._flags = __SWR | __SSTR;
   19654:	20800793          	li	a5,520
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:637
  f._bf._base = f._p = (unsigned char *) str;
  f._bf._size = f._w = INT_MAX;
   19658:	fff34313          	not	t1,t1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:630
sprintf(str, fmt, va_alist)
        char *str;
        _CONST char *fmt;
        va_dcl
#endif
{
   1965c:	0cc13823          	sd	a2,208(sp)
   19660:	0cd13c23          	sd	a3,216(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:635
  int ret;
  va_list ap;
  FILE f;

  f._flags = __SWR | __SSTR;
   19664:	02f11023          	sh	a5,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:644
#ifdef _HAVE_STDC
  va_start (ap, fmt);
#else
  va_start (ap);
#endif
  ret = _svfprintf_r (_REENT, &f, fmt, ap);
   19668:	00058613          	mv	a2,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:638
  FILE f;

  f._flags = __SWR | __SSTR;
  f._bf._base = f._p = (unsigned char *) str;
  f._bf._size = f._w = INT_MAX;
  f._file = -1;  /* No file. */
   1966c:	fff00793          	li	a5,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:644
#ifdef _HAVE_STDC
  va_start (ap, fmt);
#else
  va_start (ap);
#endif
  ret = _svfprintf_r (_REENT, &f, fmt, ap);
   19670:	01010593          	addi	a1,sp,16
   19674:	000e0693          	mv	a3,t3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:630
sprintf(str, fmt, va_alist)
        char *str;
        _CONST char *fmt;
        va_dcl
#endif
{
   19678:	0c113423          	sd	ra,200(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:638
  FILE f;

  f._flags = __SWR | __SSTR;
  f._bf._base = f._p = (unsigned char *) str;
  f._bf._size = f._w = INT_MAX;
  f._file = -1;  /* No file. */
   1967c:	02f11123          	sh	a5,34(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:630
sprintf(str, fmt, va_alist)
        char *str;
        _CONST char *fmt;
        va_dcl
#endif
{
   19680:	0ee13023          	sd	a4,224(sp)
   19684:	0f013823          	sd	a6,240(sp)
   19688:	0f113c23          	sd	a7,248(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:636
  int ret;
  va_list ap;
  FILE f;

  f._flags = __SWR | __SSTR;
  f._bf._base = f._p = (unsigned char *) str;
   1968c:	01d13823          	sd	t4,16(sp)
   19690:	03d13423          	sd	t4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:637
  f._bf._size = f._w = INT_MAX;
   19694:	00612e23          	sw	t1,28(sp)
   19698:	02612823          	sw	t1,48(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:640
  f._file = -1;  /* No file. */
#ifdef _HAVE_STDC
  va_start (ap, fmt);
   1969c:	01c13423          	sd	t3,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:644
#else
  va_start (ap);
#endif
  ret = _svfprintf_r (_REENT, &f, fmt, ap);
   196a0:	059010ef          	jal	1aef8 <_svfprintf_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:646
  va_end (ap);
  *f._p = '\0';	/* terminate the string */
   196a4:	01013783          	ld	a5,16(sp)
   196a8:	00078023          	sb	zero,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/sprintf.c:648
  return (ret);
}
   196ac:	0c813083          	ld	ra,200(sp)
   196b0:	10010113          	addi	sp,sp,256
   196b4:	00008067          	ret

00000000000196b8 <__sread>:
__sread():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:48
  int oldmode = 0;
  if (fp->_flags & __SCLE)
    oldmode = setmode (fp->_file, O_BINARY);
#endif

  ret = _read_r (ptr, fp->_file, buf, n);
   196b8:	01259503          	lh	a0,18(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:38
_DEFUN(__sread, (ptr, cookie, buf, n),
       struct _reent *ptr _AND
       void *cookie _AND
       char *buf _AND
       _READ_WRITE_BUFSIZE_TYPE n)
{
   196bc:	ff010113          	addi	sp,sp,-16
   196c0:	00813023          	sd	s0,0(sp)
   196c4:	00058413          	mv	s0,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:48
  int oldmode = 0;
  if (fp->_flags & __SCLE)
    oldmode = setmode (fp->_file, O_BINARY);
#endif

  ret = _read_r (ptr, fp->_file, buf, n);
   196c8:	00060593          	mv	a1,a2
   196cc:	00068613          	mv	a2,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:38
_DEFUN(__sread, (ptr, cookie, buf, n),
       struct _reent *ptr _AND
       void *cookie _AND
       char *buf _AND
       _READ_WRITE_BUFSIZE_TYPE n)
{
   196d0:	00113423          	sd	ra,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:48
  int oldmode = 0;
  if (fp->_flags & __SCLE)
    oldmode = setmode (fp->_file, O_BINARY);
#endif

  ret = _read_r (ptr, fp->_file, buf, n);
   196d4:	359060ef          	jal	2022c <read>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:57
    setmode (fp->_file, oldmode);
#endif

  /* If the read succeeded, update the current offset.  */

  if (ret >= 0)
   196d8:	02054063          	bltz	a0,196f8 <__sread+0x40>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:58
    fp->_offset += ret;
   196dc:	09043783          	ld	a5,144(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:62
  else
    fp->_flags &= ~__SOFF;	/* paranoia */
  return ret;
}
   196e0:	00813083          	ld	ra,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:58
#endif

  /* If the read succeeded, update the current offset.  */

  if (ret >= 0)
    fp->_offset += ret;
   196e4:	00a787b3          	add	a5,a5,a0
   196e8:	08f43823          	sd	a5,144(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:62
  else
    fp->_flags &= ~__SOFF;	/* paranoia */
  return ret;
}
   196ec:	00013403          	ld	s0,0(sp)
   196f0:	01010113          	addi	sp,sp,16
   196f4:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:60
  /* If the read succeeded, update the current offset.  */

  if (ret >= 0)
    fp->_offset += ret;
  else
    fp->_flags &= ~__SOFF;	/* paranoia */
   196f8:	01045703          	lhu	a4,16(s0)
   196fc:	fffff7b7          	lui	a5,0xfffff
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:62
  return ret;
}
   19700:	00813083          	ld	ra,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:60
  /* If the read succeeded, update the current offset.  */

  if (ret >= 0)
    fp->_offset += ret;
  else
    fp->_flags &= ~__SOFF;	/* paranoia */
   19704:	fff7879b          	addiw	a5,a5,-1
   19708:	00f777b3          	and	a5,a4,a5
   1970c:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:62
  return ret;
}
   19710:	00013403          	ld	s0,0(sp)
   19714:	01010113          	addi	sp,sp,16
   19718:	00008067          	ret

000000000001971c <__seofread>:
__seofread():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:73
       _PTR cookie _AND
       char *buf   _AND
       _READ_WRITE_BUFSIZE_TYPE len)
{
  return 0;
}
   1971c:	00000513          	li	a0,0
   19720:	00008067          	ret

0000000000019724 <__swrite>:
__swrite():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:88
  ssize_t w;
#ifdef __SCLE
  int oldmode=0;
#endif

  if (fp->_flags & __SAPP)
   19724:	01059703          	lh	a4,16(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:81
_DEFUN(__swrite, (ptr, cookie, buf, n),
       struct _reent *ptr _AND
       void *cookie _AND
       char const *buf _AND
       _READ_WRITE_BUFSIZE_TYPE n)
{
   19728:	fd010113          	addi	sp,sp,-48
   1972c:	02813023          	sd	s0,32(sp)
   19730:	00913c23          	sd	s1,24(sp)
   19734:	02113423          	sd	ra,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:88
  ssize_t w;
#ifdef __SCLE
  int oldmode=0;
#endif

  if (fp->_flags & __SAPP)
   19738:	10077793          	andi	a5,a4,256
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:81
_DEFUN(__swrite, (ptr, cookie, buf, n),
       struct _reent *ptr _AND
       void *cookie _AND
       char const *buf _AND
       _READ_WRITE_BUFSIZE_TYPE n)
{
   1973c:	00058413          	mv	s0,a1
   19740:	00060493          	mv	s1,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:88
  ssize_t w;
#ifdef __SCLE
  int oldmode=0;
#endif

  if (fp->_flags & __SAPP)
   19744:	02078063          	beqz	a5,19764 <__swrite+0x40>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:89
    _lseek_r (ptr, fp->_file, (_off_t) 0, SEEK_END);
   19748:	01259503          	lh	a0,18(a1)
   1974c:	00200613          	li	a2,2
   19750:	00000593          	li	a1,0
   19754:	00d13423          	sd	a3,8(sp)
   19758:	2c1060ef          	jal	20218 <lseek>
   1975c:	01041703          	lh	a4,16(s0)
   19760:	00813683          	ld	a3,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:90
  fp->_flags &= ~__SOFF;	/* in case O_APPEND mode is set */
   19764:	fffff7b7          	lui	a5,0xfffff
   19768:	fff7879b          	addiw	a5,a5,-1
   1976c:	00f777b3          	and	a5,a4,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:97
#ifdef __SCLE
  if (fp->_flags & __SCLE)
    oldmode = setmode (fp->_file, O_BINARY);
#endif

  w = _write_r (ptr, fp->_file, buf, n);
   19770:	01241503          	lh	a0,18(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:90
  int oldmode=0;
#endif

  if (fp->_flags & __SAPP)
    _lseek_r (ptr, fp->_file, (_off_t) 0, SEEK_END);
  fp->_flags &= ~__SOFF;	/* in case O_APPEND mode is set */
   19774:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:97
#ifdef __SCLE
  if (fp->_flags & __SCLE)
    oldmode = setmode (fp->_file, O_BINARY);
#endif

  w = _write_r (ptr, fp->_file, buf, n);
   19778:	00048593          	mv	a1,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:105
  if (oldmode)
    setmode (fp->_file, oldmode);
#endif

  return w;
}
   1977c:	02813083          	ld	ra,40(sp)
   19780:	02013403          	ld	s0,32(sp)
   19784:	01813483          	ld	s1,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:97
#ifdef __SCLE
  if (fp->_flags & __SCLE)
    oldmode = setmode (fp->_file, O_BINARY);
#endif

  w = _write_r (ptr, fp->_file, buf, n);
   19788:	00068613          	mv	a2,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:105
  if (oldmode)
    setmode (fp->_file, oldmode);
#endif

  return w;
}
   1978c:	03010113          	addi	sp,sp,48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:97
#ifdef __SCLE
  if (fp->_flags & __SCLE)
    oldmode = setmode (fp->_file, O_BINARY);
#endif

  w = _write_r (ptr, fp->_file, buf, n);
   19790:	2b10606f          	j	20240 <write>

0000000000019794 <__sseek>:
__sseek():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:117
       int whence)
{
  register FILE *fp = (FILE *) cookie;
  register _off_t ret;

  ret = _lseek_r (ptr, fp->_file, (_off_t) offset, whence);
   19794:	01259503          	lh	a0,18(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:113
_DEFUN(__sseek, (ptr, cookie, offset, whence),
       struct _reent *ptr _AND
       void *cookie _AND
       _fpos_t offset _AND
       int whence)
{
   19798:	ff010113          	addi	sp,sp,-16
   1979c:	00813023          	sd	s0,0(sp)
   197a0:	00058413          	mv	s0,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:117
  register FILE *fp = (FILE *) cookie;
  register _off_t ret;

  ret = _lseek_r (ptr, fp->_file, (_off_t) offset, whence);
   197a4:	00060593          	mv	a1,a2
   197a8:	00068613          	mv	a2,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:113
_DEFUN(__sseek, (ptr, cookie, offset, whence),
       struct _reent *ptr _AND
       void *cookie _AND
       _fpos_t offset _AND
       int whence)
{
   197ac:	00113423          	sd	ra,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:117
  register FILE *fp = (FILE *) cookie;
  register _off_t ret;

  ret = _lseek_r (ptr, fp->_file, (_off_t) offset, whence);
   197b0:	269060ef          	jal	20218 <lseek>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:118
  if (ret == -1L)
   197b4:	fff00793          	li	a5,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:119
    fp->_flags &= ~__SOFF;
   197b8:	01045703          	lhu	a4,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:118
{
  register FILE *fp = (FILE *) cookie;
  register _off_t ret;

  ret = _lseek_r (ptr, fp->_file, (_off_t) offset, whence);
  if (ret == -1L)
   197bc:	02f50263          	beq	a0,a5,197e0 <__sseek+0x4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:126
    {
      fp->_flags |= __SOFF;
      fp->_offset = ret;
    }
  return ret;
}
   197c0:	00813083          	ld	ra,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:122
  ret = _lseek_r (ptr, fp->_file, (_off_t) offset, whence);
  if (ret == -1L)
    fp->_flags &= ~__SOFF;
  else
    {
      fp->_flags |= __SOFF;
   197c4:	000017b7          	lui	a5,0x1
   197c8:	00f767b3          	or	a5,a4,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:123
      fp->_offset = ret;
   197cc:	08a43823          	sd	a0,144(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:122
  ret = _lseek_r (ptr, fp->_file, (_off_t) offset, whence);
  if (ret == -1L)
    fp->_flags &= ~__SOFF;
  else
    {
      fp->_flags |= __SOFF;
   197d0:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:126
      fp->_offset = ret;
    }
  return ret;
}
   197d4:	00013403          	ld	s0,0(sp)
   197d8:	01010113          	addi	sp,sp,16
   197dc:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:119
  register FILE *fp = (FILE *) cookie;
  register _off_t ret;

  ret = _lseek_r (ptr, fp->_file, (_off_t) offset, whence);
  if (ret == -1L)
    fp->_flags &= ~__SOFF;
   197e0:	fffff7b7          	lui	a5,0xfffff
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:126
    {
      fp->_flags |= __SOFF;
      fp->_offset = ret;
    }
  return ret;
}
   197e4:	00813083          	ld	ra,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:119
  register FILE *fp = (FILE *) cookie;
  register _off_t ret;

  ret = _lseek_r (ptr, fp->_file, (_off_t) offset, whence);
  if (ret == -1L)
    fp->_flags &= ~__SOFF;
   197e8:	fff7879b          	addiw	a5,a5,-1
   197ec:	00f777b3          	and	a5,a4,a5
   197f0:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:126
    {
      fp->_flags |= __SOFF;
      fp->_offset = ret;
    }
  return ret;
}
   197f4:	00013403          	ld	s0,0(sp)
   197f8:	01010113          	addi	sp,sp,16
   197fc:	00008067          	ret

0000000000019800 <__sclose>:
__sclose():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/stdio.c:135
       struct _reent *ptr _AND
       void *cookie)
{
  FILE *fp = (FILE *) cookie;

  return _close_r (ptr, fp->_file);
   19800:	01259503          	lh	a0,18(a1)
   19804:	2e90606f          	j	202ec <close>

0000000000019808 <_strtod_r>:
_strtod_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:241
double
_DEFUN (_strtod_r, (ptr, s00, se),
	struct _reent *ptr _AND
	_CONST char *__restrict s00 _AND
	char **__restrict se)
{
   19808:	f0010113          	addi	sp,sp,-256
   1980c:	0e813823          	sd	s0,240(sp)
   19810:	0f213023          	sd	s2,224(sp)
   19814:	0d313c23          	sd	s3,216(sp)
   19818:	0b713c23          	sd	s7,184(sp)
   1981c:	0b913423          	sd	s9,168(sp)
   19820:	0e113c23          	sd	ra,248(sp)
   19824:	0e913423          	sd	s1,232(sp)
   19828:	0d413823          	sd	s4,208(sp)
   1982c:	0d513423          	sd	s5,200(sp)
   19830:	0d613023          	sd	s6,192(sp)
   19834:	0b813823          	sd	s8,176(sp)
   19838:	0ba13023          	sd	s10,160(sp)
   1983c:	09b13c23          	sd	s11,152(sp)
   19840:	08813427          	fsd	fs0,136(sp)
   19844:	08913027          	fsd	fs1,128(sp)
   19848:	07213c27          	fsd	fs2,120(sp)
   1984c:	07313827          	fsd	fs3,112(sp)
   19850:	07413427          	fsd	fs4,104(sp)
   19854:	07513027          	fsd	fs5,96(sp)
   19858:	05613c27          	fsd	fs6,88(sp)
   1985c:	05713827          	fsd	fs7,80(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:252
	_CONST char *s, *s0, *s1;
	double aadj, adj;
	U aadj1, rv, rv0;
	Long L;
	__ULong y, z;
	_Bigint *bb = NULL, *bb1, *bd = NULL, *bd0, *bs = NULL, *delta = NULL;
   19860:	04013023          	sd	zero,64(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:266
#endif

	delta = bs = bd = NULL;
	sign = nz0 = nz = decpt = 0;
	dval(rv) = 0.;
	for(s = s00;;s++) switch(*s) {
   19864:	02b13c23          	sd	a1,56(sp)
   19868:	00058b93          	mv	s7,a1
   1986c:	000bc783          	lbu	a5,0(s7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:241
double
_DEFUN (_strtod_r, (ptr, s00, se),
	struct _reent *ptr _AND
	_CONST char *__restrict s00 _AND
	char **__restrict se)
{
   19870:	00060993          	mv	s3,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:266
#endif

	delta = bs = bd = NULL;
	sign = nz0 = nz = decpt = 0;
	dval(rv) = 0.;
	for(s = s00;;s++) switch(*s) {
   19874:	000216b7          	lui	a3,0x21
   19878:	02d00613          	li	a2,45
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:241
double
_DEFUN (_strtod_r, (ptr, s00, se),
	struct _reent *ptr _AND
	_CONST char *__restrict s00 _AND
	char **__restrict se)
{
   1987c:	00058c93          	mv	s9,a1
   19880:	00050413          	mv	s0,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:265
	int rounding;
#endif

	delta = bs = bd = NULL;
	sign = nz0 = nz = decpt = 0;
	dval(rv) = 0.;
   19884:	00000913          	li	s2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:266
	for(s = s00;;s++) switch(*s) {
   19888:	e3868693          	addi	a3,a3,-456 # 20e38 <__mprec_bigtens+0x28>
   1988c:	28f66e63          	bltu	a2,a5,19b28 <_strtod_r+0x320>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:266 (discriminator 1)
   19890:	00279713          	slli	a4,a5,0x2
   19894:	00d70733          	add	a4,a4,a3
   19898:	00072703          	lw	a4,0(a4) # ffffffffffffe000 <_end+0xfffffffffffd71e8>
   1989c:	00070067          	jr	a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:264
#ifdef Honor_FLT_ROUNDS
	int rounding;
#endif

	delta = bs = bd = NULL;
	sign = nz0 = nz = decpt = 0;
   198a0:	00000a93          	li	s5,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:271
	for(s = s00;;s++) switch(*s) {
		case '-':
			sign = 1;
			/* no break */
		case '+':
			if (*++s)
   198a4:	001b8713          	addi	a4,s7,1
   198a8:	02e13c23          	sd	a4,56(sp)
   198ac:	001bc783          	lbu	a5,1(s7)
   198b0:	1c078e63          	beqz	a5,19a8c <_strtod_r+0x284>
   198b4:	00070b93          	mv	s7,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:287
			continue;
		default:
			goto break2;
		}
 break2:
	if (*s == '0') {
   198b8:	03000713          	li	a4,48
   198bc:	000b8a13          	mv	s4,s7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:264
#ifdef Honor_FLT_ROUNDS
	int rounding;
#endif

	delta = bs = bd = NULL;
	sign = nz0 = nz = decpt = 0;
   198c0:	00000b13          	li	s6,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:287
			continue;
		default:
			goto break2;
		}
 break2:
	if (*s == '0') {
   198c4:	26e78c63          	beq	a5,a4,19b3c <_strtod_r+0x334>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:335
		if (!*s)
			goto ret;
		}
	s0 = s;
	y = z = 0;
	for(nd = nf = 0; (c = *s) >= '0' && c <= '9'; nd++, s++)
   198c8:	fd07871b          	addiw	a4,a5,-48
   198cc:	0ff77713          	andi	a4,a4,255
   198d0:	00900513          	li	a0,9
   198d4:	40e566e3          	bltu	a0,a4,1a4e0 <_strtod_r+0xcd8>
   198d8:	001a0593          	addi	a1,s4,1
   198dc:	00000d93          	li	s11,0
   198e0:	00000d13          	li	s10,0
   198e4:	00000c13          	li	s8,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:336
		if (nd < 9)
   198e8:	00800813          	li	a6,8
   198ec:	29884663          	blt	a6,s8,19b78 <_strtod_r+0x370>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:337
			y = 10*y + c - '0';
   198f0:	001d161b          	slliw	a2,s10,0x1
   198f4:	003d171b          	slliw	a4,s10,0x3
   198f8:	00e6073b          	addw	a4,a2,a4
   198fc:	00f7073b          	addw	a4,a4,a5
   19900:	fd070d1b          	addiw	s10,a4,-48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:335 (discriminator 2)
		if (!*s)
			goto ret;
		}
	s0 = s;
	y = z = 0;
	for(nd = nf = 0; (c = *s) >= '0' && c <= '9'; nd++, s++)
   19904:	02b13c23          	sd	a1,56(sp)
   19908:	0005c783          	lbu	a5,0(a1)
   1990c:	00058913          	mv	s2,a1
   19910:	001c0c1b          	addiw	s8,s8,1
   19914:	fd07869b          	addiw	a3,a5,-48
   19918:	0ff6f693          	andi	a3,a3,255
   1991c:	00158593          	addi	a1,a1,1
   19920:	fcd576e3          	bleu	a3,a0,198ec <_strtod_r+0xe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:335
   19924:	00078493          	mv	s1,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:341
		if (nd < 9)
			y = 10*y + c - '0';
		else
			z = 10*z + c - '0';
	nd0 = nd;
	if (strncmp (s, _localeconv_r (ptr)->decimal_point,
   19928:	00040513          	mv	a0,s0
   1992c:	c0dfd0ef          	jal	17538 <_localeconv_r>
   19930:	00053b83          	ld	s7,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:342
		     strlen (_localeconv_r (ptr)->decimal_point)) == 0)
   19934:	00040513          	mv	a0,s0
   19938:	c01fd0ef          	jal	17538 <_localeconv_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:341
		if (nd < 9)
			y = 10*y + c - '0';
		else
			z = 10*z + c - '0';
	nd0 = nd;
	if (strncmp (s, _localeconv_r (ptr)->decimal_point,
   1993c:	00053503          	ld	a0,0(a0)
   19940:	fd1f70ef          	jal	11910 <strlen>
   19944:	00050613          	mv	a2,a0
   19948:	000b8593          	mv	a1,s7
   1994c:	00090513          	mv	a0,s2
   19950:	5a0050ef          	jal	1eef0 <strncmp>
   19954:	32050e63          	beqz	a0,19c90 <_strtod_r+0x488>
   19958:	000c0693          	mv	a3,s8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:264
#ifdef Honor_FLT_ROUNDS
	int rounding;
#endif

	delta = bs = bd = NULL;
	sign = nz0 = nz = decpt = 0;
   1995c:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:335
		if (!*s)
			goto ret;
		}
	s0 = s;
	y = z = 0;
	for(nd = nf = 0; (c = *s) >= '0' && c <= '9'; nd++, s++)
   19960:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:264
#ifdef Honor_FLT_ROUNDS
	int rounding;
#endif

	delta = bs = bd = NULL;
	sign = nz0 = nz = decpt = 0;
   19964:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:377
				}
			}
		}
 dig_done:
	e = 0;
	if (c == 'e' || c == 'E') {
   19968:	fdf4f793          	andi	a5,s1,-33
   1996c:	04500713          	li	a4,69
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:376
				nz = 0;
				}
			}
		}
 dig_done:
	e = 0;
   19970:	00000b93          	li	s7,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:377
	if (c == 'e' || c == 'E') {
   19974:	10e79463          	bne	a5,a4,19a7c <_strtod_r+0x274>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:378
		if (!nd && !nz && !nz0) {
   19978:	00c6e7b3          	or	a5,a3,a2
   1997c:	0167e7b3          	or	a5,a5,s6
   19980:	10078663          	beqz	a5,19a8c <_strtod_r+0x284>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:381
			goto ret0;
			}
		s00 = s;
   19984:	03813c83          	ld	s9,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:383
		esign = 0;
		switch(c = *++s) {
   19988:	02b00713          	li	a4,43
   1998c:	001c8793          	addi	a5,s9,1
   19990:	02f13c23          	sd	a5,56(sp)
   19994:	001cc783          	lbu	a5,1(s9)
   19998:	22e780e3          	beq	a5,a4,1a3b8 <_strtod_r+0xbb0>
   1999c:	02d00713          	li	a4,45
   199a0:	04e78ce3          	beq	a5,a4,1a1f8 <_strtod_r+0x9f0>
   199a4:	00078493          	mv	s1,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:382
	if (c == 'e' || c == 'E') {
		if (!nd && !nz && !nz0) {
			goto ret0;
			}
		s00 = s;
		esign = 0;
   199a8:	00000893          	li	a7,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:389
			case '-':
				esign = 1;
			case '+':
				c = *++s;
			}
		if (c >= '0' && c <= '9') {
   199ac:	fd04879b          	addiw	a5,s1,-48
   199b0:	00900813          	li	a6,9
   199b4:	00048713          	mv	a4,s1
   199b8:	12f860e3          	bltu	a6,a5,1a2d8 <_strtod_r+0xad0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:390
			while(c == '0')
   199bc:	03000793          	li	a5,48
   199c0:	02f49263          	bne	s1,a5,199e4 <_strtod_r+0x1dc>
   199c4:	03813783          	ld	a5,56(sp)
   199c8:	00048813          	mv	a6,s1
   199cc:	00178793          	addi	a5,a5,1 # fffffffffffff001 <_end+0xfffffffffffd81e9>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:391
				c = *++s;
   199d0:	02f13c23          	sd	a5,56(sp)
   199d4:	0007c703          	lbu	a4,0(a5)
   199d8:	00178793          	addi	a5,a5,1
   199dc:	00070493          	mv	s1,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:390
				esign = 1;
			case '+':
				c = *++s;
			}
		if (c >= '0' && c <= '9') {
			while(c == '0')
   199e0:	ff0708e3          	beq	a4,a6,199d0 <_strtod_r+0x1c8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:392
				c = *++s;
			if (c > '0' && c <= '9') {
   199e4:	fcf7071b          	addiw	a4,a4,-49
   199e8:	00800793          	li	a5,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:408
					e = (int)L;
				if (esign)
					e = -e;
				}
			else
				e = 0;
   199ec:	00000b93          	li	s7,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:392
				c = *++s;
			}
		if (c >= '0' && c <= '9') {
			while(c == '0')
				c = *++s;
			if (c > '0' && c <= '9') {
   199f0:	08e7e663          	bltu	a5,a4,19a7c <_strtod_r+0x274>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:394
				L = c - '0';
				s1 = s;
   199f4:	03813f03          	ld	t5,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:393
			}
		if (c >= '0' && c <= '9') {
			while(c == '0')
				c = *++s;
			if (c > '0' && c <= '9') {
				L = c - '0';
   199f8:	fd04879b          	addiw	a5,s1,-48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:395
				s1 = s;
				while((c = *++s) >= '0' && c <= '9')
   199fc:	00900e93          	li	t4,9
   19a00:	001f0e13          	addi	t3,t5,1 # 10001 <_ftext+0x1>
   19a04:	03c13c23          	sd	t3,56(sp)
   19a08:	001f4483          	lbu	s1,1(t5)
   19a0c:	fd04871b          	addiw	a4,s1,-48
   19a10:	0ff77713          	andi	a4,a4,255
   19a14:	02eeee63          	bltu	t4,a4,19a50 <_strtod_r+0x248>
   19a18:	002f0313          	addi	t1,t5,2
   19a1c:	02613c23          	sd	t1,56(sp)
   19a20:	00034803          	lbu	a6,0(t1) # ffffffff80000000 <_end+0xffffffff7ffd91e8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:396
					L = 10*L + c - '0';
   19a24:	0017971b          	slliw	a4,a5,0x1
   19a28:	0037979b          	slliw	a5,a5,0x3
   19a2c:	00f707bb          	addw	a5,a4,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:395
			while(c == '0')
				c = *++s;
			if (c > '0' && c <= '9') {
				L = c - '0';
				s1 = s;
				while((c = *++s) >= '0' && c <= '9')
   19a30:	fd08071b          	addiw	a4,a6,-48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:396
					L = 10*L + c - '0';
   19a34:	009787bb          	addw	a5,a5,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:395
			while(c == '0')
				c = *++s;
			if (c > '0' && c <= '9') {
				L = c - '0';
				s1 = s;
				while((c = *++s) >= '0' && c <= '9')
   19a38:	0ff77713          	andi	a4,a4,255
   19a3c:	00030e13          	mv	t3,t1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:396
					L = 10*L + c - '0';
   19a40:	fd07879b          	addiw	a5,a5,-48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:395
			while(c == '0')
				c = *++s;
			if (c > '0' && c <= '9') {
				L = c - '0';
				s1 = s;
				while((c = *++s) >= '0' && c <= '9')
   19a44:	00080493          	mv	s1,a6
   19a48:	00130313          	addi	t1,t1,1
   19a4c:	fceef8e3          	bleu	a4,t4,19a1c <_strtod_r+0x214>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:401
					L = 10*L + c - '0';
				if (s - s1 > 8 || L > 19999)
					/* Avoid confusion from exponents
					 * so large that e might overflow.
					 */
					e = 19999; /* safe for 16 bit ints */
   19a50:	00005737          	lui	a4,0x5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:397
			if (c > '0' && c <= '9') {
				L = c - '0';
				s1 = s;
				while((c = *++s) >= '0' && c <= '9')
					L = 10*L + c - '0';
				if (s - s1 > 8 || L > 19999)
   19a54:	41ee0e33          	sub	t3,t3,t5
   19a58:	00800813          	li	a6,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:401
					/* Avoid confusion from exponents
					 * so large that e might overflow.
					 */
					e = 19999; /* safe for 16 bit ints */
   19a5c:	e1f70b9b          	addiw	s7,a4,-481
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:397
			if (c > '0' && c <= '9') {
				L = c - '0';
				s1 = s;
				while((c = *++s) >= '0' && c <= '9')
					L = 10*L + c - '0';
				if (s - s1 > 8 || L > 19999)
   19a60:	01c84a63          	blt	a6,t3,19a74 <_strtod_r+0x26c>
   19a64:	e1f7071b          	addiw	a4,a4,-481
   19a68:	00078b93          	mv	s7,a5
   19a6c:	00f75463          	ble	a5,a4,19a74 <_strtod_r+0x26c>
   19a70:	00070b93          	mv	s7,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:404
					 * so large that e might overflow.
					 */
					e = 19999; /* safe for 16 bit ints */
				else
					e = (int)L;
				if (esign)
   19a74:	00088463          	beqz	a7,19a7c <_strtod_r+0x274>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:405
					e = -e;
   19a78:	41700bbb          	negw	s7,s7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:413
				e = 0;
			}
		else
			s = s00;
		}
	if (!nd) {
   19a7c:	10069a63          	bnez	a3,19b90 <_strtod_r+0x388>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:414
		if (!nz && !nz0) {
   19a80:	01666b33          	or	s6,a2,s6
   19a84:	200b1263          	bnez	s6,19c88 <_strtod_r+0x480>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:420
#ifdef INFNAN_CHECK
			/* Check for Nan and Infinity */
			__ULong bits[2];
			static _CONST FPI fpinan =	/* only 52 explicit bits */
				{ 52, 1-1023-53+1, 2046-1023-53+1, 1, SI };
			if (!decpt)
   19a88:	70050a63          	beqz	a0,1a19c <_strtod_r+0x994>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:266
#endif

	delta = bs = bd = NULL;
	sign = nz0 = nz = decpt = 0;
	dval(rv) = 0.;
	for(s = s00;;s++) switch(*s) {
   19a8c:	00000493          	li	s1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:462
					}
			  }
#endif /* INFNAN_CHECK */
 ret0:
			s = s00;
			sign = 0;
   19a90:	00000a93          	li	s5,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1249
	Bfree(ptr,bd);
	Bfree(ptr,bs);
	Bfree(ptr,bd0);
	Bfree(ptr,delta);
 ret:
	if (se)
   19a94:	00098663          	beqz	s3,19aa0 <_strtod_r+0x298>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1250
		*se = (char *)s;
   19a98:	0199b023          	sd	s9,0(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1251
	return sign ? -dval(rv) : dval(rv);
   19a9c:	060a9263          	bnez	s5,19b00 <_strtod_r+0x2f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1252
}
   19aa0:	0f813083          	ld	ra,248(sp)
   19aa4:	f2048553          	fmv.d.x	fa0,s1
   19aa8:	0f013403          	ld	s0,240(sp)
   19aac:	0e813483          	ld	s1,232(sp)
   19ab0:	0e013903          	ld	s2,224(sp)
   19ab4:	0d813983          	ld	s3,216(sp)
   19ab8:	0d013a03          	ld	s4,208(sp)
   19abc:	0c813a83          	ld	s5,200(sp)
   19ac0:	0c013b03          	ld	s6,192(sp)
   19ac4:	0b813b83          	ld	s7,184(sp)
   19ac8:	0b013c03          	ld	s8,176(sp)
   19acc:	0a813c83          	ld	s9,168(sp)
   19ad0:	0a013d03          	ld	s10,160(sp)
   19ad4:	09813d83          	ld	s11,152(sp)
   19ad8:	08813407          	fld	fs0,136(sp)
   19adc:	08013487          	fld	fs1,128(sp)
   19ae0:	07813907          	fld	fs2,120(sp)
   19ae4:	07013987          	fld	fs3,112(sp)
   19ae8:	06813a07          	fld	fs4,104(sp)
   19aec:	06013a87          	fld	fs5,96(sp)
   19af0:	05813b07          	fld	fs6,88(sp)
   19af4:	05013b87          	fld	fs7,80(sp)
   19af8:	10010113          	addi	sp,sp,256
   19afc:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1251 (discriminator 1)
	Bfree(ptr,bd0);
	Bfree(ptr,delta);
 ret:
	if (se)
		*se = (char *)s;
	return sign ? -dval(rv) : dval(rv);
   19b00:	f20487d3          	fmv.d.x	fa5,s1
   19b04:	22f797d3          	fneg.d	fa5,fa5
   19b08:	e20784d3          	fmv.x.d	s1,fa5
   19b0c:	f95ff06f          	j	19aa0 <_strtod_r+0x298>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:268
	delta = bs = bd = NULL;
	sign = nz0 = nz = decpt = 0;
	dval(rv) = 0.;
	for(s = s00;;s++) switch(*s) {
		case '-':
			sign = 1;
   19b10:	00100a93          	li	s5,1
   19b14:	d91ff06f          	j	198a4 <_strtod_r+0x9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:266
#endif

	delta = bs = bd = NULL;
	sign = nz0 = nz = decpt = 0;
	dval(rv) = 0.;
	for(s = s00;;s++) switch(*s) {
   19b18:	001b8b93          	addi	s7,s7,1
   19b1c:	03713c23          	sd	s7,56(sp)
   19b20:	000bc783          	lbu	a5,0(s7)
   19b24:	d6f676e3          	bleu	a5,a2,19890 <_strtod_r+0x88>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:287
			continue;
		default:
			goto break2;
		}
 break2:
	if (*s == '0') {
   19b28:	03000713          	li	a4,48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:264
#ifdef Honor_FLT_ROUNDS
	int rounding;
#endif

	delta = bs = bd = NULL;
	sign = nz0 = nz = decpt = 0;
   19b2c:	00000a93          	li	s5,0
   19b30:	000b8a13          	mv	s4,s7
   19b34:	00000b13          	li	s6,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:287
			continue;
		default:
			goto break2;
		}
 break2:
	if (*s == '0') {
   19b38:	d8e798e3          	bne	a5,a4,198c8 <_strtod_r+0xc0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:293
#ifndef NO_HEX_FP
		{
		static _CONST FPI fpi = { 53, 1-1023-53+1, 2046-1023-53+1, 1, SI };
		Long exp;
		__ULong bits[2];
		switch(s[1]) {
   19b3c:	001bc703          	lbu	a4,1(s7)
   19b40:	05800693          	li	a3,88
   19b44:	7ad70063          	beq	a4,a3,1a2e4 <_strtod_r+0xadc>
   19b48:	07800693          	li	a3,120
   19b4c:	78d70c63          	beq	a4,a3,1a2e4 <_strtod_r+0xadc>
   19b50:	001b8713          	addi	a4,s7,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:329 (discriminator 1)
			goto ret;
		  }
		}
#endif
		nz0 = 1;
		while(*++s == '0') ;
   19b54:	00070a13          	mv	s4,a4
   19b58:	02e13c23          	sd	a4,56(sp)
   19b5c:	00170713          	addi	a4,a4,1 # 5001 <_ftext-0xafff>
   19b60:	fff74483          	lbu	s1,-1(a4)
   19b64:	fef488e3          	beq	s1,a5,19b54 <_strtod_r+0x34c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:330
		if (!*s)
   19b68:	12048063          	beqz	s1,19c88 <_strtod_r+0x480>
   19b6c:	00048793          	mv	a5,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:328
			  }}
			goto ret;
		  }
		}
#endif
		nz0 = 1;
   19b70:	00100b13          	li	s6,1
   19b74:	d55ff06f          	j	198c8 <_strtod_r+0xc0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:339
	y = z = 0;
	for(nd = nf = 0; (c = *s) >= '0' && c <= '9'; nd++, s++)
		if (nd < 9)
			y = 10*y + c - '0';
		else
			z = 10*z + c - '0';
   19b78:	001d961b          	slliw	a2,s11,0x1
   19b7c:	003d969b          	slliw	a3,s11,0x3
   19b80:	00d606bb          	addw	a3,a2,a3
   19b84:	00f687bb          	addw	a5,a3,a5
   19b88:	fd078d9b          	addiw	s11,a5,-48
   19b8c:	d79ff06f          	j	19904 <_strtod_r+0xfc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:466
			s = s00;
			sign = 0;
			}
		goto ret;
		}
	e1 = e -= nf;
   19b90:	40bb8bbb          	subw	s7,s7,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:473
	/* Now we have nd0 digits, starting at s0, followed by a
	 * decimal point, followed by nd-nd0 digits.  The number we're
	 * after is the integer represented by those digits times
	 * 10**e */

	if (!nd0)
   19b94:	000c1463          	bnez	s8,19b9c <_strtod_r+0x394>
   19b98:	00068c13          	mv	s8,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:475
		nd0 = nd;
	k = nd < DBL_DIG + 1 ? nd : DBL_DIG + 1;
   19b9c:	01000793          	li	a5,16
   19ba0:	00068713          	mv	a4,a3
   19ba4:	00d7d463          	ble	a3,a5,19bac <_strtod_r+0x3a4>
   19ba8:	00078713          	mv	a4,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:476
	dval(rv) = y;
   19bac:	d21d07d3          	fcvt.d.wu	fa5,s10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:477
	if (k > 9) {
   19bb0:	00900793          	li	a5,9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:476
	 * 10**e */

	if (!nd0)
		nd0 = nd;
	k = nd < DBL_DIG + 1 ? nd : DBL_DIG + 1;
	dval(rv) = y;
   19bb4:	e20785d3          	fmv.x.d	a1,fa5
   19bb8:	00058913          	mv	s2,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:477
	if (k > 9) {
   19bbc:	02e7d663          	ble	a4,a5,19be8 <_strtod_r+0x3e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:482
#ifdef SET_INEXACT
		if (k > DBL_DIG)
			oldinexact = get_inexact();
#endif
		dval(rv) = tens[k - 9] * dval(rv) + z;
   19bc0:	ff77079b          	addiw	a5,a4,-9
   19bc4:	00021637          	lui	a2,0x21
   19bc8:	00379793          	slli	a5,a5,0x3
   19bcc:	d2060613          	addi	a2,a2,-736 # 20d20 <__mprec_tens>
   19bd0:	00c78633          	add	a2,a5,a2
   19bd4:	d21d87d3          	fcvt.d.wu	fa5,s11
   19bd8:	00063707          	fld	fa4,0(a2)
   19bdc:	f20586d3          	fmv.d.x	fa3,a1
   19be0:	7ae6f7c3          	fmadd.d	fa5,fa3,fa4,fa5
   19be4:	e2078953          	fmv.x.d	s2,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:485
		}
	bd0 = 0;
	if (nd <= DBL_DIG
   19be8:	00f00793          	li	a5,15
   19bec:	10d7c663          	blt	a5,a3,19cf8 <_strtod_r+0x4f0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:492
#ifndef Honor_FLT_ROUNDS
		&& Flt_Rounds == 1
#endif
#endif
			) {
		if (!e)
   19bf0:	080b8863          	beqz	s7,19c80 <_strtod_r+0x478>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:494
			goto ret;
		if (e > 0) {
   19bf4:	357054e3          	blez	s7,1a73c <_strtod_r+0xf34>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:495
			if (e <= Ten_pmax) {
   19bf8:	01600613          	li	a2,22
   19bfc:	29764ce3          	blt	a2,s7,1a694 <_strtod_r+0xe8c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:506
				if (sign) {
					dval(rv) = -dval(rv);
					sign = 0;
					}
#endif
				/* rv = */ rounded_product(dval(rv), tens[e]);
   19c00:	00021737          	lui	a4,0x21
   19c04:	003b9793          	slli	a5,s7,0x3
   19c08:	d2070713          	addi	a4,a4,-736 # 20d20 <__mprec_tens>
   19c0c:	00e787b3          	add	a5,a5,a4
   19c10:	0007b787          	fld	fa5,0(a5)
   19c14:	f2090753          	fmv.d.x	fa4,s2
   19c18:	12e7f7d3          	fmul.d	fa5,fa5,fa4
   19c1c:	e20784d3          	fmv.x.d	s1,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1249
	Bfree(ptr,bd);
	Bfree(ptr,bs);
	Bfree(ptr,bd0);
	Bfree(ptr,delta);
 ret:
	if (se)
   19c20:	e6098ee3          	beqz	s3,19a9c <_strtod_r+0x294>
   19c24:	03813c83          	ld	s9,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1250
		*se = (char *)s;
   19c28:	0199b023          	sd	s9,0(s3)
   19c2c:	e71ff06f          	j	19a9c <_strtod_r+0x294>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:425
			if (!decpt)
			 switch(c) {
			  case 'i':
			  case 'I':
				if (match(&s,"nf")) {
					--s;
   19c30:	00022737          	lui	a4,0x22
   19c34:	02d13c23          	sd	a3,56(sp)
   19c38:	00068613          	mv	a2,a3
   19c3c:	c3070713          	addi	a4,a4,-976 # 21c30 <zeroes.4123+0x740>
match():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:225
{
	int c, d;
	_CONST char *s = *sp;

	while( (d = *t++) !=0) {
		if ((c = *++s) >= 'A' && c <= 'Z')
   19c40:	01900893          	li	a7,25
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:224
	char *t)
{
	int c, d;
	_CONST char *s = *sp;

	while( (d = *t++) !=0) {
   19c44:	00170713          	addi	a4,a4,1
   19c48:	fff74503          	lbu	a0,-1(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:225
		if ((c = *++s) >= 'A' && c <= 'Z')
   19c4c:	00160613          	addi	a2,a2,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:224
	char *t)
{
	int c, d;
	_CONST char *s = *sp;

	while( (d = *t++) !=0) {
   19c50:	480500e3          	beqz	a0,1a8d0 <_strtod_r+0x10c8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:225
		if ((c = *++s) >= 'A' && c <= 'Z')
   19c54:	00064583          	lbu	a1,0(a2)
   19c58:	fbf5879b          	addiw	a5,a1,-65
   19c5c:	0ff7f793          	andi	a5,a5,255
   19c60:	00058813          	mv	a6,a1
   19c64:	00f8e463          	bltu	a7,a5,19c6c <_strtod_r+0x464>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:226
			c += 'a' - 'A';
   19c68:	0205881b          	addiw	a6,a1,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:227
		if (c != d)
   19c6c:	fca80ce3          	beq	a6,a0,19c44 <_strtod_r+0x43c>
_strtod_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:427
			  case 'i':
			  case 'I':
				if (match(&s,"nf")) {
					--s;
					if (!match(&s,"inity"))
						++s;
   19c70:	00168693          	addi	a3,a3,1
   19c74:	02d13c23          	sd	a3,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:428
					dword0(rv) = 0x7ff00000;
   19c78:	7ff00913          	li	s2,2047
   19c7c:	03491913          	slli	s2,s2,0x34
   19c80:	00090493          	mv	s1,s2
   19c84:	f9dff06f          	j	19c20 <_strtod_r+0x418>
   19c88:	00000493          	li	s1,0
   19c8c:	f95ff06f          	j	19c20 <_strtod_r+0x418>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:345
	nd0 = nd;
	if (strncmp (s, _localeconv_r (ptr)->decimal_point,
		     strlen (_localeconv_r (ptr)->decimal_point)) == 0)
		{
		decpt = 1;
		c = *(s += strlen (_localeconv_r (ptr)->decimal_point));
   19c90:	00040513          	mv	a0,s0
   19c94:	8a5fd0ef          	jal	17538 <_localeconv_r>
   19c98:	00053503          	ld	a0,0(a0)
   19c9c:	c75f70ef          	jal	11910 <strlen>
   19ca0:	03813783          	ld	a5,56(sp)
   19ca4:	00a78533          	add	a0,a5,a0
   19ca8:	02a13c23          	sd	a0,56(sp)
   19cac:	00054483          	lbu	s1,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:346
		if (!nd) {
   19cb0:	4a0c1863          	bnez	s8,1a160 <_strtod_r+0x958>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:347 (discriminator 1)
			for(; c == '0'; c = *++s)
   19cb4:	03000793          	li	a5,48
   19cb8:	2ef494e3          	bne	s1,a5,1a7a0 <_strtod_r+0xf98>
   19cbc:	00150793          	addi	a5,a0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:347 (discriminator 2)
   19cc0:	00000613          	li	a2,0
   19cc4:	00048713          	mv	a4,s1
   19cc8:	02f13c23          	sd	a5,56(sp)
   19ccc:	0007c483          	lbu	s1,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:348
				nz++;
   19cd0:	0016061b          	addiw	a2,a2,1
   19cd4:	00178793          	addi	a5,a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:347
		     strlen (_localeconv_r (ptr)->decimal_point)) == 0)
		{
		decpt = 1;
		c = *(s += strlen (_localeconv_r (ptr)->decimal_point));
		if (!nd) {
			for(; c == '0'; c = *++s)
   19cd8:	fee488e3          	beq	s1,a4,19cc8 <_strtod_r+0x4c0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:349
				nz++;
			if (c > '0' && c <= '9') {
   19cdc:	fcf4879b          	addiw	a5,s1,-49
   19ce0:	00800713          	li	a4,8
   19ce4:	16f778e3          	bleu	a5,a4,1a654 <_strtod_r+0xe4c>
   19ce8:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:335
		if (!*s)
			goto ret;
		}
	s0 = s;
	y = z = 0;
	for(nd = nf = 0; (c = *s) >= '0' && c <= '9'; nd++, s++)
   19cec:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:344
			z = 10*z + c - '0';
	nd0 = nd;
	if (strncmp (s, _localeconv_r (ptr)->decimal_point,
		     strlen (_localeconv_r (ptr)->decimal_point)) == 0)
		{
		decpt = 1;
   19cf0:	00100513          	li	a0,1
   19cf4:	c75ff06f          	j	19968 <_strtod_r+0x160>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:555
			/* rv = */ rounded_quotient(dval(rv), tens[-e]);
			goto ret;
			}
#endif
		}
	e1 += nd - k;
   19cf8:	40e6873b          	subw	a4,a3,a4
   19cfc:	0177073b          	addw	a4,a4,s7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:579
#endif
#endif /*IEEE_Arith*/

	/* Get starting approximation = rv * 10**e1 */

	if (e1 > 0) {
   19d00:	70e05a63          	blez	a4,1a414 <_strtod_r+0xc0c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:580
		if ( (i = e1 & 15) !=0)
   19d04:	00f77793          	andi	a5,a4,15
   19d08:	02078263          	beqz	a5,19d2c <_strtod_r+0x524>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:581
			dval(rv) *= tens[i];
   19d0c:	00021637          	lui	a2,0x21
   19d10:	00379793          	slli	a5,a5,0x3
   19d14:	d2060613          	addi	a2,a2,-736 # 20d20 <__mprec_tens>
   19d18:	00c787b3          	add	a5,a5,a2
   19d1c:	f2090753          	fmv.d.x	fa4,s2
   19d20:	0007b787          	fld	fa5,0(a5)
   19d24:	12e7f7d3          	fmul.d	fa5,fa5,fa4
   19d28:	e2078953          	fmv.x.d	s2,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:582
		if (e1 &= ~15) {
   19d2c:	ff077793          	andi	a5,a4,-16
   19d30:	0c078863          	beqz	a5,19e00 <_strtod_r+0x5f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:583
			if (e1 > DBL_MAX_10_EXP) {
   19d34:	13400713          	li	a4,308
   19d38:	4cf74a63          	blt	a4,a5,1a20c <_strtod_r+0xa04>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:626
#endif /*IEEE_Arith*/
				if (bd0)
					goto retfree;
				goto ret;
				}
			e1 >>= 4;
   19d3c:	4047d79b          	sraiw	a5,a5,0x4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:627
			for(j = 0; e1 > 1; j++, e1 >>= 1)
   19d40:	00100513          	li	a0,1
   19d44:	3af55ce3          	ble	a5,a0,1a8fc <_strtod_r+0x10f4>
   19d48:	00021737          	lui	a4,0x21
   19d4c:	e1070313          	addi	t1,a4,-496 # 20e10 <__mprec_bigtens>
   19d50:	00090813          	mv	a6,s2
   19d54:	e1070713          	addi	a4,a4,-496
   19d58:	00000893          	li	a7,0
   19d5c:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:628
				if (e1 & 1)
   19d60:	0017f593          	andi	a1,a5,1
   19d64:	00058c63          	beqz	a1,19d7c <_strtod_r+0x574>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:629
					dval(rv) *= bigtens[j];
   19d68:	f2080753          	fmv.d.x	fa4,a6
   19d6c:	00073787          	fld	fa5,0(a4)
   19d70:	00100893          	li	a7,1
   19d74:	12f777d3          	fmul.d	fa5,fa4,fa5
   19d78:	e2078853          	fmv.x.d	a6,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:627 (discriminator 2)
				if (bd0)
					goto retfree;
				goto ret;
				}
			e1 >>= 4;
			for(j = 0; e1 > 1; j++, e1 >>= 1)
   19d7c:	4017d79b          	sraiw	a5,a5,0x1
   19d80:	0016061b          	addiw	a2,a2,1
   19d84:	00870713          	addi	a4,a4,8
   19d88:	fca79ce3          	bne	a5,a0,19d60 <_strtod_r+0x558>
   19d8c:	500890e3          	bnez	a7,1aa8c <_strtod_r+0x1284>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:632
				if (e1 & 1)
					dval(rv) *= bigtens[j];
		/* The last multiplication could overflow. */
			dword0(rv) -= P*Exp_msk1;
			dval(rv) *= bigtens[j];
   19d90:	00361793          	slli	a5,a2,0x3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:631
			e1 >>= 4;
			for(j = 0; e1 > 1; j++, e1 >>= 1)
				if (e1 & 1)
					dval(rv) *= bigtens[j];
		/* The last multiplication could overflow. */
			dword0(rv) -= P*Exp_msk1;
   19d94:	42095713          	srai	a4,s2,0x20
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:632
			dval(rv) *= bigtens[j];
   19d98:	00f30633          	add	a2,t1,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:631
			e1 >>= 4;
			for(j = 0; e1 > 1; j++, e1 >>= 1)
				if (e1 & 1)
					dval(rv) *= bigtens[j];
		/* The last multiplication could overflow. */
			dword0(rv) -= P*Exp_msk1;
   19d9c:	fcb007b7          	lui	a5,0xfcb00
   19da0:	00f707bb          	addw	a5,a4,a5
   19da4:	fff00713          	li	a4,-1
   19da8:	02075713          	srli	a4,a4,0x20
   19dac:	02079793          	slli	a5,a5,0x20
   19db0:	00e97933          	and	s2,s2,a4
   19db4:	00f96933          	or	s2,s2,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:632
			dval(rv) *= bigtens[j];
   19db8:	00063787          	fld	fa5,0(a2)
   19dbc:	f2090753          	fmv.d.x	fa4,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:633
			if ((z = dword0(rv) & Exp_mask)
   19dc0:	7ff007b7          	lui	a5,0x7ff00
   19dc4:	7ca005b7          	lui	a1,0x7ca00
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:632
			for(j = 0; e1 > 1; j++, e1 >>= 1)
				if (e1 & 1)
					dval(rv) *= bigtens[j];
		/* The last multiplication could overflow. */
			dword0(rv) -= P*Exp_msk1;
			dval(rv) *= bigtens[j];
   19dc8:	12e7f7d3          	fmul.d	fa5,fa5,fa4
   19dcc:	e2078953          	fmv.x.d	s2,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:633
			if ((z = dword0(rv) & Exp_mask)
   19dd0:	42095613          	srai	a2,s2,0x20
   19dd4:	00f677b3          	and	a5,a2,a5
   19dd8:	42f5ea63          	bltu	a1,a5,1a20c <_strtod_r+0xa04>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:636
			 > Exp_msk1*(DBL_MAX_EXP+Bias-P))
				goto ovfl;
			if (z > Exp_msk1*(DBL_MAX_EXP+Bias-1-P)) {
   19ddc:	7c9005b7          	lui	a1,0x7c900
   19de0:	2cf5f4e3          	bleu	a5,a1,1a8a8 <_strtod_r+0x10a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:639
				/* set to largest number */
				/* (Can't trust DBL_MAX) */
				dword0(rv) = Big0;
   19de4:	7ff007b7          	lui	a5,0x7ff00
   19de8:	02091913          	slli	s2,s2,0x20
   19dec:	fff78793          	addi	a5,a5,-1 # 7fefffff <_end+0x7fed91e7>
   19df0:	02095913          	srli	s2,s2,0x20
   19df4:	02079793          	slli	a5,a5,0x20
   19df8:	00f96933          	or	s2,s2,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:641
#ifndef _DOUBLE_IS_32BITS
				dword1(rv) = Big1;
   19dfc:	00e96933          	or	s2,s2,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:564
	inexact = 1;
	if (k <= DBL_DIG)
		oldinexact = get_inexact();
#endif
#ifdef Avoid_Underflow
	scale = 0;
   19e00:	00000c93          	li	s9,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:718

	/* Now the hard part -- adjusting rv to the correct value.*/

	/* Put digits into bd: true value = bd * 10^e */

	bd0 = s2b(ptr, s0, nd0, nd, y);
   19e04:	000d0713          	mv	a4,s10
   19e08:	000c0613          	mv	a2,s8
   19e0c:	000a0593          	mv	a1,s4
   19e10:	00040513          	mv	a0,s0
   19e14:	818fe0ef          	jal	17e2c <__s2b>
   19e18:	00050d13          	mv	s10,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:719
	if (bd0 == NULL)
   19e1c:	3e050863          	beqz	a0,1a20c <_strtod_r+0xa04>
   19e20:	417007bb          	negw	a5,s7
   19e24:	41fbdd9b          	sraiw	s11,s7,0x1f
   19e28:	00fdf7b3          	and	a5,s11,a5
   19e2c:	01712423          	sw	s7,8(sp)
   19e30:	00f12623          	sw	a5,12(sp)
   19e34:	100bc0e3          	bltz	s7,1a734 <_strtod_r+0xf2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1084
					aadj *= 0.5;
				dval(aadj1) = -aadj;
				}
			}
		else {
			aadj *= 0.5;
   19e38:	000247b7          	lui	a5,0x24
   19e3c:	4e07b907          	fld	fs2,1248(a5) # 244e0 <mask+0x48>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1061
			dsign = 1 - dsign;
#endif
#endif
			break;
			}
		if ((aadj = ratio(delta, bs)) <= 2.) {
   19e40:	000247b7          	lui	a5,0x24
   19e44:	5087b487          	fld	fs1,1288(a5) # 24508 <mask+0x70>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1076
				}
			else {
				/* special case -- power of FLT_RADIX to be */
				/* rounded down... */

				if (aadj < 2./FLT_RADIX)
   19e48:	000247b7          	lui	a5,0x24
   19e4c:	4c07b987          	fld	fs3,1216(a5) # 244c0 <mask+0x28>
   19e50:	000247b7          	lui	a5,0x24
   19e54:	5007bb07          	fld	fs6,1280(a5) # 24500 <mask+0x68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1195
			/* Can we stop now? */
			L = (Long)aadj;
			aadj -= L;
			/* The tolerances below are conservative. */
			if (dsign || dword1(rv) || dword0(rv) & Bndry_mask) {
				if (aadj < .4999999 || aadj > .5000001)
   19e58:	000247b7          	lui	a5,0x24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1077
			else {
				/* special case -- power of FLT_RADIX to be */
				/* rounded down... */

				if (aadj < 2./FLT_RADIX)
					aadj = 1./FLT_RADIX;
   19e5c:	23290ad3          	fmv.d	fs5,fs2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1195
			/* Can we stop now? */
			L = (Long)aadj;
			aadj -= L;
			/* The tolerances below are conservative. */
			if (dsign || dword1(rv) || dword0(rv) & Bndry_mask) {
				if (aadj < .4999999 || aadj > .5000001)
   19e60:	5187ba07          	fld	fs4,1304(a5) # 24518 <mask+0x80>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:739
		if (e >= 0) {
			bb2 = bb5 = 0;
			bd2 = bd5 = e;
			}
		else {
			bb2 = bb5 = -e;
   19e64:	00000c13          	li	s8,0
   19e68:	00000a13          	li	s4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:723
	bd0 = s2b(ptr, s0, nd0, nd, y);
	if (bd0 == NULL)
		goto ovfl;

	for(;;) {
		bd = Balloc(ptr,bd0->_k);
   19e6c:	008d2583          	lw	a1,8(s10)
   19e70:	00040513          	mv	a0,s0
   19e74:	dd9fd0ef          	jal	17c4c <_Balloc>
   19e78:	00050b13          	mv	s6,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:724
		if (bd == NULL)
   19e7c:	3a050263          	beqz	a0,1a220 <_strtod_r+0xa18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:726
			goto ovfl;
		Bcopy(bd, bd0);
   19e80:	014d2603          	lw	a2,20(s10)
   19e84:	010d0593          	addi	a1,s10,16
   19e88:	01050513          	addi	a0,a0,16
   19e8c:	00260613          	addi	a2,a2,2
   19e90:	00261613          	slli	a2,a2,0x2
   19e94:	b41f60ef          	jal	109d4 <memcpy>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:727
		bb = d2b(ptr,dval(rv), &bbe, &bbbits);	/* rv = bb * 2^bbe */
   19e98:	f20905d3          	fmv.d.x	fa1,s2
   19e9c:	04810693          	addi	a3,sp,72
   19ea0:	03410613          	addi	a2,sp,52
   19ea4:	00040513          	mv	a0,s0
   19ea8:	addfe0ef          	jal	18984 <__d2b>
   19eac:	04a13023          	sd	a0,64(sp)
   19eb0:	00090493          	mv	s1,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:728
		if (bb == NULL)
   19eb4:	36050863          	beqz	a0,1a224 <_strtod_r+0xa1c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:730
			goto ovfl;
		bs = i2b(ptr,1);
   19eb8:	00100593          	li	a1,1
   19ebc:	00040513          	mv	a0,s0
   19ec0:	9c4fe0ef          	jal	18084 <__i2b>
   19ec4:	00050a13          	mv	s4,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:731
		if (bs == NULL)
   19ec8:	34050c63          	beqz	a0,1a220 <_strtod_r+0xa18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:742
			}
		else {
			bb2 = bb5 = -e;
			bd2 = bd5 = 0;
			}
		if (bbe >= 0)
   19ecc:	03412703          	lw	a4,52(sp)
   19ed0:	3a074e63          	bltz	a4,1a28c <_strtod_r+0xa84>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:743
			bb2 += bbe;
   19ed4:	00c12783          	lw	a5,12(sp)
   19ed8:	00812583          	lw	a1,8(sp)
   19edc:	00e78dbb          	addw	s11,a5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:755
#endif
#ifdef Avoid_Underflow
		Lsb = LSB;
		Lsb1 = 0;
		j = bbe - scale;
		i = j + bbbits - 1;	/* logb(rv) */
   19ee0:	04812503          	lw	a0,72(sp)
   19ee4:	4197073b          	subw	a4,a4,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:752
#ifdef Honor_FLT_ROUNDS
		if (rounding != 1)
			bs2++;
#endif
#ifdef Avoid_Underflow
		Lsb = LSB;
   19ee8:	00100693          	li	a3,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:755
		Lsb1 = 0;
		j = bbe - scale;
		i = j + bbbits - 1;	/* logb(rv) */
   19eec:	00a7073b          	addw	a4,a4,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:756
		j = P + 1 - bbbits;
   19ef0:	03600793          	li	a5,54
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:755
#endif
#ifdef Avoid_Underflow
		Lsb = LSB;
		Lsb1 = 0;
		j = bbe - scale;
		i = j + bbbits - 1;	/* logb(rv) */
   19ef4:	fff7071b          	addiw	a4,a4,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:757
		j = P + 1 - bbbits;
		if (i < Emin) {	/* denormal */
   19ef8:	c0200613          	li	a2,-1022
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:753
		if (rounding != 1)
			bs2++;
#endif
#ifdef Avoid_Underflow
		Lsb = LSB;
		Lsb1 = 0;
   19efc:	00012c23          	sw	zero,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:752
#ifdef Honor_FLT_ROUNDS
		if (rounding != 1)
			bs2++;
#endif
#ifdef Avoid_Underflow
		Lsb = LSB;
   19f00:	00d12823          	sw	a3,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:756
		Lsb1 = 0;
		j = bbe - scale;
		i = j + bbbits - 1;	/* logb(rv) */
		j = P + 1 - bbbits;
   19f04:	40a787bb          	subw	a5,a5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:757
		if (i < Emin) {	/* denormal */
   19f08:	00c75e63          	ble	a2,a4,19f24 <_strtod_r+0x71c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:758
			i = Emin - i;
   19f0c:	40e6063b          	subw	a2,a2,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:760
			j -= i;
			if (i < 32)
   19f10:	01f00513          	li	a0,31
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:759
		j = bbe - scale;
		i = j + bbbits - 1;	/* logb(rv) */
		j = P + 1 - bbbits;
		if (i < Emin) {	/* denormal */
			i = Emin - i;
			j -= i;
   19f14:	40c787bb          	subw	a5,a5,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:760
			if (i < 32)
   19f18:	38c54263          	blt	a0,a2,1a29c <_strtod_r+0xa94>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:761
				Lsb <<= i;
   19f1c:	00c6973b          	sllw	a4,a3,a2
   19f20:	00e12823          	sw	a4,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:782
		else
			j = P + 1 - bbbits;
#endif /*Sudden_Underflow*/
#endif /*Avoid_Underflow*/
		bb2 += j;
		bd2 += j;
   19f24:	00f5873b          	addw	a4,a1,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:781
			j += P - Emin;
		else
			j = P + 1 - bbbits;
#endif /*Sudden_Underflow*/
#endif /*Avoid_Underflow*/
		bb2 += j;
   19f28:	00fd87bb          	addw	a5,s11,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:784
		bd2 += j;
#ifdef Avoid_Underflow
		bd2 += scale;
   19f2c:	00ec8bbb          	addw	s7,s9,a4
   19f30:	000d8593          	mv	a1,s11
   19f34:	01b7d463          	ble	s11,a5,19f3c <_strtod_r+0x734>
   19f38:	00078593          	mv	a1,a5
   19f3c:	000b8613          	mv	a2,s7
   19f40:	0175d463          	ble	s7,a1,19f48 <_strtod_r+0x740>
   19f44:	00058613          	mv	a2,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:789
#endif
		i = bb2 < bd2 ? bb2 : bd2;
		if (i > bs2)
			i = bs2;
		if (i > 0) {
   19f48:	00c05863          	blez	a2,19f58 <_strtod_r+0x750>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:790
			bb2 -= i;
   19f4c:	40c787bb          	subw	a5,a5,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:791
			bd2 -= i;
   19f50:	40cb8bbb          	subw	s7,s7,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:792
			bs2 -= i;
   19f54:	40cd8dbb          	subw	s11,s11,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:794
			}
		if (bb5 > 0) {
   19f58:	00c12703          	lw	a4,12(sp)
   19f5c:	06070063          	beqz	a4,19fbc <_strtod_r+0x7b4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:795
			bs = pow5mult(ptr, bs, bb5);
   19f60:	000a0593          	mv	a1,s4
   19f64:	00070613          	mv	a2,a4
   19f68:	00040513          	mv	a0,s0
   19f6c:	02f13023          	sd	a5,32(sp)
   19f70:	b3cfe0ef          	jal	182ac <__pow5mult>
   19f74:	00050a13          	mv	s4,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:796
			if (bs == NULL)
   19f78:	02013783          	ld	a5,32(sp)
   19f7c:	2a050263          	beqz	a0,1a220 <_strtod_r+0xa18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:798
				goto ovfl;
			bb1 = mult(ptr, bs, bb);
   19f80:	04013603          	ld	a2,64(sp)
   19f84:	00050593          	mv	a1,a0
   19f88:	00040513          	mv	a0,s0
   19f8c:	02f13023          	sd	a5,32(sp)
   19f90:	928fe0ef          	jal	180b8 <__multiply>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:799
			if (bb1 == NULL)
   19f94:	02013783          	ld	a5,32(sp)
   19f98:	28050463          	beqz	a0,1a220 <_strtod_r+0xa18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:801
				goto ovfl;
			Bfree(ptr, bb);
   19f9c:	04013583          	ld	a1,64(sp)
   19fa0:	02a13423          	sd	a0,40(sp)
   19fa4:	00040513          	mv	a0,s0
   19fa8:	02f13023          	sd	a5,32(sp)
   19fac:	d4dfd0ef          	jal	17cf8 <_Bfree>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:802
			bb = bb1;
   19fb0:	02813603          	ld	a2,40(sp)
   19fb4:	02013783          	ld	a5,32(sp)
   19fb8:	04c13023          	sd	a2,64(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:804
			}
		if (bb2 > 0) {
   19fbc:	00f05e63          	blez	a5,19fd8 <_strtod_r+0x7d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:805
			bb = lshift(ptr, bb, bb2);
   19fc0:	04013583          	ld	a1,64(sp)
   19fc4:	00078613          	mv	a2,a5
   19fc8:	00040513          	mv	a0,s0
   19fcc:	c18fe0ef          	jal	183e4 <__lshift>
   19fd0:	04a13023          	sd	a0,64(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:806
			if (bb == NULL)
   19fd4:	24050863          	beqz	a0,1a224 <_strtod_r+0xa1c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:809
				goto ovfl;
			}
		if (bd5 > 0) {
   19fd8:	00812783          	lw	a5,8(sp)
   19fdc:	00078e63          	beqz	a5,19ff8 <_strtod_r+0x7f0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:810
			bd = pow5mult(ptr, bd, bd5);
   19fe0:	00812603          	lw	a2,8(sp)
   19fe4:	000b0593          	mv	a1,s6
   19fe8:	00040513          	mv	a0,s0
   19fec:	ac0fe0ef          	jal	182ac <__pow5mult>
   19ff0:	00050b13          	mv	s6,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:811
			if (bd == NULL)
   19ff4:	22050663          	beqz	a0,1a220 <_strtod_r+0xa18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:814
				goto ovfl;
			}
		if (bd2 > 0) {
   19ff8:	01705e63          	blez	s7,1a014 <_strtod_r+0x80c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:815
			bd = lshift(ptr, bd, bd2);
   19ffc:	000b0593          	mv	a1,s6
   1a000:	000b8613          	mv	a2,s7
   1a004:	00040513          	mv	a0,s0
   1a008:	bdcfe0ef          	jal	183e4 <__lshift>
   1a00c:	00050b13          	mv	s6,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:816
			if (bd == NULL)
   1a010:	20050863          	beqz	a0,1a220 <_strtod_r+0xa18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:819
				goto ovfl;
			}
		if (bs2 > 0) {
   1a014:	01b05e63          	blez	s11,1a030 <_strtod_r+0x828>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:820
			bs = lshift(ptr, bs, bs2);
   1a018:	000a0593          	mv	a1,s4
   1a01c:	000d8613          	mv	a2,s11
   1a020:	00040513          	mv	a0,s0
   1a024:	bc0fe0ef          	jal	183e4 <__lshift>
   1a028:	00050a13          	mv	s4,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:821
			if (bs == NULL)
   1a02c:	1e050a63          	beqz	a0,1a220 <_strtod_r+0xa18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:824
				goto ovfl;
			}
		delta = diff(ptr, bb, bd);
   1a030:	04013583          	ld	a1,64(sp)
   1a034:	000b0613          	mv	a2,s6
   1a038:	00040513          	mv	a0,s0
   1a03c:	d68fe0ef          	jal	185a4 <__mdiff>
   1a040:	00050c13          	mv	s8,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:825
		if (delta == NULL)
   1a044:	1c050e63          	beqz	a0,1a220 <_strtod_r+0xa18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:827
			goto ovfl;
		dsign = delta->_sign;
   1a048:	01052783          	lw	a5,16(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:829
		delta->_sign = 0;
		i = cmp(delta, bs);
   1a04c:	000a0593          	mv	a1,s4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:828
			}
		delta = diff(ptr, bb, bd);
		if (delta == NULL)
			goto ovfl;
		dsign = delta->_sign;
		delta->_sign = 0;
   1a050:	00052823          	sw	zero,16(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:827
				goto ovfl;
			}
		delta = diff(ptr, bb, bd);
		if (delta == NULL)
			goto ovfl;
		dsign = delta->_sign;
   1a054:	00078b93          	mv	s7,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:829
		delta->_sign = 0;
		i = cmp(delta, bs);
   1a058:	cecfe0ef          	jal	18544 <__mcmp>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:923
				dval(rv) -= adj;
			goto cont;
			}
#endif /*Honor_FLT_ROUNDS*/

		if (i < 0) {
   1a05c:	7c054063          	bltz	a0,1a81c <_strtod_r+0x1014>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:954
			delta = lshift(ptr,delta,Log2P);
			if (cmp(delta, bs) > 0)
				goto drop_down;
			break;
			}
		if (i == 0) {
   1a060:	74050463          	beqz	a0,1a7a8 <_strtod_r+0xfa0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1061
			dsign = 1 - dsign;
#endif
#endif
			break;
			}
		if ((aadj = ratio(delta, bs)) <= 2.) {
   1a064:	000a0593          	mv	a1,s4
   1a068:	000c0513          	mv	a0,s8
   1a06c:	a55fe0ef          	jal	18ac0 <__ratio>
   1a070:	a29507d3          	fle.d	a5,fa0,fs1
   1a074:	20078063          	beqz	a5,1a274 <_strtod_r+0xa6c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1062
			if (dsign)
   1a078:	220b8e63          	beqz	s7,1a2b4 <_strtod_r+0xaac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1063
				aadj = dval(aadj1) = 1.;
   1a07c:	00024737          	lui	a4,0x24
   1a080:	4c073407          	fld	fs0,1216(a4) # 244c0 <mask+0x28>
   1a084:	3ff00793          	li	a5,1023
   1a088:	03479793          	slli	a5,a5,0x34
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1100
#else
			if (Flt_Rounds == 0)
				dval(aadj1) += 0.5;
#endif /*Check_FLT_ROUNDS*/
			}
		y = dword0(rv) & Exp_mask;
   1a08c:	42095713          	srai	a4,s2,0x20
   1a090:	7ff006b7          	lui	a3,0x7ff00
   1a094:	00d77633          	and	a2,a4,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1104

		/* Check for overflow */

		if (y == Exp_msk1*(DBL_MAX_EXP+Bias-1)) {
   1a098:	7fe005b7          	lui	a1,0x7fe00
   1a09c:	28b60863          	beq	a2,a1,1a32c <_strtod_r+0xb24>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1124
			else
				dword0(rv) += P*Exp_msk1;
			}
		else {
#ifdef Avoid_Underflow
			if (scale && y <= 2*P*Exp_msk1) {
   1a0a0:	040c8c63          	beqz	s9,1a0f8 <_strtod_r+0x8f0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1124 (discriminator 1)
   1a0a4:	06a00737          	lui	a4,0x6a00
   1a0a8:	04c76863          	bltu	a4,a2,1a0f8 <_strtod_r+0x8f0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1125
				if (aadj <= 0x7fffffff) {
   1a0ac:	00024737          	lui	a4,0x24
   1a0b0:	51073787          	fld	fa5,1296(a4) # 24510 <mask+0x78>
   1a0b4:	a2f40753          	fle.d	a4,fs0,fa5
   1a0b8:	02070063          	beqz	a4,1a0d8 <_strtod_r+0x8d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1126
					if ((z = aadj) == 0)
   1a0bc:	c21417d3          	fcvt.wu.d	a5,fs0,rtz
   1a0c0:	62078063          	beqz	a5,1a6e0 <_strtod_r+0xed8>
   1a0c4:	d2178453          	fcvt.d.wu	fs0,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1129
						z = 1;
					aadj = z;
					dval(aadj1) = dsign ? aadj : -aadj;
   1a0c8:	e20407d3          	fmv.x.d	a5,fs0
   1a0cc:	000b9663          	bnez	s7,1a0d8 <_strtod_r+0x8d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1129 (discriminator 1)
   1a0d0:	228417d3          	fneg.d	fa5,fs0
   1a0d4:	e20787d3          	fmv.x.d	a5,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1131
					}
				dword0(aadj1) += (2*P+1)*Exp_msk1 - y;
   1a0d8:	4207d713          	srai	a4,a5,0x20
   1a0dc:	06b006b7          	lui	a3,0x6b00
   1a0e0:	00d7073b          	addw	a4,a4,a3
   1a0e4:	40c7073b          	subw	a4,a4,a2
   1a0e8:	02079793          	slli	a5,a5,0x20
   1a0ec:	02071713          	slli	a4,a4,0x20
   1a0f0:	0207d793          	srli	a5,a5,0x20
   1a0f4:	00e7e7b3          	or	a5,a5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1133
				}
			adj = dval(aadj1) * ulp(dval(rv));
   1a0f8:	f2048553          	fmv.d.x	fa0,s1
   1a0fc:	00c13823          	sd	a2,16(sp)
   1a100:	f2078bd3          	fmv.d.x	fs7,a5
   1a104:	eb0fe0ef          	jal	187b4 <__ulp>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1134
			dval(rv) += adj;
   1a108:	f20487d3          	fmv.d.x	fa5,s1
   1a10c:	01013603          	ld	a2,16(sp)
   1a110:	7aabf7c3          	fmadd.d	fa5,fs7,fa0,fa5
   1a114:	e2078953          	fmv.x.d	s2,fa5
   1a118:	42095713          	srai	a4,s2,0x20
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1187
#endif /*Avoid_Underflow*/
			}
		z = dword0(rv) & Exp_mask;
#ifndef SET_INEXACT
#ifdef Avoid_Underflow
		if (!scale)
   1a11c:	000c9863          	bnez	s9,1a12c <_strtod_r+0x924>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1189
#endif
		if (y == z) {
   1a120:	7ff007b7          	lui	a5,0x7ff00
   1a124:	00f777b3          	and	a5,a4,a5
   1a128:	28f60c63          	beq	a2,a5,1a3c0 <_strtod_r+0xbb8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1203
			else if (aadj < .4999999/FLT_RADIX)
				break;
			}
#endif
 cont:
		Bfree(ptr,bb);
   1a12c:	04013583          	ld	a1,64(sp)
   1a130:	00040513          	mv	a0,s0
   1a134:	bc5fd0ef          	jal	17cf8 <_Bfree>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1204
		Bfree(ptr,bd);
   1a138:	000b0593          	mv	a1,s6
   1a13c:	00040513          	mv	a0,s0
   1a140:	bb9fd0ef          	jal	17cf8 <_Bfree>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1205
		Bfree(ptr,bs);
   1a144:	000a0593          	mv	a1,s4
   1a148:	00040513          	mv	a0,s0
   1a14c:	badfd0ef          	jal	17cf8 <_Bfree>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1206
		Bfree(ptr,delta);
   1a150:	000c0593          	mv	a1,s8
   1a154:	00040513          	mv	a0,s0
   1a158:	ba1fd0ef          	jal	17cf8 <_Bfree>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1207
		}
   1a15c:	d11ff06f          	j	19e6c <_strtod_r+0x664>
   1a160:	000c0693          	mv	a3,s8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:264
#ifdef Honor_FLT_ROUNDS
	int rounding;
#endif

	delta = bs = bd = NULL;
	sign = nz0 = nz = decpt = 0;
   1a164:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:335
		if (!*s)
			goto ret;
		}
	s0 = s;
	y = z = 0;
	for(nd = nf = 0; (c = *s) >= '0' && c <= '9'; nd++, s++)
   1a168:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:357 (discriminator 1)
				nz = 0;
				goto have_dig;
				}
			goto dig_done;
			}
		for(; c >= '0' && c <= '9'; c = *++s) {
   1a16c:	fd04851b          	addiw	a0,s1,-48
   1a170:	00900793          	li	a5,9
   1a174:	b6a7eee3          	bltu	a5,a0,19cf0 <_strtod_r+0x4e8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:359
 have_dig:
			nz++;
   1a178:	0016071b          	addiw	a4,a2,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:360
			if (c -= '0') {
   1a17c:	00050493          	mv	s1,a0
   1a180:	46051863          	bnez	a0,1a5f0 <_strtod_r+0xde8>
   1a184:	03813803          	ld	a6,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:359
				}
			goto dig_done;
			}
		for(; c >= '0' && c <= '9'; c = *++s) {
 have_dig:
			nz++;
   1a188:	00070613          	mv	a2,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:357
				nz = 0;
				goto have_dig;
				}
			goto dig_done;
			}
		for(; c >= '0' && c <= '9'; c = *++s) {
   1a18c:	00180793          	addi	a5,a6,1
   1a190:	02f13c23          	sd	a5,56(sp)
   1a194:	00184483          	lbu	s1,1(a6)
   1a198:	fd5ff06f          	j	1a16c <_strtod_r+0x964>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:421
			/* Check for Nan and Infinity */
			__ULong bits[2];
			static _CONST FPI fpinan =	/* only 52 explicit bits */
				{ 52, 1-1023-53+1, 2046-1023-53+1, 1, SI };
			if (!decpt)
			 switch(c) {
   1a19c:	04e00793          	li	a5,78
   1a1a0:	00f48c63          	beq	s1,a5,1a1b8 <_strtod_r+0x9b0>
   1a1a4:	5497d463          	ble	s1,a5,1a6ec <_strtod_r+0xee4>
   1a1a8:	06900793          	li	a5,105
   1a1ac:	54f48463          	beq	s1,a5,1a6f4 <_strtod_r+0xeec>
   1a1b0:	06e00793          	li	a5,110
   1a1b4:	8cf49ce3          	bne	s1,a5,19a8c <_strtod_r+0x284>
match():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:222
_DEFUN (match, (sp, t),
	_CONST char **sp _AND
	char *t)
{
	int c, d;
	_CONST char *s = *sp;
   1a1b8:	03813603          	ld	a2,56(sp)
   1a1bc:	00022737          	lui	a4,0x22
   1a1c0:	c3870713          	addi	a4,a4,-968 # 21c38 <zeroes.4123+0x748>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:225

	while( (d = *t++) !=0) {
		if ((c = *++s) >= 'A' && c <= 'Z')
   1a1c4:	01900813          	li	a6,25
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:224
	char *t)
{
	int c, d;
	_CONST char *s = *sp;

	while( (d = *t++) !=0) {
   1a1c8:	00170713          	addi	a4,a4,1
   1a1cc:	fff74583          	lbu	a1,-1(a4)
   1a1d0:	5a058663          	beqz	a1,1a77c <_strtod_r+0xf74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:225
		if ((c = *++s) >= 'A' && c <= 'Z')
   1a1d4:	00160613          	addi	a2,a2,1
   1a1d8:	00064683          	lbu	a3,0(a2)
   1a1dc:	fbf6879b          	addiw	a5,a3,-65
   1a1e0:	0ff7f793          	andi	a5,a5,255
   1a1e4:	00068513          	mv	a0,a3
   1a1e8:	00f86463          	bltu	a6,a5,1a1f0 <_strtod_r+0x9e8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:226
			c += 'a' - 'A';
   1a1ec:	0206851b          	addiw	a0,a3,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:227
		if (c != d)
   1a1f0:	fcb50ce3          	beq	a0,a1,1a1c8 <_strtod_r+0x9c0>
   1a1f4:	899ff06f          	j	19a8c <_strtod_r+0x284>
_strtod_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:385
			}
		s00 = s;
		esign = 0;
		switch(c = *++s) {
			case '-':
				esign = 1;
   1a1f8:	00100893          	li	a7,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:387
			case '+':
				c = *++s;
   1a1fc:	002c8793          	addi	a5,s9,2
   1a200:	02f13c23          	sd	a5,56(sp)
   1a204:	002cc483          	lbu	s1,2(s9)
   1a208:	fa4ff06f          	j	199ac <_strtod_r+0x1a4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:586
			dval(rv) *= tens[i];
		if (e1 &= ~15) {
			if (e1 > DBL_MAX_10_EXP) {
 ovfl:
#ifndef NO_ERRNO
				ptr->_errno = ERANGE;
   1a20c:	02200793          	li	a5,34
   1a210:	7ff00493          	li	s1,2047
   1a214:	00f42023          	sw	a5,0(s0)
   1a218:	03449493          	slli	s1,s1,0x34
   1a21c:	a05ff06f          	j	19c20 <_strtod_r+0x418>
   1a220:	04013503          	ld	a0,64(sp)
   1a224:	02200793          	li	a5,34
   1a228:	7ff00493          	li	s1,2047
   1a22c:	00f42023          	sw	a5,0(s0)
   1a230:	03449493          	slli	s1,s1,0x34
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1243
		dval(rv0) = 1e-300;
		dval(rv0) *= dval(rv0);
		}
#endif
 retfree:
	Bfree(ptr,bb);
   1a234:	00050593          	mv	a1,a0
   1a238:	00040513          	mv	a0,s0
   1a23c:	abdfd0ef          	jal	17cf8 <_Bfree>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1244
	Bfree(ptr,bd);
   1a240:	000b0593          	mv	a1,s6
   1a244:	00040513          	mv	a0,s0
   1a248:	ab1fd0ef          	jal	17cf8 <_Bfree>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1245
	Bfree(ptr,bs);
   1a24c:	000a0593          	mv	a1,s4
   1a250:	00040513          	mv	a0,s0
   1a254:	aa5fd0ef          	jal	17cf8 <_Bfree>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1246
	Bfree(ptr,bd0);
   1a258:	000d0593          	mv	a1,s10
   1a25c:	00040513          	mv	a0,s0
   1a260:	a99fd0ef          	jal	17cf8 <_Bfree>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1247
	Bfree(ptr,delta);
   1a264:	000c0593          	mv	a1,s8
   1a268:	00040513          	mv	a0,s0
   1a26c:	a8dfd0ef          	jal	17cf8 <_Bfree>
   1a270:	9b1ff06f          	j	19c20 <_strtod_r+0x418>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1084
					aadj *= 0.5;
				dval(aadj1) = -aadj;
				}
			}
		else {
			aadj *= 0.5;
   1a274:	13257453          	fmul.d	fs0,fa0,fs2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1085
			dval(aadj1) = dsign ? aadj : -aadj;
   1a278:	e20407d3          	fmv.x.d	a5,fs0
   1a27c:	e00b98e3          	bnez	s7,1a08c <_strtod_r+0x884>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1085 (discriminator 1)
   1a280:	228417d3          	fneg.d	fa5,fs0
   1a284:	e20787d3          	fmv.x.d	a5,fa5
   1a288:	e05ff06f          	j	1a08c <_strtod_r+0x884>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:745
			bd2 = bd5 = 0;
			}
		if (bbe >= 0)
			bb2 += bbe;
		else
			bd2 -= bbe;
   1a28c:	00812783          	lw	a5,8(sp)
   1a290:	00c12d83          	lw	s11,12(sp)
   1a294:	40e785bb          	subw	a1,a5,a4
   1a298:	c49ff06f          	j	19ee0 <_strtod_r+0x6d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:763
			i = Emin - i;
			j -= i;
			if (i < 32)
				Lsb <<= i;
			else
				Lsb1 = Lsb << (i-32);
   1a29c:	01012683          	lw	a3,16(sp)
   1a2a0:	be200613          	li	a2,-1054
   1a2a4:	40e6073b          	subw	a4,a2,a4
   1a2a8:	00e6973b          	sllw	a4,a3,a4
   1a2ac:	00e12c23          	sw	a4,24(sp)
   1a2b0:	c75ff06f          	j	19f24 <_strtod_r+0x71c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1064
			break;
			}
		if ((aadj = ratio(delta, bs)) <= 2.) {
			if (dsign)
				aadj = dval(aadj1) = 1.;
			else if (dword1(rv) || dword0(rv) & Bndry_mask) {
   1a2b4:	00c91793          	slli	a5,s2,0xc
   1a2b8:	12078e63          	beqz	a5,1a3f4 <_strtod_r+0xbec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1066
#ifndef Sudden_Underflow
				if (dword1(rv) == Tiny1 && !dword0(rv))
   1a2bc:	00100793          	li	a5,1
   1a2c0:	5cf90a63          	beq	s2,a5,1a894 <_strtod_r+0x108c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1070
					goto undfl;
#endif
				aadj = 1.;
				dval(aadj1) = -1.;
   1a2c4:	bff00793          	li	a5,-1025
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1069
			else if (dword1(rv) || dword0(rv) & Bndry_mask) {
#ifndef Sudden_Underflow
				if (dword1(rv) == Tiny1 && !dword0(rv))
					goto undfl;
#endif
				aadj = 1.;
   1a2c8:	00024737          	lui	a4,0x24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1070
				dval(aadj1) = -1.;
   1a2cc:	03479793          	slli	a5,a5,0x34
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1069
			else if (dword1(rv) || dword0(rv) & Bndry_mask) {
#ifndef Sudden_Underflow
				if (dword1(rv) == Tiny1 && !dword0(rv))
					goto undfl;
#endif
				aadj = 1.;
   1a2d0:	4c073407          	fld	fs0,1216(a4) # 244c0 <mask+0x28>
   1a2d4:	db9ff06f          	j	1a08c <_strtod_r+0x884>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:411
				}
			else
				e = 0;
			}
		else
			s = s00;
   1a2d8:	03913c23          	sd	s9,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:376
				nz = 0;
				}
			}
		}
 dig_done:
	e = 0;
   1a2dc:	00000b93          	li	s7,0
   1a2e0:	f9cff06f          	j	19a7c <_strtod_r+0x274>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:310
			  case FE_DOWNWARD:	fpi1.rounding = 3;
			  }
#else
#define fpi1 fpi
#endif
			switch((i = gethex(ptr, &s, &fpi1, &exp, &bb, sign)) & STRTOG_Retmask) {
   1a2e4:	00021637          	lui	a2,0x21
   1a2e8:	000a8793          	mv	a5,s5
   1a2ec:	04010713          	addi	a4,sp,64
   1a2f0:	03410693          	addi	a3,sp,52
   1a2f4:	f1060613          	addi	a2,a2,-240 # 20f10 <fpi.2617>
   1a2f8:	03810593          	addi	a1,sp,56
   1a2fc:	00040513          	mv	a0,s0
   1a300:	200040ef          	jal	1e500 <__gethex>
   1a304:	00757a13          	andi	s4,a0,7
   1a308:	00050b13          	mv	s6,a0
   1a30c:	00000493          	li	s1,0
   1a310:	900a08e3          	beqz	s4,19c20 <_strtod_r+0x418>
   1a314:	00600793          	li	a5,6
   1a318:	1efa1e63          	bne	s4,a5,1a514 <_strtod_r+0xd0c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:312
			  case STRTOG_NoNumber:
				s = s00;
   1a31c:	001b8713          	addi	a4,s7,1
   1a320:	02e13c23          	sd	a4,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:313
				sign = 0;
   1a324:	00000a93          	li	s5,0
   1a328:	8f9ff06f          	j	19c20 <_strtod_r+0x418>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1106

		/* Check for overflow */

		if (y == Exp_msk1*(DBL_MAX_EXP+Bias-1)) {
			dval(rv0) = dval(rv);
			dword0(rv) -= P*Exp_msk1;
   1a32c:	fcb005b7          	lui	a1,0xfcb00
   1a330:	00b7073b          	addw	a4,a4,a1
   1a334:	fff00593          	li	a1,-1
   1a338:	0205d593          	srli	a1,a1,0x20
   1a33c:	02071713          	slli	a4,a4,0x20
   1a340:	00b97933          	and	s2,s2,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1107
			adj = dval(aadj1) * ulp(dval(rv));
   1a344:	00e96933          	or	s2,s2,a4
   1a348:	f2090553          	fmv.d.x	fa0,s2
   1a34c:	f2078bd3          	fmv.d.x	fs7,a5
   1a350:	00d13c23          	sd	a3,24(sp)
   1a354:	00c13823          	sd	a2,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1106

		/* Check for overflow */

		if (y == Exp_msk1*(DBL_MAX_EXP+Bias-1)) {
			dval(rv0) = dval(rv);
			dword0(rv) -= P*Exp_msk1;
   1a358:	02b13023          	sd	a1,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1107
			adj = dval(aadj1) * ulp(dval(rv));
   1a35c:	c58fe0ef          	jal	187b4 <__ulp>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1108
			dval(rv) += adj;
   1a360:	f20907d3          	fmv.d.x	fa5,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1109
			if ((dword0(rv) & Exp_mask) >=
   1a364:	01813683          	ld	a3,24(sp)
   1a368:	7ca00737          	lui	a4,0x7ca00
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1108

		if (y == Exp_msk1*(DBL_MAX_EXP+Bias-1)) {
			dval(rv0) = dval(rv);
			dword0(rv) -= P*Exp_msk1;
			adj = dval(aadj1) * ulp(dval(rv));
			dval(rv) += adj;
   1a36c:	7aabf7c3          	fmadd.d	fa5,fs7,fa0,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1109
			if ((dword0(rv) & Exp_mask) >=
   1a370:	01013603          	ld	a2,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1108

		if (y == Exp_msk1*(DBL_MAX_EXP+Bias-1)) {
			dval(rv0) = dval(rv);
			dword0(rv) -= P*Exp_msk1;
			adj = dval(aadj1) * ulp(dval(rv));
			dval(rv) += adj;
   1a374:	e2078953          	fmv.x.d	s2,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1109
			if ((dword0(rv) & Exp_mask) >=
   1a378:	42095793          	srai	a5,s2,0x20
   1a37c:	00d7f6b3          	and	a3,a5,a3
   1a380:	16e6ec63          	bltu	a3,a4,1a4f8 <_strtod_r+0xcf0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1111
					Exp_msk1*(DBL_MAX_EXP+Bias-P)) {
				if (dword0(rv0) == Big0 && dword1(rv0) == Big1)
   1a384:	7ff00793          	li	a5,2047
   1a388:	03479793          	slli	a5,a5,0x34
   1a38c:	fff78793          	addi	a5,a5,-1 # 7fefffff <_end+0x7fed91e7>
   1a390:	02013583          	ld	a1,32(sp)
   1a394:	e8f486e3          	beq	s1,a5,1a220 <_strtod_r+0xa18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1113
					goto ovfl;
				dword0(rv) = Big0;
   1a398:	7ff007b7          	lui	a5,0x7ff00
   1a39c:	02091913          	slli	s2,s2,0x20
   1a3a0:	fff78793          	addi	a5,a5,-1 # 7fefffff <_end+0x7fed91e7>
   1a3a4:	02095913          	srli	s2,s2,0x20
   1a3a8:	02079793          	slli	a5,a5,0x20
   1a3ac:	00f96933          	or	s2,s2,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1115
#ifndef _DOUBLE_IS_32BITS
				dword1(rv) = Big1;
   1a3b0:	00b96933          	or	s2,s2,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1117
#endif /*!_DOUBLE_IS_32BITS*/
				goto cont;
   1a3b4:	d79ff06f          	j	1a12c <_strtod_r+0x924>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:382
	if (c == 'e' || c == 'E') {
		if (!nd && !nz && !nz0) {
			goto ret0;
			}
		s00 = s;
		esign = 0;
   1a3b8:	00000893          	li	a7,0
   1a3bc:	e41ff06f          	j	1a1fc <_strtod_r+0x9f4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1192
		if (!scale)
#endif
		if (y == z) {
			/* Can we stop now? */
			L = (Long)aadj;
			aadj -= L;
   1a3c0:	c20417d3          	fcvt.w.d	a5,fs0,rtz
   1a3c4:	d2078553          	fcvt.d.w	fa0,a5
   1a3c8:	0aa47553          	fsub.d	fa0,fs0,fa0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1194
			/* The tolerances below are conservative. */
			if (dsign || dword1(rv) || dword0(rv) & Bndry_mask) {
   1a3cc:	0e0b9c63          	bnez	s7,1a4c4 <_strtod_r+0xcbc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1194 (discriminator 1)
   1a3d0:	00c91793          	slli	a5,s2,0xc
   1a3d4:	0e079863          	bnez	a5,1a4c4 <_strtod_r+0xcbc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1198
				if (aadj < .4999999 || aadj > .5000001)
					break;
				}
			else if (aadj < .4999999/FLT_RADIX)
   1a3d8:	000247b7          	lui	a5,0x24
   1a3dc:	5287b787          	fld	fa5,1320(a5) # 24528 <mask+0x90>
   1a3e0:	a2f517d3          	flt.d	a5,fa0,fa5
   1a3e4:	d40784e3          	beqz	a5,1a12c <_strtod_r+0x924>
   1a3e8:	04013503          	ld	a0,64(sp)
   1a3ec:	00090493          	mv	s1,s2
   1a3f0:	e45ff06f          	j	1a234 <_strtod_r+0xa2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1076
				}
			else {
				/* special case -- power of FLT_RADIX to be */
				/* rounded down... */

				if (aadj < 2./FLT_RADIX)
   1a3f4:	a33517d3          	flt.d	a5,fa0,fs3
   1a3f8:	36079c63          	bnez	a5,1a770 <_strtod_r+0xf68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1079
					aadj = 1./FLT_RADIX;
				else
					aadj *= 0.5;
   1a3fc:	000247b7          	lui	a5,0x24
   1a400:	4e07b407          	fld	fs0,1248(a5) # 244e0 <mask+0x48>
   1a404:	12857453          	fmul.d	fs0,fa0,fs0
   1a408:	228417d3          	fneg.d	fa5,fs0
   1a40c:	e20787d3          	fmv.x.d	a5,fa5
   1a410:	c7dff06f          	j	1a08c <_strtod_r+0x884>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:648
				}
			else
				dword0(rv) += P*Exp_msk1;
			}
		}
	else if (e1 < 0) {
   1a414:	9e0706e3          	beqz	a4,19e00 <_strtod_r+0x5f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:649
		e1 = -e1;
   1a418:	40e007bb          	negw	a5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:650
		if ( (i = e1 & 15) !=0)
   1a41c:	00f7f713          	andi	a4,a5,15
   1a420:	02070263          	beqz	a4,1a444 <_strtod_r+0xc3c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:651
			dval(rv) /= tens[i];
   1a424:	00021637          	lui	a2,0x21
   1a428:	00371713          	slli	a4,a4,0x3
   1a42c:	d2060613          	addi	a2,a2,-736 # 20d20 <__mprec_tens>
   1a430:	00c70733          	add	a4,a4,a2
   1a434:	f2090753          	fmv.d.x	fa4,s2
   1a438:	00073787          	fld	fa5,0(a4) # 7ca00000 <_end+0x7c9d91e8>
   1a43c:	1af777d3          	fdiv.d	fa5,fa4,fa5
   1a440:	e2078953          	fmv.x.d	s2,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:652
		if (e1 >>= 4) {
   1a444:	4047d79b          	sraiw	a5,a5,0x4
   1a448:	9a078ce3          	beqz	a5,19e00 <_strtod_r+0x5f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:653
			if (e1 >= 1 << n_bigtens)
   1a44c:	01f00713          	li	a4,31
   1a450:	06f74263          	blt	a4,a5,1a4b4 <_strtod_r+0xcac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:656
				goto undfl;
#ifdef Avoid_Underflow
			if (e1 & Scale_Bit)
   1a454:	0107f713          	andi	a4,a5,16
   1a458:	54070a63          	beqz	a4,1a9ac <_strtod_r+0x11a4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:657
				scale = 2*P;
   1a45c:	06a00c93          	li	s9,106
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:658
			for(j = 0; e1 > 0; j++, e1 >>= 1)
   1a460:	50f05663          	blez	a5,1a96c <_strtod_r+0x1164>
   1a464:	00021737          	lui	a4,0x21
   1a468:	00090593          	mv	a1,s2
   1a46c:	f4070713          	addi	a4,a4,-192 # 20f40 <tinytens>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:564
	inexact = 1;
	if (k <= DBL_DIG)
		oldinexact = get_inexact();
#endif
#ifdef Avoid_Underflow
	scale = 0;
   1a470:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:659
				goto undfl;
#ifdef Avoid_Underflow
			if (e1 & Scale_Bit)
				scale = 2*P;
			for(j = 0; e1 > 0; j++, e1 >>= 1)
				if (e1 & 1)
   1a474:	0017f613          	andi	a2,a5,1
   1a478:	00060c63          	beqz	a2,1a490 <_strtod_r+0xc88>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:660
					dval(rv) *= tinytens[j];
   1a47c:	f2058753          	fmv.d.x	fa4,a1
   1a480:	00073787          	fld	fa5,0(a4)
   1a484:	00100513          	li	a0,1
   1a488:	12f777d3          	fmul.d	fa5,fa4,fa5
   1a48c:	e20785d3          	fmv.x.d	a1,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:658 (discriminator 2)
			if (e1 >= 1 << n_bigtens)
				goto undfl;
#ifdef Avoid_Underflow
			if (e1 & Scale_Bit)
				scale = 2*P;
			for(j = 0; e1 > 0; j++, e1 >>= 1)
   1a490:	4017d79b          	sraiw	a5,a5,0x1
   1a494:	00870713          	addi	a4,a4,8
   1a498:	fc079ee3          	bnez	a5,1a474 <_strtod_r+0xc6c>
   1a49c:	60051463          	bnez	a0,1aaa4 <_strtod_r+0x129c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:661
				if (e1 & 1)
					dval(rv) *= tinytens[j];
			if (scale && (j = 2*P + 1 - ((dword0(rv) & Exp_mask)
   1a4a0:	4c0c9663          	bnez	s9,1a96c <_strtod_r+0x1164>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:689
			dval(rv) *= tinytens[j];
			if (!dval(rv)) {
				dval(rv) = 2.*dval(rv0);
				dval(rv) *= tinytens[j];
#endif
				if (!dval(rv)) {
   1a4a4:	f20007d3          	fmv.d.x	fa5,zero
   1a4a8:	f2090753          	fmv.d.x	fa4,s2
   1a4ac:	a2f727d3          	feq.d	a5,fa4,fa5
   1a4b0:	94078ae3          	beqz	a5,19e04 <_strtod_r+0x5fc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:693
 undfl:
					dval(rv) = 0.;
#ifndef NO_ERRNO
					ptr->_errno = ERANGE;
   1a4b4:	02200793          	li	a5,34
   1a4b8:	00f42023          	sw	a5,0(s0)
   1a4bc:	00000493          	li	s1,0
   1a4c0:	f60ff06f          	j	19c20 <_strtod_r+0x418>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1195
			/* Can we stop now? */
			L = (Long)aadj;
			aadj -= L;
			/* The tolerances below are conservative. */
			if (dsign || dword1(rv) || dword0(rv) & Bndry_mask) {
				if (aadj < .4999999 || aadj > .5000001)
   1a4c4:	a34517d3          	flt.d	a5,fa0,fs4
   1a4c8:	f20790e3          	bnez	a5,1a3e8 <_strtod_r+0xbe0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1195 (discriminator 1)
   1a4cc:	000247b7          	lui	a5,0x24
   1a4d0:	5207b787          	fld	fa5,1312(a5) # 24520 <mask+0x88>
   1a4d4:	a2a797d3          	flt.d	a5,fa5,fa0
   1a4d8:	c4078ae3          	beqz	a5,1a12c <_strtod_r+0x924>
   1a4dc:	f0dff06f          	j	1a3e8 <_strtod_r+0xbe0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:335
		if (!*s)
			goto ret;
		}
	s0 = s;
	y = z = 0;
	for(nd = nf = 0; (c = *s) >= '0' && c <= '9'; nd++, s++)
   1a4e0:	00078493          	mv	s1,a5
   1a4e4:	000a0913          	mv	s2,s4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:334
		while(*++s == '0') ;
		if (!*s)
			goto ret;
		}
	s0 = s;
	y = z = 0;
   1a4e8:	00000d93          	li	s11,0
   1a4ec:	00000d13          	li	s10,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:335
	for(nd = nf = 0; (c = *s) >= '0' && c <= '9'; nd++, s++)
   1a4f0:	00000c13          	li	s8,0
   1a4f4:	c34ff06f          	j	19928 <_strtod_r+0x120>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1120
				dword1(rv) = Big1;
#endif /*!_DOUBLE_IS_32BITS*/
				goto cont;
				}
			else
				dword0(rv) += P*Exp_msk1;
   1a4f8:	03500737          	lui	a4,0x3500
   1a4fc:	00e7873b          	addw	a4,a5,a4
   1a500:	02091913          	slli	s2,s2,0x20
   1a504:	02071793          	slli	a5,a4,0x20
   1a508:	02095913          	srli	s2,s2,0x20
   1a50c:	00f96933          	or	s2,s2,a5
   1a510:	c0dff06f          	j	1a11c <_strtod_r+0x914>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:318
				sign = 0;
				/* FALLTHROUGH */
			  case STRTOG_Zero:
				break;
			  default:
				if (bb) {
   1a514:	04013603          	ld	a2,64(sp)
   1a518:	00060e63          	beqz	a2,1a534 <_strtod_r+0xd2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:319
					copybits(bits, fpi.nbits, bb);
   1a51c:	03500593          	li	a1,53
   1a520:	04810513          	addi	a0,sp,72
   1a524:	ea0fe0ef          	jal	18bc4 <__copybits>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:320
					Bfree(ptr,bb);
   1a528:	04013583          	ld	a1,64(sp)
   1a52c:	00040513          	mv	a0,s0
   1a530:	fc8fd0ef          	jal	17cf8 <_Bfree>
ULtod():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:184
	__ULong *L _AND
	__ULong *bits _AND
	Long exp _AND
	int k)
{
	switch(k & STRTOG_Retmask) {
   1a534:	00600793          	li	a5,6
   1a538:	0347e463          	bltu	a5,s4,1a560 <_strtod_r+0xd58>
   1a53c:	020a1793          	slli	a5,s4,0x20
   1a540:	00021737          	lui	a4,0x21
   1a544:	01e7d793          	srli	a5,a5,0x1e
   1a548:	ef070713          	addi	a4,a4,-272 # 20ef0 <__mprec_bigtens+0xe0>
   1a54c:	00e787b3          	add	a5,a5,a4
   1a550:	0007a783          	lw	a5,0(a5)
   1a554:	00078067          	jr	a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:202
		L[_1] = bits[0];
		L[_0] = (bits[1] & ~0x100000) | ((exp + 0x3ff + 52) << 20);
		break;

	  case STRTOG_Infinite:
		L[_0] = 0x7ff00000;
   1a558:	7ff00913          	li	s2,2047
   1a55c:	03491913          	slli	s2,s2,0x34
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:210

	  case STRTOG_NaN:
		L[_0] = 0x7fffffff;
		L[_1] = (__ULong)-1;
	  }
	if (k & STRTOG_Neg)
   1a560:	008b7b13          	andi	s6,s6,8
   1a564:	f00b0e63          	beqz	s6,19c80 <_strtod_r+0x478>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:211
		L[_0] |= 0x80000000L;
   1a568:	42095713          	srai	a4,s2,0x20
   1a56c:	800007b7          	lui	a5,0x80000
   1a570:	00f767b3          	or	a5,a4,a5
   1a574:	02091493          	slli	s1,s2,0x20
   1a578:	02079793          	slli	a5,a5,0x20
   1a57c:	0204d493          	srli	s1,s1,0x20
   1a580:	00f4e4b3          	or	s1,s1,a5
   1a584:	e9cff06f          	j	19c20 <_strtod_r+0x418>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:192
		L[0] = L[1] = 0;
		break;

	  case STRTOG_Denormal:
		L[_1] = bits[0];
		L[_0] = bits[1];
   1a588:	04c16783          	lwu	a5,76(sp)
   1a58c:	04816903          	lwu	s2,72(sp)
   1a590:	02079793          	slli	a5,a5,0x20
   1a594:	00f96933          	or	s2,s2,a5
   1a598:	fc9ff06f          	j	1a560 <_strtod_r+0xd58>
_strtod_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:322
			  default:
				if (bb) {
					copybits(bits, fpi.nbits, bb);
					Bfree(ptr,bb);
					}
				ULtod(rv.i, bits, exp, i);
   1a59c:	03412783          	lw	a5,52(sp)
ULtod():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:198
		break;

	  case STRTOG_Normal:
	  case STRTOG_NaNbits:
		L[_1] = bits[0];
		L[_0] = (bits[1] & ~0x100000) | ((exp + 0x3ff + 52) << 20);
   1a5a0:	04c12683          	lw	a3,76(sp)
   1a5a4:	fff00737          	lui	a4,0xfff00
   1a5a8:	4337879b          	addiw	a5,a5,1075
   1a5ac:	fff7071b          	addiw	a4,a4,-1
   1a5b0:	00e6f733          	and	a4,a3,a4
   1a5b4:	0147979b          	slliw	a5,a5,0x14
   1a5b8:	04816903          	lwu	s2,72(sp)
   1a5bc:	00f767b3          	or	a5,a4,a5
   1a5c0:	02079793          	slli	a5,a5,0x20
   1a5c4:	00f96933          	or	s2,s2,a5
   1a5c8:	f99ff06f          	j	1a560 <_strtod_r+0xd58>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:207
		L[_0] = 0x7ff00000;
		L[_1] = 0;
		break;

	  case STRTOG_NaN:
		L[_0] = 0x7fffffff;
   1a5cc:	800007b7          	lui	a5,0x80000
   1a5d0:	fff7c793          	not	a5,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:208
		L[_1] = (__ULong)-1;
   1a5d4:	fff00913          	li	s2,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:207
		L[_0] = 0x7ff00000;
		L[_1] = 0;
		break;

	  case STRTOG_NaN:
		L[_0] = 0x7fffffff;
   1a5d8:	02079793          	slli	a5,a5,0x20
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:208
		L[_1] = (__ULong)-1;
   1a5dc:	02095913          	srli	s2,s2,0x20
   1a5e0:	0127e933          	or	s2,a5,s2
   1a5e4:	f7dff06f          	j	1a560 <_strtod_r+0xd58>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:187
	int k)
{
	switch(k & STRTOG_Retmask) {
	  case STRTOG_NoNumber:
	  case STRTOG_Zero:
		L[0] = L[1] = 0;
   1a5e8:	00000913          	li	s2,0
   1a5ec:	f75ff06f          	j	1a560 <_strtod_r+0xd58>
_strtod_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:362
		for(; c >= '0' && c <= '9'; c = *++s) {
 have_dig:
			nz++;
			if (c -= '0') {
				nf += nz;
				for(i = 1; i < nz; i++)
   1a5f0:	00100793          	li	a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:361
			}
		for(; c >= '0' && c <= '9'; c = *++s) {
 have_dig:
			nz++;
			if (c -= '0') {
				nf += nz;
   1a5f4:	00e585bb          	addw	a1,a1,a4
   1a5f8:	00d6063b          	addw	a2,a2,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:363
				for(i = 1; i < nz; i++)
					if (nd++ < 9)
   1a5fc:	00800813          	li	a6,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:365
						y *= 10;
					else if (nd <= DBL_DIG + 1)
   1a600:	01000313          	li	t1,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:362
		for(; c >= '0' && c <= '9'; c = *++s) {
 have_dig:
			nz++;
			if (c -= '0') {
				nf += nz;
				for(i = 1; i < nz; i++)
   1a604:	48f70863          	beq	a4,a5,1aa94 <_strtod_r+0x128c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:363
					if (nd++ < 9)
   1a608:	0016869b          	addiw	a3,a3,1
   1a60c:	fff6871b          	addiw	a4,a3,-1
   1a610:	06e86863          	bltu	a6,a4,1a680 <_strtod_r+0xe78>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:364
						y *= 10;
   1a614:	001d189b          	slliw	a7,s10,0x1
   1a618:	003d171b          	slliw	a4,s10,0x3
   1a61c:	00e88d3b          	addw	s10,a7,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:362 (discriminator 2)
		for(; c >= '0' && c <= '9'; c = *++s) {
 have_dig:
			nz++;
			if (c -= '0') {
				nf += nz;
				for(i = 1; i < nz; i++)
   1a620:	fec694e3          	bne	a3,a2,1a608 <_strtod_r+0xe00>
   1a624:	03813803          	ld	a6,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:362
   1a628:	0016869b          	addiw	a3,a3,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:367
					if (nd++ < 9)
						y *= 10;
					else if (nd <= DBL_DIG + 1)
						z *= 10;
				if (nd++ < 9)
   1a62c:	00800713          	li	a4,8
   1a630:	02c75c63          	ble	a2,a4,1a668 <_strtod_r+0xe60>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:369
					y = 10*y + c;
				else if (nd <= DBL_DIG + 1)
   1a634:	01000793          	li	a5,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:371
					z = 10*z + c;
				nz = 0;
   1a638:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:369
						y *= 10;
					else if (nd <= DBL_DIG + 1)
						z *= 10;
				if (nd++ < 9)
					y = 10*y + c;
				else if (nd <= DBL_DIG + 1)
   1a63c:	b4d7c8e3          	blt	a5,a3,1a18c <_strtod_r+0x984>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:370
					z = 10*z + c;
   1a640:	001d971b          	slliw	a4,s11,0x1
   1a644:	003d979b          	slliw	a5,s11,0x3
   1a648:	00f707bb          	addw	a5,a4,a5
   1a64c:	00f50dbb          	addw	s11,a0,a5
   1a650:	b3dff06f          	j	1a18c <_strtod_r+0x984>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:350
		c = *(s += strlen (_localeconv_r (ptr)->decimal_point));
		if (!nd) {
			for(; c == '0'; c = *++s)
				nz++;
			if (c > '0' && c <= '9') {
				s0 = s;
   1a654:	03813a03          	ld	s4,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:360
			goto dig_done;
			}
		for(; c >= '0' && c <= '9'; c = *++s) {
 have_dig:
			nz++;
			if (c -= '0') {
   1a658:	fd04849b          	addiw	s1,s1,-48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:361
				nf += nz;
   1a65c:	0016059b          	addiw	a1,a2,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:350
		c = *(s += strlen (_localeconv_r (ptr)->decimal_point));
		if (!nd) {
			for(; c == '0'; c = *++s)
				nz++;
			if (c > '0' && c <= '9') {
				s0 = s;
   1a660:	000a0813          	mv	a6,s4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:361
			}
		for(; c >= '0' && c <= '9'; c = *++s) {
 have_dig:
			nz++;
			if (c -= '0') {
				nf += nz;
   1a664:	00100693          	li	a3,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:368
					if (nd++ < 9)
						y *= 10;
					else if (nd <= DBL_DIG + 1)
						z *= 10;
				if (nd++ < 9)
					y = 10*y + c;
   1a668:	001d161b          	slliw	a2,s10,0x1
   1a66c:	003d171b          	slliw	a4,s10,0x3
   1a670:	00e6073b          	addw	a4,a2,a4
   1a674:	00e48d3b          	addw	s10,s1,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:371
				else if (nd <= DBL_DIG + 1)
					z = 10*z + c;
				nz = 0;
   1a678:	00000613          	li	a2,0
   1a67c:	b11ff06f          	j	1a18c <_strtod_r+0x984>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:365
			if (c -= '0') {
				nf += nz;
				for(i = 1; i < nz; i++)
					if (nd++ < 9)
						y *= 10;
					else if (nd <= DBL_DIG + 1)
   1a680:	fad340e3          	blt	t1,a3,1a620 <_strtod_r+0xe18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:366
						z *= 10;
   1a684:	001d971b          	slliw	a4,s11,0x1
   1a688:	003d979b          	slliw	a5,s11,0x3
   1a68c:	00f70dbb          	addw	s11,a4,a5
   1a690:	f91ff06f          	j	1a620 <_strtod_r+0xe18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:511
				/* rv = */ rounded_product(dval(rv), tens[e]);
				goto ret;
#endif
				}
			i = DBL_DIG - nd;
			if (e <= Ten_pmax + i) {
   1a694:	02500613          	li	a2,37
   1a698:	40d6063b          	subw	a2,a2,a3
   1a69c:	e5764e63          	blt	a2,s7,19cf8 <_strtod_r+0x4f0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:510
#endif
				/* rv = */ rounded_product(dval(rv), tens[e]);
				goto ret;
#endif
				}
			i = DBL_DIG - nd;
   1a6a0:	40d787bb          	subw	a5,a5,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:523
					dval(rv) = -dval(rv);
					sign = 0;
					}
#endif
				e -= i;
				dval(rv) *= tens[i];
   1a6a4:	00078713          	mv	a4,a5
   1a6a8:	000216b7          	lui	a3,0x21
   1a6ac:	d2068693          	addi	a3,a3,-736 # 20d20 <__mprec_tens>
   1a6b0:	00371713          	slli	a4,a4,0x3
   1a6b4:	00d70733          	add	a4,a4,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:536
				if ((dword0(rv) & Exp_mask)
				 > Exp_msk1*(DBL_MAX_EXP+Bias-1-P))
					goto ovfl;
				dword0(rv) += P*Exp_msk1;
#else
				/* rv = */ rounded_product(dval(rv), tens[e]);
   1a6b8:	00073787          	fld	fa5,0(a4) # fffffffffff00000 <_end+0xffffffffffed91e8>
   1a6bc:	f2090753          	fmv.d.x	fa4,s2
   1a6c0:	40fb87bb          	subw	a5,s7,a5
   1a6c4:	00379793          	slli	a5,a5,0x3
   1a6c8:	12e7f753          	fmul.d	fa4,fa5,fa4
   1a6cc:	00d787b3          	add	a5,a5,a3
   1a6d0:	0007b787          	fld	fa5,0(a5) # ffffffff80000000 <_end+0xffffffff7ffd91e8>
   1a6d4:	12f777d3          	fmul.d	fa5,fa4,fa5
   1a6d8:	e20784d3          	fmv.x.d	s1,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:538
#endif
				goto ret;
   1a6dc:	d44ff06f          	j	19c20 <_strtod_r+0x418>
   1a6e0:	000247b7          	lui	a5,0x24
   1a6e4:	4c07b407          	fld	fs0,1216(a5) # 244c0 <mask+0x28>
   1a6e8:	9e1ff06f          	j	1a0c8 <_strtod_r+0x8c0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:421
			/* Check for Nan and Infinity */
			__ULong bits[2];
			static _CONST FPI fpinan =	/* only 52 explicit bits */
				{ 52, 1-1023-53+1, 2046-1023-53+1, 1, SI };
			if (!decpt)
			 switch(c) {
   1a6ec:	04900793          	li	a5,73
   1a6f0:	b8f49e63          	bne	s1,a5,19a8c <_strtod_r+0x284>
match():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:222
_DEFUN (match, (sp, t),
	_CONST char **sp _AND
	char *t)
{
	int c, d;
	_CONST char *s = *sp;
   1a6f4:	03813683          	ld	a3,56(sp)
   1a6f8:	00022737          	lui	a4,0x22
   1a6fc:	c2870713          	addi	a4,a4,-984 # 21c28 <zeroes.4123+0x738>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:225

	while( (d = *t++) !=0) {
		if ((c = *++s) >= 'A' && c <= 'Z')
   1a700:	01900813          	li	a6,25
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:224
	char *t)
{
	int c, d;
	_CONST char *s = *sp;

	while( (d = *t++) !=0) {
   1a704:	00170713          	addi	a4,a4,1
   1a708:	fff74583          	lbu	a1,-1(a4)
   1a70c:	d2058263          	beqz	a1,19c30 <_strtod_r+0x428>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:225
		if ((c = *++s) >= 'A' && c <= 'Z')
   1a710:	00168693          	addi	a3,a3,1
   1a714:	0006c603          	lbu	a2,0(a3)
   1a718:	fbf6079b          	addiw	a5,a2,-65
   1a71c:	0ff7f793          	andi	a5,a5,255
   1a720:	00060513          	mv	a0,a2
   1a724:	00f86463          	bltu	a6,a5,1a72c <_strtod_r+0xf24>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:226
			c += 'a' - 'A';
   1a728:	0206051b          	addiw	a0,a2,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:227
		if (c != d)
   1a72c:	fcb50ce3          	beq	a0,a1,1a704 <_strtod_r+0xefc>
   1a730:	b5cff06f          	j	19a8c <_strtod_r+0x284>
   1a734:	00012423          	sw	zero,8(sp)
   1a738:	f00ff06f          	j	19e38 <_strtod_r+0x630>
_strtod_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:542
#endif
				goto ret;
				}
			}
#ifndef Inaccurate_Divide
		else if (e >= -Ten_pmax) {
   1a73c:	fea00793          	li	a5,-22
   1a740:	dafbcc63          	blt	s7,a5,19cf8 <_strtod_r+0x4f0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:550
			if (sign) {
				dval(rv) = -dval(rv);
				sign = 0;
				}
#endif
			/* rv = */ rounded_quotient(dval(rv), tens[-e]);
   1a744:	41700bbb          	negw	s7,s7
   1a748:	000b8793          	mv	a5,s7
   1a74c:	00021737          	lui	a4,0x21
   1a750:	00379793          	slli	a5,a5,0x3
   1a754:	d2070713          	addi	a4,a4,-736 # 20d20 <__mprec_tens>
   1a758:	00e787b3          	add	a5,a5,a4
   1a75c:	0007b787          	fld	fa5,0(a5)
   1a760:	f2090753          	fmv.d.x	fa4,s2
   1a764:	1af777d3          	fdiv.d	fa5,fa4,fa5
   1a768:	e20784d3          	fmv.x.d	s1,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:551
			goto ret;
   1a76c:	cb4ff06f          	j	19c20 <_strtod_r+0x418>
   1a770:	e20b07d3          	fmv.x.d	a5,fs6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1077
			else {
				/* special case -- power of FLT_RADIX to be */
				/* rounded down... */

				if (aadj < 2./FLT_RADIX)
					aadj = 1./FLT_RADIX;
   1a774:	235a8453          	fmv.d	fs0,fs5
   1a778:	915ff06f          	j	1a08c <_strtod_r+0x884>
match():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:230
		if ((c = *++s) >= 'A' && c <= 'Z')
			c += 'a' - 'A';
		if (c != d)
			return 0;
		}
	*sp = s + 1;
   1a77c:	00160793          	addi	a5,a2,1
   1a780:	02f13c23          	sd	a5,56(sp)
_strtod_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:439
				break;
			  case 'n':
			  case 'N':
				if (match(&s, "an")) {
#ifndef No_Hex_NaN
					if (*s == '(' /*)*/
   1a784:	00164703          	lbu	a4,1(a2)
   1a788:	02800793          	li	a5,40
   1a78c:	18f70063          	beq	a4,a5,1a90c <_strtod_r+0x1104>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:449
						dword1(rv) = bits[0];
#endif /*!_DOUBLE_IS_32BITS*/
						}
					else {
#endif
						dword0(rv) = NAN_WORD0;
   1a790:	fff00913          	li	s2,-1
   1a794:	03391913          	slli	s2,s2,0x33
   1a798:	00090493          	mv	s1,s2
   1a79c:	c84ff06f          	j	19c20 <_strtod_r+0x418>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:347
		     strlen (_localeconv_r (ptr)->decimal_point)) == 0)
		{
		decpt = 1;
		c = *(s += strlen (_localeconv_r (ptr)->decimal_point));
		if (!nd) {
			for(; c == '0'; c = *++s)
   1a7a0:	00000613          	li	a2,0
   1a7a4:	d38ff06f          	j	19cdc <_strtod_r+0x4d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:956
				goto drop_down;
			break;
			}
		if (i == 0) {
			/* exactly half-way between */
			if (dsign) {
   1a7a8:	120b8863          	beqz	s7,1a8d8 <_strtod_r+0x10d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:957
				if ((dword0(rv) & Bndry_mask1) == Bndry_mask1
   1a7ac:	42095693          	srai	a3,s2,0x20
   1a7b0:	fff6c793          	not	a5,a3
   1a7b4:	02c79713          	slli	a4,a5,0x2c
   1a7b8:	26070063          	beqz	a4,1aa18 <_strtod_r+0x1210>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1026
				break;
#endif
				}
#ifndef ROUND_BIASED
#ifdef Avoid_Underflow
			if (Lsb1) {
   1a7bc:	01812703          	lw	a4,24(sp)
   1a7c0:	12070463          	beqz	a4,1a8e8 <_strtod_r+0x10e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1027
				if (!(dword0(rv) & Lsb1))
   1a7c4:	42095793          	srai	a5,s2,0x20
   1a7c8:	00e7f7b3          	and	a5,a5,a4
   1a7cc:	02078063          	beqz	a5,1a7ec <_strtod_r+0xfe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1039
				break;
#endif
#endif
			if (dsign)
#ifdef Avoid_Underflow
				dval(rv) += sulp(rv, scale);
   1a7d0:	000c8593          	mv	a1,s9
   1a7d4:	00090513          	mv	a0,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1037
#else
			if (!(dword1(rv) & LSB))
				break;
#endif
#endif
			if (dsign)
   1a7d8:	160b8863          	beqz	s7,1a948 <_strtod_r+0x1140>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1039
#ifdef Avoid_Underflow
				dval(rv) += sulp(rv, scale);
   1a7dc:	5bd050ef          	jal	20598 <sulp>
   1a7e0:	f20487d3          	fmv.d.x	fa5,s1
   1a7e4:	02a7f7d3          	fadd.d	fa5,fa5,fa0
   1a7e8:	e20784d3          	fmv.x.d	s1,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1222
		}
	else if (!oldinexact)
		clear_inexact();
#endif
#ifdef Avoid_Underflow
	if (scale) {
   1a7ec:	0c0c8e63          	beqz	s9,1a8c8 <_strtod_r+0x10c0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1223
		dword0(rv0) = Exp_1 - 2*P*Exp_msk1;
   1a7f0:	39500793          	li	a5,917
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1225
#ifndef _DOUBLE_IS_32BITS
		dword1(rv0) = 0;
   1a7f4:	03479793          	slli	a5,a5,0x34
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1227
#endif /*!_DOUBLE_IS_32BITS*/
		dval(rv) *= dval(rv0);
   1a7f8:	f20487d3          	fmv.d.x	fa5,s1
   1a7fc:	f2078753          	fmv.d.x	fa4,a5
   1a800:	04013503          	ld	a0,64(sp)
   1a804:	12e7f7d3          	fmul.d	fa5,fa5,fa4
   1a808:	e20784d3          	fmv.x.d	s1,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1230
#ifndef NO_ERRNO
		/* try to avoid the bug of testing an 8087 register value */
		if (dword0(rv) == 0 && dword1(rv) == 0)
   1a80c:	a20494e3          	bnez	s1,1a234 <_strtod_r+0xa2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1231
			ptr->_errno = ERANGE;
   1a810:	02200793          	li	a5,34
   1a814:	00f42023          	sw	a5,0(s0)
   1a818:	a1dff06f          	j	1a234 <_strtod_r+0xa2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:927

		if (i < 0) {
			/* Error is less than half an ulp -- check for
			 * special case of mantissa a power of two.
			 */
			if (dsign || dword1(rv) || dword0(rv) & Bndry_mask
   1a81c:	fc0b98e3          	bnez	s7,1a7ec <_strtod_r+0xfe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:927 (discriminator 1)
   1a820:	00c91793          	slli	a5,s2,0xc
   1a824:	fc0794e3          	bnez	a5,1a7ec <_strtod_r+0xfe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:930
#ifdef IEEE_Arith
#ifdef Avoid_Underflow
			 || (dword0(rv) & Exp_mask) <= (2*P+1)*Exp_msk1
   1a828:	02095913          	srli	s2,s2,0x20
   1a82c:	0009071b          	sext.w	a4,s2
   1a830:	7ff007b7          	lui	a5,0x7ff00
   1a834:	00f777b3          	and	a5,a4,a5
   1a838:	06b00737          	lui	a4,0x6b00
   1a83c:	faf778e3          	bleu	a5,a4,1a7ec <_strtod_r+0xfe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:942
				if (!delta->x[0] && delta->wds <= 1)
					inexact = 0;
#endif
				break;
				}
			if (!delta->_x[0] && delta->_wds <= 1) {
   1a840:	018c2783          	lw	a5,24(s8)
   1a844:	00079863          	bnez	a5,1a854 <_strtod_r+0x104c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:942 (discriminator 1)
   1a848:	014c2703          	lw	a4,20(s8)
   1a84c:	00100793          	li	a5,1
   1a850:	f8e7dee3          	ble	a4,a5,1a7ec <_strtod_r+0xfe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:949
#ifdef SET_INEXACT
				inexact = 0;
#endif
				break;
				}
			delta = lshift(ptr,delta,Log2P);
   1a854:	000c0593          	mv	a1,s8
   1a858:	00100613          	li	a2,1
   1a85c:	00040513          	mv	a0,s0
   1a860:	b85fd0ef          	jal	183e4 <__lshift>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:950
			if (cmp(delta, bs) > 0)
   1a864:	000a0593          	mv	a1,s4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:949
#ifdef SET_INEXACT
				inexact = 0;
#endif
				break;
				}
			delta = lshift(ptr,delta,Log2P);
   1a868:	00050c13          	mv	s8,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:950
			if (cmp(delta, bs) > 0)
   1a86c:	cd9fd0ef          	jal	18544 <__mcmp>
   1a870:	f6a05ee3          	blez	a0,1a7ec <_strtod_r+0xfe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1000
#endif /*IBM*/
					goto undfl;
				L -= Exp_msk1;
#else /*Sudden_Underflow}{*/
#ifdef Avoid_Underflow
				if (scale) {
   1a874:	140c8263          	beqz	s9,1a9b8 <_strtod_r+0x11b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1001
					L = dword0(rv) & Exp_mask;
   1a878:	0009071b          	sext.w	a4,s2
   1a87c:	7ff007b7          	lui	a5,0x7ff00
   1a880:	00f777b3          	and	a5,a4,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1002
					if (L <= (2*P+1)*Exp_msk1) {
   1a884:	06b00737          	lui	a4,0x6b00
   1a888:	12f74863          	blt	a4,a5,1a9b8 <_strtod_r+0x11b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1003
						if (L > (P+2)*Exp_msk1)
   1a88c:	03700737          	lui	a4,0x3700
   1a890:	f6f740e3          	blt	a4,a5,1a7f0 <_strtod_r+0xfe8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:693
#endif
				if (!dval(rv)) {
 undfl:
					dval(rv) = 0.;
#ifndef NO_ERRNO
					ptr->_errno = ERANGE;
   1a894:	02200793          	li	a5,34
   1a898:	00f42023          	sw	a5,0(s0)
   1a89c:	04013503          	ld	a0,64(sp)
   1a8a0:	00000493          	li	s1,0
   1a8a4:	991ff06f          	j	1a234 <_strtod_r+0xa2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:645
#ifndef _DOUBLE_IS_32BITS
				dword1(rv) = Big1;
#endif /*!_DOUBLE_IS_32BITS*/
				}
			else
				dword0(rv) += P*Exp_msk1;
   1a8a8:	035007b7          	lui	a5,0x3500
   1a8ac:	00f607bb          	addw	a5,a2,a5
   1a8b0:	02091913          	slli	s2,s2,0x20
   1a8b4:	02079793          	slli	a5,a5,0x20
   1a8b8:	02095913          	srli	s2,s2,0x20
   1a8bc:	00f96933          	or	s2,s2,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:564
	inexact = 1;
	if (k <= DBL_DIG)
		oldinexact = get_inexact();
#endif
#ifdef Avoid_Underflow
	scale = 0;
   1a8c0:	00000c93          	li	s9,0
   1a8c4:	d40ff06f          	j	19e04 <_strtod_r+0x5fc>
   1a8c8:	04013503          	ld	a0,64(sp)
   1a8cc:	969ff06f          	j	1a234 <_strtod_r+0xa2c>
match():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:230
		if ((c = *++s) >= 'A' && c <= 'Z')
			c += 'a' - 'A';
		if (c != d)
			return 0;
		}
	*sp = s + 1;
   1a8d0:	02c13c23          	sd	a2,56(sp)
   1a8d4:	ba4ff06f          	j	19c78 <_strtod_r+0x470>
_strtod_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:982
					dsign = 0;
#endif
					break;
					}
				}
			else if (!(dword0(rv) & Bndry_mask) && !dword1(rv)) {
   1a8d8:	00c91793          	slli	a5,s2,0xc
   1a8dc:	ee0790e3          	bnez	a5,1a7bc <_strtod_r+0xfb4>
   1a8e0:	02095913          	srli	s2,s2,0x20
   1a8e4:	f91ff06f          	j	1a874 <_strtod_r+0x106c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1030
#ifdef Avoid_Underflow
			if (Lsb1) {
				if (!(dword0(rv) & Lsb1))
					break;
				}
			else if (!(dword1(rv) & Lsb))
   1a8e8:	01012703          	lw	a4,16(sp)
   1a8ec:	0009079b          	sext.w	a5,s2
   1a8f0:	00e7f7b3          	and	a5,a5,a4
   1a8f4:	ee078ce3          	beqz	a5,1a7ec <_strtod_r+0xfe4>
   1a8f8:	ed9ff06f          	j	1a7d0 <_strtod_r+0xfc8>
   1a8fc:	00021337          	lui	t1,0x21
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:627
				if (bd0)
					goto retfree;
				goto ret;
				}
			e1 >>= 4;
			for(j = 0; e1 > 1; j++, e1 >>= 1)
   1a900:	00000613          	li	a2,0
   1a904:	e1030313          	addi	t1,t1,-496 # 20e10 <__mprec_bigtens>
   1a908:	c88ff06f          	j	19d90 <_strtod_r+0x588>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:440
			  case 'n':
			  case 'N':
				if (match(&s, "an")) {
#ifndef No_Hex_NaN
					if (*s == '(' /*)*/
					 && hexnan(&s, &fpinan, bits)
   1a90c:	000215b7          	lui	a1,0x21
   1a910:	04810613          	addi	a2,sp,72
   1a914:	f2858593          	addi	a1,a1,-216 # 20f28 <fpinan.2653>
   1a918:	03810513          	addi	a0,sp,56
   1a91c:	374040ef          	jal	1ec90 <__hexnan>
   1a920:	00500793          	li	a5,5
   1a924:	e6f516e3          	bne	a0,a5,1a790 <_strtod_r+0xf88>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:442
							== STRTOG_NaNbits) {
						dword0(rv) = 0x7ff00000 | bits[1];
   1a928:	04c12703          	lw	a4,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:444
#ifndef _DOUBLE_IS_32BITS
						dword1(rv) = bits[0];
   1a92c:	04816903          	lwu	s2,72(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:442
				if (match(&s, "an")) {
#ifndef No_Hex_NaN
					if (*s == '(' /*)*/
					 && hexnan(&s, &fpinan, bits)
							== STRTOG_NaNbits) {
						dword0(rv) = 0x7ff00000 | bits[1];
   1a930:	7ff007b7          	lui	a5,0x7ff00
   1a934:	00f767b3          	or	a5,a4,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:444
#ifndef _DOUBLE_IS_32BITS
						dword1(rv) = bits[0];
   1a938:	02079793          	slli	a5,a5,0x20
   1a93c:	0127e933          	or	s2,a5,s2
   1a940:	00090493          	mv	s1,s2
   1a944:	adcff06f          	j	19c20 <_strtod_r+0x418>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1046
				dval(rv) += ulp(dval(rv));
#endif
#ifndef ROUND_BIASED
			else {
#ifdef Avoid_Underflow
				dval(rv) -= sulp(rv, scale);
   1a948:	451050ef          	jal	20598 <sulp>
   1a94c:	f20487d3          	fmv.d.x	fa5,s1
   1a950:	0aa7f7d3          	fsub.d	fa5,fa5,fa0
   1a954:	e20784d3          	fmv.x.d	s1,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1051
#else
				dval(rv) -= ulp(dval(rv));
#endif
#ifndef Sudden_Underflow
				if (!dval(rv))
   1a958:	f20007d3          	fmv.d.x	fa5,zero
   1a95c:	f2048753          	fmv.d.x	fa4,s1
   1a960:	a2f727d3          	feq.d	a5,fa4,fa5
   1a964:	f20798e3          	bnez	a5,1a894 <_strtod_r+0x108c>
   1a968:	e85ff06f          	j	1a7ec <_strtod_r+0xfe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:661 (discriminator 1)
			if (e1 & Scale_Bit)
				scale = 2*P;
			for(j = 0; e1 > 0; j++, e1 >>= 1)
				if (e1 & 1)
					dval(rv) *= tinytens[j];
			if (scale && (j = 2*P + 1 - ((dword0(rv) & Exp_mask)
   1a96c:	42095613          	srai	a2,s2,0x20
   1a970:	02161793          	slli	a5,a2,0x21
   1a974:	0357d713          	srli	a4,a5,0x35
   1a978:	06b00793          	li	a5,107
   1a97c:	40e787bb          	subw	a5,a5,a4
   1a980:	b2f052e3          	blez	a5,1a4a4 <_strtod_r+0xc9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:664
						>> Exp_shift)) > 0) {
				/* scaled rv is denormal; zap j low bits */
				if (j >= 32) {
   1a984:	01f00713          	li	a4,31
   1a988:	06f75263          	ble	a5,a4,1a9ec <_strtod_r+0x11e4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:666
#ifndef _DOUBLE_IS_32BITS
					dword1(rv) = 0;
   1a98c:	fff00713          	li	a4,-1
   1a990:	02071593          	slli	a1,a4,0x20
   1a994:	00b97933          	and	s2,s2,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:668
#endif /*!_DOUBLE_IS_32BITS*/
					if (j >= 53)
   1a998:	03400593          	li	a1,52
   1a99c:	0cf5da63          	ble	a5,a1,1aa70 <_strtod_r+0x1268>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:669
					 dword0(rv) = (P+2)*Exp_msk1;
   1a9a0:	03700913          	li	s2,55
   1a9a4:	03491913          	slli	s2,s2,0x34
   1a9a8:	afdff06f          	j	1a4a4 <_strtod_r+0xc9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:564
	inexact = 1;
	if (k <= DBL_DIG)
		oldinexact = get_inexact();
#endif
#ifdef Avoid_Underflow
	scale = 0;
   1a9ac:	00000c93          	li	s9,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:658
			if (e1 >= 1 << n_bigtens)
				goto undfl;
#ifdef Avoid_Underflow
			if (e1 & Scale_Bit)
				scale = 2*P;
			for(j = 0; e1 > 0; j++, e1 >>= 1)
   1a9b0:	aaf04ae3          	bgtz	a5,1a464 <_strtod_r+0xc5c>
   1a9b4:	af1ff06f          	j	1a4a4 <_strtod_r+0xc9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1014
						}
					}
#endif /*Avoid_Underflow*/
				L = (dword0(rv) & Exp_mask) - Exp_msk1;
#endif /*Sudden_Underflow}*/
				dword0(rv) = L | Bndry_mask1;
   1a9b8:	7ff00737          	lui	a4,0x7ff00
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1012
						/* rv = smallest denormal */
						goto undfl;
						}
					}
#endif /*Avoid_Underflow*/
				L = (dword0(rv) & Exp_mask) - Exp_msk1;
   1a9bc:	0009091b          	sext.w	s2,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1014
#endif /*Sudden_Underflow}*/
				dword0(rv) = L | Bndry_mask1;
   1a9c0:	fff007b7          	lui	a5,0xfff00
   1a9c4:	00e97933          	and	s2,s2,a4
   1a9c8:	00f9073b          	addw	a4,s2,a5
   1a9cc:	001007b7          	lui	a5,0x100
   1a9d0:	fff7879b          	addiw	a5,a5,-1
   1a9d4:	00f767b3          	or	a5,a4,a5
   1a9d8:	fff00493          	li	s1,-1
   1a9dc:	02079793          	slli	a5,a5,0x20
   1a9e0:	0204d493          	srli	s1,s1,0x20
   1a9e4:	00f4e4b3          	or	s1,s1,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1021
				dword1(rv) = 0xffffffff;
#endif /*!_DOUBLE_IS_32BITS*/
#ifdef IBM
				goto cont;
#else
				break;
   1a9e8:	e05ff06f          	j	1a7ec <_strtod_r+0xfe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:675
					else
					 dword0(rv) &= 0xffffffff << (j-32);
					}
#ifndef _DOUBLE_IS_32BITS
				else
					dword1(rv) &= 0xffffffff << j;
   1a9ec:	fff00713          	li	a4,-1
   1a9f0:	0009061b          	sext.w	a2,s2
   1a9f4:	00f717bb          	sllw	a5,a4,a5
   1a9f8:	00f677b3          	and	a5,a2,a5
   1a9fc:	fff00713          	li	a4,-1
   1aa00:	02079793          	slli	a5,a5,0x20
   1aa04:	02071713          	slli	a4,a4,0x20
   1aa08:	0207d793          	srli	a5,a5,0x20
   1aa0c:	00e97933          	and	s2,s2,a4
   1aa10:	00f96933          	or	s2,s2,a5
   1aa14:	a91ff06f          	j	1a4a4 <_strtod_r+0xc9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:958
			}
		if (i == 0) {
			/* exactly half-way between */
			if (dsign) {
				if ((dword0(rv) & Bndry_mask1) == Bndry_mask1
				 &&  dword1(rv) == (
   1aa18:	0009059b          	sext.w	a1,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:961
#ifdef Avoid_Underflow
			(scale && (y = dword0(rv) & Exp_mask) <= 2*P*Exp_msk1)
		? (0xffffffff & (0xffffffff << (2*P+1-(y>>Exp_shift)))) :
   1aa1c:	fff00713          	li	a4,-1
   1aa20:	020c8263          	beqz	s9,1aa44 <_strtod_r+0x123c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:960
			/* exactly half-way between */
			if (dsign) {
				if ((dword0(rv) & Bndry_mask1) == Bndry_mask1
				 &&  dword1(rv) == (
#ifdef Avoid_Underflow
			(scale && (y = dword0(rv) & Exp_mask) <= 2*P*Exp_msk1)
   1aa24:	7ff007b7          	lui	a5,0x7ff00
   1aa28:	00f6f7b3          	and	a5,a3,a5
   1aa2c:	06a00637          	lui	a2,0x6a00
   1aa30:	00f66a63          	bltu	a2,a5,1aa44 <_strtod_r+0x123c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:961
		? (0xffffffff & (0xffffffff << (2*P+1-(y>>Exp_shift)))) :
   1aa34:	0147d79b          	srliw	a5,a5,0x14
   1aa38:	06b00613          	li	a2,107
   1aa3c:	40f607bb          	subw	a5,a2,a5
   1aa40:	00f7173b          	sllw	a4,a4,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:958
			}
		if (i == 0) {
			/* exactly half-way between */
			if (dsign) {
				if ((dword0(rv) & Bndry_mask1) == Bndry_mask1
				 &&  dword1(rv) == (
   1aa44:	d6b71ce3          	bne	a4,a1,1a7bc <_strtod_r+0xfb4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:965
			(scale && (y = dword0(rv) & Exp_mask) <= 2*P*Exp_msk1)
		? (0xffffffff & (0xffffffff << (2*P+1-(y>>Exp_shift)))) :
#endif
						   0xffffffff)) {
					/*boundary case -- increment exponent*/
					if (dword0(rv) == Big0 && dword1(rv) == Big1)
   1aa48:	7ff00713          	li	a4,2047
   1aa4c:	03471713          	slli	a4,a4,0x34
   1aa50:	fff70713          	addi	a4,a4,-1 # 7fefffff <_end+0x7fed91e7>
   1aa54:	fce90663          	beq	s2,a4,1a220 <_strtod_r+0xa18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:967
						goto ovfl;
					dword0(rv) = (dword0(rv) & Exp_mask)
   1aa58:	7ff007b7          	lui	a5,0x7ff00
   1aa5c:	00f6f7b3          	and	a5,a3,a5
   1aa60:	001004b7          	lui	s1,0x100
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:974
#ifdef IBM
						| Exp_msk1 >> 4
#endif
						;
#ifndef _DOUBLE_IS_32BITS
					dword1(rv) = 0;
   1aa64:	009784bb          	addw	s1,a5,s1
   1aa68:	02049493          	slli	s1,s1,0x20
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:979
#endif /*!_DOUBLE_IS_32BITS*/
#ifdef Avoid_Underflow
					dsign = 0;
#endif
					break;
   1aa6c:	d81ff06f          	j	1a7ec <_strtod_r+0xfe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:671
					dword1(rv) = 0;
#endif /*!_DOUBLE_IS_32BITS*/
					if (j >= 53)
					 dword0(rv) = (P+2)*Exp_msk1;
					else
					 dword0(rv) &= 0xffffffff << (j-32);
   1aa70:	00f717bb          	sllw	a5,a4,a5
   1aa74:	00c7f7b3          	and	a5,a5,a2
   1aa78:	02075713          	srli	a4,a4,0x20
   1aa7c:	02079793          	slli	a5,a5,0x20
   1aa80:	00e97933          	and	s2,s2,a4
   1aa84:	00f96933          	or	s2,s2,a5
   1aa88:	a1dff06f          	j	1a4a4 <_strtod_r+0xc9c>
   1aa8c:	00080913          	mv	s2,a6
   1aa90:	b00ff06f          	j	19d90 <_strtod_r+0x588>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:362
		for(; c >= '0' && c <= '9'; c = *++s) {
 have_dig:
			nz++;
			if (c -= '0') {
				nf += nz;
				for(i = 1; i < nz; i++)
   1aa94:	00068613          	mv	a2,a3
   1aa98:	03813803          	ld	a6,56(sp)
   1aa9c:	00f686bb          	addw	a3,a3,a5
   1aaa0:	b8dff06f          	j	1a62c <_strtod_r+0xe24>
   1aaa4:	00058913          	mv	s2,a1
   1aaa8:	9f9ff06f          	j	1a4a0 <_strtod_r+0xc98>

000000000001aaac <strtod>:
strtod():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1260

double
_DEFUN (strtod, (s00, se),
	_CONST char *__restrict s00 _AND char **__restrict se)
{
  return _strtod_r (_REENT, s00, se);
   1aaac:	00058613          	mv	a2,a1
   1aab0:	00050593          	mv	a1,a0
   1aab4:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
   1aab8:	d51fe06f          	j	19808 <_strtod_r>

000000000001aabc <strtof>:
strtof():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1268
float
_DEFUN (strtof, (s00, se),
	_CONST char *__restrict s00 _AND
	char **__restrict se)
{
  double retval = _strtod_r (_REENT, s00, se);
   1aabc:	00058613          	mv	a2,a1
   1aac0:	00050593          	mv	a1,a0
   1aac4:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1267

float
_DEFUN (strtof, (s00, se),
	_CONST char *__restrict s00 _AND
	char **__restrict se)
{
   1aac8:	fe010113          	addi	sp,sp,-32
   1aacc:	00813427          	fsd	fs0,8(sp)
   1aad0:	00113c23          	sd	ra,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1268
  double retval = _strtod_r (_REENT, s00, se);
   1aad4:	d35fe0ef          	jal	19808 <_strtod_r>
   1aad8:	22a50453          	fmv.d	fs0,fa0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1269
  if (isnan (retval))
   1aadc:	a79fe0ef          	jal	19554 <__fpclassifyd>
   1aae0:	00050c63          	beqz	a0,1aaf8 <strtof+0x3c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1272
    return nanf (NULL);
  return (float)retval;
}
   1aae4:	01813083          	ld	ra,24(sp)
   1aae8:	40147553          	fcvt.s.d	fa0,fs0
   1aaec:	00813407          	fld	fs0,8(sp)
   1aaf0:	02010113          	addi	sp,sp,32
   1aaf4:	00008067          	ret
   1aaf8:	01813083          	ld	ra,24(sp)
   1aafc:	00813407          	fld	fs0,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1270
	_CONST char *__restrict s00 _AND
	char **__restrict se)
{
  double retval = _strtod_r (_REENT, s00, se);
  if (isnan (retval))
    return nanf (NULL);
   1ab00:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1272
  return (float)retval;
}
   1ab04:	02010113          	addi	sp,sp,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:1270
	_CONST char *__restrict s00 _AND
	char **__restrict se)
{
  double retval = _strtod_r (_REENT, s00, se);
  if (isnan (retval))
    return nanf (NULL);
   1ab08:	a41fe06f          	j	19548 <nanf>

000000000001ab0c <_strtol_r>:
_strtol_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:139
_DEFUN (_strtol_r, (rptr, nptr, endptr, base),
	struct _reent *rptr _AND
	_CONST char *__restrict nptr _AND
	char **__restrict endptr _AND
	int base)
{
   1ab0c:	8281be83          	ld	t4,-2008(gp) # 24468 <__ctype_ptr__>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:140
	register const unsigned char *s = (const unsigned char *)nptr;
   1ab10:	00058313          	mv	t1,a1
   1ab14:	0080006f          	j	1ab1c <_strtol_r+0x10>
   1ab18:	00080313          	mv	t1,a6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:152 (discriminator 1)
	 * Skip white space and pick up leading +/- sign if any.
	 * If base is 0, allow 0x for hex and 0 for octal, else
	 * assume decimal; if base is already 16, allow 0x.
	 */
	do {
		c = *s++;
   1ab1c:	00130813          	addi	a6,t1,1
   1ab20:	fff84783          	lbu	a5,-1(a6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:153
	} while (isspace(c));
   1ab24:	00fe8733          	add	a4,t4,a5
   1ab28:	00174703          	lbu	a4,1(a4)
   1ab2c:	00877713          	andi	a4,a4,8
   1ab30:	fe0714e3          	bnez	a4,1ab18 <_strtol_r+0xc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:139
_DEFUN (_strtol_r, (rptr, nptr, endptr, base),
	struct _reent *rptr _AND
	_CONST char *__restrict nptr _AND
	char **__restrict endptr _AND
	int base)
{
   1ab34:	ff010113          	addi	sp,sp,-16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:152
	 * Skip white space and pick up leading +/- sign if any.
	 * If base is 0, allow 0x for hex and 0 for octal, else
	 * assume decimal; if base is already 16, allow 0x.
	 */
	do {
		c = *s++;
   1ab38:	00078893          	mv	a7,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:139
_DEFUN (_strtol_r, (rptr, nptr, endptr, base),
	struct _reent *rptr _AND
	_CONST char *__restrict nptr _AND
	char **__restrict endptr _AND
	int base)
{
   1ab3c:	00813423          	sd	s0,8(sp)
   1ab40:	00913023          	sd	s1,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:154
	 * assume decimal; if base is already 16, allow 0x.
	 */
	do {
		c = *s++;
	} while (isspace(c));
	if (c == '-') {
   1ab44:	02d00793          	li	a5,45
   1ab48:	14f88063          	beq	a7,a5,1ac88 <_strtol_r+0x17c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:157
		neg = 1;
		c = *s++;
	} else if (c == '+')
   1ab4c:	02b00793          	li	a5,43
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:144
{
	register const unsigned char *s = (const unsigned char *)nptr;
	register unsigned long acc;
	register int c;
	register unsigned long cutoff;
	register int neg = 0, any, cutlim;
   1ab50:	00000393          	li	t2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:157
		c = *s++;
	} while (isspace(c));
	if (c == '-') {
		neg = 1;
		c = *s++;
	} else if (c == '+')
   1ab54:	12f88463          	beq	a7,a5,1ac7c <_strtol_r+0x170>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:159
		c = *s++;
	if ((base == 0 || base == 16) &&
   1ab58:	0e068263          	beqz	a3,1ac3c <_strtol_r+0x130>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:159 (discriminator 2)
   1ab5c:	01000793          	li	a5,16
   1ab60:	00068413          	mv	s0,a3
   1ab64:	14f68863          	beq	a3,a5,1acb4 <_strtol_r+0x1a8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:185
	 * the number is too big, and we will return a range error.
	 *
	 * Set any if any `digits' consumed; make it negative to indicate
	 * overflow.
	 */
	cutoff = neg ? -(unsigned long)LONG_MIN : LONG_MAX;
   1ab68:	fff00793          	li	a5,-1
   1ab6c:	0017df13          	srli	t5,a5,0x1
   1ab70:	00038463          	beqz	t2,1ab78 <_strtol_r+0x6c>
   1ab74:	03f79f13          	slli	t5,a5,0x3f
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:186 (discriminator 4)
	cutlim = cutoff % (unsigned long)base;
   1ab78:	028f74b3          	remu	s1,t5,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:189
	cutoff /= (unsigned long)base;
	for (acc = 0, any = 0;; c = *s++) {
		if (isdigit(c))
   1ab7c:	011e8733          	add	a4,t4,a7
   1ab80:	00174783          	lbu	a5,1(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:188
	 * overflow.
	 */
	cutoff = neg ? -(unsigned long)LONG_MIN : LONG_MAX;
	cutlim = cutoff % (unsigned long)base;
	cutoff /= (unsigned long)base;
	for (acc = 0, any = 0;; c = *s++) {
   1ab84:	00000e13          	li	t3,0
   1ab88:	00000313          	li	t1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:189
		if (isdigit(c))
   1ab8c:	0047f713          	andi	a4,a5,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:192
			c -= '0';
		else if (isalpha(c))
			c -= isupper(c) ? 'A' - 10 : 'a' - 10;
   1ab90:	00100293          	li	t0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:197
		else
			break;
		if (c >= base)
			break;
               if (any < 0 || acc > cutoff || (acc == cutoff && c > cutlim))
   1ab94:	fff00f93          	li	t6,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:187
	 * Set any if any `digits' consumed; make it negative to indicate
	 * overflow.
	 */
	cutoff = neg ? -(unsigned long)LONG_MIN : LONG_MAX;
	cutlim = cutoff % (unsigned long)base;
	cutoff /= (unsigned long)base;
   1ab98:	028f5f33          	divu	t5,t5,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:186
	 *
	 * Set any if any `digits' consumed; make it negative to indicate
	 * overflow.
	 */
	cutoff = neg ? -(unsigned long)LONG_MIN : LONG_MAX;
	cutlim = cutoff % (unsigned long)base;
   1ab9c:	0004849b          	sext.w	s1,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:189
	cutoff /= (unsigned long)base;
	for (acc = 0, any = 0;; c = *s++) {
		if (isdigit(c))
   1aba0:	04070063          	beqz	a4,1abe0 <_strtol_r+0xd4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:190
			c -= '0';
   1aba4:	fd08879b          	addiw	a5,a7,-48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:195
		else if (isalpha(c))
			c -= isupper(c) ? 'A' - 10 : 'a' - 10;
		else
			break;
		if (c >= base)
   1aba8:	04d7de63          	ble	a3,a5,1ac04 <_strtol_r+0xf8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:197
			break;
               if (any < 0 || acc > cutoff || (acc == cutoff && c > cutlim))
   1abac:	01fe0e63          	beq	t3,t6,1abc8 <_strtol_r+0xbc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:198 (discriminator 1)
			any = -1;
   1abb0:	fff00e13          	li	t3,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:197
			c -= isupper(c) ? 'A' - 10 : 'a' - 10;
		else
			break;
		if (c >= base)
			break;
               if (any < 0 || acc > cutoff || (acc == cutoff && c > cutlim))
   1abb4:	006f6a63          	bltu	t5,t1,1abc8 <_strtol_r+0xbc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:197 (discriminator 2)
   1abb8:	07e30e63          	beq	t1,t5,1ac34 <_strtol_r+0x128>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:200
			any = -1;
		else {
			any = 1;
   1abbc:	00100e13          	li	t3,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:201
			acc *= base;
   1abc0:	02830333          	mul	t1,t1,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:202
			acc += c;
   1abc4:	00678333          	add	t1,a5,t1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:188
	 * overflow.
	 */
	cutoff = neg ? -(unsigned long)LONG_MIN : LONG_MAX;
	cutlim = cutoff % (unsigned long)base;
	cutoff /= (unsigned long)base;
	for (acc = 0, any = 0;; c = *s++) {
   1abc8:	00180813          	addi	a6,a6,1
   1abcc:	fff84883          	lbu	a7,-1(a6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:189
		if (isdigit(c))
   1abd0:	011e8733          	add	a4,t4,a7
   1abd4:	00174783          	lbu	a5,1(a4)
   1abd8:	0047f713          	andi	a4,a5,4
   1abdc:	fc0714e3          	bnez	a4,1aba4 <_strtol_r+0x98>
   1abe0:	0037f713          	andi	a4,a5,3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:191
			c -= '0';
		else if (isalpha(c))
   1abe4:	02070063          	beqz	a4,1ac04 <_strtol_r+0xf8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:192
			c -= isupper(c) ? 'A' - 10 : 'a' - 10;
   1abe8:	40e2873b          	subw	a4,t0,a4
   1abec:	00e03733          	snez	a4,a4
   1abf0:	40e0073b          	negw	a4,a4
   1abf4:	02077713          	andi	a4,a4,32
   1abf8:	0377071b          	addiw	a4,a4,55
   1abfc:	40e887bb          	subw	a5,a7,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:195
		else
			break;
		if (c >= base)
   1ac00:	fad7c6e3          	blt	a5,a3,1abac <_strtol_r+0xa0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:205
			any = 1;
			acc *= base;
			acc += c;
		}
	}
	if (any < 0) {
   1ac04:	fff00793          	li	a5,-1
   1ac08:	04fe0863          	beq	t3,a5,1ac58 <_strtol_r+0x14c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:208
		acc = neg ? LONG_MIN : LONG_MAX;
		rptr->_errno = ERANGE;
	} else if (neg)
   1ac0c:	04039263          	bnez	t2,1ac50 <_strtol_r+0x144>
   1ac10:	00030793          	mv	a5,t1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:210
		acc = -acc;
	if (endptr != 0)
   1ac14:	00060663          	beqz	a2,1ac20 <_strtol_r+0x114>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:211
		*endptr = (char *) (any ? (char *)s - 1 : nptr);
   1ac18:	040e1e63          	bnez	t3,1ac74 <_strtol_r+0x168>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:211 (discriminator 4)
   1ac1c:	00b63023          	sd	a1,0(a2) # 6a00000 <_end+0x69d91e8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:213
	return (acc);
}
   1ac20:	00078513          	mv	a0,a5
   1ac24:	00813403          	ld	s0,8(sp)
   1ac28:	00013483          	ld	s1,0(sp)
   1ac2c:	01010113          	addi	sp,sp,16
   1ac30:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:197 (discriminator 3)
			c -= isupper(c) ? 'A' - 10 : 'a' - 10;
		else
			break;
		if (c >= base)
			break;
               if (any < 0 || acc > cutoff || (acc == cutoff && c > cutlim))
   1ac34:	f8f4cae3          	blt	s1,a5,1abc8 <_strtol_r+0xbc>
   1ac38:	f85ff06f          	j	1abbc <_strtol_r+0xb0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:159
	if (c == '-') {
		neg = 1;
		c = *s++;
	} else if (c == '+')
		c = *s++;
	if ((base == 0 || base == 16) &&
   1ac3c:	03000793          	li	a5,48
   1ac40:	04f88c63          	beq	a7,a5,1ac98 <_strtol_r+0x18c>
   1ac44:	00a00413          	li	s0,10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:166
		c = s[1];
		s += 2;
		base = 16;
	}
	if (base == 0)
		base = c == '0' ? 8 : 10;
   1ac48:	00040693          	mv	a3,s0
   1ac4c:	f1dff06f          	j	1ab68 <_strtol_r+0x5c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:209
	}
	if (any < 0) {
		acc = neg ? LONG_MIN : LONG_MAX;
		rptr->_errno = ERANGE;
	} else if (neg)
		acc = -acc;
   1ac50:	40600333          	neg	t1,t1
   1ac54:	fbdff06f          	j	1ac10 <_strtol_r+0x104>
   1ac58:	fff00713          	li	a4,-1
   1ac5c:	00175793          	srli	a5,a4,0x1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:206
			acc *= base;
			acc += c;
		}
	}
	if (any < 0) {
		acc = neg ? LONG_MIN : LONG_MAX;
   1ac60:	00038463          	beqz	t2,1ac68 <_strtol_r+0x15c>
   1ac64:	03f71793          	slli	a5,a4,0x3f
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:207 (discriminator 4)
		rptr->_errno = ERANGE;
   1ac68:	02200713          	li	a4,34
   1ac6c:	00e52023          	sw	a4,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:210
	} else if (neg)
		acc = -acc;
	if (endptr != 0)
   1ac70:	fa0608e3          	beqz	a2,1ac20 <_strtol_r+0x114>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:211 (discriminator 1)
		*endptr = (char *) (any ? (char *)s - 1 : nptr);
   1ac74:	fff80593          	addi	a1,a6,-1
   1ac78:	fa5ff06f          	j	1ac1c <_strtol_r+0x110>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:158
	} while (isspace(c));
	if (c == '-') {
		neg = 1;
		c = *s++;
	} else if (c == '+')
		c = *s++;
   1ac7c:	00134883          	lbu	a7,1(t1)
   1ac80:	00230813          	addi	a6,t1,2
   1ac84:	ed5ff06f          	j	1ab58 <_strtol_r+0x4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:156
	do {
		c = *s++;
	} while (isspace(c));
	if (c == '-') {
		neg = 1;
		c = *s++;
   1ac88:	00230813          	addi	a6,t1,2
   1ac8c:	00134883          	lbu	a7,1(t1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:155
	 */
	do {
		c = *s++;
	} while (isspace(c));
	if (c == '-') {
		neg = 1;
   1ac90:	00100393          	li	t2,1
   1ac94:	ec5ff06f          	j	1ab58 <_strtol_r+0x4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:160
		c = *s++;
	} else if (c == '+')
		c = *s++;
	if ((base == 0 || base == 16) &&
	    c == '0' && (*s == 'x' || *s == 'X')) {
   1ac98:	00084783          	lbu	a5,0(a6)
   1ac9c:	05800713          	li	a4,88
   1aca0:	0df7f793          	andi	a5,a5,223
   1aca4:	02e78463          	beq	a5,a4,1accc <_strtol_r+0x1c0>
   1aca8:	00800413          	li	s0,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:166
		c = s[1];
		s += 2;
		base = 16;
	}
	if (base == 0)
		base = c == '0' ? 8 : 10;
   1acac:	00040693          	mv	a3,s0
   1acb0:	eb9ff06f          	j	1ab68 <_strtol_r+0x5c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:159
	if (c == '-') {
		neg = 1;
		c = *s++;
	} else if (c == '+')
		c = *s++;
	if ((base == 0 || base == 16) &&
   1acb4:	03000793          	li	a5,48
   1acb8:	02f89463          	bne	a7,a5,1ace0 <_strtol_r+0x1d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:160
	    c == '0' && (*s == 'x' || *s == 'X')) {
   1acbc:	00084783          	lbu	a5,0(a6)
   1acc0:	05800713          	li	a4,88
   1acc4:	0df7f793          	andi	a5,a5,223
   1acc8:	00e79c63          	bne	a5,a4,1ace0 <_strtol_r+0x1d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:162
		c = s[1];
		s += 2;
   1accc:	01000413          	li	s0,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:161
		c = *s++;
	} else if (c == '+')
		c = *s++;
	if ((base == 0 || base == 16) &&
	    c == '0' && (*s == 'x' || *s == 'X')) {
		c = s[1];
   1acd0:	00184883          	lbu	a7,1(a6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:163
		s += 2;
		base = 16;
   1acd4:	00040693          	mv	a3,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:162
	} else if (c == '+')
		c = *s++;
	if ((base == 0 || base == 16) &&
	    c == '0' && (*s == 'x' || *s == 'X')) {
		c = s[1];
		s += 2;
   1acd8:	00280813          	addi	a6,a6,2
   1acdc:	e8dff06f          	j	1ab68 <_strtol_r+0x5c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:160
		neg = 1;
		c = *s++;
	} else if (c == '+')
		c = *s++;
	if ((base == 0 || base == 16) &&
	    c == '0' && (*s == 'x' || *s == 'X')) {
   1ace0:	01000413          	li	s0,16
   1ace4:	e85ff06f          	j	1ab68 <_strtol_r+0x5c>

000000000001ace8 <strtol>:
strtol():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtol.c:223
_DEFUN (strtol, (s, ptr, base),
	_CONST char *__restrict s _AND
	char **__restrict ptr _AND
	int base)
{
	return _strtol_r (_REENT, s, ptr, base);
   1ace8:	00060693          	mv	a3,a2
   1acec:	00058613          	mv	a2,a1
   1acf0:	00050593          	mv	a1,a0
   1acf4:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
   1acf8:	e15ff06f          	j	1ab0c <_strtol_r>

000000000001acfc <_strtoul_r>:
_strtoul_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:140
_DEFUN (_strtoul_r, (rptr, nptr, endptr, base),
	struct _reent *rptr _AND
	_CONST char *__restrict nptr _AND
	char **__restrict endptr _AND
	int base)
{
   1acfc:	00050f13          	mv	t5,a0
   1ad00:	8281be03          	ld	t3,-2008(gp) # 24468 <__ctype_ptr__>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:141
	register const unsigned char *s = (const unsigned char *)nptr;
   1ad04:	00058313          	mv	t1,a1
   1ad08:	0080006f          	j	1ad10 <_strtoul_r+0x14>
   1ad0c:	00080313          	mv	t1,a6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:151 (discriminator 1)

	/*
	 * See strtol for comments as to the logic used.
	 */
	do {
		c = *s++;
   1ad10:	00130813          	addi	a6,t1,1
   1ad14:	fff84783          	lbu	a5,-1(a6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:152
	} while (isspace(c));
   1ad18:	00fe0733          	add	a4,t3,a5
   1ad1c:	00174703          	lbu	a4,1(a4)
   1ad20:	00877713          	andi	a4,a4,8
   1ad24:	fe0714e3          	bnez	a4,1ad0c <_strtoul_r+0x10>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:140
_DEFUN (_strtoul_r, (rptr, nptr, endptr, base),
	struct _reent *rptr _AND
	_CONST char *__restrict nptr _AND
	char **__restrict endptr _AND
	int base)
{
   1ad28:	ff010113          	addi	sp,sp,-16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:151

	/*
	 * See strtol for comments as to the logic used.
	 */
	do {
		c = *s++;
   1ad2c:	00078893          	mv	a7,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:140
_DEFUN (_strtoul_r, (rptr, nptr, endptr, base),
	struct _reent *rptr _AND
	_CONST char *__restrict nptr _AND
	char **__restrict endptr _AND
	int base)
{
   1ad30:	00813423          	sd	s0,8(sp)
   1ad34:	00913023          	sd	s1,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:153
	 * See strtol for comments as to the logic used.
	 */
	do {
		c = *s++;
	} while (isspace(c));
	if (c == '-') {
   1ad38:	02d00793          	li	a5,45
   1ad3c:	12f88263          	beq	a7,a5,1ae60 <_strtoul_r+0x164>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:156
		neg = 1;
		c = *s++;
	} else if (c == '+')
   1ad40:	02b00793          	li	a5,43
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:145
{
	register const unsigned char *s = (const unsigned char *)nptr;
	register unsigned long acc;
	register int c;
	register unsigned long cutoff;
	register int neg = 0, any, cutlim;
   1ad44:	00000f93          	li	t6,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:156
		c = *s++;
	} while (isspace(c));
	if (c == '-') {
		neg = 1;
		c = *s++;
	} else if (c == '+')
   1ad48:	0ef88663          	beq	a7,a5,1ae34 <_strtoul_r+0x138>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:158
		c = *s++;
	if ((base == 0 || base == 16) &&
   1ad4c:	02068263          	beqz	a3,1ad70 <_strtoul_r+0x74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:158 (discriminator 2)
   1ad50:	01000793          	li	a5,16
   1ad54:	14f68263          	beq	a3,a5,1ae98 <_strtoul_r+0x19c>
   1ad58:	fff00e93          	li	t4,-1
   1ad5c:	02def3b3          	remu	t2,t4,a3
   1ad60:	00068293          	mv	t0,a3
   1ad64:	02dedeb3          	divu	t4,t4,a3
   1ad68:	0003839b          	sext.w	t2,t2
   1ad6c:	0200006f          	j	1ad8c <_strtoul_r+0x90>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:158
   1ad70:	03000793          	li	a5,48
   1ad74:	0ef88e63          	beq	a7,a5,1ae70 <_strtoul_r+0x174>
   1ad78:	000247b7          	lui	a5,0x24
   1ad7c:	5307be83          	ld	t4,1328(a5) # 24530 <mask+0x98>
   1ad80:	00a00293          	li	t0,10
   1ad84:	00500393          	li	t2,5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:165
		c = s[1];
		s += 2;
		base = 16;
	}
	if (base == 0)
		base = c == '0' ? 8 : 10;
   1ad88:	00028693          	mv	a3,t0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:169
	cutoff = (unsigned long)ULONG_MAX / (unsigned long)base;
	cutlim = (unsigned long)ULONG_MAX % (unsigned long)base;
	for (acc = 0, any = 0;; c = *s++) {
		if (isdigit(c))
   1ad8c:	011e0733          	add	a4,t3,a7
   1ad90:	00174783          	lbu	a5,1(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:168
	}
	if (base == 0)
		base = c == '0' ? 8 : 10;
	cutoff = (unsigned long)ULONG_MAX / (unsigned long)base;
	cutlim = (unsigned long)ULONG_MAX % (unsigned long)base;
	for (acc = 0, any = 0;; c = *s++) {
   1ad94:	00000313          	li	t1,0
   1ad98:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:169
		if (isdigit(c))
   1ad9c:	0047f713          	andi	a4,a5,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:172
			c -= '0';
		else if (isalpha(c))
			c -= isupper(c) ? 'A' - 10 : 'a' - 10;
   1ada0:	00100493          	li	s1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:177
		else
			break;
		if (c >= base)
			break;
               if (any < 0 || acc > cutoff || (acc == cutoff && c > cutlim))
   1ada4:	fff00413          	li	s0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:169
	if (base == 0)
		base = c == '0' ? 8 : 10;
	cutoff = (unsigned long)ULONG_MAX / (unsigned long)base;
	cutlim = (unsigned long)ULONG_MAX % (unsigned long)base;
	for (acc = 0, any = 0;; c = *s++) {
		if (isdigit(c))
   1ada8:	04070063          	beqz	a4,1ade8 <_strtoul_r+0xec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:170
			c -= '0';
   1adac:	fd08879b          	addiw	a5,a7,-48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:175
		else if (isalpha(c))
			c -= isupper(c) ? 'A' - 10 : 'a' - 10;
		else
			break;
		if (c >= base)
   1adb0:	04d7de63          	ble	a3,a5,1ae0c <_strtoul_r+0x110>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:177
			break;
               if (any < 0 || acc > cutoff || (acc == cutoff && c > cutlim))
   1adb4:	00830e63          	beq	t1,s0,1add0 <_strtoul_r+0xd4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:178 (discriminator 1)
			any = -1;
   1adb8:	fff00313          	li	t1,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:177
			c -= isupper(c) ? 'A' - 10 : 'a' - 10;
		else
			break;
		if (c >= base)
			break;
               if (any < 0 || acc > cutoff || (acc == cutoff && c > cutlim))
   1adbc:	00aeea63          	bltu	t4,a0,1add0 <_strtoul_r+0xd4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:177 (discriminator 2)
   1adc0:	09d50063          	beq	a0,t4,1ae40 <_strtoul_r+0x144>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:181
			any = -1;
		else {
			any = 1;
			acc *= base;
   1adc4:	02550733          	mul	a4,a0,t0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:180
		if (c >= base)
			break;
               if (any < 0 || acc > cutoff || (acc == cutoff && c > cutlim))
			any = -1;
		else {
			any = 1;
   1adc8:	00100313          	li	t1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:182
			acc *= base;
			acc += c;
   1adcc:	00e78533          	add	a0,a5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:168
	}
	if (base == 0)
		base = c == '0' ? 8 : 10;
	cutoff = (unsigned long)ULONG_MAX / (unsigned long)base;
	cutlim = (unsigned long)ULONG_MAX % (unsigned long)base;
	for (acc = 0, any = 0;; c = *s++) {
   1add0:	00180813          	addi	a6,a6,1
   1add4:	fff84883          	lbu	a7,-1(a6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:169
		if (isdigit(c))
   1add8:	011e0733          	add	a4,t3,a7
   1addc:	00174783          	lbu	a5,1(a4)
   1ade0:	0047f713          	andi	a4,a5,4
   1ade4:	fc0714e3          	bnez	a4,1adac <_strtoul_r+0xb0>
   1ade8:	0037f713          	andi	a4,a5,3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:171
			c -= '0';
		else if (isalpha(c))
   1adec:	02070063          	beqz	a4,1ae0c <_strtoul_r+0x110>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:172
			c -= isupper(c) ? 'A' - 10 : 'a' - 10;
   1adf0:	40e4873b          	subw	a4,s1,a4
   1adf4:	00e03733          	snez	a4,a4
   1adf8:	40e0073b          	negw	a4,a4
   1adfc:	02077713          	andi	a4,a4,32
   1ae00:	0377071b          	addiw	a4,a4,55
   1ae04:	40e887bb          	subw	a5,a7,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:175
		else
			break;
		if (c >= base)
   1ae08:	fad7c6e3          	blt	a5,a3,1adb4 <_strtoul_r+0xb8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:185
			any = 1;
			acc *= base;
			acc += c;
		}
	}
	if (any < 0) {
   1ae0c:	02034e63          	bltz	t1,1ae48 <_strtoul_r+0x14c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:188
		acc = ULONG_MAX;
		rptr->_errno = ERANGE;
	} else if (neg)
   1ae10:	000f8463          	beqz	t6,1ae18 <_strtoul_r+0x11c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:189
		acc = -acc;
   1ae14:	40a00533          	neg	a0,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:190
	if (endptr != 0)
   1ae18:	00060663          	beqz	a2,1ae24 <_strtoul_r+0x128>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:191
		*endptr = (char *) (any ? (char *)s - 1 : nptr);
   1ae1c:	02031e63          	bnez	t1,1ae58 <_strtoul_r+0x15c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:191 (discriminator 4)
   1ae20:	00b63023          	sd	a1,0(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:193
	return (acc);
}
   1ae24:	00813403          	ld	s0,8(sp)
   1ae28:	00013483          	ld	s1,0(sp)
   1ae2c:	01010113          	addi	sp,sp,16
   1ae30:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:157
	} while (isspace(c));
	if (c == '-') {
		neg = 1;
		c = *s++;
	} else if (c == '+')
		c = *s++;
   1ae34:	00134883          	lbu	a7,1(t1)
   1ae38:	00230813          	addi	a6,t1,2
   1ae3c:	f11ff06f          	j	1ad4c <_strtoul_r+0x50>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:177 (discriminator 3)
			c -= isupper(c) ? 'A' - 10 : 'a' - 10;
		else
			break;
		if (c >= base)
			break;
               if (any < 0 || acc > cutoff || (acc == cutoff && c > cutlim))
   1ae40:	f8f3c8e3          	blt	t2,a5,1add0 <_strtoul_r+0xd4>
   1ae44:	f81ff06f          	j	1adc4 <_strtoul_r+0xc8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:187
			acc += c;
		}
	}
	if (any < 0) {
		acc = ULONG_MAX;
		rptr->_errno = ERANGE;
   1ae48:	02200793          	li	a5,34
   1ae4c:	00ff2023          	sw	a5,0(t5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:186
			acc *= base;
			acc += c;
		}
	}
	if (any < 0) {
		acc = ULONG_MAX;
   1ae50:	fff00513          	li	a0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:190
		rptr->_errno = ERANGE;
	} else if (neg)
		acc = -acc;
	if (endptr != 0)
   1ae54:	fc0608e3          	beqz	a2,1ae24 <_strtoul_r+0x128>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:191 (discriminator 1)
		*endptr = (char *) (any ? (char *)s - 1 : nptr);
   1ae58:	fff80593          	addi	a1,a6,-1
   1ae5c:	fc5ff06f          	j	1ae20 <_strtoul_r+0x124>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:155
	do {
		c = *s++;
	} while (isspace(c));
	if (c == '-') {
		neg = 1;
		c = *s++;
   1ae60:	00230813          	addi	a6,t1,2
   1ae64:	00134883          	lbu	a7,1(t1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:154
	 */
	do {
		c = *s++;
	} while (isspace(c));
	if (c == '-') {
		neg = 1;
   1ae68:	00100f93          	li	t6,1
   1ae6c:	ee1ff06f          	j	1ad4c <_strtoul_r+0x50>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:159
		c = *s++;
	} else if (c == '+')
		c = *s++;
	if ((base == 0 || base == 16) &&
	    c == '0' && (*s == 'x' || *s == 'X')) {
   1ae70:	00084783          	lbu	a5,0(a6)
   1ae74:	05800713          	li	a4,88
   1ae78:	0df7f793          	andi	a5,a5,223
   1ae7c:	02e78a63          	beq	a5,a4,1aeb0 <_strtoul_r+0x1b4>
   1ae80:	00800293          	li	t0,8
   1ae84:	fff00e93          	li	t4,-1
   1ae88:	00700393          	li	t2,7
   1ae8c:	003ede93          	srli	t4,t4,0x3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:165
		c = s[1];
		s += 2;
		base = 16;
	}
	if (base == 0)
		base = c == '0' ? 8 : 10;
   1ae90:	00028693          	mv	a3,t0
   1ae94:	ef9ff06f          	j	1ad8c <_strtoul_r+0x90>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:158
	if (c == '-') {
		neg = 1;
		c = *s++;
	} else if (c == '+')
		c = *s++;
	if ((base == 0 || base == 16) &&
   1ae98:	03000793          	li	a5,48
   1ae9c:	02f89a63          	bne	a7,a5,1aed0 <_strtoul_r+0x1d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:159
	    c == '0' && (*s == 'x' || *s == 'X')) {
   1aea0:	00084783          	lbu	a5,0(a6)
   1aea4:	05800713          	li	a4,88
   1aea8:	0df7f793          	andi	a5,a5,223
   1aeac:	02e79263          	bne	a5,a4,1aed0 <_strtoul_r+0x1d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:161
		c = s[1];
		s += 2;
   1aeb0:	01000293          	li	t0,16
   1aeb4:	fff00e93          	li	t4,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:160
		c = *s++;
	} else if (c == '+')
		c = *s++;
	if ((base == 0 || base == 16) &&
	    c == '0' && (*s == 'x' || *s == 'X')) {
		c = s[1];
   1aeb8:	00184883          	lbu	a7,1(a6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:161
		s += 2;
   1aebc:	00f00393          	li	t2,15
   1aec0:	00280813          	addi	a6,a6,2
   1aec4:	004ede93          	srli	t4,t4,0x4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:162
		base = 16;
   1aec8:	00028693          	mv	a3,t0
   1aecc:	ec1ff06f          	j	1ad8c <_strtoul_r+0x90>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:159
		neg = 1;
		c = *s++;
	} else if (c == '+')
		c = *s++;
	if ((base == 0 || base == 16) &&
	    c == '0' && (*s == 'x' || *s == 'X')) {
   1aed0:	fff00e93          	li	t4,-1
   1aed4:	00f00393          	li	t2,15
   1aed8:	004ede93          	srli	t4,t4,0x4
   1aedc:	01000293          	li	t0,16
   1aee0:	eadff06f          	j	1ad8c <_strtoul_r+0x90>

000000000001aee4 <strtoul>:
strtoul():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtoul.c:203
_DEFUN (strtoul, (s, ptr, base),
	_CONST char *__restrict s _AND
	char **__restrict ptr _AND
	int base)
{
	return _strtoul_r (_REENT, s, ptr, base);
   1aee4:	00060693          	mv	a3,a2
   1aee8:	00058613          	mv	a2,a1
   1aeec:	00050593          	mv	a1,a0
   1aef0:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
   1aef4:	e09ff06f          	j	1acfc <_strtoul_r>

000000000001aef8 <_svfprintf_r>:
_svfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:668
_DEFUN(_VFPRINTF_R, (data, fp, fmt0, ap),
       struct _reent *data _AND
       FILE * fp           _AND
       _CONST char *fmt0   _AND
       va_list ap)
{
   1aef8:	e1010113          	addi	sp,sp,-496
   1aefc:	1e113423          	sd	ra,488(sp)
   1af00:	1d313423          	sd	s3,456(sp)
   1af04:	1b713423          	sd	s7,424(sp)
   1af08:	1b813023          	sd	s8,416(sp)
   1af0c:	00058b93          	mv	s7,a1
   1af10:	00060993          	mv	s3,a2
   1af14:	02d13423          	sd	a3,40(sp)
   1af18:	1e813023          	sd	s0,480(sp)
   1af1c:	1c913c23          	sd	s1,472(sp)
   1af20:	1d213823          	sd	s2,464(sp)
   1af24:	1d413023          	sd	s4,448(sp)
   1af28:	1b513c23          	sd	s5,440(sp)
   1af2c:	1b613823          	sd	s6,432(sp)
   1af30:	19913c23          	sd	s9,408(sp)
   1af34:	19a13823          	sd	s10,400(sp)
   1af38:	19b13423          	sd	s11,392(sp)
   1af3c:	16813c27          	fsd	fs0,376(sp)
   1af40:	00050c13          	mv	s8,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:696
	char *thousands_sep = NULL;
	size_t thsnd_len = 0;
	const char *grouping = NULL;
#endif
#ifdef FLOATING_POINT
	char *decimal_point = _localeconv_r (data)->decimal_point;
   1af44:	df4fc0ef          	jal	17538 <_localeconv_r>
   1af48:	00053783          	ld	a5,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:697
	size_t decp_len = strlen (decimal_point);
   1af4c:	00078513          	mv	a0,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:696
	char *thousands_sep = NULL;
	size_t thsnd_len = 0;
	const char *grouping = NULL;
#endif
#ifdef FLOATING_POINT
	char *decimal_point = _localeconv_r (data)->decimal_point;
   1af50:	06f13023          	sd	a5,96(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:697
	size_t decp_len = strlen (decimal_point);
   1af54:	9bdf60ef          	jal	11910 <strlen>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:880
		return (__sbprintf (data, fp, fmt0, ap));
	}
#endif
#else /* STRING_ONLY */
        /* Create initial buffer if we are called by asprintf family.  */
        if (fp->_flags & __SMBF && !fp->_bf._base)
   1af58:	010bd783          	lhu	a5,16(s7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:697
	size_t thsnd_len = 0;
	const char *grouping = NULL;
#endif
#ifdef FLOATING_POINT
	char *decimal_point = _localeconv_r (data)->decimal_point;
	size_t decp_len = strlen (decimal_point);
   1af5c:	06a13423          	sd	a0,104(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:880
		return (__sbprintf (data, fp, fmt0, ap));
	}
#endif
#else /* STRING_ONLY */
        /* Create initial buffer if we are called by asprintf family.  */
        if (fp->_flags & __SMBF && !fp->_bf._base)
   1af60:	0807f793          	andi	a5,a5,128
   1af64:	00078863          	beqz	a5,1af74 <_svfprintf_r+0x7c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:880 (discriminator 1)
   1af68:	018bb783          	ld	a5,24(s7)
   1af6c:	00079463          	bnez	a5,1af74 <_svfprintf_r+0x7c>
   1af70:	5b00106f          	j	1c520 <_svfprintf_r+0x1628>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   1af74:	000217b7          	lui	a5,0x21
   1af78:	f6878793          	addi	a5,a5,-152 # 20f68 <tinytens+0x28>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:894
        }
#endif /* STRING_ONLY */

	fmt = (char *)fmt0;
#ifdef _FVWRITE_IN_STREAMIO
	uio.uio_iov = iovp = iov;
   1af7c:	0f010a93          	addi	s5,sp,240
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   1af80:	02f13823          	sd	a5,48(sp)
   1af84:	0ef10793          	addi	a5,sp,239
   1af88:	00021a37          	lui	s4,0x21
   1af8c:	000214b7          	lui	s1,0x21
   1af90:	40fa87b3          	sub	a5,s5,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:699
#endif
#ifdef FLOATING_POINT
	char *decimal_point = _localeconv_r (data)->decimal_point;
	size_t decp_len = strlen (decimal_point);
	char softsign;		/* temporary negative sign for floats */
	union { int i; _PRINTF_FLOAT_TYPE fp; } _double_ = {0};
   1af94:	04013c23          	sd	zero,88(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:894
        }
#endif /* STRING_ONLY */

	fmt = (char *)fmt0;
#ifdef _FVWRITE_IN_STREAMIO
	uio.uio_iov = iovp = iov;
   1af98:	0b513823          	sd	s5,176(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:895
	uio.uio_resid = 0;
   1af9c:	0c013023          	sd	zero,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:896
	uio.uio_iovcnt = 0;
   1afa0:	0a012c23          	sw	zero,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:707
	int expsize = 0;	/* character count for expstr */
	char expstr[MAXEXPLEN];	/* buffer for exponent string */
	int lead;		/* sig figs before decimal or group sep */
#endif /* FLOATING_POINT */
#if defined (FLOATING_POINT) || defined (_WANT_IO_C99_FORMATS)
	int ndig = 0;		/* actual number of digits returned by cvt */
   1afa4:	06012823          	sw	zero,112(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:894
        }
#endif /* STRING_ONLY */

	fmt = (char *)fmt0;
#ifdef _FVWRITE_IN_STREAMIO
	uio.uio_iov = iovp = iov;
   1afa8:	000a8893          	mv	a7,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:718
	u_quad_t _uquad;	/* integer arguments %[diouxX] */
	enum { OCT, DEC, HEX } base;/* base for [diouxX] conversion */
	int dprec;		/* a copy of prec if [diouxX], 0 otherwise */
	int realsz;		/* field size expanded by dprec */
	int size;		/* size of converted field or string */
	char *xdigs = NULL;	/* digits for [xX] conversion */
   1afac:	02013c23          	sd	zero,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:702
	size_t decp_len = strlen (decimal_point);
	char softsign;		/* temporary negative sign for floats */
	union { int i; _PRINTF_FLOAT_TYPE fp; } _double_ = {0};
# define _fpvalue (_double_.fp)
	int expt;		/* integer value of exponent */
	int expsize = 0;	/* character count for expstr */
   1afb0:	06012a23          	sw	zero,116(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:898
#ifdef _FVWRITE_IN_STREAMIO
	uio.uio_iov = iovp = iov;
	uio.uio_resid = 0;
	uio.uio_iovcnt = 0;
#endif
	ret = 0;
   1afb4:	00012e23          	sw	zero,28(sp)
   1afb8:	0d0a0a13          	addi	s4,s4,208 # 210d0 <blanks.4178>
   1afbc:	0e048493          	addi	s1,s1,224 # 210e0 <zeroes.4179>
   1afc0:	06f13c23          	sd	a5,120(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:925
                    else if (wc == '%')
                        break;
                    fmt += n;
		}
#else
                while (*fmt != '\0' && *fmt != '%')
   1afc4:	0009c783          	lbu	a5,0(s3)
   1afc8:	000780e3          	beqz	a5,1b7c8 <_svfprintf_r+0x8d0>
   1afcc:	02500713          	li	a4,37
   1afd0:	00098413          	mv	s0,s3
   1afd4:	00e79663          	bne	a5,a4,1afe0 <_svfprintf_r+0xe8>
   1afd8:	0580006f          	j	1b030 <_svfprintf_r+0x138>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:925 (discriminator 1)
   1afdc:	00e78863          	beq	a5,a4,1afec <_svfprintf_r+0xf4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:926
                    fmt += 1;
   1afe0:	00140413          	addi	s0,s0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:925
                    else if (wc == '%')
                        break;
                    fmt += n;
		}
#else
                while (*fmt != '\0' && *fmt != '%')
   1afe4:	00044783          	lbu	a5,0(s0)
   1afe8:	fe079ae3          	bnez	a5,1afdc <_svfprintf_r+0xe4>
   1afec:	4134093b          	subw	s2,s0,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:928
                    fmt += 1;
#endif
		if ((m = fmt - cp) != 0) {
   1aff0:	04090063          	beqz	s2,1b030 <_svfprintf_r+0x138>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:929
			PRINT (cp, m);
   1aff4:	0c013703          	ld	a4,192(sp)
   1aff8:	0b812783          	lw	a5,184(sp)
   1affc:	00090693          	mv	a3,s2
   1b000:	00d70733          	add	a4,a4,a3
   1b004:	0017879b          	addiw	a5,a5,1
   1b008:	0138b023          	sd	s3,0(a7)
   1b00c:	00d8b423          	sd	a3,8(a7)
   1b010:	0ce13023          	sd	a4,192(sp)
   1b014:	0af12c23          	sw	a5,184(sp)
   1b018:	00700713          	li	a4,7
   1b01c:	01088893          	addi	a7,a7,16
   1b020:	14f74263          	blt	a4,a5,1b164 <_svfprintf_r+0x26c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:930
			ret += m;
   1b024:	01c12783          	lw	a5,28(sp)
   1b028:	012787bb          	addw	a5,a5,s2
   1b02c:	00f12e23          	sw	a5,28(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:936
		}
#ifdef _MB_CAPABLE
		if (n <= 0)
                    goto done;
#else
                if (*fmt == '\0')
   1b030:	00044783          	lbu	a5,0(s0)
   1b034:	14078663          	beqz	a5,1b180 <_svfprintf_r+0x288>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:940
                    goto done;
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */
   1b038:	00140993          	addi	s3,s0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:946

		flags = 0;
		dprec = 0;
		width = 0;
		prec = -1;
		sign = '\0';
   1b03c:	080107a3          	sb	zero,143(sp)
   1b040:	00000613          	li	a2,0
   1b044:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:945
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
		width = 0;
		prec = -1;
   1b048:	fff00413          	li	s0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:944
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
		width = 0;
   1b04c:	00012c23          	sw	zero,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:942
                    goto done;
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
   1b050:	00000b13          	li	s6,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   1b054:	05800713          	li	a4,88
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1092
		case '5': case '6': case '7': case '8': case '9':
			n = 0;
			do {
				n = 10 * n + to_digit (ch);
				ch = *fmt++;
			} while (is_digit (ch));
   1b058:	00900693          	li	a3,9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1033
			goto rflag;
		case '+':
			sign = '+';
			goto rflag;
		case '.':
			if ((ch = *fmt++) == '*') {
   1b05c:	02a00513          	li	a0,42
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:958
#ifndef _NO_POS_ARGS
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
   1b060:	0009cd03          	lbu	s10,0(s3)
   1b064:	00198993          	addi	s3,s3,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
reswitch:	switch (ch) {
   1b068:	fe0d079b          	addiw	a5,s10,-32
   1b06c:	14f766e3          	bltu	a4,a5,1b9b8 <_svfprintf_r+0xac0>
   1b070:	03013803          	ld	a6,48(sp)
   1b074:	02079793          	slli	a5,a5,0x20
   1b078:	01e7d793          	srli	a5,a5,0x1e
   1b07c:	010787b3          	add	a5,a5,a6
   1b080:	0007a783          	lw	a5,0(a5)
   1b084:	00078067          	jr	a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1130
			} else
#endif
				flags |= LONGINT;
			goto rflag;
		case 'q': /* extension */
			flags |= QUADINT;
   1b088:	010b6b13          	ori	s6,s6,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1131
			goto rflag;
   1b08c:	fd5ff06f          	j	1b060 <_svfprintf_r+0x168>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1018
			 * ``A negative field width argument is taken as a
			 * - flag followed by a positive field width.''
			 *	-- ANSI X3J11
			 * They don't exclude field widths read from args.
			 */
			width = GET_ARG (n, ap, int);
   1b090:	02813783          	ld	a5,40(sp)
   1b094:	0007a803          	lw	a6,0(a5)
   1b098:	00878793          	addi	a5,a5,8
   1b09c:	02f13423          	sd	a5,40(sp)
   1b0a0:	01012c23          	sw	a6,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1022
#ifndef _NO_POS_ARGS
			is_pos_arg = old_is_pos_arg;
#endif
			if (width >= 0)
   1b0a4:	fa085ee3          	bgez	a6,1b060 <_svfprintf_r+0x168>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1024
				goto rflag;
			width = -width;
   1b0a8:	410007bb          	negw	a5,a6
   1b0ac:	00f12c23          	sw	a5,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1027
			/* FALLTHROUGH */
		case '-':
			flags |= LADJUST;
   1b0b0:	004b6b13          	ori	s6,s6,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1028
			goto rflag;
   1b0b4:	fadff06f          	j	1b060 <_svfprintf_r+0x168>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1430
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
			flags |= HEXPREFIX;
			ox[0] = '0';
   1b0b8:	03000793          	li	a5,48
   1b0bc:	08f10823          	sb	a5,144(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1431
			ox[1] = ch = 'x';
   1b0c0:	07800793          	li	a5,120
   1b0c4:	08f108a3          	sb	a5,145(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1426
			 * of printable characters, in an implementation-
			 * defined manner.''
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
   1b0c8:	02813783          	ld	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1b0cc:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1429
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
			flags |= HEXPREFIX;
   1b0d0:	002b6693          	ori	a3,s6,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1426
			 * of printable characters, in an implementation-
			 * defined manner.''
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
   1b0d4:	00878713          	addi	a4,a5,8
   1b0d8:	0007b783          	ld	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1b0dc:	100448e3          	bltz	s0,1b9ec <_svfprintf_r+0xaf4>
   1b0e0:	f7fb7b13          	andi	s6,s6,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1426
			 * of printable characters, in an implementation-
			 * defined manner.''
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
   1b0e4:	02e13423          	sd	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
				flags &= ~ZEROPAD;
   1b0e8:	002b6b13          	ori	s6,s6,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1b0ec:	0a079ae3          	bnez	a5,1b9a0 <_svfprintf_r+0xaa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
   1b0f0:	000227b7          	lui	a5,0x22
   1b0f4:	bd078793          	addi	a5,a5,-1072 # 21bd0 <zeroes.4123+0x6e0>
   1b0f8:	02f13c23          	sd	a5,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1431
			flags |= HEXPREFIX;
			ox[0] = '0';
			ox[1] = ch = 'x';
   1b0fc:	07800d13          	li	s10,120
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1b100:	00000613          	li	a2,0
   1b104:	00000793          	li	a5,0
   1b108:	70040063          	beqz	s0,1b808 <_svfprintf_r+0x910>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572 (discriminator 1)
   1b10c:	000a8913          	mv	s2,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1626
					} while (_uquad != 0);
					break;

				case HEX:
					do {
						*--cp = xdigs[_uquad & 15];
   1b110:	03813683          	ld	a3,56(sp)
   1b114:	00f7f713          	andi	a4,a5,15
   1b118:	fff90913          	addi	s2,s2,-1
   1b11c:	00e68733          	add	a4,a3,a4
   1b120:	00074703          	lbu	a4,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1627
						_uquad >>= 4;
   1b124:	0047d793          	srli	a5,a5,0x4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1626
					} while (_uquad != 0);
					break;

				case HEX:
					do {
						*--cp = xdigs[_uquad & 15];
   1b128:	00e90023          	sb	a4,0(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1628
						_uquad >>= 4;
					} while (_uquad);
   1b12c:	fe0792e3          	bnez	a5,1b110 <_svfprintf_r+0x218>
   1b130:	412a87b3          	sub	a5,s5,s2
   1b134:	02f12023          	sw	a5,32(sp)
   1b138:	02012783          	lw	a5,32(sp)
   1b13c:	00078d93          	mv	s11,a5
   1b140:	0087d463          	ble	s0,a5,1b148 <_svfprintf_r+0x250>
   1b144:	00040d93          	mv	s11,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:948
		dprec = 0;
		width = 0;
		prec = -1;
		sign = '\0';
#ifdef FLOATING_POINT
		lead = 0;
   1b148:	01b12423          	sw	s11,8(sp)
   1b14c:	04012623          	sw	zero,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1679
		 *
		 * Compute actual size, so we know how much to pad.
		 * size excludes decimal prec; realsz includes it.
		 */
		realsz = dprec > size ? dprec : size;
		if (sign)
   1b150:	32060263          	beqz	a2,1b474 <_svfprintf_r+0x57c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1680
			realsz++;
   1b154:	00812783          	lw	a5,8(sp)
   1b158:	0017879b          	addiw	a5,a5,1
   1b15c:	00f12423          	sw	a5,8(sp)
   1b160:	3140006f          	j	1b474 <_svfprintf_r+0x57c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:929 (discriminator 1)
#else
                while (*fmt != '\0' && *fmt != '%')
                    fmt += 1;
#endif
		if ((m = fmt - cp) != 0) {
			PRINT (cp, m);
   1b164:	0b010613          	addi	a2,sp,176
   1b168:	000b8593          	mv	a1,s7
   1b16c:	000c0513          	mv	a0,s8
   1b170:	659030ef          	jal	1efc8 <__ssprint_r>
   1b174:	02051263          	bnez	a0,1b198 <_svfprintf_r+0x2a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:929
   1b178:	000a8893          	mv	a7,s5
   1b17c:	ea9ff06f          	j	1b024 <_svfprintf_r+0x12c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1782
			_free_r (data, malloc_buf);
			malloc_buf = NULL;
		}
	}
done:
	FLUSH ();
   1b180:	0c013783          	ld	a5,192(sp)
   1b184:	00078a63          	beqz	a5,1b198 <_svfprintf_r+0x2a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1782 (discriminator 1)
   1b188:	0b010613          	addi	a2,sp,176
   1b18c:	000b8593          	mv	a1,s7
   1b190:	000c0513          	mv	a0,s8
   1b194:	635030ef          	jal	1efc8 <__ssprint_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1789
	if (malloc_buf != NULL)
		_free_r (data, malloc_buf);
#ifndef STRING_ONLY
	_newlib_flockfile_end (fp);
#endif
	return (__sferror (fp) ? EOF : ret);
   1b198:	010bd783          	lhu	a5,16(s7)
   1b19c:	01c12503          	lw	a0,28(sp)
   1b1a0:	0407f793          	andi	a5,a5,64
   1b1a4:	00078463          	beqz	a5,1b1ac <_svfprintf_r+0x2b4>
   1b1a8:	4f80106f          	j	1c6a0 <_svfprintf_r+0x17a8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1791
	/* NOTREACHED */
}
   1b1ac:	1e813083          	ld	ra,488(sp)
   1b1b0:	1e013403          	ld	s0,480(sp)
   1b1b4:	1d813483          	ld	s1,472(sp)
   1b1b8:	1d013903          	ld	s2,464(sp)
   1b1bc:	1c813983          	ld	s3,456(sp)
   1b1c0:	1c013a03          	ld	s4,448(sp)
   1b1c4:	1b813a83          	ld	s5,440(sp)
   1b1c8:	1b013b03          	ld	s6,432(sp)
   1b1cc:	1a813b83          	ld	s7,424(sp)
   1b1d0:	1a013c03          	ld	s8,416(sp)
   1b1d4:	19813c83          	ld	s9,408(sp)
   1b1d8:	19013d03          	ld	s10,400(sp)
   1b1dc:	18813d83          	ld	s11,392(sp)
   1b1e0:	17813407          	fld	fs0,376(sp)
   1b1e4:	1f010113          	addi	sp,sp,496
   1b1e8:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   1b1ec:	00100613          	li	a2,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1030
			/* FALLTHROUGH */
		case '-':
			flags |= LADJUST;
			goto rflag;
		case '+':
			sign = '+';
   1b1f0:	02b00593          	li	a1,43
   1b1f4:	e6dff06f          	j	1b060 <_svfprintf_r+0x168>
   1b1f8:	00060463          	beqz	a2,1b200 <_svfprintf_r+0x308>
   1b1fc:	0990106f          	j	1ca94 <_svfprintf_r+0x1b9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   1b200:	010b7793          	andi	a5,s6,16
   1b204:	16078863          	beqz	a5,1b374 <_svfprintf_r+0x47c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411 (discriminator 1)
   1b208:	02813783          	ld	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1b20c:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   1b210:	00878713          	addi	a4,a5,8
   1b214:	0007b783          	ld	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1b218:	16044c63          	bltz	s0,1b390 <_svfprintf_r+0x498>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   1b21c:	02e13423          	sd	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
				flags &= ~ZEROPAD;
   1b220:	f7fb7b13          	andi	s6,s6,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1b224:	3a0794e3          	bnez	a5,1bdcc <_svfprintf_r+0xed4>
   1b228:	00000613          	li	a2,0
   1b22c:	00000793          	li	a5,0
   1b230:	00041463          	bnez	s0,1b238 <_svfprintf_r+0x340>
   1b234:	3780106f          	j	1c5ac <_svfprintf_r+0x16b4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572 (discriminator 1)
   1b238:	000a8913          	mv	s2,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1581
				 * a variable; hence this switch.
				 */
				switch (base) {
				case OCT:
					do {
						*--cp = to_char (_uquad & 7);
   1b23c:	0077f713          	andi	a4,a5,7
   1b240:	fff90913          	addi	s2,s2,-1
   1b244:	0307071b          	addiw	a4,a4,48
   1b248:	00e90023          	sb	a4,0(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1582
						_uquad >>= 3;
   1b24c:	0037d793          	srli	a5,a5,0x3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1583
					} while (_uquad);
   1b250:	fe0796e3          	bnez	a5,1b23c <_svfprintf_r+0x344>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1585
					/* handle octal leading 0 */
					if (flags & ALT && *cp != '0')
   1b254:	001b7793          	andi	a5,s6,1
   1b258:	ec078ce3          	beqz	a5,1b130 <_svfprintf_r+0x238>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1585 (discriminator 1)
   1b25c:	03000793          	li	a5,48
   1b260:	ecf708e3          	beq	a4,a5,1b130 <_svfprintf_r+0x238>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1586
						*--cp = '0';
   1b264:	fff90713          	addi	a4,s2,-1
   1b268:	40ea86b3          	sub	a3,s5,a4
   1b26c:	fef90fa3          	sb	a5,-1(s2)
   1b270:	02d12023          	sw	a3,32(sp)
   1b274:	00070913          	mv	s2,a4
   1b278:	ec1ff06f          	j	1b138 <_svfprintf_r+0x240>
   1b27c:	00060463          	beqz	a2,1b284 <_svfprintf_r+0x38c>
   1b280:	0710106f          	j	1caf0 <_svfprintf_r+0x1bf8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1543
			goto nosign;
		case 'X':
			xdigs = "0123456789ABCDEF";
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
   1b284:	000227b7          	lui	a5,0x22
   1b288:	bd078793          	addi	a5,a5,-1072 # 21bd0 <zeroes.4123+0x6e0>
   1b28c:	02f13c23          	sd	a5,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544
hex:			_uquad = UARG ();
   1b290:	010b7793          	andi	a5,s6,16
   1b294:	18078863          	beqz	a5,1b424 <_svfprintf_r+0x52c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544 (discriminator 1)
   1b298:	02813703          	ld	a4,40(sp)
   1b29c:	00073783          	ld	a5,0(a4)
   1b2a0:	00870713          	addi	a4,a4,8
   1b2a4:	02e13423          	sd	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1547 (discriminator 8)
			base = HEX;
			/* leading 0x/X only if non-zero */
			if (flags & ALT && _uquad != 0) {
   1b2a8:	001b7713          	andi	a4,s6,1
   1b2ac:	300704e3          	beqz	a4,1bdb4 <_svfprintf_r+0xebc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1547 (discriminator 1)
   1b2b0:	00079463          	bnez	a5,1b2b8 <_svfprintf_r+0x3c0>
   1b2b4:	7b10006f          	j	1c264 <_svfprintf_r+0x136c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1548
				ox[0] = '0';
   1b2b8:	03000713          	li	a4,48
   1b2bc:	08e10823          	sb	a4,144(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1549
				ox[1] = ch;
   1b2c0:	09a108a3          	sb	s10,145(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1b2c4:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1550
			base = HEX;
			/* leading 0x/X only if non-zero */
			if (flags & ALT && _uquad != 0) {
				ox[0] = '0';
				ox[1] = ch;
				flags |= HEXPREFIX;
   1b2c8:	002b6713          	ori	a4,s6,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1b2cc:	00045463          	bgez	s0,1b2d4 <_svfprintf_r+0x3dc>
   1b2d0:	4840106f          	j	1c754 <_svfprintf_r+0x185c>
   1b2d4:	f7fb7b13          	andi	s6,s6,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   1b2d8:	002b6b13          	ori	s6,s6,2
   1b2dc:	00000613          	li	a2,0
   1b2e0:	e2dff06f          	j	1b10c <_svfprintf_r+0x214>
   1b2e4:	00060463          	beqz	a2,1b2ec <_svfprintf_r+0x3f4>
   1b2e8:	7980106f          	j	1ca80 <_svfprintf_r+0x1b88>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1396
#ifndef _NO_LONGLONG
			if (flags & QUADINT)
				*GET_ARG (N, ap, quad_ptr_t) = ret;
			else
#endif
			if (flags & LONGINT)
   1b2ec:	010b7793          	andi	a5,s6,16
   1b2f0:	720788e3          	beqz	a5,1c220 <_svfprintf_r+0x1328>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1397
				*GET_ARG (N, ap, long_ptr_t) = ret;
   1b2f4:	02813683          	ld	a3,40(sp)
   1b2f8:	01c12703          	lw	a4,28(sp)
   1b2fc:	0006b783          	ld	a5,0(a3)
   1b300:	00868693          	addi	a3,a3,8
   1b304:	02d13423          	sd	a3,40(sp)
   1b308:	00e7b023          	sd	a4,0(a5)
   1b30c:	cb9ff06f          	j	1afc4 <_svfprintf_r+0xcc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1033
			goto rflag;
		case '+':
			sign = '+';
			goto rflag;
		case '.':
			if ((ch = *fmt++) == '*') {
   1b310:	0009cd03          	lbu	s10,0(s3)
   1b314:	00198993          	addi	s3,s3,1
   1b318:	00ad1463          	bne	s10,a0,1b320 <_svfprintf_r+0x428>
   1b31c:	6f80106f          	j	1ca14 <_svfprintf_r+0x1b1c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1072
				if (prec < 0)
					prec = -1;
				goto rflag;
			}
			n = 0;
			while (is_digit (ch)) {
   1b320:	fd0d079b          	addiw	a5,s10,-48
   1b324:	00000413          	li	s0,0
   1b328:	d4f6e0e3          	bltu	a3,a5,1b068 <_svfprintf_r+0x170>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1074
				n = 10 * n + to_digit (ch);
				ch = *fmt++;
   1b32c:	00198993          	addi	s3,s3,1
   1b330:	fff9cd03          	lbu	s10,-1(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1073
					prec = -1;
				goto rflag;
			}
			n = 0;
			while (is_digit (ch)) {
				n = 10 * n + to_digit (ch);
   1b334:	0014181b          	slliw	a6,s0,0x1
   1b338:	0034141b          	slliw	s0,s0,0x3
   1b33c:	0088043b          	addw	s0,a6,s0
   1b340:	00f4043b          	addw	s0,s0,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1072
				if (prec < 0)
					prec = -1;
				goto rflag;
			}
			n = 0;
			while (is_digit (ch)) {
   1b344:	fd0d079b          	addiw	a5,s10,-48
   1b348:	fef6f2e3          	bleu	a5,a3,1b32c <_svfprintf_r+0x434>
   1b34c:	d0045ee3          	bgez	s0,1b068 <_svfprintf_r+0x170>
   1b350:	fff00413          	li	s0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1077
				n = 10 * n + to_digit (ch);
				ch = *fmt++;
			}
			prec = n < 0 ? -1 : n;
			goto reswitch;
   1b354:	d15ff06f          	j	1b068 <_svfprintf_r+0x170>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1084
			/*
			 * ``Note that 0 is taken as a flag, not as the
			 * beginning of a field width.''
			 *	-- ANSI X3J11
			 */
			flags |= ZEROPAD;
   1b358:	080b6b13          	ori	s6,s6,128
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1085
			goto rflag;
   1b35c:	d05ff06f          	j	1b060 <_svfprintf_r+0x168>
   1b360:	00060463          	beqz	a2,1b368 <_svfprintf_r+0x470>
   1b364:	7240106f          	j	1ca88 <_svfprintf_r+0x1b90>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1408
#endif
			else
				*GET_ARG (N, ap, int_ptr_t) = ret;
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
   1b368:	010b6b13          	ori	s6,s6,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   1b36c:	010b7793          	andi	a5,s6,16
   1b370:	e8079ce3          	bnez	a5,1b208 <_svfprintf_r+0x310>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411 (discriminator 2)
   1b374:	040b7793          	andi	a5,s6,64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1b378:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   1b37c:	600784e3          	beqz	a5,1c184 <_svfprintf_r+0x128c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411 (discriminator 4)
   1b380:	02813783          	ld	a5,40(sp)
   1b384:	00878713          	addi	a4,a5,8
   1b388:	0007d783          	lhu	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1b38c:	e80458e3          	bgez	s0,1b21c <_svfprintf_r+0x324>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1b390:	02e13423          	sd	a4,40(sp)
   1b394:	22079ce3          	bnez	a5,1bdcc <_svfprintf_r+0xed4>
   1b398:	00000613          	li	a2,0
   1b39c:	00000713          	li	a4,0
   1b3a0:	6700006f          	j	1ba10 <_svfprintf_r+0xb18>
   1b3a4:	00060463          	beqz	a2,1b3ac <_svfprintf_r+0x4b4>
   1b3a8:	7040106f          	j	1caac <_svfprintf_r+0x1bb4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1533
			} else
				size = strlen (cp);

			break;
		case 'U': /* extension */
			flags |= LONGINT;
   1b3ac:	010b6b13          	ori	s6,s6,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1b3b0:	010b7793          	andi	a5,s6,16
   1b3b4:	38078ae3          	beqz	a5,1bf48 <_svfprintf_r+0x1050>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536 (discriminator 1)
   1b3b8:	02813783          	ld	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1b3bc:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1b3c0:	00878713          	addi	a4,a5,8
   1b3c4:	0007b783          	ld	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1b3c8:	38044ee3          	bltz	s0,1bf64 <_svfprintf_r+0x106c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1b3cc:	02e13423          	sd	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
				flags &= ~ZEROPAD;
   1b3d0:	f7fb7b13          	andi	s6,s6,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1b3d4:	00000613          	li	a2,0
   1b3d8:	42078663          	beqz	a5,1b804 <_svfprintf_r+0x90c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1591
						*--cp = '0';
					break;

				case DEC:
					/* many numbers are 1 digit */
					if (_uquad < 10) {
   1b3dc:	00900713          	li	a4,9
   1b3e0:	000a8913          	mv	s2,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1599
					}
#ifdef _WANT_IO_C99_FORMATS
					ndig = 0;
#endif
					do {
					  *--cp = to_char (_uquad % 10);
   1b3e4:	00a00693          	li	a3,10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1591
						*--cp = '0';
					break;

				case DEC:
					/* many numbers are 1 digit */
					if (_uquad < 10) {
   1b3e8:	62f77a63          	bleu	a5,a4,1ba1c <_svfprintf_r+0xb24>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1599 (discriminator 1)
					}
#ifdef _WANT_IO_C99_FORMATS
					ndig = 0;
#endif
					do {
					  *--cp = to_char (_uquad % 10);
   1b3ec:	02d7f733          	remu	a4,a5,a3
   1b3f0:	fff90913          	addi	s2,s2,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1620
					       next cases. */
					    if (grouping[1] != '\0')
					      grouping++;
					  }
#endif
					  _uquad /= 10;
   1b3f4:	02d7d7b3          	divu	a5,a5,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1599
					}
#ifdef _WANT_IO_C99_FORMATS
					ndig = 0;
#endif
					do {
					  *--cp = to_char (_uquad % 10);
   1b3f8:	0307071b          	addiw	a4,a4,48
   1b3fc:	00e90023          	sb	a4,0(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1621
					    if (grouping[1] != '\0')
					      grouping++;
					  }
#endif
					  _uquad /= 10;
					} while (_uquad != 0);
   1b400:	fe0796e3          	bnez	a5,1b3ec <_svfprintf_r+0x4f4>
   1b404:	d2dff06f          	j	1b130 <_svfprintf_r+0x238>
   1b408:	00060463          	beqz	a2,1b410 <_svfprintf_r+0x518>
   1b40c:	6980106f          	j	1caa4 <_svfprintf_r+0x1bac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1540
		case 'u':
			_uquad = UARG ();
			base = DEC;
			goto nosign;
		case 'X':
			xdigs = "0123456789ABCDEF";
   1b410:	000227b7          	lui	a5,0x22
   1b414:	bb878793          	addi	a5,a5,-1096 # 21bb8 <zeroes.4123+0x6c8>
   1b418:	02f13c23          	sd	a5,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
hex:			_uquad = UARG ();
   1b41c:	010b7793          	andi	a5,s6,16
   1b420:	e6079ce3          	bnez	a5,1b298 <_svfprintf_r+0x3a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544 (discriminator 2)
   1b424:	040b7793          	andi	a5,s6,64
   1b428:	02813703          	ld	a4,40(sp)
   1b42c:	620784e3          	beqz	a5,1c254 <_svfprintf_r+0x135c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544 (discriminator 4)
   1b430:	00075783          	lhu	a5,0(a4)
   1b434:	00870713          	addi	a4,a4,8
   1b438:	02e13423          	sd	a4,40(sp)
   1b43c:	e6dff06f          	j	1b2a8 <_svfprintf_r+0x3b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1189
				}
			}
			else
#endif /* _MB_CAPABLE */
			{
				*cp = GET_ARG (N, ap, int);
   1b440:	02813703          	ld	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1193
				size = 1;
			}
			sign = '\0';
			break;
   1b444:	00100693          	li	a3,1
   1b448:	00d12423          	sw	a3,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1189
				}
			}
			else
#endif /* _MB_CAPABLE */
			{
				*cp = GET_ARG (N, ap, int);
   1b44c:	00072783          	lw	a5,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1192
				size = 1;
			}
			sign = '\0';
   1b450:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1193
			break;
   1b454:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1189
				}
			}
			else
#endif /* _MB_CAPABLE */
			{
				*cp = GET_ARG (N, ap, int);
   1b458:	0cf10423          	sb	a5,200(sp)
   1b45c:	00870793          	addi	a5,a4,8
   1b460:	02f13423          	sd	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1190
				size = 1;
   1b464:	02d12023          	sw	a3,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1b468:	00000413          	li	s0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:948
		width = 0;
		prec = -1;
		sign = '\0';
#ifdef FLOATING_POINT
		lead = 0;
   1b46c:	04012623          	sw	zero,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1173
		    flags |= QUADINT;
		  goto rflag;
		case 'C':
#endif /* _WANT_IO_C99_FORMATS */
		case 'c':
			cp = buf;
   1b470:	0c810913          	addi	s2,sp,200
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1681
		 * size excludes decimal prec; realsz includes it.
		 */
		realsz = dprec > size ? dprec : size;
		if (sign)
			realsz++;
		if (flags & HEXPREFIX)
   1b474:	002b7793          	andi	a5,s6,2
   1b478:	04f12023          	sw	a5,64(sp)
   1b47c:	00078863          	beqz	a5,1b48c <_svfprintf_r+0x594>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1682
			realsz+= 2;
   1b480:	00812783          	lw	a5,8(sp)
   1b484:	0027879b          	addiw	a5,a5,2
   1b488:	00f12423          	sw	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1685

		/* right-adjusting blank padding */
		if ((flags & (LADJUST|ZEROPAD)) == 0)
   1b48c:	084b7793          	andi	a5,s6,132
   1b490:	04f12423          	sw	a5,72(sp)
   1b494:	5a079063          	bnez	a5,1ba34 <_svfprintf_r+0xb3c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
			PAD (width - realsz, blanks);
   1b498:	01812783          	lw	a5,24(sp)
   1b49c:	00812703          	lw	a4,8(sp)
   1b4a0:	40e78cbb          	subw	s9,a5,a4
   1b4a4:	59905863          	blez	s9,1ba34 <_svfprintf_r+0xb3c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 5)
   1b4a8:	01000793          	li	a5,16
   1b4ac:	0197c463          	blt	a5,s9,1b4b4 <_svfprintf_r+0x5bc>
   1b4b0:	1f80106f          	j	1c6a8 <_svfprintf_r+0x17b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
   1b4b4:	01000813          	li	a6,16
   1b4b8:	0c013783          	ld	a5,192(sp)
   1b4bc:	0b812703          	lw	a4,184(sp)
   1b4c0:	05413823          	sd	s4,80(sp)
   1b4c4:	00700313          	li	t1,7
   1b4c8:	00080d93          	mv	s11,a6
   1b4cc:	00c0006f          	j	1b4d8 <_svfprintf_r+0x5e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 4)
   1b4d0:	ff0c8c9b          	addiw	s9,s9,-16
   1b4d4:	059dde63          	ble	s9,s11,1b530 <_svfprintf_r+0x638>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 6)
   1b4d8:	01078793          	addi	a5,a5,16
   1b4dc:	0017071b          	addiw	a4,a4,1
   1b4e0:	0148b023          	sd	s4,0(a7)
   1b4e4:	0108b423          	sd	a6,8(a7)
   1b4e8:	0cf13023          	sd	a5,192(sp)
   1b4ec:	0ae12c23          	sw	a4,184(sp)
   1b4f0:	01088893          	addi	a7,a7,16
   1b4f4:	fce35ee3          	ble	a4,t1,1b4d0 <_svfprintf_r+0x5d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 1)
   1b4f8:	0b010613          	addi	a2,sp,176
   1b4fc:	000b8593          	mv	a1,s7
   1b500:	000c0513          	mv	a0,s8
   1b504:	00613823          	sd	t1,16(sp)
   1b508:	01013023          	sd	a6,0(sp)
   1b50c:	2bd030ef          	jal	1efc8 <__ssprint_r>
   1b510:	c80514e3          	bnez	a0,1b198 <_svfprintf_r+0x2a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
   1b514:	ff0c8c9b          	addiw	s9,s9,-16
   1b518:	0c013783          	ld	a5,192(sp)
   1b51c:	0b812703          	lw	a4,184(sp)
   1b520:	000a8893          	mv	a7,s5
   1b524:	01013303          	ld	t1,16(sp)
   1b528:	00013803          	ld	a6,0(sp)
   1b52c:	fb9dc6e3          	blt	s11,s9,1b4d8 <_svfprintf_r+0x5e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 7)
   1b530:	05013603          	ld	a2,80(sp)
   1b534:	00fc87b3          	add	a5,s9,a5
   1b538:	0017071b          	addiw	a4,a4,1
   1b53c:	00c8b023          	sd	a2,0(a7)
   1b540:	0198b423          	sd	s9,8(a7)
   1b544:	0cf13023          	sd	a5,192(sp)
   1b548:	0ae12c23          	sw	a4,184(sp)
   1b54c:	00700693          	li	a3,7
   1b550:	14e6cce3          	blt	a3,a4,1bea8 <_svfprintf_r+0xfb0>
   1b554:	08f14603          	lbu	a2,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
   1b558:	01088893          	addi	a7,a7,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1689

		/* prefix */
		if (sign)
   1b55c:	02060a63          	beqz	a2,1b590 <_svfprintf_r+0x698>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1690
			PRINT (&sign, 1);
   1b560:	0b812703          	lw	a4,184(sp)
   1b564:	08f10693          	addi	a3,sp,143
   1b568:	00d8b023          	sd	a3,0(a7)
   1b56c:	00178793          	addi	a5,a5,1
   1b570:	00100693          	li	a3,1
   1b574:	0017071b          	addiw	a4,a4,1
   1b578:	00d8b423          	sd	a3,8(a7)
   1b57c:	0cf13023          	sd	a5,192(sp)
   1b580:	0ae12c23          	sw	a4,184(sp)
   1b584:	00700693          	li	a3,7
   1b588:	01088893          	addi	a7,a7,16
   1b58c:	7ee6c463          	blt	a3,a4,1bd74 <_svfprintf_r+0xe7c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1691
		if (flags & HEXPREFIX)
   1b590:	04012703          	lw	a4,64(sp)
   1b594:	02070a63          	beqz	a4,1b5c8 <_svfprintf_r+0x6d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1692
			PRINT (ox, 2);
   1b598:	0b812703          	lw	a4,184(sp)
   1b59c:	09010693          	addi	a3,sp,144
   1b5a0:	00d8b023          	sd	a3,0(a7)
   1b5a4:	00278793          	addi	a5,a5,2
   1b5a8:	00200693          	li	a3,2
   1b5ac:	0017071b          	addiw	a4,a4,1
   1b5b0:	00d8b423          	sd	a3,8(a7)
   1b5b4:	0cf13023          	sd	a5,192(sp)
   1b5b8:	0ae12c23          	sw	a4,184(sp)
   1b5bc:	00700693          	li	a3,7
   1b5c0:	01088893          	addi	a7,a7,16
   1b5c4:	7ce6c863          	blt	a3,a4,1bd94 <_svfprintf_r+0xe9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1695

		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
   1b5c8:	04812683          	lw	a3,72(sp)
   1b5cc:	08000713          	li	a4,128
   1b5d0:	66e68463          	beq	a3,a4,1bc38 <_svfprintf_r+0xd40>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699
			PAD (width - realsz, zeroes);

		/* leading zeroes from decimal precision */
		PAD (dprec - size, zeroes);
   1b5d4:	02012703          	lw	a4,32(sp)
   1b5d8:	40e4043b          	subw	s0,s0,a4
   1b5dc:	0c805063          	blez	s0,1b69c <_svfprintf_r+0x7a4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 5)
   1b5e0:	01000713          	li	a4,16
   1b5e4:	488758e3          	ble	s0,a4,1c274 <_svfprintf_r+0x137c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699
   1b5e8:	01000c93          	li	s9,16
   1b5ec:	0b812703          	lw	a4,184(sp)
   1b5f0:	00913823          	sd	s1,16(sp)
   1b5f4:	00700813          	li	a6,7
   1b5f8:	000c8d93          	mv	s11,s9
   1b5fc:	00c0006f          	j	1b608 <_svfprintf_r+0x710>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 4)
   1b600:	ff04041b          	addiw	s0,s0,-16
   1b604:	048dda63          	ble	s0,s11,1b658 <_svfprintf_r+0x760>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 6)
   1b608:	01078793          	addi	a5,a5,16
   1b60c:	0017071b          	addiw	a4,a4,1
   1b610:	0098b023          	sd	s1,0(a7)
   1b614:	0198b423          	sd	s9,8(a7)
   1b618:	0cf13023          	sd	a5,192(sp)
   1b61c:	0ae12c23          	sw	a4,184(sp)
   1b620:	01088893          	addi	a7,a7,16
   1b624:	fce85ee3          	ble	a4,a6,1b600 <_svfprintf_r+0x708>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 1)
   1b628:	0b010613          	addi	a2,sp,176
   1b62c:	000b8593          	mv	a1,s7
   1b630:	000c0513          	mv	a0,s8
   1b634:	01013023          	sd	a6,0(sp)
   1b638:	191030ef          	jal	1efc8 <__ssprint_r>
   1b63c:	b4051ee3          	bnez	a0,1b198 <_svfprintf_r+0x2a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699
   1b640:	ff04041b          	addiw	s0,s0,-16
   1b644:	0c013783          	ld	a5,192(sp)
   1b648:	0b812703          	lw	a4,184(sp)
   1b64c:	000a8893          	mv	a7,s5
   1b650:	00013803          	ld	a6,0(sp)
   1b654:	fa8dcae3          	blt	s11,s0,1b608 <_svfprintf_r+0x710>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 7)
   1b658:	01013683          	ld	a3,16(sp)
   1b65c:	008787b3          	add	a5,a5,s0
   1b660:	0017071b          	addiw	a4,a4,1
   1b664:	00d8b023          	sd	a3,0(a7)
   1b668:	0088b423          	sd	s0,8(a7)
   1b66c:	0cf13023          	sd	a5,192(sp)
   1b670:	0ae12c23          	sw	a4,184(sp)
   1b674:	00700693          	li	a3,7
   1b678:	01088893          	addi	a7,a7,16
   1b67c:	02e6d063          	ble	a4,a3,1b69c <_svfprintf_r+0x7a4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 8)
   1b680:	0b010613          	addi	a2,sp,176
   1b684:	000b8593          	mv	a1,s7
   1b688:	000c0513          	mv	a0,s8
   1b68c:	13d030ef          	jal	1efc8 <__ssprint_r>
   1b690:	b00514e3          	bnez	a0,1b198 <_svfprintf_r+0x2a0>
   1b694:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699
   1b698:	000a8893          	mv	a7,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1703

		/* the string or number proper */
#ifdef FLOATING_POINT
		if ((flags & FPT) == 0) {
   1b69c:	100b7713          	andi	a4,s6,256
   1b6a0:	48071463          	bnez	a4,1bb28 <_svfprintf_r+0xc30>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1704
			PRINT (cp, size);
   1b6a4:	02012703          	lw	a4,32(sp)
   1b6a8:	0b812683          	lw	a3,184(sp)
   1b6ac:	0128b023          	sd	s2,0(a7)
   1b6b0:	00e787b3          	add	a5,a5,a4
   1b6b4:	0016869b          	addiw	a3,a3,1
   1b6b8:	00e8b423          	sd	a4,8(a7)
   1b6bc:	0cf13023          	sd	a5,192(sp)
   1b6c0:	0ad12c23          	sw	a3,184(sp)
   1b6c4:	00700713          	li	a4,7
   1b6c8:	44d74063          	blt	a4,a3,1bb08 <_svfprintf_r+0xc10>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1761
					} else	/* 0.[0..] */
						/* __dtoa irregularity */
						PAD (ndig - 1, zeroes);
				} else	/* XeYYY */
					PRINT (cp, 1);
				PRINT (expstr, expsize);
   1b6cc:	01088893          	addi	a7,a7,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1768
		}
#else /* !FLOATING_POINT */
		PRINT (cp, size);
#endif
		/* left-adjusting padding (always blank) */
		if (flags & LADJUST)
   1b6d0:	004b7b13          	andi	s6,s6,4
   1b6d4:	0c0b0263          	beqz	s6,1b798 <_svfprintf_r+0x8a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769
			PAD (width - realsz, blanks);
   1b6d8:	01812703          	lw	a4,24(sp)
   1b6dc:	00812683          	lw	a3,8(sp)
   1b6e0:	40d7043b          	subw	s0,a4,a3
   1b6e4:	0a805a63          	blez	s0,1b798 <_svfprintf_r+0x8a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 5)
   1b6e8:	01000713          	li	a4,16
   1b6ec:	00874463          	blt	a4,s0,1b6f4 <_svfprintf_r+0x7fc>
   1b6f0:	02c0106f          	j	1c71c <_svfprintf_r+0x1824>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769
   1b6f4:	01000913          	li	s2,16
   1b6f8:	0b812703          	lw	a4,184(sp)
   1b6fc:	05413823          	sd	s4,80(sp)
   1b700:	00700b13          	li	s6,7
   1b704:	00090d13          	mv	s10,s2
   1b708:	00c0006f          	j	1b714 <_svfprintf_r+0x81c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 4)
   1b70c:	ff04041b          	addiw	s0,s0,-16
   1b710:	048d5663          	ble	s0,s10,1b75c <_svfprintf_r+0x864>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 6)
   1b714:	01078793          	addi	a5,a5,16
   1b718:	0017071b          	addiw	a4,a4,1
   1b71c:	0148b023          	sd	s4,0(a7)
   1b720:	0128b423          	sd	s2,8(a7)
   1b724:	0cf13023          	sd	a5,192(sp)
   1b728:	0ae12c23          	sw	a4,184(sp)
   1b72c:	01088893          	addi	a7,a7,16
   1b730:	fceb5ee3          	ble	a4,s6,1b70c <_svfprintf_r+0x814>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 1)
   1b734:	0b010613          	addi	a2,sp,176
   1b738:	000b8593          	mv	a1,s7
   1b73c:	000c0513          	mv	a0,s8
   1b740:	089030ef          	jal	1efc8 <__ssprint_r>
   1b744:	a4051ae3          	bnez	a0,1b198 <_svfprintf_r+0x2a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769
   1b748:	ff04041b          	addiw	s0,s0,-16
   1b74c:	0c013783          	ld	a5,192(sp)
   1b750:	0b812703          	lw	a4,184(sp)
   1b754:	000a8893          	mv	a7,s5
   1b758:	fa8d4ee3          	blt	s10,s0,1b714 <_svfprintf_r+0x81c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 7)
   1b75c:	05013683          	ld	a3,80(sp)
   1b760:	008787b3          	add	a5,a5,s0
   1b764:	0017071b          	addiw	a4,a4,1
   1b768:	00d8b023          	sd	a3,0(a7)
   1b76c:	0088b423          	sd	s0,8(a7)
   1b770:	0cf13023          	sd	a5,192(sp)
   1b774:	0ae12c23          	sw	a4,184(sp)
   1b778:	00700693          	li	a3,7
   1b77c:	00e6de63          	ble	a4,a3,1b798 <_svfprintf_r+0x8a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 8)
   1b780:	0b010613          	addi	a2,sp,176
   1b784:	000b8593          	mv	a1,s7
   1b788:	000c0513          	mv	a0,s8
   1b78c:	03d030ef          	jal	1efc8 <__ssprint_r>
   1b790:	a00514e3          	bnez	a0,1b198 <_svfprintf_r+0x2a0>
   1b794:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1772

		/* finally, adjust ret */
		ret += width > realsz ? width : realsz;
   1b798:	01812c83          	lw	s9,24(sp)
   1b79c:	00812703          	lw	a4,8(sp)
   1b7a0:	00ecd463          	ble	a4,s9,1b7a8 <_svfprintf_r+0x8b0>
   1b7a4:	00070c93          	mv	s9,a4
   1b7a8:	01c12703          	lw	a4,28(sp)
   1b7ac:	0197073b          	addw	a4,a4,s9
   1b7b0:	00e12e23          	sw	a4,28(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1774

		FLUSH ();	/* copy out the I/O vectors */
   1b7b4:	5a079463          	bnez	a5,1bd5c <_svfprintf_r+0xe64>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:925
                    else if (wc == '%')
                        break;
                    fmt += n;
		}
#else
                while (*fmt != '\0' && *fmt != '%')
   1b7b8:	0009c783          	lbu	a5,0(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1774
			PAD (width - realsz, blanks);

		/* finally, adjust ret */
		ret += width > realsz ? width : realsz;

		FLUSH ();	/* copy out the I/O vectors */
   1b7bc:	0a012c23          	sw	zero,184(sp)
   1b7c0:	000a8893          	mv	a7,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:925
                    else if (wc == '%')
                        break;
                    fmt += n;
		}
#else
                while (*fmt != '\0' && *fmt != '%')
   1b7c4:	800794e3          	bnez	a5,1afcc <_svfprintf_r+0xd4>
   1b7c8:	00098413          	mv	s0,s3
   1b7cc:	865ff06f          	j	1b030 <_svfprintf_r+0x138>
   1b7d0:	00060463          	beqz	a2,1b7d8 <_svfprintf_r+0x8e0>
   1b7d4:	2f00106f          	j	1cac4 <_svfprintf_r+0x1bcc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199
		case 'D':  /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'd':
		case 'i':
			_uquad = SARG ();
   1b7d8:	010b7793          	andi	a5,s6,16
   1b7dc:	0e078e63          	beqz	a5,1b8d8 <_svfprintf_r+0x9e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199 (discriminator 1)
   1b7e0:	02813703          	ld	a4,40(sp)
   1b7e4:	00073783          	ld	a5,0(a4)
   1b7e8:	00870713          	addi	a4,a4,8
   1b7ec:	02e13423          	sd	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1203 (discriminator 8)
#ifndef _NO_LONGLONG
			if ((quad_t)_uquad < 0)
#else
			if ((long) _uquad < 0)
   1b7f0:	1007c263          	bltz	a5,1b8f4 <_svfprintf_r+0x9fc>
   1b7f4:	08f14603          	lbu	a2,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1b7f8:	76044a63          	bltz	s0,1bf6c <_svfprintf_r+0x1074>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   1b7fc:	f7fb7b13          	andi	s6,s6,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1b800:	bc079ee3          	bnez	a5,1b3dc <_svfprintf_r+0x4e4>
   1b804:	1a041ee3          	bnez	s0,1c1c0 <_svfprintf_r+0x12c8>
   1b808:	00000413          	li	s0,0
   1b80c:	02012023          	sw	zero,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1571
			/*
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
   1b810:	000a8913          	mv	s2,s5
   1b814:	925ff06f          	j	1b138 <_svfprintf_r+0x240>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1118
			if (*fmt == 'h') {
				fmt++;
				flags |= CHARINT;
			} else
#endif
				flags |= SHORTINT;
   1b818:	040b6b13          	ori	s6,s6,64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1119
			goto rflag;
   1b81c:	845ff06f          	j	1b060 <_svfprintf_r+0x168>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:979
			 */
			if (!sign)
				sign = ' ';
			goto rflag;
		case '#':
			flags |= ALT;
   1b820:	001b6b13          	ori	s6,s6,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:980
			goto rflag;
   1b824:	83dff06f          	j	1b060 <_svfprintf_r+0x168>
   1b828:	b80604e3          	beqz	a2,1b3b0 <_svfprintf_r+0x4b8>
   1b82c:	08b107a3          	sb	a1,143(sp)
   1b830:	b81ff06f          	j	1b3b0 <_svfprintf_r+0x4b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:975
			/*
			 * ``If the space and + flags both appear, the space
			 * flag will be ignored.''
			 *	-- ANSI X3J11
			 */
			if (!sign)
   1b834:	820596e3          	bnez	a1,1b060 <_svfprintf_r+0x168>
   1b838:	00100613          	li	a2,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:976
				sign = ' ';
   1b83c:	02000593          	li	a1,32
   1b840:	821ff06f          	j	1b060 <_svfprintf_r+0x168>
   1b844:	00060463          	beqz	a2,1b84c <_svfprintf_r+0x954>
   1b848:	2540106f          	j	1ca9c <_svfprintf_r+0x1ba4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1227
		case 'G':
# ifdef _NO_LONGDBL
			if (flags & LONGDBL) {
				_fpvalue = (double) GET_ARG (N, ap, _LONG_DOUBLE);
			} else {
				_fpvalue = GET_ARG (N, ap, double);
   1b84c:	02813783          	ld	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1236

			   If the output is infinite or NaN, leading
			   zeros are not permitted.  Otherwise, scanf
			   could not read what printf wrote.
			 */
			if (isinf (_fpvalue)) {
   1b850:	00100913          	li	s2,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1227
		case 'G':
# ifdef _NO_LONGDBL
			if (flags & LONGDBL) {
				_fpvalue = (double) GET_ARG (N, ap, _LONG_DOUBLE);
			} else {
				_fpvalue = GET_ARG (N, ap, double);
   1b854:	0007b787          	fld	fa5,0(a5)
   1b858:	00878793          	addi	a5,a5,8
   1b85c:	01113023          	sd	a7,0(sp)
   1b860:	04f13c27          	fsd	fa5,88(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1236

			   If the output is infinite or NaN, leading
			   zeros are not permitted.  Otherwise, scanf
			   could not read what printf wrote.
			 */
			if (isinf (_fpvalue)) {
   1b864:	05813c83          	ld	s9,88(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1227
		case 'G':
# ifdef _NO_LONGDBL
			if (flags & LONGDBL) {
				_fpvalue = (double) GET_ARG (N, ap, _LONG_DOUBLE);
			} else {
				_fpvalue = GET_ARG (N, ap, double);
   1b868:	02f13423          	sd	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1236

			   If the output is infinite or NaN, leading
			   zeros are not permitted.  Otherwise, scanf
			   could not read what printf wrote.
			 */
			if (isinf (_fpvalue)) {
   1b86c:	f20c8553          	fmv.d.x	fa0,s9
   1b870:	ce5fd0ef          	jal	19554 <__fpclassifyd>
   1b874:	00013883          	ld	a7,0(sp)
   1b878:	172512e3          	bne	a0,s2,1c1dc <_svfprintf_r+0x12e4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1237
				if (_fpvalue < 0)
   1b87c:	f20007d3          	fmv.d.x	fa5,zero
   1b880:	f20c8753          	fmv.d.x	fa4,s9
   1b884:	a2f717d3          	flt.d	a5,fa4,fa5
   1b888:	6a0794e3          	bnez	a5,1c730 <_svfprintf_r+0x1838>
   1b88c:	08f14603          	lbu	a2,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1239
					sign = '-';
				if (ch <= 'G') /* 'A', 'E', 'F', or 'G' */
   1b890:	04700793          	li	a5,71
   1b894:	45a7dee3          	ble	s10,a5,1c4f0 <_svfprintf_r+0x15f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1242
					cp = "INF";
				else
					cp = "inf";
   1b898:	00022937          	lui	s2,0x22
   1b89c:	ba090913          	addi	s2,s2,-1120 # 21ba0 <zeroes.4123+0x6b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1245
				size = 3;
				flags &= ~ZEROPAD;
				break;
   1b8a0:	00300793          	li	a5,3
   1b8a4:	00f12423          	sw	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1244
				if (ch <= 'G') /* 'A', 'E', 'F', or 'G' */
					cp = "INF";
				else
					cp = "inf";
				size = 3;
				flags &= ~ZEROPAD;
   1b8a8:	f7fb7b13          	andi	s6,s6,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1243
					sign = '-';
				if (ch <= 'G') /* 'A', 'E', 'F', or 'G' */
					cp = "INF";
				else
					cp = "inf";
				size = 3;
   1b8ac:	02f12023          	sw	a5,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1b8b0:	00000413          	li	s0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:948
		width = 0;
		prec = -1;
		sign = '\0';
#ifdef FLOATING_POINT
		lead = 0;
   1b8b4:	04012623          	sw	zero,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1245
					cp = "INF";
				else
					cp = "inf";
				size = 3;
				flags &= ~ZEROPAD;
				break;
   1b8b8:	899ff06f          	j	1b150 <_svfprintf_r+0x258>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1108
#endif /* !_NO_POS_ARGS */
			width = n;
			goto reswitch;
#ifdef FLOATING_POINT
		case 'L':
			flags |= LONGDBL;
   1b8bc:	008b6b13          	ori	s6,s6,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1109
			goto rflag;
   1b8c0:	fa0ff06f          	j	1b060 <_svfprintf_r+0x168>
   1b8c4:	00060463          	beqz	a2,1b8cc <_svfprintf_r+0x9d4>
   1b8c8:	21c0106f          	j	1cae4 <_svfprintf_r+0x1bec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1195
				size = 1;
			}
			sign = '\0';
			break;
		case 'D':  /* extension */
			flags |= LONGINT;
   1b8cc:	010b6b13          	ori	s6,s6,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199
			/*FALLTHROUGH*/
		case 'd':
		case 'i':
			_uquad = SARG ();
   1b8d0:	010b7793          	andi	a5,s6,16
   1b8d4:	f00796e3          	bnez	a5,1b7e0 <_svfprintf_r+0x8e8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199 (discriminator 2)
   1b8d8:	040b7793          	andi	a5,s6,64
   1b8dc:	02813703          	ld	a4,40(sp)
   1b8e0:	160782e3          	beqz	a5,1c244 <_svfprintf_r+0x134c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199 (discriminator 4)
   1b8e4:	00071783          	lh	a5,0(a4)
   1b8e8:	00870713          	addi	a4,a4,8
   1b8ec:	02e13423          	sd	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1203
#ifndef _NO_LONGLONG
			if ((quad_t)_uquad < 0)
#else
			if ((long) _uquad < 0)
   1b8f0:	f007d2e3          	bgez	a5,1b7f4 <_svfprintf_r+0x8fc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1208
#endif
			{

				_uquad = -_uquad;
				sign = '-';
   1b8f4:	02d00713          	li	a4,45
   1b8f8:	08e107a3          	sb	a4,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1207
#else
			if ((long) _uquad < 0)
#endif
			{

				_uquad = -_uquad;
   1b8fc:	40f007b3          	neg	a5,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1b900:	5c0440e3          	bltz	s0,1c6c0 <_svfprintf_r+0x17c8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   1b904:	f7fb7b13          	andi	s6,s6,-129
   1b908:	02d00613          	li	a2,45
   1b90c:	ad1ff06f          	j	1b3dc <_svfprintf_r+0x4e4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   1b910:	02813783          	ld	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1441
#ifdef _GLIBC_EXTENSION
string:
#endif
			sign = '\0';
   1b914:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   1b918:	0007b903          	ld	s2,0(a5)
   1b91c:	00878c93          	addi	s9,a5,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1447
#ifndef __OPTIMIZE_SIZE__
			/* Behavior is undefined if the user passed a
			   NULL string when precision is not 0.
			   However, if we are not optimizing for size,
			   we might as well mirror glibc behavior.  */
			if (cp == NULL) {
   1b920:	5c0902e3          	beqz	s2,1c6e4 <_svfprintf_r+0x17ec>
   1b924:	01113023          	sd	a7,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1516
				}
				cp[size] = '\0';
			}
			else
#endif /* _MB_CAPABLE */
			if (prec >= 0) {
   1b928:	54044ae3          	bltz	s0,1c67c <_svfprintf_r+0x1784>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1522
				/*
				 * can't use strlen; can only look for the
				 * NUL in the first `prec' characters, and
				 * strlen () will go further.
				 */
				char *p = memchr (cp, 0, prec);
   1b92c:	00040613          	mv	a2,s0
   1b930:	00000593          	li	a1,0
   1b934:	00090513          	mv	a0,s2
   1b938:	830fc0ef          	jal	17968 <memchr>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1524

				if (p != NULL)
   1b93c:	00013883          	ld	a7,0(sp)
   1b940:	660502e3          	beqz	a0,1c7a4 <_svfprintf_r+0x18ac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1525
					size = p - cp;
   1b944:	412507bb          	subw	a5,a0,s2
   1b948:	02f12023          	sw	a5,32(sp)
   1b94c:	00078d93          	mv	s11,a5
   1b950:	5407c4e3          	bltz	a5,1c698 <_svfprintf_r+0x17a0>
   1b954:	08f14603          	lbu	a2,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1529
				else
					size = prec;
			} else
				size = strlen (cp);
   1b958:	01b12423          	sw	s11,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   1b95c:	03913423          	sd	s9,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1b960:	00000413          	li	s0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:948
		width = 0;
		prec = -1;
		sign = '\0';
#ifdef FLOATING_POINT
		lead = 0;
   1b964:	04012623          	sw	zero,76(sp)
   1b968:	fe8ff06f          	j	1b150 <_svfprintf_r+0x258>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959 (discriminator 1)
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   1b96c:	00012c23          	sw	zero,24(sp)
   1b970:	fd0d079b          	addiw	a5,s10,-48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1090
			goto rflag;
		case '1': case '2': case '3': case '4':
		case '5': case '6': case '7': case '8': case '9':
			n = 0;
			do {
				n = 10 * n + to_digit (ch);
   1b974:	01812303          	lw	t1,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1091
				ch = *fmt++;
   1b978:	00198993          	addi	s3,s3,1
   1b97c:	fff9cd03          	lbu	s10,-1(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1090
			goto rflag;
		case '1': case '2': case '3': case '4':
		case '5': case '6': case '7': case '8': case '9':
			n = 0;
			do {
				n = 10 * n + to_digit (ch);
   1b980:	0013181b          	slliw	a6,t1,0x1
   1b984:	00331c9b          	slliw	s9,t1,0x3
   1b988:	01980cbb          	addw	s9,a6,s9
   1b98c:	019787bb          	addw	a5,a5,s9
   1b990:	00f12c23          	sw	a5,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1092
				ch = *fmt++;
			} while (is_digit (ch));
   1b994:	fd0d079b          	addiw	a5,s10,-48
   1b998:	fcf6fee3          	bleu	a5,a3,1b974 <_svfprintf_r+0xa7c>
   1b99c:	eccff06f          	j	1b068 <_svfprintf_r+0x170>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
   1b9a0:	00022737          	lui	a4,0x22
   1b9a4:	bd070713          	addi	a4,a4,-1072 # 21bd0 <zeroes.4123+0x6e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1b9a8:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
   1b9ac:	02e13c23          	sd	a4,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1431
			flags |= HEXPREFIX;
			ox[0] = '0';
			ox[1] = ch = 'x';
   1b9b0:	07800d13          	li	s10,120
   1b9b4:	f58ff06f          	j	1b10c <_svfprintf_r+0x214>
   1b9b8:	00060463          	beqz	a2,1b9c0 <_svfprintf_r+0xac8>
   1b9bc:	1100106f          	j	1cacc <_svfprintf_r+0x1bd4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1653

			size = buf + BUF - cp;
		skipsize:
			break;
		default:	/* "%?" prints ?, unless ? is NUL */
			if (ch == '\0')
   1b9c0:	fc0d0063          	beqz	s10,1b180 <_svfprintf_r+0x288>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1660
			/* pretend it was %c with argument ch */
			cp = buf;
			*cp = ch;
			size = 1;
			sign = '\0';
			break;
   1b9c4:	00100793          	li	a5,1
   1b9c8:	00f12423          	sw	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1657
		default:	/* "%?" prints ?, unless ? is NUL */
			if (ch == '\0')
				goto done;
			/* pretend it was %c with argument ch */
			cp = buf;
			*cp = ch;
   1b9cc:	0da10423          	sb	s10,200(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1659
			size = 1;
			sign = '\0';
   1b9d0:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1660
			break;
   1b9d4:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1658
			if (ch == '\0')
				goto done;
			/* pretend it was %c with argument ch */
			cp = buf;
			*cp = ch;
			size = 1;
   1b9d8:	02f12023          	sw	a5,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1b9dc:	00000413          	li	s0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:948
		width = 0;
		prec = -1;
		sign = '\0';
#ifdef FLOATING_POINT
		lead = 0;
   1b9e0:	04012623          	sw	zero,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1656
			break;
		default:	/* "%?" prints ?, unless ? is NUL */
			if (ch == '\0')
				goto done;
			/* pretend it was %c with argument ch */
			cp = buf;
   1b9e4:	0c810913          	addi	s2,sp,200
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1660
			*cp = ch;
			size = 1;
			sign = '\0';
			break;
   1b9e8:	a8dff06f          	j	1b474 <_svfprintf_r+0x57c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1426
			 * of printable characters, in an implementation-
			 * defined manner.''
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
   1b9ec:	02e13423          	sd	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			base = HEX;
			xdigs = "0123456789abcdef";
   1b9f0:	00022737          	lui	a4,0x22
   1b9f4:	bd070713          	addi	a4,a4,-1072 # 21bd0 <zeroes.4123+0x6e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1429
			flags |= HEXPREFIX;
   1b9f8:	00068b13          	mv	s6,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
   1b9fc:	02e13c23          	sd	a4,56(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1431
			flags |= HEXPREFIX;
			ox[0] = '0';
			ox[1] = ch = 'x';
   1ba00:	07800d13          	li	s10,120
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1ba04:	3c079063          	bnez	a5,1bdc4 <_svfprintf_r+0xecc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1ba08:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1545
			xdigs = "0123456789ABCDEF";
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
hex:			_uquad = UARG ();
			base = HEX;
   1ba0c:	00200713          	li	a4,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1578
				/*
				 * Unsigned mod is hard, and unsigned mod
				 * by a constant is easier than that by
				 * a variable; hence this switch.
				 */
				switch (base) {
   1ba10:	00100693          	li	a3,1
   1ba14:	00000793          	li	a5,0
   1ba18:	4ad71ee3          	bne	a4,a3,1c6d4 <_svfprintf_r+0x17dc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1592
					break;

				case DEC:
					/* many numbers are 1 digit */
					if (_uquad < 10) {
						*--cp = to_char(_uquad);
   1ba1c:	0307879b          	addiw	a5,a5,48
   1ba20:	0ef107a3          	sb	a5,239(sp)
   1ba24:	07813783          	ld	a5,120(sp)
   1ba28:	0ef10913          	addi	s2,sp,239
   1ba2c:	02f12023          	sw	a5,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1593
						break;
   1ba30:	f08ff06f          	j	1b138 <_svfprintf_r+0x240>
   1ba34:	0c013783          	ld	a5,192(sp)
   1ba38:	b25ff06f          	j	1b55c <_svfprintf_r+0x664>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1750
					    PRINT (decimal_point, decp_len);
					PRINTANDPAD (cp, convbuf + ndig,
						     ndig - expt, zeroes);
				}
			} else {	/* 'a', 'A', 'e', or 'E' */
				if (ndig > 1 || flags & ALT) {
   1ba3c:	07012683          	lw	a3,112(sp)
   1ba40:	00100713          	li	a4,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1751
					PRINT (cp, 1);
   1ba44:	00178793          	addi	a5,a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1750
					    PRINT (decimal_point, decp_len);
					PRINTANDPAD (cp, convbuf + ndig,
						     ndig - expt, zeroes);
				}
			} else {	/* 'a', 'A', 'e', or 'E' */
				if (ndig > 1 || flags & ALT) {
   1ba48:	6ed75263          	ble	a3,a4,1c12c <_svfprintf_r+0x1234>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1751
					PRINT (cp, 1);
   1ba4c:	0b812703          	lw	a4,184(sp)
   1ba50:	00100693          	li	a3,1
   1ba54:	00d8b423          	sd	a3,8(a7)
   1ba58:	0017071b          	addiw	a4,a4,1
   1ba5c:	0128b023          	sd	s2,0(a7)
   1ba60:	0cf13023          	sd	a5,192(sp)
   1ba64:	0ae12c23          	sw	a4,184(sp)
   1ba68:	00700693          	li	a3,7
   1ba6c:	01088893          	addi	a7,a7,16
   1ba70:	6ee6c663          	blt	a3,a4,1c15c <_svfprintf_r+0x1264>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1753
					cp++;
					PRINT (decimal_point, decp_len);
   1ba74:	06813683          	ld	a3,104(sp)
   1ba78:	06013603          	ld	a2,96(sp)
   1ba7c:	0017071b          	addiw	a4,a4,1
   1ba80:	00f687b3          	add	a5,a3,a5
   1ba84:	00d8b423          	sd	a3,8(a7)
   1ba88:	00c8b023          	sd	a2,0(a7)
   1ba8c:	0cf13023          	sd	a5,192(sp)
   1ba90:	0ae12c23          	sw	a4,184(sp)
   1ba94:	00700693          	li	a3,7
   1ba98:	01088893          	addi	a7,a7,16
   1ba9c:	6ee6ce63          	blt	a3,a4,1c198 <_svfprintf_r+0x12a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1754
					if (_fpvalue) {
   1baa0:	f20007d3          	fmv.d.x	fa5,zero
   1baa4:	05813707          	fld	fa4,88(sp)
   1baa8:	a2f726d3          	feq.d	a3,fa4,fa5
   1baac:	42069063          	bnez	a3,1becc <_svfprintf_r+0xfd4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1755
						PRINT (cp, ndig - 1);
   1bab0:	07012683          	lw	a3,112(sp)
   1bab4:	00190913          	addi	s2,s2,1
   1bab8:	0017071b          	addiw	a4,a4,1
   1babc:	fff6869b          	addiw	a3,a3,-1
   1bac0:	00d787b3          	add	a5,a5,a3
   1bac4:	0128b023          	sd	s2,0(a7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1760
					} else	/* 0.[0..] */
						/* __dtoa irregularity */
						PAD (ndig - 1, zeroes);
				} else	/* XeYYY */
					PRINT (cp, 1);
   1bac8:	00d8b423          	sd	a3,8(a7)
   1bacc:	0cf13023          	sd	a5,192(sp)
   1bad0:	0ae12c23          	sw	a4,184(sp)
   1bad4:	00700693          	li	a3,7
   1bad8:	26e6c063          	blt	a3,a4,1bd38 <_svfprintf_r+0xe40>
   1badc:	01088893          	addi	a7,a7,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1761
				PRINT (expstr, expsize);
   1bae0:	07412683          	lw	a3,116(sp)
   1bae4:	0a010613          	addi	a2,sp,160
   1bae8:	0017071b          	addiw	a4,a4,1
   1baec:	00f687b3          	add	a5,a3,a5
   1baf0:	00c8b023          	sd	a2,0(a7)
   1baf4:	00d8b423          	sd	a3,8(a7)
   1baf8:	0cf13023          	sd	a5,192(sp)
   1bafc:	0ae12c23          	sw	a4,184(sp)
   1bb00:	00700693          	li	a3,7
   1bb04:	bce6d4e3          	ble	a4,a3,1b6cc <_svfprintf_r+0x7d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1761 (discriminator 1)
   1bb08:	0b010613          	addi	a2,sp,176
   1bb0c:	000b8593          	mv	a1,s7
   1bb10:	000c0513          	mv	a0,s8
   1bb14:	4b4030ef          	jal	1efc8 <__ssprint_r>
   1bb18:	e8051063          	bnez	a0,1b198 <_svfprintf_r+0x2a0>
   1bb1c:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1761
   1bb20:	000a8893          	mv	a7,s5
   1bb24:	badff06f          	j	1b6d0 <_svfprintf_r+0x7d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1706
		/* the string or number proper */
#ifdef FLOATING_POINT
		if ((flags & FPT) == 0) {
			PRINT (cp, size);
		} else {	/* glue together f_p fragments */
			if (ch >= 'f') {	/* 'f' or 'g' */
   1bb28:	06500713          	li	a4,101
   1bb2c:	f1a758e3          	ble	s10,a4,1ba3c <_svfprintf_r+0xb44>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1707
				if (_fpvalue == 0) {
   1bb30:	f20007d3          	fmv.d.x	fa5,zero
   1bb34:	05813707          	fld	fa4,88(sp)
   1bb38:	a2f72753          	feq.d	a4,fa4,fa5
   1bb3c:	28070c63          	beqz	a4,1bdd4 <_svfprintf_r+0xedc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1709
					/* kludge for __dtoa irregularity */
					PRINT ("0", 1);
   1bb40:	0b812703          	lw	a4,184(sp)
   1bb44:	000226b7          	lui	a3,0x22
   1bb48:	bf068693          	addi	a3,a3,-1040 # 21bf0 <zeroes.4123+0x700>
   1bb4c:	00d8b023          	sd	a3,0(a7)
   1bb50:	00178793          	addi	a5,a5,1
   1bb54:	00100693          	li	a3,1
   1bb58:	0017071b          	addiw	a4,a4,1
   1bb5c:	00d8b423          	sd	a3,8(a7)
   1bb60:	0cf13023          	sd	a5,192(sp)
   1bb64:	0ae12c23          	sw	a4,184(sp)
   1bb68:	00700693          	li	a3,7
   1bb6c:	01088893          	addi	a7,a7,16
   1bb70:	70e6c863          	blt	a3,a4,1c280 <_svfprintf_r+0x1388>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1710
					if (expt < ndig || flags & ALT) {
   1bb74:	09812703          	lw	a4,152(sp)
   1bb78:	07012683          	lw	a3,112(sp)
   1bb7c:	00d74663          	blt	a4,a3,1bb88 <_svfprintf_r+0xc90>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1710 (discriminator 1)
   1bb80:	001b7713          	andi	a4,s6,1
   1bb84:	b40706e3          	beqz	a4,1b6d0 <_svfprintf_r+0x7d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1711
						PRINT (decimal_point, decp_len);
   1bb88:	06013703          	ld	a4,96(sp)
   1bb8c:	06813683          	ld	a3,104(sp)
   1bb90:	01088893          	addi	a7,a7,16
   1bb94:	fee8b823          	sd	a4,-16(a7)
   1bb98:	0b812703          	lw	a4,184(sp)
   1bb9c:	00d787b3          	add	a5,a5,a3
   1bba0:	fed8bc23          	sd	a3,-8(a7)
   1bba4:	0017071b          	addiw	a4,a4,1
   1bba8:	0cf13023          	sd	a5,192(sp)
   1bbac:	0ae12c23          	sw	a4,184(sp)
   1bbb0:	00700693          	li	a3,7
   1bbb4:	7ee6c663          	blt	a3,a4,1c3a0 <_svfprintf_r+0x14a8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1712
						PAD (ndig - 1, zeroes);
   1bbb8:	07012703          	lw	a4,112(sp)
   1bbbc:	fff7041b          	addiw	s0,a4,-1
   1bbc0:	b08058e3          	blez	s0,1b6d0 <_svfprintf_r+0x7d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1712 (discriminator 5)
   1bbc4:	01000713          	li	a4,16
   1bbc8:	3a875863          	ble	s0,a4,1bf78 <_svfprintf_r+0x1080>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1712
   1bbcc:	01000913          	li	s2,16
   1bbd0:	0b812703          	lw	a4,184(sp)
   1bbd4:	00913823          	sd	s1,16(sp)
   1bbd8:	00700d13          	li	s10,7
   1bbdc:	00090693          	mv	a3,s2
   1bbe0:	00c0006f          	j	1bbec <_svfprintf_r+0xcf4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1712 (discriminator 4)
   1bbe4:	ff04041b          	addiw	s0,s0,-16
   1bbe8:	3886dc63          	ble	s0,a3,1bf80 <_svfprintf_r+0x1088>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1712 (discriminator 6)
   1bbec:	01078793          	addi	a5,a5,16
   1bbf0:	0017071b          	addiw	a4,a4,1
   1bbf4:	0098b023          	sd	s1,0(a7)
   1bbf8:	0128b423          	sd	s2,8(a7)
   1bbfc:	0cf13023          	sd	a5,192(sp)
   1bc00:	0ae12c23          	sw	a4,184(sp)
   1bc04:	01088893          	addi	a7,a7,16
   1bc08:	fced5ee3          	ble	a4,s10,1bbe4 <_svfprintf_r+0xcec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1712 (discriminator 1)
   1bc0c:	0b010613          	addi	a2,sp,176
   1bc10:	000b8593          	mv	a1,s7
   1bc14:	000c0513          	mv	a0,s8
   1bc18:	00d13023          	sd	a3,0(sp)
   1bc1c:	3ac030ef          	jal	1efc8 <__ssprint_r>
   1bc20:	d6051c63          	bnez	a0,1b198 <_svfprintf_r+0x2a0>
   1bc24:	0c013783          	ld	a5,192(sp)
   1bc28:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1712
   1bc2c:	000a8893          	mv	a7,s5
   1bc30:	00013683          	ld	a3,0(sp)
   1bc34:	fb1ff06f          	j	1bbe4 <_svfprintf_r+0xcec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
		if (flags & HEXPREFIX)
			PRINT (ox, 2);

		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
			PAD (width - realsz, zeroes);
   1bc38:	01812703          	lw	a4,24(sp)
   1bc3c:	00812683          	lw	a3,8(sp)
   1bc40:	40d70cbb          	subw	s9,a4,a3
   1bc44:	999058e3          	blez	s9,1b5d4 <_svfprintf_r+0x6dc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 5)
   1bc48:	01000713          	li	a4,16
   1bc4c:	359756e3          	ble	s9,a4,1c798 <_svfprintf_r+0x18a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
   1bc50:	01000813          	li	a6,16
   1bc54:	0b812703          	lw	a4,184(sp)
   1bc58:	00913823          	sd	s1,16(sp)
   1bc5c:	00700313          	li	t1,7
   1bc60:	00080d93          	mv	s11,a6
   1bc64:	00c0006f          	j	1bc70 <_svfprintf_r+0xd78>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 4)
   1bc68:	ff0c8c9b          	addiw	s9,s9,-16
   1bc6c:	059dde63          	ble	s9,s11,1bcc8 <_svfprintf_r+0xdd0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 6)
   1bc70:	01078793          	addi	a5,a5,16
   1bc74:	0017071b          	addiw	a4,a4,1
   1bc78:	0098b023          	sd	s1,0(a7)
   1bc7c:	0108b423          	sd	a6,8(a7)
   1bc80:	0cf13023          	sd	a5,192(sp)
   1bc84:	0ae12c23          	sw	a4,184(sp)
   1bc88:	01088893          	addi	a7,a7,16
   1bc8c:	fce35ee3          	ble	a4,t1,1bc68 <_svfprintf_r+0xd70>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 1)
   1bc90:	0b010613          	addi	a2,sp,176
   1bc94:	000b8593          	mv	a1,s7
   1bc98:	000c0513          	mv	a0,s8
   1bc9c:	04613023          	sd	t1,64(sp)
   1bca0:	01013023          	sd	a6,0(sp)
   1bca4:	324030ef          	jal	1efc8 <__ssprint_r>
   1bca8:	ce051863          	bnez	a0,1b198 <_svfprintf_r+0x2a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
   1bcac:	ff0c8c9b          	addiw	s9,s9,-16
   1bcb0:	0c013783          	ld	a5,192(sp)
   1bcb4:	0b812703          	lw	a4,184(sp)
   1bcb8:	000a8893          	mv	a7,s5
   1bcbc:	04013303          	ld	t1,64(sp)
   1bcc0:	00013803          	ld	a6,0(sp)
   1bcc4:	fb9dc6e3          	blt	s11,s9,1bc70 <_svfprintf_r+0xd78>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 7)
   1bcc8:	01013603          	ld	a2,16(sp)
   1bccc:	019787b3          	add	a5,a5,s9
   1bcd0:	0017071b          	addiw	a4,a4,1
   1bcd4:	00c8b023          	sd	a2,0(a7)
   1bcd8:	0198b423          	sd	s9,8(a7)
   1bcdc:	0cf13023          	sd	a5,192(sp)
   1bce0:	0ae12c23          	sw	a4,184(sp)
   1bce4:	00700693          	li	a3,7
   1bce8:	01088893          	addi	a7,a7,16
   1bcec:	8ee6d4e3          	ble	a4,a3,1b5d4 <_svfprintf_r+0x6dc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 8)
   1bcf0:	0b010613          	addi	a2,sp,176
   1bcf4:	000b8593          	mv	a1,s7
   1bcf8:	000c0513          	mv	a0,s8
   1bcfc:	2cc030ef          	jal	1efc8 <__ssprint_r>
   1bd00:	c8051c63          	bnez	a0,1b198 <_svfprintf_r+0x2a0>
   1bd04:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
   1bd08:	000a8893          	mv	a7,s5
   1bd0c:	8c9ff06f          	j	1b5d4 <_svfprintf_r+0x6dc>
   1bd10:	00913823          	sd	s1,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1758 (discriminator 7)
					PRINT (decimal_point, decp_len);
					if (_fpvalue) {
						PRINT (cp, ndig - 1);
					} else	/* 0.[0..] */
						/* __dtoa irregularity */
						PAD (ndig - 1, zeroes);
   1bd14:	01013683          	ld	a3,16(sp)
   1bd18:	008787b3          	add	a5,a5,s0
   1bd1c:	0017071b          	addiw	a4,a4,1
   1bd20:	00d8b023          	sd	a3,0(a7)
   1bd24:	0088b423          	sd	s0,8(a7)
   1bd28:	0cf13023          	sd	a5,192(sp)
   1bd2c:	0ae12c23          	sw	a4,184(sp)
   1bd30:	00700693          	li	a3,7
   1bd34:	dae6d4e3          	ble	a4,a3,1badc <_svfprintf_r+0xbe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1760 (discriminator 1)
				} else	/* XeYYY */
					PRINT (cp, 1);
   1bd38:	0b010613          	addi	a2,sp,176
   1bd3c:	000b8593          	mv	a1,s7
   1bd40:	000c0513          	mv	a0,s8
   1bd44:	284030ef          	jal	1efc8 <__ssprint_r>
   1bd48:	c4051863          	bnez	a0,1b198 <_svfprintf_r+0x2a0>
   1bd4c:	0c013783          	ld	a5,192(sp)
   1bd50:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1760
   1bd54:	000a8893          	mv	a7,s5
   1bd58:	d89ff06f          	j	1bae0 <_svfprintf_r+0xbe8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1774 (discriminator 1)
			PAD (width - realsz, blanks);

		/* finally, adjust ret */
		ret += width > realsz ? width : realsz;

		FLUSH ();	/* copy out the I/O vectors */
   1bd5c:	0b010613          	addi	a2,sp,176
   1bd60:	000b8593          	mv	a1,s7
   1bd64:	000c0513          	mv	a0,s8
   1bd68:	260030ef          	jal	1efc8 <__ssprint_r>
   1bd6c:	a40506e3          	beqz	a0,1b7b8 <_svfprintf_r+0x8c0>
   1bd70:	c28ff06f          	j	1b198 <_svfprintf_r+0x2a0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1690
		if ((flags & (LADJUST|ZEROPAD)) == 0)
			PAD (width - realsz, blanks);

		/* prefix */
		if (sign)
			PRINT (&sign, 1);
   1bd74:	0b010613          	addi	a2,sp,176
   1bd78:	000b8593          	mv	a1,s7
   1bd7c:	000c0513          	mv	a0,s8
   1bd80:	248030ef          	jal	1efc8 <__ssprint_r>
   1bd84:	c0051a63          	bnez	a0,1b198 <_svfprintf_r+0x2a0>
   1bd88:	0c013783          	ld	a5,192(sp)
   1bd8c:	000a8893          	mv	a7,s5
   1bd90:	801ff06f          	j	1b590 <_svfprintf_r+0x698>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1692 (discriminator 1)
		if (flags & HEXPREFIX)
			PRINT (ox, 2);
   1bd94:	0b010613          	addi	a2,sp,176
   1bd98:	000b8593          	mv	a1,s7
   1bd9c:	000c0513          	mv	a0,s8
   1bda0:	228030ef          	jal	1efc8 <__ssprint_r>
   1bda4:	be051a63          	bnez	a0,1b198 <_svfprintf_r+0x2a0>
   1bda8:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1692
   1bdac:	000a8893          	mv	a7,s5
   1bdb0:	819ff06f          	j	1b5c8 <_svfprintf_r+0x6d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1bdb4:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1bdb8:	c40446e3          	bltz	s0,1ba04 <_svfprintf_r+0xb0c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   1bdbc:	f7fb7b13          	andi	s6,s6,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1bdc0:	b4078063          	beqz	a5,1b100 <_svfprintf_r+0x208>
   1bdc4:	00000613          	li	a2,0
   1bdc8:	b44ff06f          	j	1b10c <_svfprintf_r+0x214>
   1bdcc:	00000613          	li	a2,0
   1bdd0:	c68ff06f          	j	1b238 <_svfprintf_r+0x340>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1714
					PRINT ("0", 1);
					if (expt < ndig || flags & ALT) {
						PRINT (decimal_point, decp_len);
						PAD (ndig - 1, zeroes);
					}
				} else if (expt <= 0) {
   1bdd4:	09812403          	lw	s0,152(sp)
   1bdd8:	4c805663          	blez	s0,1c2a4 <_svfprintf_r+0x13ac>
   1bddc:	04c12703          	lw	a4,76(sp)
   1bde0:	07012683          	lw	a3,112(sp)
   1bde4:	00070413          	mv	s0,a4
   1bde8:	00e6d463          	ble	a4,a3,1bdf0 <_svfprintf_r+0xef8>
   1bdec:	00068413          	mv	s0,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723
						PAD (-expt, zeroes);
						PRINT (cp, ndig);
					}
				} else {
					char *convbuf = cp;
					PRINTANDPAD(cp, convbuf + ndig,
   1bdf0:	02805663          	blez	s0,1be1c <_svfprintf_r+0xf24>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723 (discriminator 4)
   1bdf4:	0b812703          	lw	a4,184(sp)
   1bdf8:	008787b3          	add	a5,a5,s0
   1bdfc:	0128b023          	sd	s2,0(a7)
   1be00:	0017071b          	addiw	a4,a4,1
   1be04:	0088b423          	sd	s0,8(a7)
   1be08:	0cf13023          	sd	a5,192(sp)
   1be0c:	0ae12c23          	sw	a4,184(sp)
   1be10:	00700693          	li	a3,7
   1be14:	01088893          	addi	a7,a7,16
   1be18:	6ee6c263          	blt	a3,a4,1c4fc <_svfprintf_r+0x1604>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723 (discriminator 9)
   1be1c:	08044ee3          	bltz	s0,1c6b8 <_svfprintf_r+0x17c0>
   1be20:	04c12703          	lw	a4,76(sp)
   1be24:	4087043b          	subw	s0,a4,s0
   1be28:	1c805663          	blez	s0,1bff4 <_svfprintf_r+0x10fc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723 (discriminator 14)
   1be2c:	01000713          	li	a4,16
   1be30:	16875c63          	ble	s0,a4,1bfa8 <_svfprintf_r+0x10b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723
   1be34:	01000d13          	li	s10,16
   1be38:	0b812703          	lw	a4,184(sp)
   1be3c:	00913823          	sd	s1,16(sp)
   1be40:	00700693          	li	a3,7
   1be44:	000d0813          	mv	a6,s10
   1be48:	00c0006f          	j	1be54 <_svfprintf_r+0xf5c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723 (discriminator 13)
   1be4c:	ff04041b          	addiw	s0,s0,-16
   1be50:	16885063          	ble	s0,a6,1bfb0 <_svfprintf_r+0x10b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723 (discriminator 15)
   1be54:	01078793          	addi	a5,a5,16
   1be58:	0017071b          	addiw	a4,a4,1
   1be5c:	0098b023          	sd	s1,0(a7)
   1be60:	01a8b423          	sd	s10,8(a7)
   1be64:	0cf13023          	sd	a5,192(sp)
   1be68:	0ae12c23          	sw	a4,184(sp)
   1be6c:	01088893          	addi	a7,a7,16
   1be70:	fce6dee3          	ble	a4,a3,1be4c <_svfprintf_r+0xf54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723 (discriminator 10)
   1be74:	0b010613          	addi	a2,sp,176
   1be78:	000b8593          	mv	a1,s7
   1be7c:	000c0513          	mv	a0,s8
   1be80:	03013023          	sd	a6,32(sp)
   1be84:	00d13023          	sd	a3,0(sp)
   1be88:	140030ef          	jal	1efc8 <__ssprint_r>
   1be8c:	b0051663          	bnez	a0,1b198 <_svfprintf_r+0x2a0>
   1be90:	0c013783          	ld	a5,192(sp)
   1be94:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723
   1be98:	000a8893          	mv	a7,s5
   1be9c:	02013803          	ld	a6,32(sp)
   1bea0:	00013683          	ld	a3,0(sp)
   1bea4:	fa9ff06f          	j	1be4c <_svfprintf_r+0xf54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 8)
		if (flags & HEXPREFIX)
			realsz+= 2;

		/* right-adjusting blank padding */
		if ((flags & (LADJUST|ZEROPAD)) == 0)
			PAD (width - realsz, blanks);
   1bea8:	0b010613          	addi	a2,sp,176
   1beac:	000b8593          	mv	a1,s7
   1beb0:	000c0513          	mv	a0,s8
   1beb4:	114030ef          	jal	1efc8 <__ssprint_r>
   1beb8:	ae051063          	bnez	a0,1b198 <_svfprintf_r+0x2a0>
   1bebc:	08f14603          	lbu	a2,143(sp)
   1bec0:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
   1bec4:	000a8893          	mv	a7,s5
   1bec8:	e94ff06f          	j	1b55c <_svfprintf_r+0x664>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1758
					PRINT (decimal_point, decp_len);
					if (_fpvalue) {
						PRINT (cp, ndig - 1);
					} else	/* 0.[0..] */
						/* __dtoa irregularity */
						PAD (ndig - 1, zeroes);
   1becc:	07012683          	lw	a3,112(sp)
   1bed0:	fff6841b          	addiw	s0,a3,-1
   1bed4:	c08056e3          	blez	s0,1bae0 <_svfprintf_r+0xbe8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1758 (discriminator 5)
   1bed8:	01000693          	li	a3,16
   1bedc:	e286dae3          	ble	s0,a3,1bd10 <_svfprintf_r+0xe18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1758 (discriminator 6)
   1bee0:	01000913          	li	s2,16
   1bee4:	00913823          	sd	s1,16(sp)
   1bee8:	00700d13          	li	s10,7
   1beec:	00090693          	mv	a3,s2
   1bef0:	00c0006f          	j	1befc <_svfprintf_r+0x1004>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1758 (discriminator 4)
   1bef4:	ff04041b          	addiw	s0,s0,-16
   1bef8:	e086dee3          	ble	s0,a3,1bd14 <_svfprintf_r+0xe1c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1758 (discriminator 6)
   1befc:	01078793          	addi	a5,a5,16
   1bf00:	0017071b          	addiw	a4,a4,1
   1bf04:	0098b023          	sd	s1,0(a7)
   1bf08:	0128b423          	sd	s2,8(a7)
   1bf0c:	0cf13023          	sd	a5,192(sp)
   1bf10:	0ae12c23          	sw	a4,184(sp)
   1bf14:	01088893          	addi	a7,a7,16
   1bf18:	fced5ee3          	ble	a4,s10,1bef4 <_svfprintf_r+0xffc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1758 (discriminator 1)
   1bf1c:	0b010613          	addi	a2,sp,176
   1bf20:	000b8593          	mv	a1,s7
   1bf24:	000c0513          	mv	a0,s8
   1bf28:	00d13023          	sd	a3,0(sp)
   1bf2c:	09c030ef          	jal	1efc8 <__ssprint_r>
   1bf30:	a6051463          	bnez	a0,1b198 <_svfprintf_r+0x2a0>
   1bf34:	0c013783          	ld	a5,192(sp)
   1bf38:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1758
   1bf3c:	000a8893          	mv	a7,s5
   1bf40:	00013683          	ld	a3,0(sp)
   1bf44:	fb1ff06f          	j	1bef4 <_svfprintf_r+0xffc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536 (discriminator 2)
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1bf48:	040b7793          	andi	a5,s6,64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1bf4c:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1bf50:	1e078c63          	beqz	a5,1c148 <_svfprintf_r+0x1250>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536 (discriminator 4)
   1bf54:	02813783          	ld	a5,40(sp)
   1bf58:	00878713          	addi	a4,a5,8
   1bf5c:	0007d783          	lhu	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1bf60:	c6045663          	bgez	s0,1b3cc <_svfprintf_r+0x4d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1bf64:	02e13423          	sd	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1bf68:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1bf6c:	00100713          	li	a4,1
   1bf70:	aa0780e3          	beqz	a5,1ba10 <_svfprintf_r+0xb18>
   1bf74:	c68ff06f          	j	1b3dc <_svfprintf_r+0x4e4>
   1bf78:	0b812703          	lw	a4,184(sp)
   1bf7c:	00913823          	sd	s1,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746 (discriminator 16)
						cp = convbuf + ndig;
					}
#endif
					if (expt < ndig || flags & ALT)
					    PRINT (decimal_point, decp_len);
					PRINTANDPAD (cp, convbuf + ndig,
   1bf80:	01013683          	ld	a3,16(sp)
   1bf84:	008787b3          	add	a5,a5,s0
   1bf88:	0088b423          	sd	s0,8(a7)
   1bf8c:	00d8b023          	sd	a3,0(a7)
   1bf90:	0017071b          	addiw	a4,a4,1
   1bf94:	0cf13023          	sd	a5,192(sp)
   1bf98:	0ae12c23          	sw	a4,184(sp)
   1bf9c:	00700693          	li	a3,7
   1bfa0:	f2e6d663          	ble	a4,a3,1b6cc <_svfprintf_r+0x7d4>
   1bfa4:	b65ff06f          	j	1bb08 <_svfprintf_r+0xc10>
   1bfa8:	0b812703          	lw	a4,184(sp)
   1bfac:	00913823          	sd	s1,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723
						PAD (-expt, zeroes);
						PRINT (cp, ndig);
					}
				} else {
					char *convbuf = cp;
					PRINTANDPAD(cp, convbuf + ndig,
   1bfb0:	01013683          	ld	a3,16(sp)
   1bfb4:	008787b3          	add	a5,a5,s0
   1bfb8:	0017071b          	addiw	a4,a4,1
   1bfbc:	00d8b023          	sd	a3,0(a7)
   1bfc0:	0088b423          	sd	s0,8(a7)
   1bfc4:	0cf13023          	sd	a5,192(sp)
   1bfc8:	0ae12c23          	sw	a4,184(sp)
   1bfcc:	00700693          	li	a3,7
   1bfd0:	01088893          	addi	a7,a7,16
   1bfd4:	02e6d063          	ble	a4,a3,1bff4 <_svfprintf_r+0x10fc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723 (discriminator 17)
   1bfd8:	0b010613          	addi	a2,sp,176
   1bfdc:	000b8593          	mv	a1,s7
   1bfe0:	000c0513          	mv	a0,s8
   1bfe4:	7e5020ef          	jal	1efc8 <__ssprint_r>
   1bfe8:	9a051863          	bnez	a0,1b198 <_svfprintf_r+0x2a0>
   1bfec:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723
   1bff0:	000a8893          	mv	a7,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1725
						    lead, zeroes);
					cp += lead;
   1bff4:	04c12d03          	lw	s10,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1744
					    }
					    if (cp > convbuf + ndig)
						cp = convbuf + ndig;
					}
#endif
					if (expt < ndig || flags & ALT)
   1bff8:	09812703          	lw	a4,152(sp)
   1bffc:	07012683          	lw	a3,112(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1725
					}
				} else {
					char *convbuf = cp;
					PRINTANDPAD(cp, convbuf + ndig,
						    lead, zeroes);
					cp += lead;
   1c000:	01a90d33          	add	s10,s2,s10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1744
					    }
					    if (cp > convbuf + ndig)
						cp = convbuf + ndig;
					}
#endif
					if (expt < ndig || flags & ALT)
   1c004:	0cd74a63          	blt	a4,a3,1c0d8 <_svfprintf_r+0x11e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1744 (discriminator 1)
   1c008:	001b7693          	andi	a3,s6,1
   1c00c:	0c069663          	bnez	a3,1c0d8 <_svfprintf_r+0x11e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746
					    PRINT (decimal_point, decp_len);
					PRINTANDPAD (cp, convbuf + ndig,
   1c010:	07012683          	lw	a3,112(sp)
   1c014:	00d90433          	add	s0,s2,a3
   1c018:	41a40433          	sub	s0,s0,s10
   1c01c:	40e6873b          	subw	a4,a3,a4
   1c020:	0004041b          	sext.w	s0,s0
   1c024:	00875463          	ble	s0,a4,1c02c <_svfprintf_r+0x1134>
   1c028:	00070413          	mv	s0,a4
   1c02c:	02805663          	blez	s0,1c058 <_svfprintf_r+0x1160>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746 (discriminator 4)
   1c030:	0b812683          	lw	a3,184(sp)
   1c034:	008787b3          	add	a5,a5,s0
   1c038:	01a8b023          	sd	s10,0(a7)
   1c03c:	0016869b          	addiw	a3,a3,1
   1c040:	0088b423          	sd	s0,8(a7)
   1c044:	0cf13023          	sd	a5,192(sp)
   1c048:	0ad12c23          	sw	a3,184(sp)
   1c04c:	00700613          	li	a2,7
   1c050:	01088893          	addi	a7,a7,16
   1c054:	4ed64863          	blt	a2,a3,1c544 <_svfprintf_r+0x164c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746 (discriminator 9)
   1c058:	6c044863          	bltz	s0,1c728 <_svfprintf_r+0x1830>
   1c05c:	4087043b          	subw	s0,a4,s0
   1c060:	e6805863          	blez	s0,1b6d0 <_svfprintf_r+0x7d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746 (discriminator 14)
   1c064:	01000713          	li	a4,16
   1c068:	f08758e3          	ble	s0,a4,1bf78 <_svfprintf_r+0x1080>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746
   1c06c:	01000913          	li	s2,16
   1c070:	0b812703          	lw	a4,184(sp)
   1c074:	00913823          	sd	s1,16(sp)
   1c078:	00700d13          	li	s10,7
   1c07c:	00090693          	mv	a3,s2
   1c080:	00c0006f          	j	1c08c <_svfprintf_r+0x1194>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746 (discriminator 13)
   1c084:	ff04041b          	addiw	s0,s0,-16
   1c088:	ee86dce3          	ble	s0,a3,1bf80 <_svfprintf_r+0x1088>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746 (discriminator 15)
   1c08c:	01078793          	addi	a5,a5,16
   1c090:	0017071b          	addiw	a4,a4,1
   1c094:	0098b023          	sd	s1,0(a7)
   1c098:	0128b423          	sd	s2,8(a7)
   1c09c:	0cf13023          	sd	a5,192(sp)
   1c0a0:	0ae12c23          	sw	a4,184(sp)
   1c0a4:	01088893          	addi	a7,a7,16
   1c0a8:	fced5ee3          	ble	a4,s10,1c084 <_svfprintf_r+0x118c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746 (discriminator 10)
   1c0ac:	0b010613          	addi	a2,sp,176
   1c0b0:	000b8593          	mv	a1,s7
   1c0b4:	000c0513          	mv	a0,s8
   1c0b8:	00d13023          	sd	a3,0(sp)
   1c0bc:	70d020ef          	jal	1efc8 <__ssprint_r>
   1c0c0:	8c051c63          	bnez	a0,1b198 <_svfprintf_r+0x2a0>
   1c0c4:	0c013783          	ld	a5,192(sp)
   1c0c8:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746
   1c0cc:	000a8893          	mv	a7,s5
   1c0d0:	00013683          	ld	a3,0(sp)
   1c0d4:	fb1ff06f          	j	1c084 <_svfprintf_r+0x118c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1745
					    if (cp > convbuf + ndig)
						cp = convbuf + ndig;
					}
#endif
					if (expt < ndig || flags & ALT)
					    PRINT (decimal_point, decp_len);
   1c0d8:	06013683          	ld	a3,96(sp)
   1c0dc:	06813603          	ld	a2,104(sp)
   1c0e0:	01088893          	addi	a7,a7,16
   1c0e4:	fed8b823          	sd	a3,-16(a7)
   1c0e8:	0b812683          	lw	a3,184(sp)
   1c0ec:	00c787b3          	add	a5,a5,a2
   1c0f0:	fec8bc23          	sd	a2,-8(a7)
   1c0f4:	0016869b          	addiw	a3,a3,1
   1c0f8:	0cf13023          	sd	a5,192(sp)
   1c0fc:	0ad12c23          	sw	a3,184(sp)
   1c100:	00700613          	li	a2,7
   1c104:	f0d656e3          	ble	a3,a2,1c010 <_svfprintf_r+0x1118>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1745 (discriminator 1)
   1c108:	0b010613          	addi	a2,sp,176
   1c10c:	000b8593          	mv	a1,s7
   1c110:	000c0513          	mv	a0,s8
   1c114:	6b5020ef          	jal	1efc8 <__ssprint_r>
   1c118:	88051063          	bnez	a0,1b198 <_svfprintf_r+0x2a0>
   1c11c:	09812703          	lw	a4,152(sp)
   1c120:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1745
   1c124:	000a8893          	mv	a7,s5
   1c128:	ee9ff06f          	j	1c010 <_svfprintf_r+0x1118>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1750 (discriminator 1)
					PRINTANDPAD (cp, convbuf + ndig,
						     ndig - expt, zeroes);
				}
			} else {	/* 'a', 'A', 'e', or 'E' */
				if (ndig > 1 || flags & ALT) {
   1c12c:	00eb7733          	and	a4,s6,a4
   1c130:	90071ee3          	bnez	a4,1ba4c <_svfprintf_r+0xb54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1760
						PRINT (cp, ndig - 1);
					} else	/* 0.[0..] */
						/* __dtoa irregularity */
						PAD (ndig - 1, zeroes);
				} else	/* XeYYY */
					PRINT (cp, 1);
   1c134:	0b812703          	lw	a4,184(sp)
   1c138:	0128b023          	sd	s2,0(a7)
   1c13c:	00100693          	li	a3,1
   1c140:	0017071b          	addiw	a4,a4,1
   1c144:	985ff06f          	j	1bac8 <_svfprintf_r+0xbd0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536 (discriminator 5)
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1c148:	02813783          	ld	a5,40(sp)
   1c14c:	00878713          	addi	a4,a5,8
   1c150:	0007e783          	lwu	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1c154:	a6045c63          	bgez	s0,1b3cc <_svfprintf_r+0x4d4>
   1c158:	e0dff06f          	j	1bf64 <_svfprintf_r+0x106c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1751 (discriminator 1)
					PRINTANDPAD (cp, convbuf + ndig,
						     ndig - expt, zeroes);
				}
			} else {	/* 'a', 'A', 'e', or 'E' */
				if (ndig > 1 || flags & ALT) {
					PRINT (cp, 1);
   1c15c:	0b010613          	addi	a2,sp,176
   1c160:	000b8593          	mv	a1,s7
   1c164:	000c0513          	mv	a0,s8
   1c168:	661020ef          	jal	1efc8 <__ssprint_r>
   1c16c:	00050463          	beqz	a0,1c174 <_svfprintf_r+0x127c>
   1c170:	828ff06f          	j	1b198 <_svfprintf_r+0x2a0>
   1c174:	0c013783          	ld	a5,192(sp)
   1c178:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1751
   1c17c:	000a8893          	mv	a7,s5
   1c180:	8f5ff06f          	j	1ba74 <_svfprintf_r+0xb7c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411 (discriminator 5)
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   1c184:	02813783          	ld	a5,40(sp)
   1c188:	00878713          	addi	a4,a5,8
   1c18c:	0007e783          	lwu	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1c190:	88045663          	bgez	s0,1b21c <_svfprintf_r+0x324>
   1c194:	9fcff06f          	j	1b390 <_svfprintf_r+0x498>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1753 (discriminator 1)
				}
			} else {	/* 'a', 'A', 'e', or 'E' */
				if (ndig > 1 || flags & ALT) {
					PRINT (cp, 1);
					cp++;
					PRINT (decimal_point, decp_len);
   1c198:	0b010613          	addi	a2,sp,176
   1c19c:	000b8593          	mv	a1,s7
   1c1a0:	000c0513          	mv	a0,s8
   1c1a4:	625020ef          	jal	1efc8 <__ssprint_r>
   1c1a8:	00050463          	beqz	a0,1c1b0 <_svfprintf_r+0x12b8>
   1c1ac:	fedfe06f          	j	1b198 <_svfprintf_r+0x2a0>
   1c1b0:	0c013783          	ld	a5,192(sp)
   1c1b4:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1753
   1c1b8:	000a8893          	mv	a7,s5
   1c1bc:	8e5ff06f          	j	1baa0 <_svfprintf_r+0xba8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1c1c0:	00000793          	li	a5,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1592
					break;

				case DEC:
					/* many numbers are 1 digit */
					if (_uquad < 10) {
						*--cp = to_char(_uquad);
   1c1c4:	0307879b          	addiw	a5,a5,48
   1c1c8:	0ef107a3          	sb	a5,239(sp)
   1c1cc:	07813783          	ld	a5,120(sp)
   1c1d0:	0ef10913          	addi	s2,sp,239
   1c1d4:	02f12023          	sw	a5,32(sp)
   1c1d8:	f61fe06f          	j	1b138 <_svfprintf_r+0x240>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1247
					cp = "inf";
				size = 3;
				flags &= ~ZEROPAD;
				break;
			}
			if (isnan (_fpvalue)) {
   1c1dc:	05813507          	fld	fa0,88(sp)
   1c1e0:	01113023          	sd	a7,0(sp)
   1c1e4:	b70fd0ef          	jal	19554 <__fpclassifyd>
   1c1e8:	00013883          	ld	a7,0(sp)
   1c1ec:	1c051c63          	bnez	a0,1c3c4 <_svfprintf_r+0x14cc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1248
				if (ch <= 'G') /* 'A', 'E', 'F', or 'G' */
   1c1f0:	04700793          	li	a5,71
   1c1f4:	39a7d063          	ble	s10,a5,1c574 <_svfprintf_r+0x167c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1251
					cp = "NAN";
				else
					cp = "nan";
   1c1f8:	00022937          	lui	s2,0x22
   1c1fc:	bb090913          	addi	s2,s2,-1104 # 21bb0 <zeroes.4123+0x6c0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1254
				size = 3;
				flags &= ~ZEROPAD;
				break;
   1c200:	00300793          	li	a5,3
   1c204:	00f12423          	sw	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1253
				if (ch <= 'G') /* 'A', 'E', 'F', or 'G' */
					cp = "NAN";
				else
					cp = "nan";
				size = 3;
				flags &= ~ZEROPAD;
   1c208:	f7fb7b13          	andi	s6,s6,-129
   1c20c:	08f14603          	lbu	a2,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1252
			if (isnan (_fpvalue)) {
				if (ch <= 'G') /* 'A', 'E', 'F', or 'G' */
					cp = "NAN";
				else
					cp = "nan";
				size = 3;
   1c210:	02f12023          	sw	a5,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1c214:	00000413          	li	s0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:948
		width = 0;
		prec = -1;
		sign = '\0';
#ifdef FLOATING_POINT
		lead = 0;
   1c218:	04012623          	sw	zero,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1254
					cp = "NAN";
				else
					cp = "nan";
				size = 3;
				flags &= ~ZEROPAD;
				break;
   1c21c:	f35fe06f          	j	1b150 <_svfprintf_r+0x258>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1399
			else
#endif
			if (flags & LONGINT)
				*GET_ARG (N, ap, long_ptr_t) = ret;
			else if (flags & SHORTINT)
				*GET_ARG (N, ap, short_ptr_t) = ret;
   1c220:	02813703          	ld	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1398
				*GET_ARG (N, ap, quad_ptr_t) = ret;
			else
#endif
			if (flags & LONGINT)
				*GET_ARG (N, ap, long_ptr_t) = ret;
			else if (flags & SHORTINT)
   1c224:	040b7b13          	andi	s6,s6,64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1399
				*GET_ARG (N, ap, short_ptr_t) = ret;
   1c228:	00073783          	ld	a5,0(a4)
   1c22c:	00870713          	addi	a4,a4,8
   1c230:	02e13423          	sd	a4,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1398
				*GET_ARG (N, ap, quad_ptr_t) = ret;
			else
#endif
			if (flags & LONGINT)
				*GET_ARG (N, ap, long_ptr_t) = ret;
			else if (flags & SHORTINT)
   1c234:	420b0e63          	beqz	s6,1c670 <_svfprintf_r+0x1778>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1399
				*GET_ARG (N, ap, short_ptr_t) = ret;
   1c238:	01c15703          	lhu	a4,28(sp)
   1c23c:	00e79023          	sh	a4,0(a5)
   1c240:	d85fe06f          	j	1afc4 <_svfprintf_r+0xcc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199 (discriminator 5)
		case 'D':  /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'd':
		case 'i':
			_uquad = SARG ();
   1c244:	00072783          	lw	a5,0(a4)
   1c248:	00870713          	addi	a4,a4,8
   1c24c:	02e13423          	sd	a4,40(sp)
   1c250:	da0ff06f          	j	1b7f0 <_svfprintf_r+0x8f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544
		case 'X':
			xdigs = "0123456789ABCDEF";
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
hex:			_uquad = UARG ();
   1c254:	00076783          	lwu	a5,0(a4)
   1c258:	00870713          	addi	a4,a4,8
   1c25c:	02e13423          	sd	a4,40(sp)
   1c260:	848ff06f          	j	1b2a8 <_svfprintf_r+0x3b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1c264:	080107a3          	sb	zero,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1c268:	fa044063          	bltz	s0,1ba08 <_svfprintf_r+0xb10>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   1c26c:	f7fb7b13          	andi	s6,s6,-129
   1c270:	e91fe06f          	j	1b100 <_svfprintf_r+0x208>
   1c274:	0b812703          	lw	a4,184(sp)
   1c278:	00913823          	sd	s1,16(sp)
   1c27c:	bdcff06f          	j	1b658 <_svfprintf_r+0x760>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1709 (discriminator 1)
			PRINT (cp, size);
		} else {	/* glue together f_p fragments */
			if (ch >= 'f') {	/* 'f' or 'g' */
				if (_fpvalue == 0) {
					/* kludge for __dtoa irregularity */
					PRINT ("0", 1);
   1c280:	0b010613          	addi	a2,sp,176
   1c284:	000b8593          	mv	a1,s7
   1c288:	000c0513          	mv	a0,s8
   1c28c:	53d020ef          	jal	1efc8 <__ssprint_r>
   1c290:	00050463          	beqz	a0,1c298 <_svfprintf_r+0x13a0>
   1c294:	f05fe06f          	j	1b198 <_svfprintf_r+0x2a0>
   1c298:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1709
   1c29c:	000a8893          	mv	a7,s5
   1c2a0:	8d5ff06f          	j	1bb74 <_svfprintf_r+0xc7c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1715
					if (expt < ndig || flags & ALT) {
						PRINT (decimal_point, decp_len);
						PAD (ndig - 1, zeroes);
					}
				} else if (expt <= 0) {
					PRINT ("0", 1);
   1c2a4:	0b812703          	lw	a4,184(sp)
   1c2a8:	000226b7          	lui	a3,0x22
   1c2ac:	bf068693          	addi	a3,a3,-1040 # 21bf0 <zeroes.4123+0x700>
   1c2b0:	00d8b023          	sd	a3,0(a7)
   1c2b4:	00178793          	addi	a5,a5,1
   1c2b8:	00100693          	li	a3,1
   1c2bc:	0017071b          	addiw	a4,a4,1
   1c2c0:	00d8b423          	sd	a3,8(a7)
   1c2c4:	0cf13023          	sd	a5,192(sp)
   1c2c8:	0ae12c23          	sw	a4,184(sp)
   1c2cc:	00700693          	li	a3,7
   1c2d0:	01088893          	addi	a7,a7,16
   1c2d4:	2ae6c663          	blt	a3,a4,1c580 <_svfprintf_r+0x1688>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1716
					if (expt || ndig || flags & ALT) {
   1c2d8:	00041a63          	bnez	s0,1c2ec <_svfprintf_r+0x13f4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1716 (discriminator 1)
   1c2dc:	07012703          	lw	a4,112(sp)
   1c2e0:	00071663          	bnez	a4,1c2ec <_svfprintf_r+0x13f4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1716 (discriminator 2)
   1c2e4:	001b7713          	andi	a4,s6,1
   1c2e8:	be070463          	beqz	a4,1b6d0 <_svfprintf_r+0x7d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1717
						PRINT (decimal_point, decp_len);
   1c2ec:	06013703          	ld	a4,96(sp)
   1c2f0:	06813683          	ld	a3,104(sp)
   1c2f4:	01088893          	addi	a7,a7,16
   1c2f8:	fee8b823          	sd	a4,-16(a7)
   1c2fc:	0b812703          	lw	a4,184(sp)
   1c300:	00f687b3          	add	a5,a3,a5
   1c304:	fed8bc23          	sd	a3,-8(a7)
   1c308:	0017071b          	addiw	a4,a4,1
   1c30c:	0cf13023          	sd	a5,192(sp)
   1c310:	0ae12c23          	sw	a4,184(sp)
   1c314:	00700693          	li	a3,7
   1c318:	30e6cc63          	blt	a3,a4,1c630 <_svfprintf_r+0x1738>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718
						PAD (-expt, zeroes);
   1c31c:	4080043b          	negw	s0,s0
   1c320:	2e805e63          	blez	s0,1c61c <_svfprintf_r+0x1724>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718 (discriminator 5)
   1c324:	01000693          	li	a3,16
   1c328:	2a86d263          	ble	s0,a3,1c5cc <_svfprintf_r+0x16d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718 (discriminator 6)
   1c32c:	01000d13          	li	s10,16
   1c330:	00913823          	sd	s1,16(sp)
   1c334:	00700813          	li	a6,7
   1c338:	000d0693          	mv	a3,s10
   1c33c:	00c0006f          	j	1c348 <_svfprintf_r+0x1450>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718 (discriminator 4)
   1c340:	ff04041b          	addiw	s0,s0,-16
   1c344:	2886d663          	ble	s0,a3,1c5d0 <_svfprintf_r+0x16d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718 (discriminator 6)
   1c348:	01078793          	addi	a5,a5,16
   1c34c:	0017071b          	addiw	a4,a4,1
   1c350:	0098b023          	sd	s1,0(a7)
   1c354:	01a8b423          	sd	s10,8(a7)
   1c358:	0cf13023          	sd	a5,192(sp)
   1c35c:	0ae12c23          	sw	a4,184(sp)
   1c360:	01088893          	addi	a7,a7,16
   1c364:	fce85ee3          	ble	a4,a6,1c340 <_svfprintf_r+0x1448>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718 (discriminator 1)
   1c368:	0b010613          	addi	a2,sp,176
   1c36c:	000b8593          	mv	a1,s7
   1c370:	000c0513          	mv	a0,s8
   1c374:	02d13023          	sd	a3,32(sp)
   1c378:	01013023          	sd	a6,0(sp)
   1c37c:	44d020ef          	jal	1efc8 <__ssprint_r>
   1c380:	00050463          	beqz	a0,1c388 <_svfprintf_r+0x1490>
   1c384:	e15fe06f          	j	1b198 <_svfprintf_r+0x2a0>
   1c388:	0c013783          	ld	a5,192(sp)
   1c38c:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718
   1c390:	000a8893          	mv	a7,s5
   1c394:	02013683          	ld	a3,32(sp)
   1c398:	00013803          	ld	a6,0(sp)
   1c39c:	fa5ff06f          	j	1c340 <_svfprintf_r+0x1448>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1711 (discriminator 1)
			if (ch >= 'f') {	/* 'f' or 'g' */
				if (_fpvalue == 0) {
					/* kludge for __dtoa irregularity */
					PRINT ("0", 1);
					if (expt < ndig || flags & ALT) {
						PRINT (decimal_point, decp_len);
   1c3a0:	0b010613          	addi	a2,sp,176
   1c3a4:	000b8593          	mv	a1,s7
   1c3a8:	000c0513          	mv	a0,s8
   1c3ac:	41d020ef          	jal	1efc8 <__ssprint_r>
   1c3b0:	00050463          	beqz	a0,1c3b8 <_svfprintf_r+0x14c0>
   1c3b4:	de5fe06f          	j	1b198 <_svfprintf_r+0x2a0>
   1c3b8:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1711
   1c3bc:	000a8893          	mv	a7,s5
   1c3c0:	ff8ff06f          	j	1bbb8 <_svfprintf_r+0xcc0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1309
				  }
				else
				  cp = buf;
			} else
# endif /* _WANT_IO_C99_FORMATS */
			if (prec == -1) {
   1c3c4:	fff00793          	li	a5,-1
   1c3c8:	fdfd7d93          	andi	s11,s10,-33
   1c3cc:	28f40863          	beq	s0,a5,1c65c <_svfprintf_r+0x1764>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1311 (discriminator 2)
				prec = DEFPREC;
			} else if ((ch == 'g' || ch == 'G') && prec == 0) {
   1c3d0:	04700793          	li	a5,71
   1c3d4:	44fd8e63          	beq	s11,a5,1c830 <_svfprintf_r+0x1938>
cvt():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1811
	int mode, dsgn;
	char *digits, *bp, *rve;
# ifdef _NO_LONGDBL
	union double_union tmp;

	tmp.d = value;
   1c3d8:	05813703          	ld	a4,88(sp)
_svfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1315
				prec = DEFPREC;
			} else if ((ch == 'g' || ch == 'G') && prec == 0) {
				prec = 1;
			}

			flags |= FPT;
   1c3dc:	100b6693          	ori	a3,s6,256
   1c3e0:	00d12023          	sw	a3,0(sp)
cvt():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1812
	char *digits, *bp, *rve;
# ifdef _NO_LONGDBL
	union double_union tmp;

	tmp.d = value;
	if (word0 (tmp) & Sign_bit) { /* this will check for < 0 and -0.0 */
   1c3e4:	42075793          	srai	a5,a4,0x20
   1c3e8:	f2070453          	fmv.d.x	fs0,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1816
		value = -value;
		*sign = '-';
	} else
		*sign = '\000';
   1c3ec:	00000c93          	li	s9,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1812
	char *digits, *bp, *rve;
# ifdef _NO_LONGDBL
	union double_union tmp;

	tmp.d = value;
	if (word0 (tmp) & Sign_bit) { /* this will check for < 0 and -0.0 */
   1c3f0:	4407c663          	bltz	a5,1c83c <_svfprintf_r+0x1944>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1865
		}
		*length = bp - buf;
		return buf;
	}
# endif /* _WANT_IO_C99_FORMATS */
	if (ch == 'f' || ch == 'F') {
   1c3f4:	06600793          	li	a5,102
   1c3f8:	48fd0863          	beq	s10,a5,1c888 <_svfprintf_r+0x1990>
   1c3fc:	04600793          	li	a5,70
   1c400:	4cfd0c63          	beq	s10,a5,1c8d8 <_svfprintf_r+0x19e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1873
		/* To obtain ndigits after the decimal point for the 'e'
		 * and 'E' formats, round to ndigits + 1 significant
		 * figures.
		 */
		if (ch == 'e' || ch == 'E') {
			ndigits++;
   1c404:	fbbd859b          	addiw	a1,s11,-69
   1c408:	0015b593          	seqz	a1,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1878
		}
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);
   1c40c:	228405d3          	fmv.d	fa1,fs0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1873
		/* To obtain ndigits after the decimal point for the 'e'
		 * and 'E' formats, round to ndigits + 1 significant
		 * figures.
		 */
		if (ch == 'e' || ch == 'E') {
			ndigits++;
   1c410:	00b405bb          	addw	a1,s0,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1878
		}
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);
   1c414:	09c10793          	addi	a5,sp,156
   1c418:	00058693          	mv	a3,a1
   1c41c:	0a810813          	addi	a6,sp,168
   1c420:	09810713          	addi	a4,sp,152
   1c424:	00200613          	li	a2,2
   1c428:	000c0513          	mv	a0,s8
   1c42c:	01113823          	sd	a7,16(sp)
   1c430:	00b13423          	sd	a1,8(sp)
   1c434:	c29f80ef          	jal	1505c <_dtoa_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1880

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
   1c438:	06700793          	li	a5,103
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1878
			ndigits++;
		}
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);
   1c43c:	00050913          	mv	s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1880

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
   1c440:	00813583          	ld	a1,8(sp)
   1c444:	01013883          	ld	a7,16(sp)
   1c448:	2efd0c63          	beq	s10,a5,1c740 <_svfprintf_r+0x1848>
   1c44c:	04700793          	li	a5,71
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1881
		bp = digits + ndigits;
   1c450:	00b50733          	add	a4,a0,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1880
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
   1c454:	60fd0663          	beq	s10,a5,1ca60 <_svfprintf_r+0x1b68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1887
		if (ch == 'f' || ch == 'F') {
			if (*digits == '0' && value)
				*decpt = -ndigits + 1;
			bp += *decpt;
		}
		if (value == 0)	/* kludge for __dtoa irregularity */
   1c458:	f20007d3          	fmv.d.x	fa5,zero
   1c45c:	00070793          	mv	a5,a4
   1c460:	a2f426d3          	feq.d	a3,fs0,fa5
   1c464:	02069263          	bnez	a3,1c488 <_svfprintf_r+0x1590>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1889
			rve = bp;
		while (rve < bp)
   1c468:	0a813783          	ld	a5,168(sp)
   1c46c:	00e7fe63          	bleu	a4,a5,1c488 <_svfprintf_r+0x1590>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1890
			*rve++ = '0';
   1c470:	03000613          	li	a2,48
   1c474:	00178693          	addi	a3,a5,1
   1c478:	0ad13423          	sd	a3,168(sp)
   1c47c:	00c78023          	sb	a2,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1889
				*decpt = -ndigits + 1;
			bp += *decpt;
		}
		if (value == 0)	/* kludge for __dtoa irregularity */
			rve = bp;
		while (rve < bp)
   1c480:	0a813783          	ld	a5,168(sp)
   1c484:	fee7e8e3          	bltu	a5,a4,1c474 <_svfprintf_r+0x157c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1892
			*rve++ = '0';
	}
	*length = rve - digits;
   1c488:	412787b3          	sub	a5,a5,s2
   1c48c:	06f12823          	sw	a5,112(sp)
_svfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1320
			flags |= FPT;

			cp = cvt (data, _fpvalue, prec, flags, &softsign,
				  &expt, ch, &ndig, cp);

			if (ch == 'g' || ch == 'G') {
   1c490:	04700793          	li	a5,71
   1c494:	2efd8663          	beq	s11,a5,1c780 <_svfprintf_r+0x1888>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1330
			}
# ifdef _WANT_IO_C99_FORMATS
			else if (ch == 'F')
				ch = 'f';
# endif
			if (ch <= 'e') {	/* 'a', 'A', 'e', or 'E' fmt */
   1c498:	06500793          	li	a5,101
   1c49c:	5da7de63          	ble	s10,a5,1ca78 <_svfprintf_r+0x1b80>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1340
					++size;
# ifdef _WANT_IO_C99_FORMATS
				flags &= ~GROUPING;
# endif
			} else {
				if (ch == 'f') {		/* f fmt */
   1c4a0:	06600793          	li	a5,102
   1c4a4:	46fd0a63          	beq	s10,a5,1c918 <_svfprintf_r+0x1a20>
   1c4a8:	09812783          	lw	a5,152(sp)
   1c4ac:	04f12623          	sw	a5,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1349
							size += prec + 1;
					} else	/* "0.X" */
						size = (prec || flags & ALT)
							  ? prec + 2
							  : 1;
				} else if (expt >= ndig) { /* fixed g fmt */
   1c4b0:	04c12703          	lw	a4,76(sp)
   1c4b4:	07012683          	lw	a3,112(sp)
   1c4b8:	00070793          	mv	a5,a4
   1c4bc:	38d74663          	blt	a4,a3,1c848 <_svfprintf_r+0x1950>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1351
					size = expt;
					if (flags & ALT)
   1c4c0:	001b7b13          	andi	s6,s6,1
   1c4c4:	3a0b1463          	bnez	s6,1c86c <_svfprintf_r+0x1974>
   1c4c8:	60074a63          	bltz	a4,1cadc <_svfprintf_r+0x1be4>
   1c4cc:	04c12703          	lw	a4,76(sp)
   1c4d0:	06700d13          	li	s10,103
   1c4d4:	02e12023          	sw	a4,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1377
				} else
# endif
					lead = expt;
			}

			if (softsign)
   1c4d8:	280c9663          	bnez	s9,1c764 <_svfprintf_r+0x186c>
   1c4dc:	08f14603          	lbu	a2,143(sp)
   1c4e0:	00f12423          	sw	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1315
				prec = DEFPREC;
			} else if ((ch == 'g' || ch == 'G') && prec == 0) {
				prec = 1;
			}

			flags |= FPT;
   1c4e4:	00012b03          	lw	s6,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1c4e8:	00000413          	li	s0,0
   1c4ec:	c65fe06f          	j	1b150 <_svfprintf_r+0x258>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1240
			 */
			if (isinf (_fpvalue)) {
				if (_fpvalue < 0)
					sign = '-';
				if (ch <= 'G') /* 'A', 'E', 'F', or 'G' */
					cp = "INF";
   1c4f0:	00022937          	lui	s2,0x22
   1c4f4:	b9890913          	addi	s2,s2,-1128 # 21b98 <zeroes.4123+0x6a8>
   1c4f8:	ba8ff06f          	j	1b8a0 <_svfprintf_r+0x9a8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723 (discriminator 6)
						PAD (-expt, zeroes);
						PRINT (cp, ndig);
					}
				} else {
					char *convbuf = cp;
					PRINTANDPAD(cp, convbuf + ndig,
   1c4fc:	0b010613          	addi	a2,sp,176
   1c500:	000b8593          	mv	a1,s7
   1c504:	000c0513          	mv	a0,s8
   1c508:	2c1020ef          	jal	1efc8 <__ssprint_r>
   1c50c:	00050463          	beqz	a0,1c514 <_svfprintf_r+0x161c>
   1c510:	c89fe06f          	j	1b198 <_svfprintf_r+0x2a0>
   1c514:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723
   1c518:	000a8893          	mv	a7,s5
   1c51c:	901ff06f          	j	1be1c <_svfprintf_r+0xf24>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:882
#endif
#else /* STRING_ONLY */
        /* Create initial buffer if we are called by asprintf family.  */
        if (fp->_flags & __SMBF && !fp->_bf._base)
        {
		fp->_bf._base = fp->_p = _malloc_r (data, 64);
   1c520:	04000593          	li	a1,64
   1c524:	000c0513          	mv	a0,s8
   1c528:	fe4f40ef          	jal	10d0c <_malloc_r>
   1c52c:	00abb023          	sd	a0,0(s7)
   1c530:	00abbc23          	sd	a0,24(s7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:883
		if (!fp->_p)
   1c534:	58050063          	beqz	a0,1cab4 <_svfprintf_r+0x1bbc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:888
		{
			data->_errno = ENOMEM;
			return EOF;
		}
		fp->_bf._size = 64;
   1c538:	04000793          	li	a5,64
   1c53c:	02fba023          	sw	a5,32(s7)
   1c540:	a35fe06f          	j	1af74 <_svfprintf_r+0x7c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746 (discriminator 6)
						cp = convbuf + ndig;
					}
#endif
					if (expt < ndig || flags & ALT)
					    PRINT (decimal_point, decp_len);
					PRINTANDPAD (cp, convbuf + ndig,
   1c544:	0b010613          	addi	a2,sp,176
   1c548:	000b8593          	mv	a1,s7
   1c54c:	000c0513          	mv	a0,s8
   1c550:	279020ef          	jal	1efc8 <__ssprint_r>
   1c554:	00050463          	beqz	a0,1c55c <_svfprintf_r+0x1664>
   1c558:	c41fe06f          	j	1b198 <_svfprintf_r+0x2a0>
   1c55c:	09812703          	lw	a4,152(sp)
   1c560:	07012683          	lw	a3,112(sp)
   1c564:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746
   1c568:	000a8893          	mv	a7,s5
   1c56c:	40e6873b          	subw	a4,a3,a4
   1c570:	ae9ff06f          	j	1c058 <_svfprintf_r+0x1160>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1249
				flags &= ~ZEROPAD;
				break;
			}
			if (isnan (_fpvalue)) {
				if (ch <= 'G') /* 'A', 'E', 'F', or 'G' */
					cp = "NAN";
   1c574:	00022937          	lui	s2,0x22
   1c578:	ba890913          	addi	s2,s2,-1112 # 21ba8 <zeroes.4123+0x6b8>
   1c57c:	c85ff06f          	j	1c200 <_svfprintf_r+0x1308>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1715 (discriminator 1)
					if (expt < ndig || flags & ALT) {
						PRINT (decimal_point, decp_len);
						PAD (ndig - 1, zeroes);
					}
				} else if (expt <= 0) {
					PRINT ("0", 1);
   1c580:	0b010613          	addi	a2,sp,176
   1c584:	000b8593          	mv	a1,s7
   1c588:	000c0513          	mv	a0,s8
   1c58c:	23d020ef          	jal	1efc8 <__ssprint_r>
   1c590:	00050463          	beqz	a0,1c598 <_svfprintf_r+0x16a0>
   1c594:	c05fe06f          	j	1b198 <_svfprintf_r+0x2a0>
   1c598:	09812403          	lw	s0,152(sp)
   1c59c:	0c013783          	ld	a5,192(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1715
   1c5a0:	000a8893          	mv	a7,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1716
					if (expt || ndig || flags & ALT) {
   1c5a4:	d40414e3          	bnez	s0,1c2ec <_svfprintf_r+0x13f4>
   1c5a8:	d35ff06f          	j	1c2dc <_svfprintf_r+0x13e4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1646
			*     -- ANSI X3J11
			*
			* To demonstrate this case, compile and run:
                        *    printf ("%#.0o",0);
			*/
                       else if (base == OCT && (flags & ALT))
   1c5ac:	001b7793          	andi	a5,s6,1
   1c5b0:	0a078a63          	beqz	a5,1c664 <_svfprintf_r+0x176c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1647
                         *--cp = '0';
   1c5b4:	03000793          	li	a5,48
   1c5b8:	0ef107a3          	sb	a5,239(sp)
   1c5bc:	07813783          	ld	a5,120(sp)
   1c5c0:	0ef10913          	addi	s2,sp,239
   1c5c4:	02f12023          	sw	a5,32(sp)
   1c5c8:	b71fe06f          	j	1b138 <_svfprintf_r+0x240>
   1c5cc:	00913823          	sd	s1,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718 (discriminator 7)
					}
				} else if (expt <= 0) {
					PRINT ("0", 1);
					if (expt || ndig || flags & ALT) {
						PRINT (decimal_point, decp_len);
						PAD (-expt, zeroes);
   1c5d0:	01013683          	ld	a3,16(sp)
   1c5d4:	008787b3          	add	a5,a5,s0
   1c5d8:	0017071b          	addiw	a4,a4,1
   1c5dc:	00d8b023          	sd	a3,0(a7)
   1c5e0:	0088b423          	sd	s0,8(a7)
   1c5e4:	0cf13023          	sd	a5,192(sp)
   1c5e8:	0ae12c23          	sw	a4,184(sp)
   1c5ec:	00700693          	li	a3,7
   1c5f0:	01088893          	addi	a7,a7,16
   1c5f4:	02e6d463          	ble	a4,a3,1c61c <_svfprintf_r+0x1724>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718 (discriminator 8)
   1c5f8:	0b010613          	addi	a2,sp,176
   1c5fc:	000b8593          	mv	a1,s7
   1c600:	000c0513          	mv	a0,s8
   1c604:	1c5020ef          	jal	1efc8 <__ssprint_r>
   1c608:	00050463          	beqz	a0,1c610 <_svfprintf_r+0x1718>
   1c60c:	b8dfe06f          	j	1b198 <_svfprintf_r+0x2a0>
   1c610:	0c013783          	ld	a5,192(sp)
   1c614:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1718
   1c618:	000a8893          	mv	a7,s5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1719
						PRINT (cp, ndig);
   1c61c:	07012683          	lw	a3,112(sp)
   1c620:	0017071b          	addiw	a4,a4,1
   1c624:	0128b023          	sd	s2,0(a7)
   1c628:	00f687b3          	add	a5,a3,a5
   1c62c:	cc8ff06f          	j	1baf4 <_svfprintf_r+0xbfc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1717 (discriminator 1)
						PAD (ndig - 1, zeroes);
					}
				} else if (expt <= 0) {
					PRINT ("0", 1);
					if (expt || ndig || flags & ALT) {
						PRINT (decimal_point, decp_len);
   1c630:	0b010613          	addi	a2,sp,176
   1c634:	000b8593          	mv	a1,s7
   1c638:	000c0513          	mv	a0,s8
   1c63c:	18d020ef          	jal	1efc8 <__ssprint_r>
   1c640:	00050463          	beqz	a0,1c648 <_svfprintf_r+0x1750>
   1c644:	b55fe06f          	j	1b198 <_svfprintf_r+0x2a0>
   1c648:	09812403          	lw	s0,152(sp)
   1c64c:	0c013783          	ld	a5,192(sp)
   1c650:	0b812703          	lw	a4,184(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1717
   1c654:	000a8893          	mv	a7,s5
   1c658:	cc5ff06f          	j	1c31c <_svfprintf_r+0x1424>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1310
				else
				  cp = buf;
			} else
# endif /* _WANT_IO_C99_FORMATS */
			if (prec == -1) {
				prec = DEFPREC;
   1c65c:	00600413          	li	s0,6
   1c660:	d79ff06f          	j	1c3d8 <_svfprintf_r+0x14e0>
   1c664:	02012023          	sw	zero,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1571
			/*
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
   1c668:	000a8913          	mv	s2,s5
   1c66c:	acdfe06f          	j	1b138 <_svfprintf_r+0x240>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1405
#ifdef _WANT_IO_C99_FORMATS
			else if (flags & CHARINT)
				*GET_ARG (N, ap, char_ptr_t) = ret;
#endif
			else
				*GET_ARG (N, ap, int_ptr_t) = ret;
   1c670:	01c12703          	lw	a4,28(sp)
   1c674:	00e7a023          	sw	a4,0(a5)
   1c678:	94dfe06f          	j	1afc4 <_svfprintf_r+0xcc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1529
				if (p != NULL)
					size = p - cp;
				else
					size = prec;
			} else
				size = strlen (cp);
   1c67c:	00090513          	mv	a0,s2
   1c680:	a90f50ef          	jal	11910 <strlen>
   1c684:	0005079b          	sext.w	a5,a0
   1c688:	02f12023          	sw	a5,32(sp)
   1c68c:	00078d93          	mv	s11,a5
   1c690:	00013883          	ld	a7,0(sp)
   1c694:	ac07d063          	bgez	a5,1b954 <_svfprintf_r+0xa5c>
   1c698:	00000d93          	li	s11,0
   1c69c:	ab8ff06f          	j	1b954 <_svfprintf_r+0xa5c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1789
	if (malloc_buf != NULL)
		_free_r (data, malloc_buf);
#ifndef STRING_ONLY
	_newlib_flockfile_end (fp);
#endif
	return (__sferror (fp) ? EOF : ret);
   1c6a0:	fff00513          	li	a0,-1
   1c6a4:	b09fe06f          	j	1b1ac <_svfprintf_r+0x2b4>
   1c6a8:	0c013783          	ld	a5,192(sp)
   1c6ac:	0b812703          	lw	a4,184(sp)
   1c6b0:	05413823          	sd	s4,80(sp)
   1c6b4:	e7dfe06f          	j	1b530 <_svfprintf_r+0x638>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1723 (discriminator 9)
						PAD (-expt, zeroes);
						PRINT (cp, ndig);
					}
				} else {
					char *convbuf = cp;
					PRINTANDPAD(cp, convbuf + ndig,
   1c6b8:	00000413          	li	s0,0
   1c6bc:	f64ff06f          	j	1be20 <_svfprintf_r+0xf28>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1c6c0:	02d00613          	li	a2,45
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1210
			{

				_uquad = -_uquad;
				sign = '-';
			}
			base = DEC;
   1c6c4:	00100713          	li	a4,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1578
				/*
				 * Unsigned mod is hard, and unsigned mod
				 * by a constant is easier than that by
				 * a variable; hence this switch.
				 */
				switch (base) {
   1c6c8:	00100693          	li	a3,1
   1c6cc:	00d71463          	bne	a4,a3,1c6d4 <_svfprintf_r+0x17dc>
   1c6d0:	d0dfe06f          	j	1b3dc <_svfprintf_r+0x4e4>
   1c6d4:	00200693          	li	a3,2
   1c6d8:	00d70463          	beq	a4,a3,1c6e0 <_svfprintf_r+0x17e8>
   1c6dc:	b5dfe06f          	j	1b238 <_svfprintf_r+0x340>
   1c6e0:	a2dfe06f          	j	1b10c <_svfprintf_r+0x214>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1449
			   NULL string when precision is not 0.
			   However, if we are not optimizing for size,
			   we might as well mirror glibc behavior.  */
			if (cp == NULL) {
				cp = "(null)";
				size = ((unsigned) prec > 6U) ? 6 : prec;
   1c6e4:	00600713          	li	a4,6
   1c6e8:	00877463          	bleu	s0,a4,1c6f0 <_svfprintf_r+0x17f8>
   1c6ec:	00070413          	mv	s0,a4
   1c6f0:	02812023          	sw	s0,32(sp)
   1c6f4:	00040d93          	mv	s11,s0
   1c6f8:	2c044463          	bltz	s0,1c9c0 <_svfprintf_r+0x1ac8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1448
			/* Behavior is undefined if the user passed a
			   NULL string when precision is not 0.
			   However, if we are not optimizing for size,
			   we might as well mirror glibc behavior.  */
			if (cp == NULL) {
				cp = "(null)";
   1c6fc:	00022937          	lui	s2,0x22
   1c700:	01b12423          	sw	s11,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   1c704:	03913423          	sd	s9,40(sp)
   1c708:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1c70c:	00000413          	li	s0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:948
		width = 0;
		prec = -1;
		sign = '\0';
#ifdef FLOATING_POINT
		lead = 0;
   1c710:	04012623          	sw	zero,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1448
			/* Behavior is undefined if the user passed a
			   NULL string when precision is not 0.
			   However, if we are not optimizing for size,
			   we might as well mirror glibc behavior.  */
			if (cp == NULL) {
				cp = "(null)";
   1c714:	be890913          	addi	s2,s2,-1048 # 21be8 <zeroes.4123+0x6f8>
   1c718:	d5dfe06f          	j	1b474 <_svfprintf_r+0x57c>
   1c71c:	0b812703          	lw	a4,184(sp)
   1c720:	05413823          	sd	s4,80(sp)
   1c724:	838ff06f          	j	1b75c <_svfprintf_r+0x864>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1746 (discriminator 9)
						cp = convbuf + ndig;
					}
#endif
					if (expt < ndig || flags & ALT)
					    PRINT (decimal_point, decp_len);
					PRINTANDPAD (cp, convbuf + ndig,
   1c728:	00000413          	li	s0,0
   1c72c:	931ff06f          	j	1c05c <_svfprintf_r+0x1164>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1238
			   zeros are not permitted.  Otherwise, scanf
			   could not read what printf wrote.
			 */
			if (isinf (_fpvalue)) {
				if (_fpvalue < 0)
					sign = '-';
   1c730:	02d00793          	li	a5,45
   1c734:	08f107a3          	sb	a5,143(sp)
   1c738:	02d00613          	li	a2,45
   1c73c:	954ff06f          	j	1b890 <_svfprintf_r+0x998>
cvt():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1880
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
   1c740:	001b7793          	andi	a5,s6,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1881
		bp = digits + ndigits;
   1c744:	00b50733          	add	a4,a0,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1880
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
   1c748:	d00798e3          	bnez	a5,1c458 <_svfprintf_r+0x1560>
   1c74c:	0a813783          	ld	a5,168(sp)
   1c750:	d39ff06f          	j	1c488 <_svfprintf_r+0x1590>
_svfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1550
			base = HEX;
			/* leading 0x/X only if non-zero */
			if (flags & ALT && _uquad != 0) {
				ox[0] = '0';
				ox[1] = ch;
				flags |= HEXPREFIX;
   1c754:	00070b13          	mv	s6,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1c758:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1545
			xdigs = "0123456789ABCDEF";
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
hex:			_uquad = UARG ();
			base = HEX;
   1c75c:	00200713          	li	a4,2
   1c760:	f69ff06f          	j	1c6c8 <_svfprintf_r+0x17d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1378
# endif
					lead = expt;
			}

			if (softsign)
				sign = '-';
   1c764:	02d00713          	li	a4,45
   1c768:	08e107a3          	sb	a4,143(sp)
   1c76c:	00f12423          	sw	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1315
				prec = DEFPREC;
			} else if ((ch == 'g' || ch == 'G') && prec == 0) {
				prec = 1;
			}

			flags |= FPT;
   1c770:	00012b03          	lw	s6,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1378
# endif
					lead = expt;
			}

			if (softsign)
				sign = '-';
   1c774:	02d00613          	li	a2,45
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1c778:	00000413          	li	s0,0
   1c77c:	9d9fe06f          	j	1b154 <_svfprintf_r+0x25c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1321

			cp = cvt (data, _fpvalue, prec, flags, &softsign,
				  &expt, ch, &ndig, cp);

			if (ch == 'g' || ch == 'G') {
				if (expt <= -4 || expt > prec)
   1c780:	09812783          	lw	a5,152(sp)
   1c784:	ffd00713          	li	a4,-3
   1c788:	02e7cc63          	blt	a5,a4,1c7c0 <_svfprintf_r+0x18c8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1321 (discriminator 1)
   1c78c:	02f44a63          	blt	s0,a5,1c7c0 <_svfprintf_r+0x18c8>
   1c790:	04f12623          	sw	a5,76(sp)
   1c794:	d1dff06f          	j	1c4b0 <_svfprintf_r+0x15b8>
   1c798:	0b812703          	lw	a4,184(sp)
   1c79c:	00913823          	sd	s1,16(sp)
   1c7a0:	d28ff06f          	j	1bcc8 <_svfprintf_r+0xdd0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1524
				 * NUL in the first `prec' characters, and
				 * strlen () will go further.
				 */
				char *p = memchr (cp, 0, prec);

				if (p != NULL)
   1c7a4:	00812423          	sw	s0,8(sp)
   1c7a8:	02812023          	sw	s0,32(sp)
   1c7ac:	08f14603          	lbu	a2,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   1c7b0:	03913423          	sd	s9,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1c7b4:	00000413          	li	s0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:948
		width = 0;
		prec = -1;
		sign = '\0';
#ifdef FLOATING_POINT
		lead = 0;
   1c7b8:	04012623          	sw	zero,76(sp)
   1c7bc:	995fe06f          	j	1b150 <_svfprintf_r+0x258>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1322
			cp = cvt (data, _fpvalue, prec, flags, &softsign,
				  &expt, ch, &ndig, cp);

			if (ch == 'g' || ch == 'G') {
				if (expt <= -4 || expt > prec)
					ch -= 2; /* 'e' or 'E' */
   1c7c0:	ffed0d1b          	addiw	s10,s10,-2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1331
# ifdef _WANT_IO_C99_FORMATS
			else if (ch == 'F')
				ch = 'f';
# endif
			if (ch <= 'e') {	/* 'a', 'A', 'e', or 'E' fmt */
				--expt;
   1c7c4:	fff7879b          	addiw	a5,a5,-1
   1c7c8:	08f12c23          	sw	a5,152(sp)
exponent():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1908
# else
#  define isa 0
# endif

	p = p0;
	*p++ = isa ? 'p' - 'a' + fmtch : fmtch;
   1c7cc:	0ba10023          	sb	s10,160(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1909
	if (exp < 0) {
   1c7d0:	2607c263          	bltz	a5,1ca34 <_svfprintf_r+0x1b3c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1914
		exp = -exp;
		*p++ = '-';
	}
	else
		*p++ = '+';
   1c7d4:	02b00713          	li	a4,43
   1c7d8:	0ae100a3          	sb	a4,161(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1916
	t = expbuf + MAXEXPLEN;
	if (exp > 9) {
   1c7dc:	00900613          	li	a2,9
   1c7e0:	14f64c63          	blt	a2,a5,1c938 <_svfprintf_r+0x1a40>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1926
		for (; t < expbuf + MAXEXPLEN; *p++ = *t++);
	}
	else {
		if (!isa)
			*p++ = '0';
		*p++ = to_char (exp);
   1c7e4:	0307879b          	addiw	a5,a5,48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1925
		*--t = to_char (exp);
		for (; t < expbuf + MAXEXPLEN; *p++ = *t++);
	}
	else {
		if (!isa)
			*p++ = '0';
   1c7e8:	03000713          	li	a4,48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1926
		*p++ = to_char (exp);
   1c7ec:	0af101a3          	sb	a5,163(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1925
		*--t = to_char (exp);
		for (; t < expbuf + MAXEXPLEN; *p++ = *t++);
	}
	else {
		if (!isa)
			*p++ = '0';
   1c7f0:	0ae10123          	sb	a4,162(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1926
		*p++ = to_char (exp);
   1c7f4:	0a410793          	addi	a5,sp,164
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1928
	}
	return (p - p0);
   1c7f8:	0a010713          	addi	a4,sp,160
   1c7fc:	40e787bb          	subw	a5,a5,a4
_svfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1333
				ch = 'f';
# endif
			if (ch <= 'e') {	/* 'a', 'A', 'e', or 'E' fmt */
				--expt;
				expsize = exponent (expstr, expt, ch);
				size = expsize + ndig;
   1c800:	07012703          	lw	a4,112(sp)
exponent():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1928
	else {
		if (!isa)
			*p++ = '0';
		*p++ = to_char (exp);
	}
	return (p - p0);
   1c804:	06f12a23          	sw	a5,116(sp)
_svfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1333
				ch = 'f';
# endif
			if (ch <= 'e') {	/* 'a', 'A', 'e', or 'E' fmt */
				--expt;
				expsize = exponent (expstr, expt, ch);
				size = expsize + ndig;
   1c808:	00e787bb          	addw	a5,a5,a4
   1c80c:	02f12023          	sw	a5,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1334
				if (ndig > 1 || flags & ALT)
   1c810:	00100793          	li	a5,1
   1c814:	22e7d863          	ble	a4,a5,1ca44 <_svfprintf_r+0x1b4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1335
					++size;
   1c818:	02012783          	lw	a5,32(sp)
   1c81c:	0017879b          	addiw	a5,a5,1
   1c820:	02f12023          	sw	a5,32(sp)
   1c824:	2207ca63          	bltz	a5,1ca58 <_svfprintf_r+0x1b60>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:948
		dprec = 0;
		width = 0;
		prec = -1;
		sign = '\0';
#ifdef FLOATING_POINT
		lead = 0;
   1c828:	04012623          	sw	zero,76(sp)
   1c82c:	cadff06f          	j	1c4d8 <_svfprintf_r+0x15e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1311 (discriminator 3)
				  cp = buf;
			} else
# endif /* _WANT_IO_C99_FORMATS */
			if (prec == -1) {
				prec = DEFPREC;
			} else if ((ch == 'g' || ch == 'G') && prec == 0) {
   1c830:	ba0414e3          	bnez	s0,1c3d8 <_svfprintf_r+0x14e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1312
				prec = 1;
   1c834:	00090413          	mv	s0,s2
   1c838:	ba1ff06f          	j	1c3d8 <_svfprintf_r+0x14e0>
cvt():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1813
# ifdef _NO_LONGDBL
	union double_union tmp;

	tmp.d = value;
	if (word0 (tmp) & Sign_bit) { /* this will check for < 0 and -0.0 */
		value = -value;
   1c83c:	22841453          	fneg.d	fs0,fs0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1814
		*sign = '-';
   1c840:	02d00c93          	li	s9,45
   1c844:	bb1ff06f          	j	1c3f4 <_svfprintf_r+0x14fc>
_svfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1355
					size = expt;
					if (flags & ALT)
						++size;
				} else
					size = ndig + (expt > 0 ?
						1 : 2 - expt);
   1c848:	04c12703          	lw	a4,76(sp)
   1c84c:	00100793          	li	a5,1
   1c850:	1ae05c63          	blez	a4,1ca08 <_svfprintf_r+0x1b10>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1354
				} else if (expt >= ndig) { /* fixed g fmt */
					size = expt;
					if (flags & ALT)
						++size;
				} else
					size = ndig + (expt > 0 ?
   1c854:	07012703          	lw	a4,112(sp)
   1c858:	00e787bb          	addw	a5,a5,a4
   1c85c:	02f12023          	sw	a5,32(sp)
   1c860:	0007ce63          	bltz	a5,1c87c <_svfprintf_r+0x1984>
   1c864:	06700d13          	li	s10,103
   1c868:	c71ff06f          	j	1c4d8 <_svfprintf_r+0x15e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1352
							  ? prec + 2
							  : 1;
				} else if (expt >= ndig) { /* fixed g fmt */
					size = expt;
					if (flags & ALT)
						++size;
   1c86c:	04c12783          	lw	a5,76(sp)
   1c870:	0017879b          	addiw	a5,a5,1
   1c874:	02f12023          	sw	a5,32(sp)
   1c878:	fe07d6e3          	bgez	a5,1c864 <_svfprintf_r+0x196c>
   1c87c:	00000793          	li	a5,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1354
				} else
					size = ndig + (expt > 0 ?
   1c880:	06700d13          	li	s10,103
   1c884:	c55ff06f          	j	1c4d8 <_svfprintf_r+0x15e0>
cvt():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1878
			ndigits++;
		}
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);
   1c888:	228405d3          	fmv.d	fa1,fs0
   1c88c:	09810713          	addi	a4,sp,152
   1c890:	0a810813          	addi	a6,sp,168
   1c894:	09c10793          	addi	a5,sp,156
   1c898:	00040693          	mv	a3,s0
   1c89c:	00300613          	li	a2,3
   1c8a0:	000c0513          	mv	a0,s8
   1c8a4:	01113423          	sd	a7,8(sp)
   1c8a8:	fb4f80ef          	jal	1505c <_dtoa_r>
   1c8ac:	00813883          	ld	a7,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1881

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
		bp = digits + ndigits;
   1c8b0:	00040713          	mv	a4,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1878
			ndigits++;
		}
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);
   1c8b4:	00050913          	mv	s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1881

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
		bp = digits + ndigits;
   1c8b8:	00e50733          	add	a4,a0,a4
   1c8bc:	00040593          	mv	a1,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1883
		if (ch == 'f' || ch == 'F') {
			if (*digits == '0' && value)
   1c8c0:	00094683          	lbu	a3,0(s2)
   1c8c4:	03000793          	li	a5,48
   1c8c8:	0cf68c63          	beq	a3,a5,1c9a0 <_svfprintf_r+0x1aa8>
   1c8cc:	09812583          	lw	a1,152(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1885
				*decpt = -ndigits + 1;
			bp += *decpt;
   1c8d0:	00b70733          	add	a4,a4,a1
   1c8d4:	b85ff06f          	j	1c458 <_svfprintf_r+0x1560>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1878
			ndigits++;
		}
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);
   1c8d8:	228405d3          	fmv.d	fa1,fs0
   1c8dc:	0a810813          	addi	a6,sp,168
   1c8e0:	09c10793          	addi	a5,sp,156
   1c8e4:	09810713          	addi	a4,sp,152
   1c8e8:	00040693          	mv	a3,s0
   1c8ec:	00300613          	li	a2,3
   1c8f0:	000c0513          	mv	a0,s8
   1c8f4:	01113423          	sd	a7,8(sp)
   1c8f8:	f64f80ef          	jal	1505c <_dtoa_r>
   1c8fc:	00813883          	ld	a7,8(sp)
   1c900:	00050913          	mv	s2,a0
   1c904:	00040593          	mv	a1,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1882

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
		bp = digits + ndigits;
		if (ch == 'f' || ch == 'F') {
   1c908:	04600793          	li	a5,70
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1881
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
		bp = digits + ndigits;
   1c90c:	00b90733          	add	a4,s2,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1882
		if (ch == 'f' || ch == 'F') {
   1c910:	fafd08e3          	beq	s10,a5,1c8c0 <_svfprintf_r+0x19c8>
   1c914:	b45ff06f          	j	1c458 <_svfprintf_r+0x1560>
_svfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1341
# ifdef _WANT_IO_C99_FORMATS
				flags &= ~GROUPING;
# endif
			} else {
				if (ch == 'f') {		/* f fmt */
					if (expt > 0) {
   1c918:	09812783          	lw	a5,152(sp)
   1c91c:	04f12623          	sw	a5,76(sp)
   1c920:	0cf05263          	blez	a5,1c9e4 <_svfprintf_r+0x1aec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1343
						size = expt;
						if (prec || flags & ALT)
   1c924:	0a041263          	bnez	s0,1c9c8 <_svfprintf_r+0x1ad0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1343 (discriminator 1)
   1c928:	001b7b13          	andi	s6,s6,1
   1c92c:	080b1e63          	bnez	s6,1c9c8 <_svfprintf_r+0x1ad0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1343
   1c930:	02f12023          	sw	a5,32(sp)
   1c934:	ba5ff06f          	j	1c4d8 <_svfprintf_r+0x15e0>
exponent():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1916
		*p++ = '-';
	}
	else
		*p++ = '+';
	t = expbuf + MAXEXPLEN;
	if (exp > 9) {
   1c938:	0af10593          	addi	a1,sp,175
   1c93c:	00058713          	mv	a4,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1918
		do {
			*--t = to_char (exp % 10);
   1c940:	00a00513          	li	a0,10
   1c944:	02a7e6bb          	remw	a3,a5,a0
   1c948:	fff70713          	addi	a4,a4,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1919
		} while ((exp /= 10) > 9);
   1c94c:	02a7c7bb          	divw	a5,a5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1918
	else
		*p++ = '+';
	t = expbuf + MAXEXPLEN;
	if (exp > 9) {
		do {
			*--t = to_char (exp % 10);
   1c950:	0306869b          	addiw	a3,a3,48
   1c954:	00d70023          	sb	a3,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1919
		} while ((exp /= 10) > 9);
   1c958:	fef646e3          	blt	a2,a5,1c944 <_svfprintf_r+0x1a4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1920
		*--t = to_char (exp);
   1c95c:	0307879b          	addiw	a5,a5,48
   1c960:	0ff7f793          	andi	a5,a5,255
   1c964:	fff70693          	addi	a3,a4,-1
   1c968:	fef70fa3          	sb	a5,-1(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1921
		for (; t < expbuf + MAXEXPLEN; *p++ = *t++);
   1c96c:	16b6f463          	bleu	a1,a3,1cad4 <_svfprintf_r+0x1bdc>
   1c970:	0a210613          	addi	a2,sp,162
   1c974:	0080006f          	j	1c97c <_svfprintf_r+0x1a84>
   1c978:	0006c783          	lbu	a5,0(a3)
   1c97c:	00160613          	addi	a2,a2,1
   1c980:	00168693          	addi	a3,a3,1
   1c984:	fef60fa3          	sb	a5,-1(a2)
   1c988:	feb698e3          	bne	a3,a1,1c978 <_svfprintf_r+0x1a80>
   1c98c:	0b010793          	addi	a5,sp,176
   1c990:	40e787b3          	sub	a5,a5,a4
   1c994:	0a210713          	addi	a4,sp,162
   1c998:	00f707b3          	add	a5,a4,a5
   1c99c:	e5dff06f          	j	1c7f8 <_svfprintf_r+0x1900>
cvt():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1883
	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
		bp = digits + ndigits;
		if (ch == 'f' || ch == 'F') {
			if (*digits == '0' && value)
   1c9a0:	f20007d3          	fmv.d.x	fa5,zero
   1c9a4:	a2f427d3          	feq.d	a5,fs0,fa5
   1c9a8:	f20792e3          	bnez	a5,1c8cc <_svfprintf_r+0x19d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1884
				*decpt = -ndigits + 1;
   1c9ac:	00100793          	li	a5,1
   1c9b0:	40b785bb          	subw	a1,a5,a1
   1c9b4:	08b12c23          	sw	a1,152(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1885
			bp += *decpt;
   1c9b8:	00b70733          	add	a4,a4,a1
   1c9bc:	a9dff06f          	j	1c458 <_svfprintf_r+0x1560>
   1c9c0:	00000d93          	li	s11,0
   1c9c4:	d39ff06f          	j	1c6fc <_svfprintf_r+0x1804>
_svfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1344
			} else {
				if (ch == 'f') {		/* f fmt */
					if (expt > 0) {
						size = expt;
						if (prec || flags & ALT)
							size += prec + 1;
   1c9c8:	04c12783          	lw	a5,76(sp)
   1c9cc:	0014041b          	addiw	s0,s0,1
   1c9d0:	008787bb          	addw	a5,a5,s0
   1c9d4:	02f12023          	sw	a5,32(sp)
   1c9d8:	b007d0e3          	bgez	a5,1c4d8 <_svfprintf_r+0x15e0>
   1c9dc:	00000793          	li	a5,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1348 (discriminator 1)
					} else	/* "0.X" */
						size = (prec || flags & ALT)
							  ? prec + 2
							  : 1;
   1c9e0:	af9ff06f          	j	1c4d8 <_svfprintf_r+0x15e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1348
   1c9e4:	00041a63          	bnez	s0,1c9f8 <_svfprintf_r+0x1b00>
   1c9e8:	00100793          	li	a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1346
					if (expt > 0) {
						size = expt;
						if (prec || flags & ALT)
							size += prec + 1;
					} else	/* "0.X" */
						size = (prec || flags & ALT)
   1c9ec:	00fb7b33          	and	s6,s6,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1348
							  ? prec + 2
							  : 1;
   1c9f0:	02f12023          	sw	a5,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1346
					if (expt > 0) {
						size = expt;
						if (prec || flags & ALT)
							size += prec + 1;
					} else	/* "0.X" */
						size = (prec || flags & ALT)
   1c9f4:	ae0b02e3          	beqz	s6,1c4d8 <_svfprintf_r+0x15e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1348 (discriminator 1)
							  ? prec + 2
							  : 1;
   1c9f8:	0024079b          	addiw	a5,s0,2
   1c9fc:	02f12023          	sw	a5,32(sp)
   1ca00:	ac07dce3          	bgez	a5,1c4d8 <_svfprintf_r+0x15e0>
   1ca04:	fd9ff06f          	j	1c9dc <_svfprintf_r+0x1ae4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1355
					size = expt;
					if (flags & ALT)
						++size;
				} else
					size = ndig + (expt > 0 ?
						1 : 2 - expt);
   1ca08:	00200793          	li	a5,2
   1ca0c:	40e787bb          	subw	a5,a5,a4
   1ca10:	e45ff06f          	j	1c854 <_svfprintf_r+0x195c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1063
						fmt = old_fmt;
						goto rflag;
					}
				}
#endif /* !_NO_POS_ARGS */
				prec = GET_ARG (n, ap, int);
   1ca14:	02813783          	ld	a5,40(sp)
   1ca18:	0007a403          	lw	s0,0(a5)
   1ca1c:	00878793          	addi	a5,a5,8
   1ca20:	02f13423          	sd	a5,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1067
#ifndef _NO_POS_ARGS
				is_pos_arg = old_is_pos_arg;
#endif
				if (prec < 0)
   1ca24:	00044463          	bltz	s0,1ca2c <_svfprintf_r+0x1b34>
   1ca28:	e38fe06f          	j	1b060 <_svfprintf_r+0x168>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1068
					prec = -1;
   1ca2c:	fff00413          	li	s0,-1
   1ca30:	e30fe06f          	j	1b060 <_svfprintf_r+0x168>
exponent():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1911

	p = p0;
	*p++ = isa ? 'p' - 'a' + fmtch : fmtch;
	if (exp < 0) {
		exp = -exp;
		*p++ = '-';
   1ca34:	02d00713          	li	a4,45
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1910
# endif

	p = p0;
	*p++ = isa ? 'p' - 'a' + fmtch : fmtch;
	if (exp < 0) {
		exp = -exp;
   1ca38:	40f007bb          	negw	a5,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1911
		*p++ = '-';
   1ca3c:	0ae100a3          	sb	a4,161(sp)
   1ca40:	d9dff06f          	j	1c7dc <_svfprintf_r+0x18e4>
_svfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1334 (discriminator 1)
# endif
			if (ch <= 'e') {	/* 'a', 'A', 'e', or 'E' fmt */
				--expt;
				expsize = exponent (expstr, expt, ch);
				size = expsize + ndig;
				if (ndig > 1 || flags & ALT)
   1ca44:	00fb7b33          	and	s6,s6,a5
   1ca48:	dc0b18e3          	bnez	s6,1c818 <_svfprintf_r+0x1920>
   1ca4c:	02012703          	lw	a4,32(sp)
   1ca50:	00070793          	mv	a5,a4
   1ca54:	dc075ae3          	bgez	a4,1c828 <_svfprintf_r+0x1930>
   1ca58:	00000793          	li	a5,0
   1ca5c:	dcdff06f          	j	1c828 <_svfprintf_r+0x1930>
cvt():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1880
		mode = 2;		/* ndigits significant digits */
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
   1ca60:	001b7793          	andi	a5,s6,1
   1ca64:	ea0792e3          	bnez	a5,1c908 <_svfprintf_r+0x1a10>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1892
		if (value == 0)	/* kludge for __dtoa irregularity */
			rve = bp;
		while (rve < bp)
			*rve++ = '0';
	}
	*length = rve - digits;
   1ca68:	0a813783          	ld	a5,168(sp)
   1ca6c:	412787b3          	sub	a5,a5,s2
   1ca70:	06f12823          	sw	a5,112(sp)
_svfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1320
			flags |= FPT;

			cp = cvt (data, _fpvalue, prec, flags, &softsign,
				  &expt, ch, &ndig, cp);

			if (ch == 'g' || ch == 'G') {
   1ca74:	d1ad86e3          	beq	s11,s10,1c780 <_svfprintf_r+0x1888>
   1ca78:	09812783          	lw	a5,152(sp)
   1ca7c:	d49ff06f          	j	1c7c4 <_svfprintf_r+0x18cc>
   1ca80:	08b107a3          	sb	a1,143(sp)
   1ca84:	869fe06f          	j	1b2ec <_svfprintf_r+0x3f4>
   1ca88:	08b107a3          	sb	a1,143(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1408
#endif
			else
				*GET_ARG (N, ap, int_ptr_t) = ret;
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
   1ca8c:	010b6b13          	ori	s6,s6,16
   1ca90:	8ddfe06f          	j	1b36c <_svfprintf_r+0x474>
   1ca94:	08b107a3          	sb	a1,143(sp)
   1ca98:	f68fe06f          	j	1b200 <_svfprintf_r+0x308>
   1ca9c:	08b107a3          	sb	a1,143(sp)
   1caa0:	dadfe06f          	j	1b84c <_svfprintf_r+0x954>
   1caa4:	08b107a3          	sb	a1,143(sp)
   1caa8:	969fe06f          	j	1b410 <_svfprintf_r+0x518>
   1caac:	08b107a3          	sb	a1,143(sp)
   1cab0:	8fdfe06f          	j	1b3ac <_svfprintf_r+0x4b4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:885
        if (fp->_flags & __SMBF && !fp->_bf._base)
        {
		fp->_bf._base = fp->_p = _malloc_r (data, 64);
		if (!fp->_p)
		{
			data->_errno = ENOMEM;
   1cab4:	00c00793          	li	a5,12
   1cab8:	00fc2023          	sw	a5,0(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:886
			return EOF;
   1cabc:	fff00513          	li	a0,-1
   1cac0:	eecfe06f          	j	1b1ac <_svfprintf_r+0x2b4>
   1cac4:	08b107a3          	sb	a1,143(sp)
   1cac8:	d11fe06f          	j	1b7d8 <_svfprintf_r+0x8e0>
   1cacc:	08b107a3          	sb	a1,143(sp)
   1cad0:	ef1fe06f          	j	1b9c0 <_svfprintf_r+0xac8>
exponent():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1921
	if (exp > 9) {
		do {
			*--t = to_char (exp % 10);
		} while ((exp /= 10) > 9);
		*--t = to_char (exp);
		for (; t < expbuf + MAXEXPLEN; *p++ = *t++);
   1cad4:	0a210793          	addi	a5,sp,162
   1cad8:	d21ff06f          	j	1c7f8 <_svfprintf_r+0x1900>
   1cadc:	00000793          	li	a5,0
   1cae0:	9edff06f          	j	1c4cc <_svfprintf_r+0x15d4>
   1cae4:	08b107a3          	sb	a1,143(sp)
_svfprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1195
				size = 1;
			}
			sign = '\0';
			break;
		case 'D':  /* extension */
			flags |= LONGINT;
   1cae8:	010b6b13          	ori	s6,s6,16
   1caec:	de5fe06f          	j	1b8d0 <_svfprintf_r+0x9d8>
   1caf0:	08b107a3          	sb	a1,143(sp)
   1caf4:	f90fe06f          	j	1b284 <_svfprintf_r+0x38c>

000000000001caf8 <__submore>:
__submore():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:83
/*static*/
int
_DEFUN(__submore, (rptr, fp),
       struct _reent *rptr _AND
       register FILE *fp)
{
   1caf8:	fd010113          	addi	sp,sp,-48
   1cafc:	02813023          	sd	s0,32(sp)
   1cb00:	00058413          	mv	s0,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:87
  register int i;
  register unsigned char *p;

  if (fp->_ub._base == fp->_ubuf)
   1cb04:	0585b583          	ld	a1,88(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:83
/*static*/
int
_DEFUN(__submore, (rptr, fp),
       struct _reent *rptr _AND
       register FILE *fp)
{
   1cb08:	02113423          	sd	ra,40(sp)
   1cb0c:	00913c23          	sd	s1,24(sp)
   1cb10:	01213823          	sd	s2,16(sp)
   1cb14:	01313423          	sd	s3,8(sp)
   1cb18:	01413023          	sd	s4,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:87
  register int i;
  register unsigned char *p;

  if (fp->_ub._base == fp->_ubuf)
   1cb1c:	07440793          	addi	a5,s0,116
   1cb20:	06f58063          	beq	a1,a5,1cb80 <__submore+0x88>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:102
      for (i = sizeof (fp->_ubuf); --i >= 0;)
	p[i] = fp->_ubuf[i];
      fp->_p = p;
      return 0;
    }
  i = fp->_ub._size;
   1cb24:	06042983          	lw	s3,96(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:103
  p = (unsigned char *) _realloc_r (rptr, (_PTR) (fp->_ub._base), i << 1);
   1cb28:	00199a1b          	slliw	s4,s3,0x1
   1cb2c:	000a0613          	mv	a2,s4
   1cb30:	980fc0ef          	jal	18cb0 <_realloc_r>
   1cb34:	00050493          	mv	s1,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:104
  if (p == NULL)
   1cb38:	0a050463          	beqz	a0,1cbe0 <__submore+0xe8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:106
    return EOF;
  _CAST_VOID memcpy ((_PTR) (p + i), (_PTR) p, (size_t) i);
   1cb3c:	01350933          	add	s2,a0,s3
   1cb40:	00050593          	mv	a1,a0
   1cb44:	00098613          	mv	a2,s3
   1cb48:	00090513          	mv	a0,s2
   1cb4c:	e89f30ef          	jal	109d4 <memcpy>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:110
  fp->_p = p + i;
  fp->_ub._base = p;
  fp->_ub._size = i << 1;
  return 0;
   1cb50:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:107
  i = fp->_ub._size;
  p = (unsigned char *) _realloc_r (rptr, (_PTR) (fp->_ub._base), i << 1);
  if (p == NULL)
    return EOF;
  _CAST_VOID memcpy ((_PTR) (p + i), (_PTR) p, (size_t) i);
  fp->_p = p + i;
   1cb54:	01243023          	sd	s2,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:108
  fp->_ub._base = p;
   1cb58:	04943c23          	sd	s1,88(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:109
  fp->_ub._size = i << 1;
   1cb5c:	07442023          	sw	s4,96(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:111
  return 0;
}
   1cb60:	02813083          	ld	ra,40(sp)
   1cb64:	02013403          	ld	s0,32(sp)
   1cb68:	01813483          	ld	s1,24(sp)
   1cb6c:	01013903          	ld	s2,16(sp)
   1cb70:	00813983          	ld	s3,8(sp)
   1cb74:	00013a03          	ld	s4,0(sp)
   1cb78:	03010113          	addi	sp,sp,48
   1cb7c:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:92
  if (fp->_ub._base == fp->_ubuf)
    {
      /*
       * Get a new buffer (rather than expanding the old one).
       */
      if ((p = (unsigned char *) _malloc_r (rptr, (size_t) BUFSIZ)) == NULL)
   1cb80:	40000593          	li	a1,1024
   1cb84:	988f40ef          	jal	10d0c <_malloc_r>
   1cb88:	00050793          	mv	a5,a0
   1cb8c:	04050a63          	beqz	a0,1cbe0 <__submore+0xe8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:98
	return EOF;
      fp->_ub._base = p;
      fp->_ub._size = BUFSIZ;
      p += BUFSIZ - sizeof (fp->_ubuf);
      for (i = sizeof (fp->_ubuf); --i >= 0;)
	p[i] = fp->_ubuf[i];
   1cb90:	07644703          	lbu	a4,118(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:95
       * Get a new buffer (rather than expanding the old one).
       */
      if ((p = (unsigned char *) _malloc_r (rptr, (size_t) BUFSIZ)) == NULL)
	return EOF;
      fp->_ub._base = p;
      fp->_ub._size = BUFSIZ;
   1cb94:	40000693          	li	a3,1024
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:94
      /*
       * Get a new buffer (rather than expanding the old one).
       */
      if ((p = (unsigned char *) _malloc_r (rptr, (size_t) BUFSIZ)) == NULL)
	return EOF;
      fp->_ub._base = p;
   1cb98:	04a43c23          	sd	a0,88(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:95
      fp->_ub._size = BUFSIZ;
   1cb9c:	06d42023          	sw	a3,96(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:98
      p += BUFSIZ - sizeof (fp->_ubuf);
      for (i = sizeof (fp->_ubuf); --i >= 0;)
	p[i] = fp->_ubuf[i];
   1cba0:	3ee50fa3          	sb	a4,1023(a0)
   1cba4:	07544683          	lbu	a3,117(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:99
      fp->_p = p;
   1cba8:	3fd50713          	addi	a4,a0,1021
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:100
      return 0;
   1cbac:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:98
	return EOF;
      fp->_ub._base = p;
      fp->_ub._size = BUFSIZ;
      p += BUFSIZ - sizeof (fp->_ubuf);
      for (i = sizeof (fp->_ubuf); --i >= 0;)
	p[i] = fp->_ubuf[i];
   1cbb0:	3ed78f23          	sb	a3,1022(a5)
   1cbb4:	07444683          	lbu	a3,116(s0)
   1cbb8:	3ed78ea3          	sb	a3,1021(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:111
  _CAST_VOID memcpy ((_PTR) (p + i), (_PTR) p, (size_t) i);
  fp->_p = p + i;
  fp->_ub._base = p;
  fp->_ub._size = i << 1;
  return 0;
}
   1cbbc:	02813083          	ld	ra,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:99
      fp->_ub._base = p;
      fp->_ub._size = BUFSIZ;
      p += BUFSIZ - sizeof (fp->_ubuf);
      for (i = sizeof (fp->_ubuf); --i >= 0;)
	p[i] = fp->_ubuf[i];
      fp->_p = p;
   1cbc0:	00e43023          	sd	a4,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:111
  _CAST_VOID memcpy ((_PTR) (p + i), (_PTR) p, (size_t) i);
  fp->_p = p + i;
  fp->_ub._base = p;
  fp->_ub._size = i << 1;
  return 0;
}
   1cbc4:	01813483          	ld	s1,24(sp)
   1cbc8:	02013403          	ld	s0,32(sp)
   1cbcc:	01013903          	ld	s2,16(sp)
   1cbd0:	00813983          	ld	s3,8(sp)
   1cbd4:	00013a03          	ld	s4,0(sp)
   1cbd8:	03010113          	addi	sp,sp,48
   1cbdc:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:93
    {
      /*
       * Get a new buffer (rather than expanding the old one).
       */
      if ((p = (unsigned char *) _malloc_r (rptr, (size_t) BUFSIZ)) == NULL)
	return EOF;
   1cbe0:	fff00513          	li	a0,-1
   1cbe4:	f7dff06f          	j	1cb60 <__submore+0x68>

000000000001cbe8 <_ungetc_r>:
_ungetc_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:119
_DEFUN(_ungetc_r, (rptr, c, fp),
       struct _reent *rptr _AND
       int c               _AND
       register FILE *fp)
{
  if (c == EOF)
   1cbe8:	fff00793          	li	a5,-1
   1cbec:	1cf58063          	beq	a1,a5,1cdac <_ungetc_r+0x1c4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:118
int
_DEFUN(_ungetc_r, (rptr, c, fp),
       struct _reent *rptr _AND
       int c               _AND
       register FILE *fp)
{
   1cbf0:	fd010113          	addi	sp,sp,-48
   1cbf4:	02813023          	sd	s0,32(sp)
   1cbf8:	00913c23          	sd	s1,24(sp)
   1cbfc:	01313423          	sd	s3,8(sp)
   1cc00:	02113423          	sd	ra,40(sp)
   1cc04:	01213823          	sd	s2,16(sp)
   1cc08:	00050493          	mv	s1,a0
   1cc0c:	00060413          	mv	s0,a2
   1cc10:	00058993          	mv	s3,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:126

  /* Ensure stdio has been initialized.
     ??? Might be able to remove this as some other stdio routine should
     have already been called to get the char we are un-getting.  */

  CHECK_INIT (rptr, fp);
   1cc14:	00050663          	beqz	a0,1cc20 <_ungetc_r+0x38>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:126 (discriminator 1)
   1cc18:	05052783          	lw	a5,80(a0)
   1cc1c:	0c078c63          	beqz	a5,1ccf4 <_ungetc_r+0x10c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:130

  _newlib_flockfile_start (fp);

  ORIENT (fp, -1);
   1cc20:	01041783          	lh	a5,16(s0)
   1cc24:	03279713          	slli	a4,a5,0x32
   1cc28:	02074463          	bltz	a4,1cc50 <_ungetc_r+0x68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:130 (discriminator 1)
   1cc2c:	0ac42683          	lw	a3,172(s0)
   1cc30:	00002737          	lui	a4,0x2
   1cc34:	00e7e7b3          	or	a5,a5,a4
   1cc38:	ffffe737          	lui	a4,0xffffe
   1cc3c:	fff7071b          	addiw	a4,a4,-1
   1cc40:	00e6f733          	and	a4,a3,a4
   1cc44:	0107979b          	slliw	a5,a5,0x10
   1cc48:	4107d79b          	sraiw	a5,a5,0x10
   1cc4c:	0ae42623          	sw	a4,172(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:133

  /* After ungetc, we won't be at eof anymore */
  fp->_flags &= ~__SEOF;
   1cc50:	fdf7f793          	andi	a5,a5,-33
   1cc54:	0107979b          	slliw	a5,a5,0x10
   1cc58:	4107d79b          	sraiw	a5,a5,0x10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:135

  if ((fp->_flags & __SRD) == 0)
   1cc5c:	03079713          	slli	a4,a5,0x30
   1cc60:	03075713          	srli	a4,a4,0x30
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:133
  _newlib_flockfile_start (fp);

  ORIENT (fp, -1);

  /* After ungetc, we won't be at eof anymore */
  fp->_flags &= ~__SEOF;
   1cc64:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:135

  if ((fp->_flags & __SRD) == 0)
   1cc68:	00477693          	andi	a3,a4,4
   1cc6c:	00069e63          	bnez	a3,1cc88 <_ungetc_r+0xa0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:141
    {
      /*
       * Not already reading: no good unless reading-and-writing.
       * Otherwise, flush any current write stuff.
       */
      if ((fp->_flags & __SRW) == 0)
   1cc70:	01077693          	andi	a3,a4,16
   1cc74:	06068c63          	beqz	a3,1ccec <_ungetc_r+0x104>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:146
        {
          _newlib_flockfile_exit (fp);
          return EOF;
        }
      if (fp->_flags & __SWR)
   1cc78:	00877713          	andi	a4,a4,8
   1cc7c:	0e071463          	bnez	a4,1cd64 <_ungetc_r+0x17c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:157
            }
	  fp->_flags &= ~__SWR;
	  fp->_w = 0;
	  fp->_lbfsize = 0;
	}
      fp->_flags |= __SRD;
   1cc80:	0047e793          	ori	a5,a5,4
   1cc84:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:166
  /*
   * If we are in the middle of ungetc'ing, just continue.
   * This may require expanding the current ungetc buffer.
   */

  if (HASUB (fp))
   1cc88:	05843783          	ld	a5,88(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:159
	  fp->_w = 0;
	  fp->_lbfsize = 0;
	}
      fp->_flags |= __SRD;
    }
  c = (unsigned char) c;
   1cc8c:	0ff9f913          	andi	s2,s3,255
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:166
  /*
   * If we are in the middle of ungetc'ing, just continue.
   * This may require expanding the current ungetc buffer.
   */

  if (HASUB (fp))
   1cc90:	06078663          	beqz	a5,1ccfc <_ungetc_r+0x114>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:168
    {
      if (fp->_r >= fp->_ub._size && __submore (rptr, fp))
   1cc94:	00842703          	lw	a4,8(s0)
   1cc98:	06042783          	lw	a5,96(s0)
   1cc9c:	04f75063          	ble	a5,a4,1ccdc <_ungetc_r+0xf4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:173
        {
          _newlib_flockfile_exit (fp);
          return EOF;
        }
      *--fp->_p = c;
   1cca0:	00043783          	ld	a5,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:159
	  fp->_w = 0;
	  fp->_lbfsize = 0;
	}
      fp->_flags |= __SRD;
    }
  c = (unsigned char) c;
   1cca4:	00090513          	mv	a0,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:173
      if (fp->_r >= fp->_ub._size && __submore (rptr, fp))
        {
          _newlib_flockfile_exit (fp);
          return EOF;
        }
      *--fp->_p = c;
   1cca8:	fff78713          	addi	a4,a5,-1
   1ccac:	00e43023          	sd	a4,0(s0)
   1ccb0:	ff378fa3          	sb	s3,-1(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:174
      fp->_r++;
   1ccb4:	00842783          	lw	a5,8(s0)
   1ccb8:	0017879b          	addiw	a5,a5,1
   1ccbc:	00f42423          	sw	a5,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:207
  fp->_ubuf[sizeof (fp->_ubuf) - 1] = c;
  fp->_p = &fp->_ubuf[sizeof (fp->_ubuf) - 1];
  fp->_r = 1;
  _newlib_flockfile_end (fp);
  return c;
}
   1ccc0:	02813083          	ld	ra,40(sp)
   1ccc4:	02013403          	ld	s0,32(sp)
   1ccc8:	01813483          	ld	s1,24(sp)
   1cccc:	01013903          	ld	s2,16(sp)
   1ccd0:	00813983          	ld	s3,8(sp)
   1ccd4:	03010113          	addi	sp,sp,48
   1ccd8:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:168 (discriminator 1)
   * This may require expanding the current ungetc buffer.
   */

  if (HASUB (fp))
    {
      if (fp->_r >= fp->_ub._size && __submore (rptr, fp))
   1ccdc:	00040593          	mv	a1,s0
   1cce0:	00048513          	mv	a0,s1
   1cce4:	e15ff0ef          	jal	1caf8 <__submore>
   1cce8:	fa050ce3          	beqz	a0,1cca0 <_ungetc_r+0xb8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:120
       struct _reent *rptr _AND
       int c               _AND
       register FILE *fp)
{
  if (c == EOF)
    return (EOF);
   1ccec:	fff00513          	li	a0,-1
   1ccf0:	fd1ff06f          	j	1ccc0 <_ungetc_r+0xd8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:126 (discriminator 2)

  /* Ensure stdio has been initialized.
     ??? Might be able to remove this as some other stdio routine should
     have already been called to get the char we are un-getting.  */

  CHECK_INIT (rptr, fp);
   1ccf4:	a7df90ef          	jal	16770 <__sinit>
   1ccf8:	f29ff06f          	j	1cc20 <_ungetc_r+0x38>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:185
   * If we can handle this by simply backing up, do so,
   * but never replace the original character.
   * (This makes sscanf() work when scanning `const' data.)
   */

  if (fp->_bf._base != NULL && fp->_p > fp->_bf._base && fp->_p[-1] == c)
   1ccfc:	01843703          	ld	a4,24(s0)
   1cd00:	00043783          	ld	a5,0(s0)
   1cd04:	00070863          	beqz	a4,1cd14 <_ungetc_r+0x12c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:185 (discriminator 1)
   1cd08:	00f77663          	bleu	a5,a4,1cd14 <_ungetc_r+0x12c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:185 (discriminator 2)
   1cd0c:	fff7c703          	lbu	a4,-1(a5)
   1cd10:	08e90063          	beq	s2,a4,1cd90 <_ungetc_r+0x1a8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:202

  fp->_ur = fp->_r;
  fp->_up = fp->_p;
  fp->_ub._base = fp->_ubuf;
  fp->_ub._size = sizeof (fp->_ubuf);
  fp->_ubuf[sizeof (fp->_ubuf) - 1] = c;
   1cd14:	07340b23          	sb	s3,118(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:198
  /*
   * Create an ungetc buffer.
   * Initially, we will use the `reserve' buffer.
   */

  fp->_ur = fp->_r;
   1cd18:	00842603          	lw	a2,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:207
  fp->_ubuf[sizeof (fp->_ubuf) - 1] = c;
  fp->_p = &fp->_ubuf[sizeof (fp->_ubuf) - 1];
  fp->_r = 1;
  _newlib_flockfile_end (fp);
  return c;
}
   1cd1c:	02813083          	ld	ra,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:199
   * Create an ungetc buffer.
   * Initially, we will use the `reserve' buffer.
   */

  fp->_ur = fp->_r;
  fp->_up = fp->_p;
   1cd20:	06f43423          	sd	a5,104(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:201
  fp->_ub._base = fp->_ubuf;
  fp->_ub._size = sizeof (fp->_ubuf);
   1cd24:	00300793          	li	a5,3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:200
   * Initially, we will use the `reserve' buffer.
   */

  fp->_ur = fp->_r;
  fp->_up = fp->_p;
  fp->_ub._base = fp->_ubuf;
   1cd28:	07440693          	addi	a3,s0,116
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:203
  fp->_ub._size = sizeof (fp->_ubuf);
  fp->_ubuf[sizeof (fp->_ubuf) - 1] = c;
  fp->_p = &fp->_ubuf[sizeof (fp->_ubuf) - 1];
   1cd2c:	07640713          	addi	a4,s0,118
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:201
   */

  fp->_ur = fp->_r;
  fp->_up = fp->_p;
  fp->_ub._base = fp->_ubuf;
  fp->_ub._size = sizeof (fp->_ubuf);
   1cd30:	06f42023          	sw	a5,96(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:204
  fp->_ubuf[sizeof (fp->_ubuf) - 1] = c;
  fp->_p = &fp->_ubuf[sizeof (fp->_ubuf) - 1];
  fp->_r = 1;
   1cd34:	00100793          	li	a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:159
	  fp->_w = 0;
	  fp->_lbfsize = 0;
	}
      fp->_flags |= __SRD;
    }
  c = (unsigned char) c;
   1cd38:	00090513          	mv	a0,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:198
  /*
   * Create an ungetc buffer.
   * Initially, we will use the `reserve' buffer.
   */

  fp->_ur = fp->_r;
   1cd3c:	06c42823          	sw	a2,112(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:200
  fp->_up = fp->_p;
  fp->_ub._base = fp->_ubuf;
   1cd40:	04d43c23          	sd	a3,88(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:203
  fp->_ub._size = sizeof (fp->_ubuf);
  fp->_ubuf[sizeof (fp->_ubuf) - 1] = c;
  fp->_p = &fp->_ubuf[sizeof (fp->_ubuf) - 1];
   1cd44:	00e43023          	sd	a4,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:204
  fp->_r = 1;
   1cd48:	00f42423          	sw	a5,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:207
  _newlib_flockfile_end (fp);
  return c;
}
   1cd4c:	01813483          	ld	s1,24(sp)
   1cd50:	02013403          	ld	s0,32(sp)
   1cd54:	01013903          	ld	s2,16(sp)
   1cd58:	00813983          	ld	s3,8(sp)
   1cd5c:	03010113          	addi	sp,sp,48
   1cd60:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:148
          _newlib_flockfile_exit (fp);
          return EOF;
        }
      if (fp->_flags & __SWR)
	{
	  if (_fflush_r (rptr, fp))
   1cd64:	00040593          	mv	a1,s0
   1cd68:	00048513          	mv	a0,s1
   1cd6c:	e58f90ef          	jal	163c4 <_fflush_r>
   1cd70:	f6051ee3          	bnez	a0,1ccec <_ungetc_r+0x104>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:153
            {
              _newlib_flockfile_exit (fp);
              return EOF;
            }
	  fp->_flags &= ~__SWR;
   1cd74:	01045783          	lhu	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:154
	  fp->_w = 0;
   1cd78:	00042623          	sw	zero,12(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:155
	  fp->_lbfsize = 0;
   1cd7c:	02042423          	sw	zero,40(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:153
	  if (_fflush_r (rptr, fp))
            {
              _newlib_flockfile_exit (fp);
              return EOF;
            }
	  fp->_flags &= ~__SWR;
   1cd80:	ff77f793          	andi	a5,a5,-9
   1cd84:	0107979b          	slliw	a5,a5,0x10
   1cd88:	4107d79b          	sraiw	a5,a5,0x10
   1cd8c:	ef5ff06f          	j	1cc80 <_ungetc_r+0x98>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:188
   */

  if (fp->_bf._base != NULL && fp->_p > fp->_bf._base && fp->_p[-1] == c)
    {
      fp->_p--;
      fp->_r++;
   1cd90:	00842703          	lw	a4,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:187
   * (This makes sscanf() work when scanning `const' data.)
   */

  if (fp->_bf._base != NULL && fp->_p > fp->_bf._base && fp->_p[-1] == c)
    {
      fp->_p--;
   1cd94:	fff78793          	addi	a5,a5,-1
   1cd98:	00f43023          	sd	a5,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:188
      fp->_r++;
   1cd9c:	0017079b          	addiw	a5,a4,1
   1cda0:	00f42423          	sw	a5,8(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:190
      _newlib_flockfile_exit (fp);
      return c;
   1cda4:	00090513          	mv	a0,s2
   1cda8:	f19ff06f          	j	1ccc0 <_ungetc_r+0xd8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:120
       struct _reent *rptr _AND
       int c               _AND
       register FILE *fp)
{
  if (c == EOF)
    return (EOF);
   1cdac:	fff00513          	li	a0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:207
  fp->_ubuf[sizeof (fp->_ubuf) - 1] = c;
  fp->_p = &fp->_ubuf[sizeof (fp->_ubuf) - 1];
  fp->_r = 1;
  _newlib_flockfile_end (fp);
  return c;
}
   1cdb0:	00008067          	ret

000000000001cdb4 <ungetc>:
ungetc():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/ungetc.c:215
int
_DEFUN(ungetc, (c, fp),
       int c               _AND
       register FILE *fp)
{
  return _ungetc_r (_REENT, c, fp);
   1cdb4:	00058613          	mv	a2,a1
   1cdb8:	00050593          	mv	a1,a0
   1cdbc:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
   1cdc0:	e29ff06f          	j	1cbe8 <_ungetc_r>

000000000001cdc4 <__sprint_r.part.0>:
__sprint_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:418
	if (uio->uio_resid == 0) {
		uio->uio_iovcnt = 0;
		return (0);
	}
#ifdef _WIDE_ORIENT
	if (fp->_flags2 & __SWID) {
   1cdc4:	0ac5a783          	lw	a5,172(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:406
/*
 * Flush out all the vectors defined by the given uio,
 * then reset it so that it can be reused.
 */
int
_DEFUN(__sprint_r, (ptr, fp, uio),
   1cdc8:	fb010113          	addi	sp,sp,-80
   1cdcc:	01613823          	sd	s6,16(sp)
   1cdd0:	04113423          	sd	ra,72(sp)
   1cdd4:	04813023          	sd	s0,64(sp)
   1cdd8:	02913c23          	sd	s1,56(sp)
   1cddc:	03213823          	sd	s2,48(sp)
   1cde0:	03313423          	sd	s3,40(sp)
   1cde4:	03413023          	sd	s4,32(sp)
   1cde8:	01513c23          	sd	s5,24(sp)
   1cdec:	01713423          	sd	s7,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:418
	if (uio->uio_resid == 0) {
		uio->uio_iovcnt = 0;
		return (0);
	}
#ifdef _WIDE_ORIENT
	if (fp->_flags2 & __SWID) {
   1cdf0:	03279713          	slli	a4,a5,0x32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:406
/*
 * Flush out all the vectors defined by the given uio,
 * then reset it so that it can be reused.
 */
int
_DEFUN(__sprint_r, (ptr, fp, uio),
   1cdf4:	00060b13          	mv	s6,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:418
	if (uio->uio_resid == 0) {
		uio->uio_iovcnt = 0;
		return (0);
	}
#ifdef _WIDE_ORIENT
	if (fp->_flags2 & __SWID) {
   1cdf8:	0a075863          	bgez	a4,1cea8 <__sprint_r.part.0+0xe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:424
		struct __siov *iov;
		wchar_t *p;
		int i, len;

		iov = uio->uio_iov;
		for (; uio->uio_resid != 0;
   1cdfc:	01063783          	ld	a5,16(a2)
   1ce00:	00058a13          	mv	s4,a1
   1ce04:	00050a93          	mv	s5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:423
	if (fp->_flags2 & __SWID) {
		struct __siov *iov;
		wchar_t *p;
		int i, len;

		iov = uio->uio_iov;
   1ce08:	00063b83          	ld	s7,0(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:429
		for (; uio->uio_resid != 0;
		     uio->uio_resid -= len * sizeof (wchar_t), iov++) {
			p = (wchar_t *) iov->iov_base;
			len = iov->iov_len / sizeof (wchar_t);
			for (i = 0; i < len; i++) {
				if (_fputwc_r (ptr, p[i], fp) == WEOF) {
   1ce0c:	fff00993          	li	s3,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:424
		struct __siov *iov;
		wchar_t *p;
		int i, len;

		iov = uio->uio_iov;
		for (; uio->uio_resid != 0;
   1ce10:	08078863          	beqz	a5,1cea0 <__sprint_r.part.0+0xdc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:427
		     uio->uio_resid -= len * sizeof (wchar_t), iov++) {
			p = (wchar_t *) iov->iov_base;
			len = iov->iov_len / sizeof (wchar_t);
   1ce14:	008bb903          	ld	s2,8(s7)
   1ce18:	000bb483          	ld	s1,0(s7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:428
			for (i = 0; i < len; i++) {
   1ce1c:	00000413          	li	s0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:427

		iov = uio->uio_iov;
		for (; uio->uio_resid != 0;
		     uio->uio_resid -= len * sizeof (wchar_t), iov++) {
			p = (wchar_t *) iov->iov_base;
			len = iov->iov_len / sizeof (wchar_t);
   1ce20:	00295913          	srli	s2,s2,0x2
   1ce24:	0009091b          	sext.w	s2,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:428
			for (i = 0; i < len; i++) {
   1ce28:	01204863          	bgtz	s2,1ce38 <__sprint_r.part.0+0x74>
   1ce2c:	0600006f          	j	1ce8c <__sprint_r.part.0+0xc8>
   1ce30:	00448493          	addi	s1,s1,4
   1ce34:	04890a63          	beq	s2,s0,1ce88 <__sprint_r.part.0+0xc4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:429
				if (_fputwc_r (ptr, p[i], fp) == WEOF) {
   1ce38:	0004a583          	lw	a1,0(s1)
   1ce3c:	000a0613          	mv	a2,s4
   1ce40:	000a8513          	mv	a0,s5
   1ce44:	524010ef          	jal	1e368 <_fputwc_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:428
		iov = uio->uio_iov;
		for (; uio->uio_resid != 0;
		     uio->uio_resid -= len * sizeof (wchar_t), iov++) {
			p = (wchar_t *) iov->iov_base;
			len = iov->iov_len / sizeof (wchar_t);
			for (i = 0; i < len; i++) {
   1ce48:	0014041b          	addiw	s0,s0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:429
				if (_fputwc_r (ptr, p[i], fp) == WEOF) {
   1ce4c:	ff3512e3          	bne	a0,s3,1ce30 <__sprint_r.part.0+0x6c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:430
					err = -1;
   1ce50:	00098513          	mv	a0,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:442
		err = __sfvwrite_r(ptr, fp, uio);
out:
	uio->uio_resid = 0;
	uio->uio_iovcnt = 0;
	return (err);
}
   1ce54:	04813083          	ld	ra,72(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:439
		}
	} else
#endif
		err = __sfvwrite_r(ptr, fp, uio);
out:
	uio->uio_resid = 0;
   1ce58:	000b3823          	sd	zero,16(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:440
	uio->uio_iovcnt = 0;
   1ce5c:	000b2423          	sw	zero,8(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:442
	return (err);
}
   1ce60:	04013403          	ld	s0,64(sp)
   1ce64:	03813483          	ld	s1,56(sp)
   1ce68:	03013903          	ld	s2,48(sp)
   1ce6c:	02813983          	ld	s3,40(sp)
   1ce70:	02013a03          	ld	s4,32(sp)
   1ce74:	01813a83          	ld	s5,24(sp)
   1ce78:	01013b03          	ld	s6,16(sp)
   1ce7c:	00813b83          	ld	s7,8(sp)
   1ce80:	05010113          	addi	sp,sp,80
   1ce84:	00008067          	ret
   1ce88:	010b3783          	ld	a5,16(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:425
		wchar_t *p;
		int i, len;

		iov = uio->uio_iov;
		for (; uio->uio_resid != 0;
		     uio->uio_resid -= len * sizeof (wchar_t), iov++) {
   1ce8c:	00291913          	slli	s2,s2,0x2
   1ce90:	412787b3          	sub	a5,a5,s2
   1ce94:	00fb3823          	sd	a5,16(s6)
   1ce98:	010b8b93          	addi	s7,s7,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:424
		struct __siov *iov;
		wchar_t *p;
		int i, len;

		iov = uio->uio_iov;
		for (; uio->uio_resid != 0;
   1ce9c:	f6079ce3          	bnez	a5,1ce14 <__sprint_r.part.0+0x50>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:411
_DEFUN(__sprint_r, (ptr, fp, uio),
       struct _reent *ptr _AND
       FILE *fp _AND
       register struct __suio *uio)
{
	register int err = 0;
   1cea0:	00000513          	li	a0,0
   1cea4:	fb1ff06f          	j	1ce54 <__sprint_r.part.0+0x90>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:437
				}
			}
		}
	} else
#endif
		err = __sfvwrite_r(ptr, fp, uio);
   1cea8:	f9df90ef          	jal	16e44 <__sfvwrite_r>
   1ceac:	fa9ff06f          	j	1ce54 <__sprint_r.part.0+0x90>

000000000001ceb0 <__sprint_r>:
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:413
       FILE *fp _AND
       register struct __suio *uio)
{
	register int err = 0;

	if (uio->uio_resid == 0) {
   1ceb0:	01063703          	ld	a4,16(a2)
   1ceb4:	00070463          	beqz	a4,1cebc <__sprint_r+0xc>
   1ceb8:	f0dff06f          	j	1cdc4 <__sprint_r.part.0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:414
		uio->uio_iovcnt = 0;
   1cebc:	00062423          	sw	zero,8(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:442
		err = __sfvwrite_r(ptr, fp, uio);
out:
	uio->uio_resid = 0;
	uio->uio_iovcnt = 0;
	return (err);
}
   1cec0:	00000513          	li	a0,0
   1cec4:	00008067          	ret

000000000001cec8 <_vfiprintf_r>:
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:668
_DEFUN(_VFPRINTF_R, (data, fp, fmt0, ap),
       struct _reent *data _AND
       FILE * fp           _AND
       _CONST char *fmt0   _AND
       va_list ap)
{
   1cec8:	e6010113          	addi	sp,sp,-416
   1cecc:	17513423          	sd	s5,360(sp)
   1ced0:	17613023          	sd	s6,352(sp)
   1ced4:	15a13023          	sd	s10,320(sp)
   1ced8:	18113c23          	sd	ra,408(sp)
   1cedc:	18813823          	sd	s0,400(sp)
   1cee0:	18913423          	sd	s1,392(sp)
   1cee4:	19213023          	sd	s2,384(sp)
   1cee8:	17313c23          	sd	s3,376(sp)
   1ceec:	17413823          	sd	s4,368(sp)
   1cef0:	15713c23          	sd	s7,344(sp)
   1cef4:	15813823          	sd	s8,336(sp)
   1cef8:	15913423          	sd	s9,328(sp)
   1cefc:	13b13c23          	sd	s11,312(sp)
   1cf00:	00d13423          	sd	a3,8(sp)
   1cf04:	00050a93          	mv	s5,a0
   1cf08:	00058d13          	mv	s10,a1
   1cf0c:	00060b13          	mv	s6,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:859
	    (u_long)GET_ARG (N, ap, u_int))
#endif

#ifndef STRING_ONLY
	/* Initialize std streams if not dealing with sprintf family.  */
	CHECK_INIT (data, fp);
   1cf10:	00050663          	beqz	a0,1cf1c <_vfiprintf_r+0x54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:859 (discriminator 1)
   1cf14:	05052783          	lw	a5,80(a0)
   1cf18:	1e078c63          	beqz	a5,1d110 <_vfiprintf_r+0x248>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:862
	_newlib_flockfile_start (fp);

	ORIENT(fp, -1);
   1cf1c:	010d1683          	lh	a3,16(s10)
   1cf20:	03069793          	slli	a5,a3,0x30
   1cf24:	0307d793          	srli	a5,a5,0x30
   1cf28:	03279713          	slli	a4,a5,0x32
   1cf2c:	02074a63          	bltz	a4,1cf60 <_vfiprintf_r+0x98>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:862 (discriminator 1)
   1cf30:	000027b7          	lui	a5,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:860
#endif

#ifndef STRING_ONLY
	/* Initialize std streams if not dealing with sprintf family.  */
	CHECK_INIT (data, fp);
	_newlib_flockfile_start (fp);
   1cf34:	0acd2603          	lw	a2,172(s10)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:862

	ORIENT(fp, -1);
   1cf38:	00f6e7b3          	or	a5,a3,a5
   1cf3c:	0107979b          	slliw	a5,a5,0x10
   1cf40:	ffffe737          	lui	a4,0xffffe
   1cf44:	4107d79b          	sraiw	a5,a5,0x10
   1cf48:	fff7071b          	addiw	a4,a4,-1
   1cf4c:	00e67733          	and	a4,a2,a4
   1cf50:	00fd1823          	sh	a5,16(s10)
   1cf54:	03079793          	slli	a5,a5,0x30
   1cf58:	0aed2623          	sw	a4,172(s10)
   1cf5c:	0307d793          	srli	a5,a5,0x30
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:865

	/* sorry, fprintf(read_only_file, "") returns EOF, not 0 */
	if (cantwrite (data, fp)) {
   1cf60:	0087f713          	andi	a4,a5,8
   1cf64:	12070a63          	beqz	a4,1d098 <_vfiprintf_r+0x1d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:865 (discriminator 2)
   1cf68:	018d3703          	ld	a4,24(s10)
   1cf6c:	12070663          	beqz	a4,1d098 <_vfiprintf_r+0x1d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:872
		return (EOF);
	}

#ifdef _UNBUF_STREAM_OPT
	/* optimise fprintf(stderr) (and other unbuffered Unix files) */
	if ((fp->_flags & (__SNBF|__SWR|__SRW)) == (__SNBF|__SWR) &&
   1cf70:	01a7f793          	andi	a5,a5,26
   1cf74:	00a00713          	li	a4,10
   1cf78:	14e78063          	beq	a5,a4,1d0b8 <_vfiprintf_r+0x1f0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:894
        }
#endif /* STRING_ONLY */

	fmt = (char *)fmt0;
#ifdef _FVWRITE_IN_STREAMIO
	uio.uio_iov = iovp = iov;
   1cf7c:	0b010c93          	addi	s9,sp,176
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   1cf80:	00021c37          	lui	s8,0x21
   1cf84:	0af10793          	addi	a5,sp,175
   1cf88:	0f0c0713          	addi	a4,s8,240 # 210f0 <zeroes.4179+0x10>
   1cf8c:	40fc87b3          	sub	a5,s9,a5
   1cf90:	000218b7          	lui	a7,0x21
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:894
        }
#endif /* STRING_ONLY */

	fmt = (char *)fmt0;
#ifdef _FVWRITE_IN_STREAMIO
	uio.uio_iov = iovp = iov;
   1cf94:	07913823          	sd	s9,112(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:895
	uio.uio_resid = 0;
   1cf98:	08013023          	sd	zero,128(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:896
	uio.uio_iovcnt = 0;
   1cf9c:	06012c23          	sw	zero,120(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:894
        }
#endif /* STRING_ONLY */

	fmt = (char *)fmt0;
#ifdef _FVWRITE_IN_STREAMIO
	uio.uio_iov = iovp = iov;
   1cfa0:	000c8413          	mv	s0,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:718
	u_quad_t _uquad;	/* integer arguments %[diouxX] */
	enum { OCT, DEC, HEX } base;/* base for [diouxX] conversion */
	int dprec;		/* a copy of prec if [diouxX], 0 otherwise */
	int realsz;		/* field size expanded by dprec */
	int size;		/* size of converted field or string */
	char *xdigs = NULL;	/* digits for [xX] conversion */
   1cfa4:	00013c23          	sd	zero,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:898
#ifdef _FVWRITE_IN_STREAMIO
	uio.uio_iov = iovp = iov;
	uio.uio_resid = 0;
	uio.uio_iovcnt = 0;
#endif
	ret = 0;
   1cfa8:	04012c23          	sw	zero,88(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   1cfac:	00e13823          	sd	a4,16(sp)
   1cfb0:	25888c13          	addi	s8,a7,600 # 21258 <blanks.4136>
   1cfb4:	04f12e23          	sw	a5,92(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:925
                    else if (wc == '%')
                        break;
                    fmt += n;
		}
#else
                while (*fmt != '\0' && *fmt != '%')
   1cfb8:	000b4783          	lbu	a5,0(s6)
   1cfbc:	4e078ee3          	beqz	a5,1dcb8 <_vfiprintf_r+0xdf0>
   1cfc0:	02500713          	li	a4,37
   1cfc4:	000b0493          	mv	s1,s6
   1cfc8:	00e79663          	bne	a5,a4,1cfd4 <_vfiprintf_r+0x10c>
   1cfcc:	0580006f          	j	1d024 <_vfiprintf_r+0x15c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:925 (discriminator 1)
   1cfd0:	00e78863          	beq	a5,a4,1cfe0 <_vfiprintf_r+0x118>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:926
                    fmt += 1;
   1cfd4:	00148493          	addi	s1,s1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:925
                    else if (wc == '%')
                        break;
                    fmt += n;
		}
#else
                while (*fmt != '\0' && *fmt != '%')
   1cfd8:	0004c783          	lbu	a5,0(s1)
   1cfdc:	fe079ae3          	bnez	a5,1cfd0 <_vfiprintf_r+0x108>
   1cfe0:	4164893b          	subw	s2,s1,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:928
                    fmt += 1;
#endif
		if ((m = fmt - cp) != 0) {
   1cfe4:	04090063          	beqz	s2,1d024 <_vfiprintf_r+0x15c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:929
			PRINT (cp, m);
   1cfe8:	08013703          	ld	a4,128(sp)
   1cfec:	07812783          	lw	a5,120(sp)
   1cff0:	00090613          	mv	a2,s2
   1cff4:	00e60733          	add	a4,a2,a4
   1cff8:	0017879b          	addiw	a5,a5,1
   1cffc:	00c43423          	sd	a2,8(s0)
   1d000:	01643023          	sd	s6,0(s0)
   1d004:	08e13023          	sd	a4,128(sp)
   1d008:	06f12c23          	sw	a5,120(sp)
   1d00c:	00700613          	li	a2,7
   1d010:	01040413          	addi	s0,s0,16
   1d014:	06f64463          	blt	a2,a5,1d07c <_vfiprintf_r+0x1b4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:930
			ret += m;
   1d018:	05812783          	lw	a5,88(sp)
   1d01c:	012787bb          	addw	a5,a5,s2
   1d020:	04f12c23          	sw	a5,88(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:936
		}
#ifdef _MB_CAPABLE
		if (n <= 0)
                    goto done;
#else
                if (*fmt == '\0')
   1d024:	0004c783          	lbu	a5,0(s1)
   1d028:	580786e3          	beqz	a5,1ddb4 <_vfiprintf_r+0xeec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:940
                    goto done;
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */
   1d02c:	00148813          	addi	a6,s1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:946

		flags = 0;
		dprec = 0;
		width = 0;
		prec = -1;
		sign = '\0';
   1d030:	060103a3          	sb	zero,103(sp)
   1d034:	00000513          	li	a0,0
   1d038:	00000e93          	li	t4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:945
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
		width = 0;
		prec = -1;
   1d03c:	fff00493          	li	s1,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:944
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
		width = 0;
   1d040:	00000913          	li	s2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:942
                    goto done;
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
   1d044:	00000313          	li	t1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   1d048:	05800613          	li	a2,88
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1092
		case '5': case '6': case '7': case '8': case '9':
			n = 0;
			do {
				n = 10 * n + to_digit (ch);
				ch = *fmt++;
			} while (is_digit (ch));
   1d04c:	00900593          	li	a1,9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1033
			goto rflag;
		case '+':
			sign = '+';
			goto rflag;
		case '.':
			if ((ch = *fmt++) == '*') {
   1d050:	02a00f13          	li	t5,42
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:958
#ifndef _NO_POS_ARGS
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
   1d054:	00084703          	lbu	a4,0(a6)
   1d058:	00180b13          	addi	s6,a6,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
reswitch:	switch (ch) {
   1d05c:	fe07079b          	addiw	a5,a4,-32
   1d060:	66f66263          	bltu	a2,a5,1d6c4 <_vfiprintf_r+0x7fc>
   1d064:	01013683          	ld	a3,16(sp)
   1d068:	02079793          	slli	a5,a5,0x20
   1d06c:	01e7d793          	srli	a5,a5,0x1e
   1d070:	00d787b3          	add	a5,a5,a3
   1d074:	0007a783          	lw	a5,0(a5) # 2000 <_ftext-0xe000>
   1d078:	00078067          	jr	a5
__sprint_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:413
       FILE *fp _AND
       register struct __suio *uio)
{
	register int err = 0;

	if (uio->uio_resid == 0) {
   1d07c:	2e071ee3          	bnez	a4,1db78 <_vfiprintf_r+0xcb0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:414
		uio->uio_iovcnt = 0;
   1d080:	06012c23          	sw	zero,120(sp)
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:929
#else
                while (*fmt != '\0' && *fmt != '%')
                    fmt += 1;
#endif
		if ((m = fmt - cp) != 0) {
			PRINT (cp, m);
   1d084:	000c8413          	mv	s0,s9
   1d088:	f91ff06f          	j	1d018 <_vfiprintf_r+0x150>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1130
			} else
#endif
				flags |= LONGINT;
			goto rflag;
		case 'q': /* extension */
			flags |= QUADINT;
   1d08c:	01036313          	ori	t1,t1,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1018
			 * ``A negative field width argument is taken as a
			 * - flag followed by a positive field width.''
			 *	-- ANSI X3J11
			 * They don't exclude field widths read from args.
			 */
			width = GET_ARG (n, ap, int);
   1d090:	000b0813          	mv	a6,s6
   1d094:	fc1ff06f          	j	1d054 <_vfiprintf_r+0x18c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:865 (discriminator 3)
	_newlib_flockfile_start (fp);

	ORIENT(fp, -1);

	/* sorry, fprintf(read_only_file, "") returns EOF, not 0 */
	if (cantwrite (data, fp)) {
   1d098:	000d0593          	mv	a1,s10
   1d09c:	000a8513          	mv	a0,s5
   1d0a0:	9cdf70ef          	jal	14a6c <__swsetup_r>
   1d0a4:	4e0512e3          	bnez	a0,1dd88 <_vfiprintf_r+0xec0>
   1d0a8:	010d5783          	lhu	a5,16(s10)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:872
		return (EOF);
	}

#ifdef _UNBUF_STREAM_OPT
	/* optimise fprintf(stderr) (and other unbuffered Unix files) */
	if ((fp->_flags & (__SNBF|__SWR|__SRW)) == (__SNBF|__SWR) &&
   1d0ac:	00a00713          	li	a4,10
   1d0b0:	01a7f793          	andi	a5,a5,26
   1d0b4:	ece794e3          	bne	a5,a4,1cf7c <_vfiprintf_r+0xb4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:872 (discriminator 1)
   1d0b8:	012d1783          	lh	a5,18(s10)
   1d0bc:	ec07c0e3          	bltz	a5,1cf7c <_vfiprintf_r+0xb4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:875
	    fp->_file >= 0) {
		_newlib_flockfile_exit (fp);
		return (__sbprintf (data, fp, fmt0, ap));
   1d0c0:	00813683          	ld	a3,8(sp)
   1d0c4:	000b0613          	mv	a2,s6
   1d0c8:	000d0593          	mv	a1,s10
   1d0cc:	000a8513          	mv	a0,s5
   1d0d0:	6a9000ef          	jal	1df78 <__sbprintf>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1791
#ifndef STRING_ONLY
	_newlib_flockfile_end (fp);
#endif
	return (__sferror (fp) ? EOF : ret);
	/* NOTREACHED */
}
   1d0d4:	19813083          	ld	ra,408(sp)
   1d0d8:	19013403          	ld	s0,400(sp)
   1d0dc:	18813483          	ld	s1,392(sp)
   1d0e0:	18013903          	ld	s2,384(sp)
   1d0e4:	17813983          	ld	s3,376(sp)
   1d0e8:	17013a03          	ld	s4,368(sp)
   1d0ec:	16813a83          	ld	s5,360(sp)
   1d0f0:	16013b03          	ld	s6,352(sp)
   1d0f4:	15813b83          	ld	s7,344(sp)
   1d0f8:	15013c03          	ld	s8,336(sp)
   1d0fc:	14813c83          	ld	s9,328(sp)
   1d100:	14013d03          	ld	s10,320(sp)
   1d104:	13813d83          	ld	s11,312(sp)
   1d108:	1a010113          	addi	sp,sp,416
   1d10c:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:859 (discriminator 2)
	    (u_long)GET_ARG (N, ap, u_int))
#endif

#ifndef STRING_ONLY
	/* Initialize std streams if not dealing with sprintf family.  */
	CHECK_INIT (data, fp);
   1d110:	e60f90ef          	jal	16770 <__sinit>
   1d114:	e09ff06f          	j	1cf1c <_vfiprintf_r+0x54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1018
			 * ``A negative field width argument is taken as a
			 * - flag followed by a positive field width.''
			 *	-- ANSI X3J11
			 * They don't exclude field widths read from args.
			 */
			width = GET_ARG (n, ap, int);
   1d118:	00813783          	ld	a5,8(sp)
   1d11c:	0007a903          	lw	s2,0(a5)
   1d120:	00878793          	addi	a5,a5,8
   1d124:	00f13423          	sd	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1022
#ifndef _NO_POS_ARGS
			is_pos_arg = old_is_pos_arg;
#endif
			if (width >= 0)
   1d128:	f60954e3          	bgez	s2,1d090 <_vfiprintf_r+0x1c8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1024
				goto rflag;
			width = -width;
   1d12c:	4120093b          	negw	s2,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1027
			/* FALLTHROUGH */
		case '-':
			flags |= LADJUST;
   1d130:	00436313          	ori	t1,t1,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1018
			 * ``A negative field width argument is taken as a
			 * - flag followed by a positive field width.''
			 *	-- ANSI X3J11
			 * They don't exclude field widths read from args.
			 */
			width = GET_ARG (n, ap, int);
   1d134:	000b0813          	mv	a6,s6
   1d138:	f1dff06f          	j	1d054 <_vfiprintf_r+0x18c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1430
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
			flags |= HEXPREFIX;
			ox[0] = '0';
   1d13c:	03000793          	li	a5,48
   1d140:	06f10423          	sb	a5,104(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1431
			ox[1] = ch = 'x';
   1d144:	07800793          	li	a5,120
   1d148:	06f104a3          	sb	a5,105(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1426
			 * of printable characters, in an implementation-
			 * defined manner.''
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
   1d14c:	00813783          	ld	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1d150:	060103a3          	sb	zero,103(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1429
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
			flags |= HEXPREFIX;
   1d154:	00236613          	ori	a2,t1,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1426
			 * of printable characters, in an implementation-
			 * defined manner.''
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
   1d158:	00878713          	addi	a4,a5,8
   1d15c:	0007b783          	ld	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1d160:	2e04cce3          	bltz	s1,1dc58 <_vfiprintf_r+0xd90>
   1d164:	f7f37313          	andi	t1,t1,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1426
			 * of printable characters, in an implementation-
			 * defined manner.''
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
   1d168:	00e13423          	sd	a4,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
				flags &= ~ZEROPAD;
   1d16c:	00236313          	ori	t1,t1,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1d170:	32079ae3          	bnez	a5,1dca4 <_vfiprintf_r+0xddc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
   1d174:	000227b7          	lui	a5,0x22
   1d178:	bd078793          	addi	a5,a5,-1072 # 21bd0 <zeroes.4123+0x6e0>
   1d17c:	00f13c23          	sd	a5,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1d180:	00000593          	li	a1,0
   1d184:	200498e3          	bnez	s1,1db94 <_vfiprintf_r+0xccc>
   1d188:	00000493          	li	s1,0
   1d18c:	00000a13          	li	s4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1571
			/*
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
   1d190:	000c8b93          	mv	s7,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1678
		 * If flags&FPT, ch must be in [aAeEfg].
		 *
		 * Compute actual size, so we know how much to pad.
		 * size excludes decimal prec; realsz includes it.
		 */
		realsz = dprec > size ? dprec : size;
   1d194:	00048993          	mv	s3,s1
   1d198:	0144d463          	ble	s4,s1,1d1a0 <_vfiprintf_r+0x2d8>
   1d19c:	000a0993          	mv	s3,s4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1680
		if (sign)
			realsz++;
   1d1a0:	00b035b3          	snez	a1,a1
   1d1a4:	00b989bb          	addw	s3,s3,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1681
		if (flags & HEXPREFIX)
   1d1a8:	00237393          	andi	t2,t1,2
   1d1ac:	00038463          	beqz	t2,1d1b4 <_vfiprintf_r+0x2ec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1682
			realsz+= 2;
   1d1b0:	0029899b          	addiw	s3,s3,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1685

		/* right-adjusting blank padding */
		if ((flags & (LADJUST|ZEROPAD)) == 0)
   1d1b4:	08437293          	andi	t0,t1,132
   1d1b8:	58029463          	bnez	t0,1d740 <_vfiprintf_r+0x878>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
			PAD (width - realsz, blanks);
   1d1bc:	41390dbb          	subw	s11,s2,s3
   1d1c0:	59b05063          	blez	s11,1d740 <_vfiprintf_r+0x878>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 5)
   1d1c4:	01000793          	li	a5,16
   1d1c8:	45b7dee3          	ble	s11,a5,1de24 <_vfiprintf_r+0xf5c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
   1d1cc:	01000e93          	li	t4,16
   1d1d0:	08013783          	ld	a5,128(sp)
   1d1d4:	07812503          	lw	a0,120(sp)
   1d1d8:	05813823          	sd	s8,80(sp)
   1d1dc:	00700f13          	li	t5,7
   1d1e0:	000e8f93          	mv	t6,t4
   1d1e4:	0180006f          	j	1d1fc <_vfiprintf_r+0x334>
   1d1e8:	0025061b          	addiw	a2,a0,2
   1d1ec:	01040413          	addi	s0,s0,16
   1d1f0:	00058513          	mv	a0,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 4)
   1d1f4:	ff0d8d9b          	addiw	s11,s11,-16
   1d1f8:	03bfdc63          	ble	s11,t6,1d230 <_vfiprintf_r+0x368>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 6)
   1d1fc:	01078793          	addi	a5,a5,16
   1d200:	0015059b          	addiw	a1,a0,1
   1d204:	01843023          	sd	s8,0(s0)
   1d208:	01d43423          	sd	t4,8(s0)
   1d20c:	08f13023          	sd	a5,128(sp)
   1d210:	06b12c23          	sw	a1,120(sp)
   1d214:	fcbf5ae3          	ble	a1,t5,1d1e8 <_vfiprintf_r+0x320>
__sprint_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:413
       FILE *fp _AND
       register struct __suio *uio)
{
	register int err = 0;

	if (uio->uio_resid == 0) {
   1d218:	4c079863          	bnez	a5,1d6e8 <_vfiprintf_r+0x820>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
		if (flags & HEXPREFIX)
			realsz+= 2;

		/* right-adjusting blank padding */
		if ((flags & (LADJUST|ZEROPAD)) == 0)
			PAD (width - realsz, blanks);
   1d21c:	ff0d8d9b          	addiw	s11,s11,-16
__sprint_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:414
       register struct __suio *uio)
{
	register int err = 0;

	if (uio->uio_resid == 0) {
		uio->uio_iovcnt = 0;
   1d220:	00000513          	li	a0,0
   1d224:	00100613          	li	a2,1
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
		if (flags & HEXPREFIX)
			realsz+= 2;

		/* right-adjusting blank padding */
		if ((flags & (LADJUST|ZEROPAD)) == 0)
			PAD (width - realsz, blanks);
   1d228:	000c8413          	mv	s0,s9
   1d22c:	fdbfc8e3          	blt	t6,s11,1d1fc <_vfiprintf_r+0x334>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 7)
   1d230:	05013703          	ld	a4,80(sp)
   1d234:	00fd87b3          	add	a5,s11,a5
   1d238:	01b43423          	sd	s11,8(s0)
   1d23c:	00e43023          	sd	a4,0(s0)
   1d240:	08f13023          	sd	a5,128(sp)
   1d244:	06c12c23          	sw	a2,120(sp)
   1d248:	00700593          	li	a1,7
   1d24c:	7ac5cc63          	blt	a1,a2,1da04 <_vfiprintf_r+0xb3c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1689

		/* prefix */
		if (sign)
   1d250:	06714503          	lbu	a0,103(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
		if (flags & HEXPREFIX)
			realsz+= 2;

		/* right-adjusting blank padding */
		if ((flags & (LADJUST|ZEROPAD)) == 0)
			PAD (width - realsz, blanks);
   1d254:	01040413          	addi	s0,s0,16
   1d258:	0016059b          	addiw	a1,a2,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1689

		/* prefix */
		if (sign)
   1d25c:	4e051c63          	bnez	a0,1d754 <_vfiprintf_r+0x88c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1691
			PRINT (&sign, 1);
		if (flags & HEXPREFIX)
   1d260:	52038663          	beqz	t2,1d78c <_vfiprintf_r+0x8c4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1692
			PRINT (ox, 2);
   1d264:	06810613          	addi	a2,sp,104
   1d268:	00278793          	addi	a5,a5,2
   1d26c:	00c43023          	sd	a2,0(s0)
   1d270:	00200613          	li	a2,2
   1d274:	00c43423          	sd	a2,8(s0)
   1d278:	08f13023          	sd	a5,128(sp)
   1d27c:	06b12c23          	sw	a1,120(sp)
   1d280:	00700613          	li	a2,7
   1d284:	7cb65863          	ble	a1,a2,1da54 <_vfiprintf_r+0xb8c>
__sprint_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:413
       FILE *fp _AND
       register struct __suio *uio)
{
	register int err = 0;

	if (uio->uio_resid == 0) {
   1d288:	10079ae3          	bnez	a5,1db9c <_vfiprintf_r+0xcd4>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1695
			PRINT (&sign, 1);
		if (flags & HEXPREFIX)
			PRINT (ox, 2);

		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
   1d28c:	08000513          	li	a0,128
__sprint_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:414
       register struct __suio *uio)
{
	register int err = 0;

	if (uio->uio_resid == 0) {
		uio->uio_iovcnt = 0;
   1d290:	00100593          	li	a1,1
   1d294:	00000613          	li	a2,0
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1692

		/* prefix */
		if (sign)
			PRINT (&sign, 1);
		if (flags & HEXPREFIX)
			PRINT (ox, 2);
   1d298:	000c8413          	mv	s0,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1695

		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
   1d29c:	4ea29c63          	bne	t0,a0,1d794 <_vfiprintf_r+0x8cc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
			PAD (width - realsz, zeroes);
   1d2a0:	41390ebb          	subw	t4,s2,s3
   1d2a4:	4fd05863          	blez	t4,1d794 <_vfiprintf_r+0x8cc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 5)
   1d2a8:	01000513          	li	a0,16
   1d2ac:	3fd55ce3          	ble	t4,a0,1dea4 <_vfiprintf_r+0xfdc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 6)
   1d2b0:	01000f13          	li	t5,16
   1d2b4:	00021737          	lui	a4,0x21
   1d2b8:	26870d93          	addi	s11,a4,616 # 21268 <zeroes.4137>
   1d2bc:	00700f93          	li	t6,7
   1d2c0:	000f0293          	mv	t0,t5
   1d2c4:	0180006f          	j	1d2dc <_vfiprintf_r+0x414>
   1d2c8:	0026051b          	addiw	a0,a2,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
   1d2cc:	01040413          	addi	s0,s0,16
   1d2d0:	00058613          	mv	a2,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 4)
   1d2d4:	ff0e8e9b          	addiw	t4,t4,-16
   1d2d8:	03d2dc63          	ble	t4,t0,1d310 <_vfiprintf_r+0x448>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 6)
   1d2dc:	01078793          	addi	a5,a5,16
   1d2e0:	0016059b          	addiw	a1,a2,1
   1d2e4:	01b43023          	sd	s11,0(s0)
   1d2e8:	01e43423          	sd	t5,8(s0)
   1d2ec:	08f13023          	sd	a5,128(sp)
   1d2f0:	06b12c23          	sw	a1,120(sp)
   1d2f4:	fcbfdae3          	ble	a1,t6,1d2c8 <_vfiprintf_r+0x400>
__sprint_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:413
       FILE *fp _AND
       register struct __suio *uio)
{
	register int err = 0;

	if (uio->uio_resid == 0) {
   1d2f8:	6a079e63          	bnez	a5,1d9b4 <_vfiprintf_r+0xaec>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
		if (flags & HEXPREFIX)
			PRINT (ox, 2);

		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
			PAD (width - realsz, zeroes);
   1d2fc:	ff0e8e9b          	addiw	t4,t4,-16
__sprint_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:414
       register struct __suio *uio)
{
	register int err = 0;

	if (uio->uio_resid == 0) {
		uio->uio_iovcnt = 0;
   1d300:	00100513          	li	a0,1
   1d304:	00000613          	li	a2,0
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
		if (flags & HEXPREFIX)
			PRINT (ox, 2);

		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
			PAD (width - realsz, zeroes);
   1d308:	000c8413          	mv	s0,s9
   1d30c:	fdd2c8e3          	blt	t0,t4,1d2dc <_vfiprintf_r+0x414>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 7)
   1d310:	01d787b3          	add	a5,a5,t4
   1d314:	01b43023          	sd	s11,0(s0)
   1d318:	01d43423          	sd	t4,8(s0)
   1d31c:	08f13023          	sd	a5,128(sp)
   1d320:	06a12c23          	sw	a0,120(sp)
   1d324:	00700613          	li	a2,7
   1d328:	0ea646e3          	blt	a2,a0,1dc14 <_vfiprintf_r+0xd4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699

		/* leading zeroes from decimal precision */
		PAD (dprec - size, zeroes);
   1d32c:	414484bb          	subw	s1,s1,s4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
		if (flags & HEXPREFIX)
			PRINT (ox, 2);

		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
			PAD (width - realsz, zeroes);
   1d330:	01040413          	addi	s0,s0,16
   1d334:	0015059b          	addiw	a1,a0,1
   1d338:	00050613          	mv	a2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699

		/* leading zeroes from decimal precision */
		PAD (dprec - size, zeroes);
   1d33c:	46904063          	bgtz	s1,1d79c <_vfiprintf_r+0x8d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1765
					PRINT (cp, 1);
				PRINT (expstr, expsize);
			}
		}
#else /* !FLOATING_POINT */
		PRINT (cp, size);
   1d340:	00fa07b3          	add	a5,s4,a5
   1d344:	01743023          	sd	s7,0(s0)
   1d348:	01443423          	sd	s4,8(s0)
   1d34c:	08f13023          	sd	a5,128(sp)
   1d350:	06b12c23          	sw	a1,120(sp)
   1d354:	00700713          	li	a4,7
   1d358:	4eb75a63          	ble	a1,a4,1d84c <_vfiprintf_r+0x984>
__sprint_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:413
       FILE *fp _AND
       register struct __suio *uio)
{
	register int err = 0;

	if (uio->uio_resid == 0) {
   1d35c:	7a079463          	bnez	a5,1db04 <_vfiprintf_r+0xc3c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:414
		uio->uio_iovcnt = 0;
   1d360:	06012c23          	sw	zero,120(sp)
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1768
		}
#else /* !FLOATING_POINT */
		PRINT (cp, size);
#endif
		/* left-adjusting padding (always blank) */
		if (flags & LADJUST)
   1d364:	00437313          	andi	t1,t1,4
   1d368:	00030663          	beqz	t1,1d374 <_vfiprintf_r+0x4ac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769
			PAD (width - realsz, blanks);
   1d36c:	413904bb          	subw	s1,s2,s3
   1d370:	229040e3          	bgtz	s1,1dd90 <_vfiprintf_r+0xec8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1772

		/* finally, adjust ret */
		ret += width > realsz ? width : realsz;
   1d374:	01395463          	ble	s3,s2,1d37c <_vfiprintf_r+0x4b4>
   1d378:	00098913          	mv	s2,s3
   1d37c:	05812783          	lw	a5,88(sp)
   1d380:	012787bb          	addw	a5,a5,s2
   1d384:	04f12c23          	sw	a5,88(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1774 (discriminator 3)

		FLUSH ();	/* copy out the I/O vectors */
   1d388:	06012c23          	sw	zero,120(sp)
   1d38c:	000c8413          	mv	s0,s9
   1d390:	c29ff06f          	j	1cfb8 <_vfiprintf_r+0xf0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   1d394:	00100513          	li	a0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1030
			/* FALLTHROUGH */
		case '-':
			flags |= LADJUST;
			goto rflag;
		case '+':
			sign = '+';
   1d398:	02b00e93          	li	t4,43
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1018
			 * ``A negative field width argument is taken as a
			 * - flag followed by a positive field width.''
			 *	-- ANSI X3J11
			 * They don't exclude field widths read from args.
			 */
			width = GET_ARG (n, ap, int);
   1d39c:	000b0813          	mv	a6,s6
   1d3a0:	cb5ff06f          	j	1d054 <_vfiprintf_r+0x18c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1084
			/*
			 * ``Note that 0 is taken as a flag, not as the
			 * beginning of a field width.''
			 *	-- ANSI X3J11
			 */
			flags |= ZEROPAD;
   1d3a4:	08036313          	ori	t1,t1,128
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1018
			 * ``A negative field width argument is taken as a
			 * - flag followed by a positive field width.''
			 *	-- ANSI X3J11
			 * They don't exclude field widths read from args.
			 */
			width = GET_ARG (n, ap, int);
   1d3a8:	000b0813          	mv	a6,s6
   1d3ac:	ca9ff06f          	j	1d054 <_vfiprintf_r+0x18c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959 (discriminator 1)
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   1d3b0:	00000913          	li	s2,0
   1d3b4:	fd07079b          	addiw	a5,a4,-48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1091
		case '1': case '2': case '3': case '4':
		case '5': case '6': case '7': case '8': case '9':
			n = 0;
			do {
				n = 10 * n + to_digit (ch);
				ch = *fmt++;
   1d3b8:	001b0b13          	addi	s6,s6,1
   1d3bc:	fffb4703          	lbu	a4,-1(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1090
			goto rflag;
		case '1': case '2': case '3': case '4':
		case '5': case '6': case '7': case '8': case '9':
			n = 0;
			do {
				n = 10 * n + to_digit (ch);
   1d3c0:	00191f9b          	slliw	t6,s2,0x1
   1d3c4:	0039191b          	slliw	s2,s2,0x3
   1d3c8:	012f893b          	addw	s2,t6,s2
   1d3cc:	0127893b          	addw	s2,a5,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1092
				ch = *fmt++;
			} while (is_digit (ch));
   1d3d0:	fd07079b          	addiw	a5,a4,-48
   1d3d4:	fef5f2e3          	bleu	a5,a1,1d3b8 <_vfiprintf_r+0x4f0>
   1d3d8:	c85ff06f          	j	1d05c <_vfiprintf_r+0x194>
   1d3dc:	360518e3          	bnez	a0,1df4c <_vfiprintf_r+0x1084>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1195
				size = 1;
			}
			sign = '\0';
			break;
		case 'D':  /* extension */
			flags |= LONGINT;
   1d3e0:	01036313          	ori	t1,t1,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199
			/*FALLTHROUGH*/
		case 'd':
		case 'i':
			_uquad = SARG ();
   1d3e4:	01037793          	andi	a5,t1,16
   1d3e8:	74078263          	beqz	a5,1db2c <_vfiprintf_r+0xc64>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199 (discriminator 1)
   1d3ec:	00813703          	ld	a4,8(sp)
   1d3f0:	00073783          	ld	a5,0(a4)
   1d3f4:	00870713          	addi	a4,a4,8
   1d3f8:	00e13423          	sd	a4,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1203 (discriminator 8)
#ifndef _NO_LONGLONG
			if ((quad_t)_uquad < 0)
#else
			if ((long) _uquad < 0)
   1d3fc:	0e07c6e3          	bltz	a5,1dce8 <_vfiprintf_r+0xe20>
   1d400:	06714583          	lbu	a1,103(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1d404:	6e04c063          	bltz	s1,1dae4 <_vfiprintf_r+0xc1c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   1d408:	f7f37313          	andi	t1,t1,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1d40c:	10078c63          	beqz	a5,1d524 <_vfiprintf_r+0x65c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1591
						*--cp = '0';
					break;

				case DEC:
					/* many numbers are 1 digit */
					if (_uquad < 10) {
   1d410:	00900613          	li	a2,9
   1d414:	000c8b93          	mv	s7,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1599
					}
#ifdef _WANT_IO_C99_FORMATS
					ndig = 0;
#endif
					do {
					  *--cp = to_char (_uquad % 10);
   1d418:	00a00513          	li	a0,10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1591
						*--cp = '0';
					break;

				case DEC:
					/* many numbers are 1 digit */
					if (_uquad < 10) {
   1d41c:	10f67863          	bleu	a5,a2,1d52c <_vfiprintf_r+0x664>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1599 (discriminator 1)
					}
#ifdef _WANT_IO_C99_FORMATS
					ndig = 0;
#endif
					do {
					  *--cp = to_char (_uquad % 10);
   1d420:	02a7f633          	remu	a2,a5,a0
   1d424:	fffb8b93          	addi	s7,s7,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1620
					       next cases. */
					    if (grouping[1] != '\0')
					      grouping++;
					  }
#endif
					  _uquad /= 10;
   1d428:	02a7d7b3          	divu	a5,a5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1599
					}
#ifdef _WANT_IO_C99_FORMATS
					ndig = 0;
#endif
					do {
					  *--cp = to_char (_uquad % 10);
   1d42c:	0306061b          	addiw	a2,a2,48
   1d430:	00cb8023          	sb	a2,0(s7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1621
					    if (grouping[1] != '\0')
					      grouping++;
					  }
#endif
					  _uquad /= 10;
					} while (_uquad != 0);
   1d434:	fe0796e3          	bnez	a5,1d420 <_vfiprintf_r+0x558>
   1d438:	417c8a3b          	subw	s4,s9,s7
   1d43c:	d59ff06f          	j	1d194 <_vfiprintf_r+0x2cc>
   1d440:	300512e3          	bnez	a0,1df44 <_vfiprintf_r+0x107c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1408
#endif
			else
				*GET_ARG (N, ap, int_ptr_t) = ret;
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
   1d444:	01036313          	ori	t1,t1,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   1d448:	01037793          	andi	a5,t1,16
   1d44c:	6e078e63          	beqz	a5,1db48 <_vfiprintf_r+0xc80>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411 (discriminator 1)
   1d450:	00813783          	ld	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1d454:	060103a3          	sb	zero,103(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   1d458:	00878713          	addi	a4,a5,8
   1d45c:	0007b783          	ld	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1d460:	7004c263          	bltz	s1,1db64 <_vfiprintf_r+0xc9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   1d464:	00e13423          	sd	a4,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
				flags &= ~ZEROPAD;
   1d468:	f7f37313          	andi	t1,t1,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1d46c:	70079263          	bnez	a5,1db70 <_vfiprintf_r+0xca8>
   1d470:	00000593          	li	a1,0
   1d474:	00000793          	li	a5,0
   1d478:	2a0482e3          	beqz	s1,1df1c <_vfiprintf_r+0x1054>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572 (discriminator 1)
   1d47c:	000c8b93          	mv	s7,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1581
				 * a variable; hence this switch.
				 */
				switch (base) {
				case OCT:
					do {
						*--cp = to_char (_uquad & 7);
   1d480:	0077f613          	andi	a2,a5,7
   1d484:	fffb8b93          	addi	s7,s7,-1
   1d488:	0306061b          	addiw	a2,a2,48
   1d48c:	00cb8023          	sb	a2,0(s7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1582
						_uquad >>= 3;
   1d490:	0037d793          	srli	a5,a5,0x3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1583
					} while (_uquad);
   1d494:	fe0796e3          	bnez	a5,1d480 <_vfiprintf_r+0x5b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1585
					/* handle octal leading 0 */
					if (flags & ALT && *cp != '0')
   1d498:	00137793          	andi	a5,t1,1
   1d49c:	f8078ee3          	beqz	a5,1d438 <_vfiprintf_r+0x570>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1585 (discriminator 1)
   1d4a0:	03000793          	li	a5,48
   1d4a4:	f8f60ae3          	beq	a2,a5,1d438 <_vfiprintf_r+0x570>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1586
						*--cp = '0';
   1d4a8:	fffb8613          	addi	a2,s7,-1
   1d4ac:	40cc8a33          	sub	s4,s9,a2
   1d4b0:	fefb8fa3          	sb	a5,-1(s7)
   1d4b4:	000a0a1b          	sext.w	s4,s4
   1d4b8:	00060b93          	mv	s7,a2
   1d4bc:	cd9ff06f          	j	1d194 <_vfiprintf_r+0x2cc>
   1d4c0:	28051ee3          	bnez	a0,1df5c <_vfiprintf_r+0x1094>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1396
#ifndef _NO_LONGLONG
			if (flags & QUADINT)
				*GET_ARG (N, ap, quad_ptr_t) = ret;
			else
#endif
			if (flags & LONGINT)
   1d4c4:	01037793          	andi	a5,t1,16
   1d4c8:	040786e3          	beqz	a5,1dd14 <_vfiprintf_r+0xe4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1397
				*GET_ARG (N, ap, long_ptr_t) = ret;
   1d4cc:	00813683          	ld	a3,8(sp)
   1d4d0:	05812703          	lw	a4,88(sp)
   1d4d4:	0006b783          	ld	a5,0(a3)
   1d4d8:	00868693          	addi	a3,a3,8
   1d4dc:	00d13423          	sd	a3,8(sp)
   1d4e0:	00e7b023          	sd	a4,0(a5)
   1d4e4:	ad5ff06f          	j	1cfb8 <_vfiprintf_r+0xf0>
   1d4e8:	260516e3          	bnez	a0,1df54 <_vfiprintf_r+0x108c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1533
			} else
				size = strlen (cp);

			break;
		case 'U': /* extension */
			flags |= LONGINT;
   1d4ec:	01036313          	ori	t1,t1,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1d4f0:	01037793          	andi	a5,t1,16
   1d4f4:	5c079a63          	bnez	a5,1dac8 <_vfiprintf_r+0xc00>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536 (discriminator 2)
   1d4f8:	04037793          	andi	a5,t1,64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1d4fc:	060103a3          	sb	zero,103(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1d500:	7c078063          	beqz	a5,1dcc0 <_vfiprintf_r+0xdf8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536 (discriminator 4)
   1d504:	00813783          	ld	a5,8(sp)
   1d508:	00878713          	addi	a4,a5,8
   1d50c:	0007d783          	lhu	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1d510:	5c04c663          	bltz	s1,1dadc <_vfiprintf_r+0xc14>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1d514:	00e13423          	sd	a4,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
				flags &= ~ZEROPAD;
   1d518:	f7f37313          	andi	t1,t1,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1d51c:	00000593          	li	a1,0
   1d520:	ee0798e3          	bnez	a5,1d410 <_vfiprintf_r+0x548>
   1d524:	c60482e3          	beqz	s1,1d188 <_vfiprintf_r+0x2c0>
   1d528:	00000793          	li	a5,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1592
					break;

				case DEC:
					/* many numbers are 1 digit */
					if (_uquad < 10) {
						*--cp = to_char(_uquad);
   1d52c:	0307879b          	addiw	a5,a5,48
   1d530:	0af107a3          	sb	a5,175(sp)
   1d534:	05c12a03          	lw	s4,92(sp)
   1d538:	0af10b93          	addi	s7,sp,175
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1593
						break;
   1d53c:	c59ff06f          	j	1d194 <_vfiprintf_r+0x2cc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:975
			/*
			 * ``If the space and + flags both appear, the space
			 * flag will be ignored.''
			 *	-- ANSI X3J11
			 */
			if (!sign)
   1d540:	b40e98e3          	bnez	t4,1d090 <_vfiprintf_r+0x1c8>
   1d544:	00100513          	li	a0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:976
				sign = ' ';
   1d548:	02000e93          	li	t4,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1018
			 * ``A negative field width argument is taken as a
			 * - flag followed by a positive field width.''
			 *	-- ANSI X3J11
			 * They don't exclude field widths read from args.
			 */
			width = GET_ARG (n, ap, int);
   1d54c:	000b0813          	mv	a6,s6
   1d550:	b05ff06f          	j	1d054 <_vfiprintf_r+0x18c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:979
			 */
			if (!sign)
				sign = ' ';
			goto rflag;
		case '#':
			flags |= ALT;
   1d554:	00136313          	ori	t1,t1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1018
			 * ``A negative field width argument is taken as a
			 * - flag followed by a positive field width.''
			 *	-- ANSI X3J11
			 * They don't exclude field widths read from args.
			 */
			width = GET_ARG (n, ap, int);
   1d558:	000b0813          	mv	a6,s6
   1d55c:	af9ff06f          	j	1d054 <_vfiprintf_r+0x18c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   1d560:	00813783          	ld	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1441
#ifdef _GLIBC_EXTENSION
string:
#endif
			sign = '\0';
   1d564:	060103a3          	sb	zero,103(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   1d568:	0007bb83          	ld	s7,0(a5)
   1d56c:	00878d93          	addi	s11,a5,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1447
#ifndef __OPTIMIZE_SIZE__
			/* Behavior is undefined if the user passed a
			   NULL string when precision is not 0.
			   However, if we are not optimizing for size,
			   we might as well mirror glibc behavior.  */
			if (cp == NULL) {
   1d570:	0e0b84e3          	beqz	s7,1de58 <_vfiprintf_r+0xf90>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1516
				}
				cp[size] = '\0';
			}
			else
#endif /* _MB_CAPABLE */
			if (prec >= 0) {
   1d574:	0404cee3          	bltz	s1,1ddd0 <_vfiprintf_r+0xf08>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1522
				/*
				 * can't use strlen; can only look for the
				 * NUL in the first `prec' characters, and
				 * strlen () will go further.
				 */
				char *p = memchr (cp, 0, prec);
   1d578:	00048613          	mv	a2,s1
   1d57c:	00000593          	li	a1,0
   1d580:	000b8513          	mv	a0,s7
   1d584:	00613423          	sd	t1,8(sp)
   1d588:	be0fa0ef          	jal	17968 <memchr>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1524

				if (p != NULL)
   1d58c:	00813303          	ld	t1,8(sp)
   1d590:	120502e3          	beqz	a0,1deb4 <_vfiprintf_r+0xfec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1525
					size = p - cp;
   1d594:	41750a3b          	subw	s4,a0,s7
   1d598:	06714583          	lbu	a1,103(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   1d59c:	01b13423          	sd	s11,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1d5a0:	00000493          	li	s1,0
   1d5a4:	bf1ff06f          	j	1d194 <_vfiprintf_r+0x2cc>
   1d5a8:	f40504e3          	beqz	a0,1d4f0 <_vfiprintf_r+0x628>
   1d5ac:	07d103a3          	sb	t4,103(sp)
   1d5b0:	f41ff06f          	j	1d4f0 <_vfiprintf_r+0x628>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1189
				}
			}
			else
#endif /* _MB_CAPABLE */
			{
				*cp = GET_ARG (N, ap, int);
   1d5b4:	00813703          	ld	a4,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1193
				size = 1;
			}
			sign = '\0';
			break;
   1d5b8:	00100993          	li	s3,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1192
#endif /* _MB_CAPABLE */
			{
				*cp = GET_ARG (N, ap, int);
				size = 1;
			}
			sign = '\0';
   1d5bc:	060103a3          	sb	zero,103(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1189
				}
			}
			else
#endif /* _MB_CAPABLE */
			{
				*cp = GET_ARG (N, ap, int);
   1d5c0:	00072783          	lw	a5,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1190
				size = 1;
   1d5c4:	00098a13          	mv	s4,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1173
		    flags |= QUADINT;
		  goto rflag;
		case 'C':
#endif /* _WANT_IO_C99_FORMATS */
		case 'c':
			cp = buf;
   1d5c8:	08810b93          	addi	s7,sp,136
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1189
				}
			}
			else
#endif /* _MB_CAPABLE */
			{
				*cp = GET_ARG (N, ap, int);
   1d5cc:	08f10423          	sb	a5,136(sp)
   1d5d0:	00870793          	addi	a5,a4,8
   1d5d4:	00f13423          	sd	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1d5d8:	00000493          	li	s1,0
   1d5dc:	bcdff06f          	j	1d1a8 <_vfiprintf_r+0x2e0>
   1d5e0:	e00502e3          	beqz	a0,1d3e4 <_vfiprintf_r+0x51c>
   1d5e4:	07d103a3          	sb	t4,103(sp)
   1d5e8:	dfdff06f          	j	1d3e4 <_vfiprintf_r+0x51c>
   1d5ec:	120510e3          	bnez	a0,1df0c <_vfiprintf_r+0x1044>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1540
		case 'u':
			_uquad = UARG ();
			base = DEC;
			goto nosign;
		case 'X':
			xdigs = "0123456789ABCDEF";
   1d5f0:	000227b7          	lui	a5,0x22
   1d5f4:	bb878793          	addi	a5,a5,-1096 # 21bb8 <zeroes.4123+0x6c8>
   1d5f8:	00f13c23          	sd	a5,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
hex:			_uquad = UARG ();
   1d5fc:	01037793          	andi	a5,t1,16
   1d600:	06078063          	beqz	a5,1d660 <_vfiprintf_r+0x798>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544 (discriminator 1)
   1d604:	00813683          	ld	a3,8(sp)
   1d608:	0006b783          	ld	a5,0(a3)
   1d60c:	00868693          	addi	a3,a3,8
   1d610:	00d13423          	sd	a3,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1547 (discriminator 8)
			base = HEX;
			/* leading 0x/X only if non-zero */
			if (flags & ALT && _uquad != 0) {
   1d614:	00137613          	andi	a2,t1,1
   1d618:	46060863          	beqz	a2,1da88 <_vfiprintf_r+0xbc0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1547 (discriminator 1)
   1d61c:	66079063          	bnez	a5,1dc7c <_vfiprintf_r+0xdb4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1d620:	060103a3          	sb	zero,103(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1d624:	6404c663          	bltz	s1,1dc70 <_vfiprintf_r+0xda8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   1d628:	f7f37313          	andi	t1,t1,-129
   1d62c:	b55ff06f          	j	1d180 <_vfiprintf_r+0x2b8>
   1d630:	e0050ce3          	beqz	a0,1d448 <_vfiprintf_r+0x580>
   1d634:	07d103a3          	sb	t4,103(sp)
   1d638:	e11ff06f          	j	1d448 <_vfiprintf_r+0x580>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1118
			if (*fmt == 'h') {
				fmt++;
				flags |= CHARINT;
			} else
#endif
				flags |= SHORTINT;
   1d63c:	04036313          	ori	t1,t1,64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1018
			 * ``A negative field width argument is taken as a
			 * - flag followed by a positive field width.''
			 *	-- ANSI X3J11
			 * They don't exclude field widths read from args.
			 */
			width = GET_ARG (n, ap, int);
   1d640:	000b0813          	mv	a6,s6
   1d644:	a11ff06f          	j	1d054 <_vfiprintf_r+0x18c>
   1d648:	0a051ee3          	bnez	a0,1df04 <_vfiprintf_r+0x103c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1543
			goto nosign;
		case 'X':
			xdigs = "0123456789ABCDEF";
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
   1d64c:	000227b7          	lui	a5,0x22
   1d650:	bd078793          	addi	a5,a5,-1072 # 21bd0 <zeroes.4123+0x6e0>
   1d654:	00f13c23          	sd	a5,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544
hex:			_uquad = UARG ();
   1d658:	01037793          	andi	a5,t1,16
   1d65c:	fa0794e3          	bnez	a5,1d604 <_vfiprintf_r+0x73c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544 (discriminator 2)
   1d660:	04037793          	andi	a5,t1,64
   1d664:	00813683          	ld	a3,8(sp)
   1d668:	68078e63          	beqz	a5,1dd04 <_vfiprintf_r+0xe3c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544 (discriminator 4)
   1d66c:	0006d783          	lhu	a5,0(a3)
   1d670:	00868693          	addi	a3,a3,8
   1d674:	00d13423          	sd	a3,8(sp)
   1d678:	f9dff06f          	j	1d614 <_vfiprintf_r+0x74c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1033
			goto rflag;
		case '+':
			sign = '+';
			goto rflag;
		case '.':
			if ((ch = *fmt++) == '*') {
   1d67c:	000b4703          	lbu	a4,0(s6)
   1d680:	001b0813          	addi	a6,s6,1
   1d684:	05e70ee3          	beq	a4,t5,1dee0 <_vfiprintf_r+0x1018>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1072
				if (prec < 0)
					prec = -1;
				goto rflag;
			}
			n = 0;
			while (is_digit (ch)) {
   1d688:	fd07079b          	addiw	a5,a4,-48
   1d68c:	00000493          	li	s1,0
   1d690:	00080b13          	mv	s6,a6
   1d694:	9cf5e4e3          	bltu	a1,a5,1d05c <_vfiprintf_r+0x194>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1074
				n = 10 * n + to_digit (ch);
				ch = *fmt++;
   1d698:	001b0b13          	addi	s6,s6,1
   1d69c:	fffb4703          	lbu	a4,-1(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1073
					prec = -1;
				goto rflag;
			}
			n = 0;
			while (is_digit (ch)) {
				n = 10 * n + to_digit (ch);
   1d6a0:	00149f9b          	slliw	t6,s1,0x1
   1d6a4:	0034949b          	slliw	s1,s1,0x3
   1d6a8:	009f84bb          	addw	s1,t6,s1
   1d6ac:	00f484bb          	addw	s1,s1,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1072
				if (prec < 0)
					prec = -1;
				goto rflag;
			}
			n = 0;
			while (is_digit (ch)) {
   1d6b0:	fd07079b          	addiw	a5,a4,-48
   1d6b4:	fef5f2e3          	bleu	a5,a1,1d698 <_vfiprintf_r+0x7d0>
   1d6b8:	9a04d2e3          	bgez	s1,1d05c <_vfiprintf_r+0x194>
   1d6bc:	fff00493          	li	s1,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1077
				n = 10 * n + to_digit (ch);
				ch = *fmt++;
			}
			prec = n < 0 ? -1 : n;
			goto reswitch;
   1d6c0:	99dff06f          	j	1d05c <_vfiprintf_r+0x194>
   1d6c4:	040518e3          	bnez	a0,1df14 <_vfiprintf_r+0x104c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1653

			size = buf + BUF - cp;
		skipsize:
			break;
		default:	/* "%?" prints ?, unless ? is NUL */
			if (ch == '\0')
   1d6c8:	6e070663          	beqz	a4,1ddb4 <_vfiprintf_r+0xeec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1660
			/* pretend it was %c with argument ch */
			cp = buf;
			*cp = ch;
			size = 1;
			sign = '\0';
			break;
   1d6cc:	00100993          	li	s3,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1657
		default:	/* "%?" prints ?, unless ? is NUL */
			if (ch == '\0')
				goto done;
			/* pretend it was %c with argument ch */
			cp = buf;
			*cp = ch;
   1d6d0:	08e10423          	sb	a4,136(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1659
			size = 1;
			sign = '\0';
   1d6d4:	060103a3          	sb	zero,103(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1658
			if (ch == '\0')
				goto done;
			/* pretend it was %c with argument ch */
			cp = buf;
			*cp = ch;
			size = 1;
   1d6d8:	00098a13          	mv	s4,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1656
			break;
		default:	/* "%?" prints ?, unless ? is NUL */
			if (ch == '\0')
				goto done;
			/* pretend it was %c with argument ch */
			cp = buf;
   1d6dc:	08810b93          	addi	s7,sp,136
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1d6e0:	00000493          	li	s1,0
   1d6e4:	ac5ff06f          	j	1d1a8 <_vfiprintf_r+0x2e0>
__sprint_r():
   1d6e8:	07010613          	addi	a2,sp,112
   1d6ec:	000d0593          	mv	a1,s10
   1d6f0:	000a8513          	mv	a0,s5
   1d6f4:	05f13423          	sd	t6,72(sp)
   1d6f8:	05e13023          	sd	t5,64(sp)
   1d6fc:	03d13c23          	sd	t4,56(sp)
   1d700:	02513823          	sd	t0,48(sp)
   1d704:	02713423          	sd	t2,40(sp)
   1d708:	02613023          	sd	t1,32(sp)
   1d70c:	eb8ff0ef          	jal	1cdc4 <__sprint_r.part.0>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
		if (flags & HEXPREFIX)
			realsz+= 2;

		/* right-adjusting blank padding */
		if ((flags & (LADJUST|ZEROPAD)) == 0)
			PAD (width - realsz, blanks);
   1d710:	22051063          	bnez	a0,1d930 <_vfiprintf_r+0xa68>
   1d714:	07812503          	lw	a0,120(sp)
   1d718:	08013783          	ld	a5,128(sp)
   1d71c:	000c8413          	mv	s0,s9
   1d720:	0015061b          	addiw	a2,a0,1
   1d724:	04813f83          	ld	t6,72(sp)
   1d728:	04013f03          	ld	t5,64(sp)
   1d72c:	03813e83          	ld	t4,56(sp)
   1d730:	03013283          	ld	t0,48(sp)
   1d734:	02813383          	ld	t2,40(sp)
   1d738:	02013303          	ld	t1,32(sp)
   1d73c:	ab9ff06f          	j	1d1f4 <_vfiprintf_r+0x32c>
   1d740:	07812603          	lw	a2,120(sp)
   1d744:	08013783          	ld	a5,128(sp)
   1d748:	0016059b          	addiw	a1,a2,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1689

		/* prefix */
		if (sign)
   1d74c:	06714503          	lbu	a0,103(sp)
   1d750:	b00508e3          	beqz	a0,1d260 <_vfiprintf_r+0x398>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1690
			PRINT (&sign, 1);
   1d754:	00100513          	li	a0,1
   1d758:	06710613          	addi	a2,sp,103
   1d75c:	00a787b3          	add	a5,a5,a0
   1d760:	00c43023          	sd	a2,0(s0)
   1d764:	00a43423          	sd	a0,8(s0)
   1d768:	08f13023          	sd	a5,128(sp)
   1d76c:	06b12c23          	sw	a1,120(sp)
   1d770:	00700613          	li	a2,7
   1d774:	2ab65a63          	ble	a1,a2,1da28 <_vfiprintf_r+0xb60>
__sprint_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:413
       FILE *fp _AND
       register struct __suio *uio)
{
	register int err = 0;

	if (uio->uio_resid == 0) {
   1d778:	44079e63          	bnez	a5,1dbd4 <_vfiprintf_r+0xd0c>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1691
			PAD (width - realsz, blanks);

		/* prefix */
		if (sign)
			PRINT (&sign, 1);
		if (flags & HEXPREFIX)
   1d77c:	2c039063          	bnez	t2,1da3c <_vfiprintf_r+0xb74>
   1d780:	00000613          	li	a2,0
   1d784:	00050593          	mv	a1,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1690
		if ((flags & (LADJUST|ZEROPAD)) == 0)
			PAD (width - realsz, blanks);

		/* prefix */
		if (sign)
			PRINT (&sign, 1);
   1d788:	000c8413          	mv	s0,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1695
		if (flags & HEXPREFIX)
			PRINT (ox, 2);

		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
   1d78c:	08000513          	li	a0,128
   1d790:	b0a288e3          	beq	t0,a0,1d2a0 <_vfiprintf_r+0x3d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699
			PAD (width - realsz, zeroes);

		/* leading zeroes from decimal precision */
		PAD (dprec - size, zeroes);
   1d794:	414484bb          	subw	s1,s1,s4
   1d798:	ba9054e3          	blez	s1,1d340 <_vfiprintf_r+0x478>
   1d79c:	00021737          	lui	a4,0x21
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 5)
   1d7a0:	01000513          	li	a0,16
   1d7a4:	26870d93          	addi	s11,a4,616 # 21268 <zeroes.4137>
   1d7a8:	06955263          	ble	s1,a0,1d80c <_vfiprintf_r+0x944>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 6)
   1d7ac:	01000e93          	li	t4,16
   1d7b0:	00021737          	lui	a4,0x21
   1d7b4:	26870d93          	addi	s11,a4,616 # 21268 <zeroes.4137>
   1d7b8:	00700f13          	li	t5,7
   1d7bc:	000e8f93          	mv	t6,t4
   1d7c0:	0180006f          	j	1d7d8 <_vfiprintf_r+0x910>
   1d7c4:	0026059b          	addiw	a1,a2,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699
   1d7c8:	01040413          	addi	s0,s0,16
   1d7cc:	00050613          	mv	a2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 4)
   1d7d0:	ff04849b          	addiw	s1,s1,-16
   1d7d4:	029fdc63          	ble	s1,t6,1d80c <_vfiprintf_r+0x944>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 6)
   1d7d8:	01078793          	addi	a5,a5,16
   1d7dc:	0016051b          	addiw	a0,a2,1
   1d7e0:	01b43023          	sd	s11,0(s0)
   1d7e4:	01d43423          	sd	t4,8(s0)
   1d7e8:	08f13023          	sd	a5,128(sp)
   1d7ec:	06a12c23          	sw	a0,120(sp)
   1d7f0:	fcaf5ae3          	ble	a0,t5,1d7c4 <_vfiprintf_r+0x8fc>
__sprint_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:413
       FILE *fp _AND
       register struct __suio *uio)
{
	register int err = 0;

	if (uio->uio_resid == 0) {
   1d7f4:	14079863          	bnez	a5,1d944 <_vfiprintf_r+0xa7c>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699
		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
			PAD (width - realsz, zeroes);

		/* leading zeroes from decimal precision */
		PAD (dprec - size, zeroes);
   1d7f8:	ff04849b          	addiw	s1,s1,-16
__sprint_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:414
       register struct __suio *uio)
{
	register int err = 0;

	if (uio->uio_resid == 0) {
		uio->uio_iovcnt = 0;
   1d7fc:	00100593          	li	a1,1
   1d800:	00000613          	li	a2,0
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699
		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
			PAD (width - realsz, zeroes);

		/* leading zeroes from decimal precision */
		PAD (dprec - size, zeroes);
   1d804:	000c8413          	mv	s0,s9
   1d808:	fc9fc8e3          	blt	t6,s1,1d7d8 <_vfiprintf_r+0x910>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 7)
   1d80c:	009787b3          	add	a5,a5,s1
   1d810:	01b43023          	sd	s11,0(s0)
   1d814:	00943423          	sd	s1,8(s0)
   1d818:	08f13023          	sd	a5,128(sp)
   1d81c:	06b12c23          	sw	a1,120(sp)
   1d820:	00700613          	li	a2,7
   1d824:	24b64063          	blt	a2,a1,1da64 <_vfiprintf_r+0xb9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699
   1d828:	01040413          	addi	s0,s0,16
   1d82c:	0015859b          	addiw	a1,a1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1765
					PRINT (cp, 1);
				PRINT (expstr, expsize);
			}
		}
#else /* !FLOATING_POINT */
		PRINT (cp, size);
   1d830:	00fa07b3          	add	a5,s4,a5
   1d834:	01743023          	sd	s7,0(s0)
   1d838:	01443423          	sd	s4,8(s0)
   1d83c:	08f13023          	sd	a5,128(sp)
   1d840:	06b12c23          	sw	a1,120(sp)
   1d844:	00700713          	li	a4,7
   1d848:	b0b74ae3          	blt	a4,a1,1d35c <_vfiprintf_r+0x494>
   1d84c:	01040413          	addi	s0,s0,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1768
#endif
		/* left-adjusting padding (always blank) */
		if (flags & LADJUST)
   1d850:	00437313          	andi	t1,t1,4
   1d854:	0a030863          	beqz	t1,1d904 <_vfiprintf_r+0xa3c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769
			PAD (width - realsz, blanks);
   1d858:	413904bb          	subw	s1,s2,s3
   1d85c:	0a905463          	blez	s1,1d904 <_vfiprintf_r+0xa3c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 5)
   1d860:	01000713          	li	a4,16
   1d864:	62975863          	ble	s1,a4,1de94 <_vfiprintf_r+0xfcc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769
   1d868:	01000a13          	li	s4,16
   1d86c:	07812603          	lw	a2,120(sp)
   1d870:	05813823          	sd	s8,80(sp)
   1d874:	00700d93          	li	s11,7
   1d878:	000a0b93          	mv	s7,s4
   1d87c:	0180006f          	j	1d894 <_vfiprintf_r+0x9cc>
   1d880:	0026059b          	addiw	a1,a2,2
   1d884:	01040413          	addi	s0,s0,16
   1d888:	00070613          	mv	a2,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 4)
   1d88c:	ff04849b          	addiw	s1,s1,-16
   1d890:	029bdc63          	ble	s1,s7,1d8c8 <_vfiprintf_r+0xa00>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 6)
   1d894:	01078793          	addi	a5,a5,16
   1d898:	0016071b          	addiw	a4,a2,1
   1d89c:	01843023          	sd	s8,0(s0)
   1d8a0:	01443423          	sd	s4,8(s0)
   1d8a4:	08f13023          	sd	a5,128(sp)
   1d8a8:	06e12c23          	sw	a4,120(sp)
   1d8ac:	fceddae3          	ble	a4,s11,1d880 <_vfiprintf_r+0x9b8>
__sprint_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:413
       FILE *fp _AND
       register struct __suio *uio)
{
	register int err = 0;

	if (uio->uio_resid == 0) {
   1d8b0:	0c079e63          	bnez	a5,1d98c <_vfiprintf_r+0xac4>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769
#else /* !FLOATING_POINT */
		PRINT (cp, size);
#endif
		/* left-adjusting padding (always blank) */
		if (flags & LADJUST)
			PAD (width - realsz, blanks);
   1d8b4:	ff04849b          	addiw	s1,s1,-16
__sprint_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:414
       register struct __suio *uio)
{
	register int err = 0;

	if (uio->uio_resid == 0) {
		uio->uio_iovcnt = 0;
   1d8b8:	00100593          	li	a1,1
   1d8bc:	00000613          	li	a2,0
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769
#else /* !FLOATING_POINT */
		PRINT (cp, size);
#endif
		/* left-adjusting padding (always blank) */
		if (flags & LADJUST)
			PAD (width - realsz, blanks);
   1d8c0:	000c8413          	mv	s0,s9
   1d8c4:	fc9bc8e3          	blt	s7,s1,1d894 <_vfiprintf_r+0x9cc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 7)
   1d8c8:	05013703          	ld	a4,80(sp)
   1d8cc:	009787b3          	add	a5,a5,s1
   1d8d0:	00943423          	sd	s1,8(s0)
   1d8d4:	00e43023          	sd	a4,0(s0)
   1d8d8:	08f13023          	sd	a5,128(sp)
   1d8dc:	06b12c23          	sw	a1,120(sp)
   1d8e0:	00700713          	li	a4,7
   1d8e4:	02b75063          	ble	a1,a4,1d904 <_vfiprintf_r+0xa3c>
__sprint_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:413
       FILE *fp _AND
       register struct __suio *uio)
{
	register int err = 0;

	if (uio->uio_resid == 0) {
   1d8e8:	a80786e3          	beqz	a5,1d374 <_vfiprintf_r+0x4ac>
   1d8ec:	07010613          	addi	a2,sp,112
   1d8f0:	000d0593          	mv	a1,s10
   1d8f4:	000a8513          	mv	a0,s5
   1d8f8:	cccff0ef          	jal	1cdc4 <__sprint_r.part.0>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769
#else /* !FLOATING_POINT */
		PRINT (cp, size);
#endif
		/* left-adjusting padding (always blank) */
		if (flags & LADJUST)
			PAD (width - realsz, blanks);
   1d8fc:	02051a63          	bnez	a0,1d930 <_vfiprintf_r+0xa68>
   1d900:	08013783          	ld	a5,128(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1772

		/* finally, adjust ret */
		ret += width > realsz ? width : realsz;
   1d904:	01395463          	ble	s3,s2,1d90c <_vfiprintf_r+0xa44>
   1d908:	00098913          	mv	s2,s3
   1d90c:	05812703          	lw	a4,88(sp)
   1d910:	0127073b          	addw	a4,a4,s2
   1d914:	04e12c23          	sw	a4,88(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1774

		FLUSH ();	/* copy out the I/O vectors */
   1d918:	a60788e3          	beqz	a5,1d388 <_vfiprintf_r+0x4c0>
__sprint_r():
   1d91c:	07010613          	addi	a2,sp,112
   1d920:	000d0593          	mv	a1,s10
   1d924:	000a8513          	mv	a0,s5
   1d928:	c9cff0ef          	jal	1cdc4 <__sprint_r.part.0>
_vfiprintf_r():
   1d92c:	a4050ee3          	beqz	a0,1d388 <_vfiprintf_r+0x4c0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1789
	if (malloc_buf != NULL)
		_free_r (data, malloc_buf);
#ifndef STRING_ONLY
	_newlib_flockfile_end (fp);
#endif
	return (__sferror (fp) ? EOF : ret);
   1d930:	010d5783          	lhu	a5,16(s10)
   1d934:	0407f793          	andi	a5,a5,64
   1d938:	44079863          	bnez	a5,1dd88 <_vfiprintf_r+0xec0>
   1d93c:	05812503          	lw	a0,88(sp)
   1d940:	f94ff06f          	j	1d0d4 <_vfiprintf_r+0x20c>
__sprint_r():
   1d944:	07010613          	addi	a2,sp,112
   1d948:	000d0593          	mv	a1,s10
   1d94c:	000a8513          	mv	a0,s5
   1d950:	03f13c23          	sd	t6,56(sp)
   1d954:	03e13823          	sd	t5,48(sp)
   1d958:	03d13423          	sd	t4,40(sp)
   1d95c:	02613023          	sd	t1,32(sp)
   1d960:	c64ff0ef          	jal	1cdc4 <__sprint_r.part.0>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699
		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
			PAD (width - realsz, zeroes);

		/* leading zeroes from decimal precision */
		PAD (dprec - size, zeroes);
   1d964:	fc0516e3          	bnez	a0,1d930 <_vfiprintf_r+0xa68>
   1d968:	07812603          	lw	a2,120(sp)
   1d96c:	08013783          	ld	a5,128(sp)
   1d970:	000c8413          	mv	s0,s9
   1d974:	0016059b          	addiw	a1,a2,1
   1d978:	03813f83          	ld	t6,56(sp)
   1d97c:	03013f03          	ld	t5,48(sp)
   1d980:	02813e83          	ld	t4,40(sp)
   1d984:	02013303          	ld	t1,32(sp)
   1d988:	e49ff06f          	j	1d7d0 <_vfiprintf_r+0x908>
__sprint_r():
   1d98c:	07010613          	addi	a2,sp,112
   1d990:	000d0593          	mv	a1,s10
   1d994:	000a8513          	mv	a0,s5
   1d998:	c2cff0ef          	jal	1cdc4 <__sprint_r.part.0>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769
#else /* !FLOATING_POINT */
		PRINT (cp, size);
#endif
		/* left-adjusting padding (always blank) */
		if (flags & LADJUST)
			PAD (width - realsz, blanks);
   1d99c:	f8051ae3          	bnez	a0,1d930 <_vfiprintf_r+0xa68>
   1d9a0:	07812603          	lw	a2,120(sp)
   1d9a4:	08013783          	ld	a5,128(sp)
   1d9a8:	000c8413          	mv	s0,s9
   1d9ac:	0016059b          	addiw	a1,a2,1
   1d9b0:	eddff06f          	j	1d88c <_vfiprintf_r+0x9c4>
__sprint_r():
   1d9b4:	07010613          	addi	a2,sp,112
   1d9b8:	000d0593          	mv	a1,s10
   1d9bc:	000a8513          	mv	a0,s5
   1d9c0:	04513023          	sd	t0,64(sp)
   1d9c4:	03f13c23          	sd	t6,56(sp)
   1d9c8:	03e13823          	sd	t5,48(sp)
   1d9cc:	03d13423          	sd	t4,40(sp)
   1d9d0:	02613023          	sd	t1,32(sp)
   1d9d4:	bf0ff0ef          	jal	1cdc4 <__sprint_r.part.0>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
		if (flags & HEXPREFIX)
			PRINT (ox, 2);

		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
			PAD (width - realsz, zeroes);
   1d9d8:	f4051ce3          	bnez	a0,1d930 <_vfiprintf_r+0xa68>
   1d9dc:	07812603          	lw	a2,120(sp)
   1d9e0:	08013783          	ld	a5,128(sp)
   1d9e4:	000c8413          	mv	s0,s9
   1d9e8:	0016051b          	addiw	a0,a2,1
   1d9ec:	04013283          	ld	t0,64(sp)
   1d9f0:	03813f83          	ld	t6,56(sp)
   1d9f4:	03013f03          	ld	t5,48(sp)
   1d9f8:	02813e83          	ld	t4,40(sp)
   1d9fc:	02013303          	ld	t1,32(sp)
   1da00:	8d5ff06f          	j	1d2d4 <_vfiprintf_r+0x40c>
__sprint_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:413
       FILE *fp _AND
       register struct __suio *uio)
{
	register int err = 0;

	if (uio->uio_resid == 0) {
   1da04:	34079263          	bnez	a5,1dd48 <_vfiprintf_r+0xe80>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1689
		/* right-adjusting blank padding */
		if ((flags & (LADJUST|ZEROPAD)) == 0)
			PAD (width - realsz, blanks);

		/* prefix */
		if (sign)
   1da08:	06714603          	lbu	a2,103(sp)
   1da0c:	02060663          	beqz	a2,1da38 <_vfiprintf_r+0xb70>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1690
			PRINT (&sign, 1);
   1da10:	00100793          	li	a5,1
   1da14:	06710613          	addi	a2,sp,103
   1da18:	0ac13823          	sd	a2,176(sp)
   1da1c:	0af13c23          	sd	a5,184(sp)
   1da20:	00078593          	mv	a1,a5
   1da24:	000c8413          	mv	s0,s9
   1da28:	00058613          	mv	a2,a1
   1da2c:	01040413          	addi	s0,s0,16
   1da30:	0015859b          	addiw	a1,a1,1
   1da34:	82dff06f          	j	1d260 <_vfiprintf_r+0x398>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1691
		if (flags & HEXPREFIX)
   1da38:	36038063          	beqz	t2,1dd98 <_vfiprintf_r+0xed0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1692
			PRINT (ox, 2);
   1da3c:	00200793          	li	a5,2
   1da40:	06810613          	addi	a2,sp,104
   1da44:	0ac13823          	sd	a2,176(sp)
   1da48:	0af13c23          	sd	a5,184(sp)
   1da4c:	00100593          	li	a1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
		if (flags & HEXPREFIX)
			realsz+= 2;

		/* right-adjusting blank padding */
		if ((flags & (LADJUST|ZEROPAD)) == 0)
			PAD (width - realsz, blanks);
   1da50:	000c8413          	mv	s0,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1692

		/* prefix */
		if (sign)
			PRINT (&sign, 1);
		if (flags & HEXPREFIX)
			PRINT (ox, 2);
   1da54:	00058613          	mv	a2,a1
   1da58:	01040413          	addi	s0,s0,16
   1da5c:	0015859b          	addiw	a1,a1,1
   1da60:	d2dff06f          	j	1d78c <_vfiprintf_r+0x8c4>
__sprint_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:413
       FILE *fp _AND
       register struct __suio *uio)
{
	register int err = 0;

	if (uio->uio_resid == 0) {
   1da64:	1c079263          	bnez	a5,1dc28 <_vfiprintf_r+0xd60>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1765
					PRINT (cp, 1);
				PRINT (expstr, expsize);
			}
		}
#else /* !FLOATING_POINT */
		PRINT (cp, size);
   1da68:	00100713          	li	a4,1
   1da6c:	000a0793          	mv	a5,s4
   1da70:	0b713823          	sd	s7,176(sp)
   1da74:	0b413c23          	sd	s4,184(sp)
   1da78:	09413023          	sd	s4,128(sp)
   1da7c:	06e12c23          	sw	a4,120(sp)
   1da80:	000c8413          	mv	s0,s9
   1da84:	dc9ff06f          	j	1d84c <_vfiprintf_r+0x984>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1da88:	060103a3          	sb	zero,103(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1da8c:	1e04c063          	bltz	s1,1dc6c <_vfiprintf_r+0xda4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   1da90:	f7f37313          	andi	t1,t1,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1da94:	ee078663          	beqz	a5,1d180 <_vfiprintf_r+0x2b8>
   1da98:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572 (discriminator 1)
   1da9c:	000c8b93          	mv	s7,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1626
					} while (_uquad != 0);
					break;

				case HEX:
					do {
						*--cp = xdigs[_uquad & 15];
   1daa0:	01813703          	ld	a4,24(sp)
   1daa4:	00f7f613          	andi	a2,a5,15
   1daa8:	fffb8b93          	addi	s7,s7,-1
   1daac:	00c70633          	add	a2,a4,a2
   1dab0:	00064603          	lbu	a2,0(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1627
						_uquad >>= 4;
   1dab4:	0047d793          	srli	a5,a5,0x4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1626
					} while (_uquad != 0);
					break;

				case HEX:
					do {
						*--cp = xdigs[_uquad & 15];
   1dab8:	00cb8023          	sb	a2,0(s7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1628
						_uquad >>= 4;
					} while (_uquad);
   1dabc:	fe0792e3          	bnez	a5,1daa0 <_vfiprintf_r+0xbd8>
   1dac0:	417c8a3b          	subw	s4,s9,s7
   1dac4:	ed0ff06f          	j	1d194 <_vfiprintf_r+0x2cc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1dac8:	00813783          	ld	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1dacc:	060103a3          	sb	zero,103(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1dad0:	00878713          	addi	a4,a5,8
   1dad4:	0007b783          	ld	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1dad8:	a204dee3          	bgez	s1,1d514 <_vfiprintf_r+0x64c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1dadc:	00e13423          	sd	a4,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1dae0:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1dae4:	920796e3          	bnez	a5,1d410 <_vfiprintf_r+0x548>
   1dae8:	00100793          	li	a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1578
				/*
				 * Unsigned mod is hard, and unsigned mod
				 * by a constant is easier than that by
				 * a variable; hence this switch.
				 */
				switch (base) {
   1daec:	00100713          	li	a4,1
   1daf0:	a2e78ce3          	beq	a5,a4,1d528 <_vfiprintf_r+0x660>
   1daf4:	00200713          	li	a4,2
   1daf8:	08e78e63          	beq	a5,a4,1db94 <_vfiprintf_r+0xccc>
   1dafc:	00000793          	li	a5,0
   1db00:	97dff06f          	j	1d47c <_vfiprintf_r+0x5b4>
__sprint_r():
   1db04:	07010613          	addi	a2,sp,112
   1db08:	000d0593          	mv	a1,s10
   1db0c:	000a8513          	mv	a0,s5
   1db10:	02613023          	sd	t1,32(sp)
   1db14:	ab0ff0ef          	jal	1cdc4 <__sprint_r.part.0>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1765
					PRINT (cp, 1);
				PRINT (expstr, expsize);
			}
		}
#else /* !FLOATING_POINT */
		PRINT (cp, size);
   1db18:	e0051ce3          	bnez	a0,1d930 <_vfiprintf_r+0xa68>
   1db1c:	08013783          	ld	a5,128(sp)
   1db20:	000c8413          	mv	s0,s9
   1db24:	02013303          	ld	t1,32(sp)
   1db28:	d29ff06f          	j	1d850 <_vfiprintf_r+0x988>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199 (discriminator 2)
		case 'D':  /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'd':
		case 'i':
			_uquad = SARG ();
   1db2c:	04037793          	andi	a5,t1,64
   1db30:	00813703          	ld	a4,8(sp)
   1db34:	20078263          	beqz	a5,1dd38 <_vfiprintf_r+0xe70>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199 (discriminator 4)
   1db38:	00071783          	lh	a5,0(a4)
   1db3c:	00870713          	addi	a4,a4,8
   1db40:	00e13423          	sd	a4,8(sp)
   1db44:	8b9ff06f          	j	1d3fc <_vfiprintf_r+0x534>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411 (discriminator 2)
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   1db48:	04037793          	andi	a5,t1,64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1db4c:	060103a3          	sb	zero,103(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   1db50:	18078263          	beqz	a5,1dcd4 <_vfiprintf_r+0xe0c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411 (discriminator 4)
   1db54:	00813783          	ld	a5,8(sp)
   1db58:	00878713          	addi	a4,a5,8
   1db5c:	0007d783          	lhu	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1db60:	9004d2e3          	bgez	s1,1d464 <_vfiprintf_r+0x59c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1db64:	00e13423          	sd	a4,8(sp)
   1db68:	00000593          	li	a1,0
   1db6c:	f80780e3          	beqz	a5,1daec <_vfiprintf_r+0xc24>
   1db70:	00000593          	li	a1,0
   1db74:	909ff06f          	j	1d47c <_vfiprintf_r+0x5b4>
__sprint_r():
   1db78:	07010613          	addi	a2,sp,112
   1db7c:	000d0593          	mv	a1,s10
   1db80:	000a8513          	mv	a0,s5
   1db84:	a40ff0ef          	jal	1cdc4 <__sprint_r.part.0>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:929
#else
                while (*fmt != '\0' && *fmt != '%')
                    fmt += 1;
#endif
		if ((m = fmt - cp) != 0) {
			PRINT (cp, m);
   1db88:	da0514e3          	bnez	a0,1d930 <_vfiprintf_r+0xa68>
   1db8c:	000c8413          	mv	s0,s9
   1db90:	c88ff06f          	j	1d018 <_vfiprintf_r+0x150>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1db94:	00000793          	li	a5,0
   1db98:	f05ff06f          	j	1da9c <_vfiprintf_r+0xbd4>
__sprint_r():
   1db9c:	07010613          	addi	a2,sp,112
   1dba0:	000d0593          	mv	a1,s10
   1dba4:	000a8513          	mv	a0,s5
   1dba8:	02513423          	sd	t0,40(sp)
   1dbac:	02613023          	sd	t1,32(sp)
   1dbb0:	a14ff0ef          	jal	1cdc4 <__sprint_r.part.0>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1692

		/* prefix */
		if (sign)
			PRINT (&sign, 1);
		if (flags & HEXPREFIX)
			PRINT (ox, 2);
   1dbb4:	d6051ee3          	bnez	a0,1d930 <_vfiprintf_r+0xa68>
   1dbb8:	07812603          	lw	a2,120(sp)
   1dbbc:	08013783          	ld	a5,128(sp)
   1dbc0:	000c8413          	mv	s0,s9
   1dbc4:	0016059b          	addiw	a1,a2,1
   1dbc8:	02813283          	ld	t0,40(sp)
   1dbcc:	02013303          	ld	t1,32(sp)
   1dbd0:	bbdff06f          	j	1d78c <_vfiprintf_r+0x8c4>
__sprint_r():
   1dbd4:	07010613          	addi	a2,sp,112
   1dbd8:	000d0593          	mv	a1,s10
   1dbdc:	000a8513          	mv	a0,s5
   1dbe0:	02513823          	sd	t0,48(sp)
   1dbe4:	02713423          	sd	t2,40(sp)
   1dbe8:	02613023          	sd	t1,32(sp)
   1dbec:	9d8ff0ef          	jal	1cdc4 <__sprint_r.part.0>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1690
		if ((flags & (LADJUST|ZEROPAD)) == 0)
			PAD (width - realsz, blanks);

		/* prefix */
		if (sign)
			PRINT (&sign, 1);
   1dbf0:	d40510e3          	bnez	a0,1d930 <_vfiprintf_r+0xa68>
   1dbf4:	07812603          	lw	a2,120(sp)
   1dbf8:	08013783          	ld	a5,128(sp)
   1dbfc:	000c8413          	mv	s0,s9
   1dc00:	0016059b          	addiw	a1,a2,1
   1dc04:	03013283          	ld	t0,48(sp)
   1dc08:	02813383          	ld	t2,40(sp)
   1dc0c:	02013303          	ld	t1,32(sp)
   1dc10:	e50ff06f          	j	1d260 <_vfiprintf_r+0x398>
__sprint_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:413
       FILE *fp _AND
       register struct __suio *uio)
{
	register int err = 0;

	if (uio->uio_resid == 0) {
   1dc14:	1e079063          	bnez	a5,1ddf4 <_vfiprintf_r+0xf2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:414
		uio->uio_iovcnt = 0;
   1dc18:	00100593          	li	a1,1
   1dc1c:	00000613          	li	a2,0
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
		if (flags & HEXPREFIX)
			PRINT (ox, 2);

		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
			PAD (width - realsz, zeroes);
   1dc20:	000c8413          	mv	s0,s9
   1dc24:	b71ff06f          	j	1d794 <_vfiprintf_r+0x8cc>
__sprint_r():
   1dc28:	07010613          	addi	a2,sp,112
   1dc2c:	000d0593          	mv	a1,s10
   1dc30:	000a8513          	mv	a0,s5
   1dc34:	02613023          	sd	t1,32(sp)
   1dc38:	98cff0ef          	jal	1cdc4 <__sprint_r.part.0>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699

		/* leading zeroes from decimal precision */
		PAD (dprec - size, zeroes);
   1dc3c:	ce051ae3          	bnez	a0,1d930 <_vfiprintf_r+0xa68>
   1dc40:	07812583          	lw	a1,120(sp)
   1dc44:	08013783          	ld	a5,128(sp)
   1dc48:	000c8413          	mv	s0,s9
   1dc4c:	0015859b          	addiw	a1,a1,1
   1dc50:	02013303          	ld	t1,32(sp)
   1dc54:	eecff06f          	j	1d340 <_vfiprintf_r+0x478>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1426
			 * of printable characters, in an implementation-
			 * defined manner.''
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
   1dc58:	00e13423          	sd	a4,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			base = HEX;
			xdigs = "0123456789abcdef";
   1dc5c:	00022737          	lui	a4,0x22
   1dc60:	bd070713          	addi	a4,a4,-1072 # 21bd0 <zeroes.4123+0x6e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1429
			flags |= HEXPREFIX;
   1dc64:	00060313          	mv	t1,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
   1dc68:	00e13c23          	sd	a4,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1dc6c:	e20796e3          	bnez	a5,1da98 <_vfiprintf_r+0xbd0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1dc70:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1545
			xdigs = "0123456789ABCDEF";
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
hex:			_uquad = UARG ();
			base = HEX;
   1dc74:	00200793          	li	a5,2
   1dc78:	e75ff06f          	j	1daec <_vfiprintf_r+0xc24>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1548
			/* leading 0x/X only if non-zero */
			if (flags & ALT && _uquad != 0) {
				ox[0] = '0';
   1dc7c:	03000613          	li	a2,48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1549
				ox[1] = ch;
   1dc80:	06e104a3          	sb	a4,105(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1548
			xdigs = "0123456789abcdef";
hex:			_uquad = UARG ();
			base = HEX;
			/* leading 0x/X only if non-zero */
			if (flags & ALT && _uquad != 0) {
				ox[0] = '0';
   1dc84:	06c10423          	sb	a2,104(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1dc88:	060103a3          	sb	zero,103(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1550
			base = HEX;
			/* leading 0x/X only if non-zero */
			if (flags & ALT && _uquad != 0) {
				ox[0] = '0';
				ox[1] = ch;
				flags |= HEXPREFIX;
   1dc8c:	00236713          	ori	a4,t1,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1dc90:	1a04c463          	bltz	s1,1de38 <_vfiprintf_r+0xf70>
   1dc94:	f7f37313          	andi	t1,t1,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   1dc98:	00236313          	ori	t1,t1,2
   1dc9c:	00000593          	li	a1,0
   1dca0:	dfdff06f          	j	1da9c <_vfiprintf_r+0xbd4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
   1dca4:	00022737          	lui	a4,0x22
   1dca8:	bd070713          	addi	a4,a4,-1072 # 21bd0 <zeroes.4123+0x6e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1dcac:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
   1dcb0:	00e13c23          	sd	a4,24(sp)
   1dcb4:	de9ff06f          	j	1da9c <_vfiprintf_r+0xbd4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:925
                    else if (wc == '%')
                        break;
                    fmt += n;
		}
#else
                while (*fmt != '\0' && *fmt != '%')
   1dcb8:	000b0493          	mv	s1,s6
   1dcbc:	b68ff06f          	j	1d024 <_vfiprintf_r+0x15c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536 (discriminator 5)
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1dcc0:	00813783          	ld	a5,8(sp)
   1dcc4:	00878713          	addi	a4,a5,8
   1dcc8:	0007e783          	lwu	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1dccc:	8404d4e3          	bgez	s1,1d514 <_vfiprintf_r+0x64c>
   1dcd0:	e0dff06f          	j	1dadc <_vfiprintf_r+0xc14>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   1dcd4:	00813783          	ld	a5,8(sp)
   1dcd8:	00878713          	addi	a4,a5,8
   1dcdc:	0007e783          	lwu	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1dce0:	f804d263          	bgez	s1,1d464 <_vfiprintf_r+0x59c>
   1dce4:	e81ff06f          	j	1db64 <_vfiprintf_r+0xc9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1208
			if ((long) _uquad < 0)
#endif
			{

				_uquad = -_uquad;
				sign = '-';
   1dce8:	02d00713          	li	a4,45
   1dcec:	06e103a3          	sb	a4,103(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1207
#else
			if ((long) _uquad < 0)
#endif
			{

				_uquad = -_uquad;
   1dcf0:	40f007b3          	neg	a5,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1dcf4:	1804c863          	bltz	s1,1de84 <_vfiprintf_r+0xfbc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   1dcf8:	f7f37313          	andi	t1,t1,-129
   1dcfc:	02d00593          	li	a1,45
   1dd00:	f10ff06f          	j	1d410 <_vfiprintf_r+0x548>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544 (discriminator 5)
		case 'X':
			xdigs = "0123456789ABCDEF";
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
hex:			_uquad = UARG ();
   1dd04:	0006e783          	lwu	a5,0(a3)
   1dd08:	00868693          	addi	a3,a3,8
   1dd0c:	00d13423          	sd	a3,8(sp)
   1dd10:	905ff06f          	j	1d614 <_vfiprintf_r+0x74c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1399
			else
#endif
			if (flags & LONGINT)
				*GET_ARG (N, ap, long_ptr_t) = ret;
			else if (flags & SHORTINT)
				*GET_ARG (N, ap, short_ptr_t) = ret;
   1dd14:	00813703          	ld	a4,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1398
				*GET_ARG (N, ap, quad_ptr_t) = ret;
			else
#endif
			if (flags & LONGINT)
				*GET_ARG (N, ap, long_ptr_t) = ret;
			else if (flags & SHORTINT)
   1dd18:	04037313          	andi	t1,t1,64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1399
				*GET_ARG (N, ap, short_ptr_t) = ret;
   1dd1c:	00073783          	ld	a5,0(a4)
   1dd20:	00870713          	addi	a4,a4,8
   1dd24:	00e13423          	sd	a4,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1398
				*GET_ARG (N, ap, quad_ptr_t) = ret;
			else
#endif
			if (flags & LONGINT)
				*GET_ARG (N, ap, long_ptr_t) = ret;
			else if (flags & SHORTINT)
   1dd28:	08030063          	beqz	t1,1dda8 <_vfiprintf_r+0xee0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1399
				*GET_ARG (N, ap, short_ptr_t) = ret;
   1dd2c:	05815703          	lhu	a4,88(sp)
   1dd30:	00e79023          	sh	a4,0(a5)
   1dd34:	a84ff06f          	j	1cfb8 <_vfiprintf_r+0xf0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199 (discriminator 5)
		case 'D':  /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'd':
		case 'i':
			_uquad = SARG ();
   1dd38:	00072783          	lw	a5,0(a4)
   1dd3c:	00870713          	addi	a4,a4,8
   1dd40:	00e13423          	sd	a4,8(sp)
   1dd44:	eb8ff06f          	j	1d3fc <_vfiprintf_r+0x534>
__sprint_r():
   1dd48:	07010613          	addi	a2,sp,112
   1dd4c:	000d0593          	mv	a1,s10
   1dd50:	000a8513          	mv	a0,s5
   1dd54:	02513823          	sd	t0,48(sp)
   1dd58:	02713423          	sd	t2,40(sp)
   1dd5c:	02613023          	sd	t1,32(sp)
   1dd60:	864ff0ef          	jal	1cdc4 <__sprint_r.part.0>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
		if (flags & HEXPREFIX)
			realsz+= 2;

		/* right-adjusting blank padding */
		if ((flags & (LADJUST|ZEROPAD)) == 0)
			PAD (width - realsz, blanks);
   1dd64:	bc0516e3          	bnez	a0,1d930 <_vfiprintf_r+0xa68>
   1dd68:	07812603          	lw	a2,120(sp)
   1dd6c:	08013783          	ld	a5,128(sp)
   1dd70:	000c8413          	mv	s0,s9
   1dd74:	0016059b          	addiw	a1,a2,1
   1dd78:	03013283          	ld	t0,48(sp)
   1dd7c:	02813383          	ld	t2,40(sp)
   1dd80:	02013303          	ld	t1,32(sp)
   1dd84:	9c9ff06f          	j	1d74c <_vfiprintf_r+0x884>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:867
	ORIENT(fp, -1);

	/* sorry, fprintf(read_only_file, "") returns EOF, not 0 */
	if (cantwrite (data, fp)) {
		_newlib_flockfile_exit (fp);
		return (EOF);
   1dd88:	fff00513          	li	a0,-1
   1dd8c:	b48ff06f          	j	1d0d4 <_vfiprintf_r+0x20c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1765
					PRINT (cp, 1);
				PRINT (expstr, expsize);
			}
		}
#else /* !FLOATING_POINT */
		PRINT (cp, size);
   1dd90:	000c8413          	mv	s0,s9
   1dd94:	acdff06f          	j	1d860 <_vfiprintf_r+0x998>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1691
			PAD (width - realsz, blanks);

		/* prefix */
		if (sign)
			PRINT (&sign, 1);
		if (flags & HEXPREFIX)
   1dd98:	00000613          	li	a2,0
   1dd9c:	00100593          	li	a1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
		if (flags & HEXPREFIX)
			realsz+= 2;

		/* right-adjusting blank padding */
		if ((flags & (LADJUST|ZEROPAD)) == 0)
			PAD (width - realsz, blanks);
   1dda0:	000c8413          	mv	s0,s9
   1dda4:	9e9ff06f          	j	1d78c <_vfiprintf_r+0x8c4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1405
#ifdef _WANT_IO_C99_FORMATS
			else if (flags & CHARINT)
				*GET_ARG (N, ap, char_ptr_t) = ret;
#endif
			else
				*GET_ARG (N, ap, int_ptr_t) = ret;
   1dda8:	05812703          	lw	a4,88(sp)
   1ddac:	00e7a023          	sw	a4,0(a5)
   1ddb0:	a08ff06f          	j	1cfb8 <_vfiprintf_r+0xf0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1782
			_free_r (data, malloc_buf);
			malloc_buf = NULL;
		}
	}
done:
	FLUSH ();
   1ddb4:	08013783          	ld	a5,128(sp)
   1ddb8:	b6078ce3          	beqz	a5,1d930 <_vfiprintf_r+0xa68>
__sprint_r():
   1ddbc:	07010613          	addi	a2,sp,112
   1ddc0:	000d0593          	mv	a1,s10
   1ddc4:	000a8513          	mv	a0,s5
   1ddc8:	ffdfe0ef          	jal	1cdc4 <__sprint_r.part.0>
_vfiprintf_r():
   1ddcc:	b65ff06f          	j	1d930 <_vfiprintf_r+0xa68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1529
				if (p != NULL)
					size = p - cp;
				else
					size = prec;
			} else
				size = strlen (cp);
   1ddd0:	000b8513          	mv	a0,s7
   1ddd4:	02613023          	sd	t1,32(sp)
   1ddd8:	b39f30ef          	jal	11910 <strlen>
   1dddc:	00050a1b          	sext.w	s4,a0
   1dde0:	06714583          	lbu	a1,103(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   1dde4:	01b13423          	sd	s11,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1dde8:	00000493          	li	s1,0
   1ddec:	02013303          	ld	t1,32(sp)
   1ddf0:	ba4ff06f          	j	1d194 <_vfiprintf_r+0x2cc>
__sprint_r():
   1ddf4:	07010613          	addi	a2,sp,112
   1ddf8:	000d0593          	mv	a1,s10
   1ddfc:	000a8513          	mv	a0,s5
   1de00:	02613023          	sd	t1,32(sp)
   1de04:	fc1fe0ef          	jal	1cdc4 <__sprint_r.part.0>
_vfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
		if (flags & HEXPREFIX)
			PRINT (ox, 2);

		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
			PAD (width - realsz, zeroes);
   1de08:	b20514e3          	bnez	a0,1d930 <_vfiprintf_r+0xa68>
   1de0c:	07812603          	lw	a2,120(sp)
   1de10:	08013783          	ld	a5,128(sp)
   1de14:	000c8413          	mv	s0,s9
   1de18:	0016059b          	addiw	a1,a2,1
   1de1c:	02013303          	ld	t1,32(sp)
   1de20:	975ff06f          	j	1d794 <_vfiprintf_r+0x8cc>
   1de24:	07812603          	lw	a2,120(sp)
   1de28:	08013783          	ld	a5,128(sp)
   1de2c:	05813823          	sd	s8,80(sp)
   1de30:	0016061b          	addiw	a2,a2,1
   1de34:	bfcff06f          	j	1d230 <_vfiprintf_r+0x368>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1de38:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1545
			xdigs = "0123456789ABCDEF";
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
hex:			_uquad = UARG ();
			base = HEX;
   1de3c:	00200613          	li	a2,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1578
				/*
				 * Unsigned mod is hard, and unsigned mod
				 * by a constant is easier than that by
				 * a variable; hence this switch.
				 */
				switch (base) {
   1de40:	00100513          	li	a0,1
   1de44:	08a60263          	beq	a2,a0,1dec8 <_vfiprintf_r+0x1000>
   1de48:	00200513          	li	a0,2
   1de4c:	08a61263          	bne	a2,a0,1ded0 <_vfiprintf_r+0x1008>
   1de50:	00070313          	mv	t1,a4
   1de54:	c49ff06f          	j	1da9c <_vfiprintf_r+0xbd4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1449
			   NULL string when precision is not 0.
			   However, if we are not optimizing for size,
			   we might as well mirror glibc behavior.  */
			if (cp == NULL) {
				cp = "(null)";
				size = ((unsigned) prec > 6U) ? 6 : prec;
   1de58:	00600793          	li	a5,6
   1de5c:	0097f463          	bleu	s1,a5,1de64 <_vfiprintf_r+0xf9c>
   1de60:	00078493          	mv	s1,a5
   1de64:	00048a13          	mv	s4,s1
   1de68:	00048993          	mv	s3,s1
   1de6c:	0604c663          	bltz	s1,1ded8 <_vfiprintf_r+0x1010>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1448
			/* Behavior is undefined if the user passed a
			   NULL string when precision is not 0.
			   However, if we are not optimizing for size,
			   we might as well mirror glibc behavior.  */
			if (cp == NULL) {
				cp = "(null)";
   1de70:	00022737          	lui	a4,0x22
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   1de74:	01b13423          	sd	s11,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1448
			/* Behavior is undefined if the user passed a
			   NULL string when precision is not 0.
			   However, if we are not optimizing for size,
			   we might as well mirror glibc behavior.  */
			if (cp == NULL) {
				cp = "(null)";
   1de78:	be870b93          	addi	s7,a4,-1048 # 21be8 <zeroes.4123+0x6f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1de7c:	00000493          	li	s1,0
   1de80:	b28ff06f          	j	1d1a8 <_vfiprintf_r+0x2e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1de84:	00030713          	mv	a4,t1
   1de88:	02d00593          	li	a1,45
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1210
			{

				_uquad = -_uquad;
				sign = '-';
			}
			base = DEC;
   1de8c:	00100613          	li	a2,1
   1de90:	fb1ff06f          	j	1de40 <_vfiprintf_r+0xf78>
   1de94:	07812583          	lw	a1,120(sp)
   1de98:	05813823          	sd	s8,80(sp)
   1de9c:	0015859b          	addiw	a1,a1,1
   1dea0:	a29ff06f          	j	1d8c8 <_vfiprintf_r+0xa00>
   1dea4:	00021737          	lui	a4,0x21
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
		if (flags & HEXPREFIX)
			PRINT (ox, 2);

		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
			PAD (width - realsz, zeroes);
   1dea8:	00058513          	mv	a0,a1
   1deac:	26870d93          	addi	s11,a4,616 # 21268 <zeroes.4137>
   1deb0:	c60ff06f          	j	1d310 <_vfiprintf_r+0x448>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1524
				 * NUL in the first `prec' characters, and
				 * strlen () will go further.
				 */
				char *p = memchr (cp, 0, prec);

				if (p != NULL)
   1deb4:	00048a13          	mv	s4,s1
   1deb8:	06714583          	lbu	a1,103(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   1debc:	01b13423          	sd	s11,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1dec0:	00000493          	li	s1,0
   1dec4:	ad0ff06f          	j	1d194 <_vfiprintf_r+0x2cc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1578
				/*
				 * Unsigned mod is hard, and unsigned mod
				 * by a constant is easier than that by
				 * a variable; hence this switch.
				 */
				switch (base) {
   1dec8:	00070313          	mv	t1,a4
   1decc:	d44ff06f          	j	1d410 <_vfiprintf_r+0x548>
   1ded0:	00070313          	mv	t1,a4
   1ded4:	da8ff06f          	j	1d47c <_vfiprintf_r+0x5b4>
   1ded8:	00000993          	li	s3,0
   1dedc:	f95ff06f          	j	1de70 <_vfiprintf_r+0xfa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1063
						fmt = old_fmt;
						goto rflag;
					}
				}
#endif /* !_NO_POS_ARGS */
				prec = GET_ARG (n, ap, int);
   1dee0:	00813783          	ld	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1033
			goto rflag;
		case '+':
			sign = '+';
			goto rflag;
		case '.':
			if ((ch = *fmt++) == '*') {
   1dee4:	00080b13          	mv	s6,a6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1063
						fmt = old_fmt;
						goto rflag;
					}
				}
#endif /* !_NO_POS_ARGS */
				prec = GET_ARG (n, ap, int);
   1dee8:	0007a483          	lw	s1,0(a5)
   1deec:	00878b93          	addi	s7,a5,8
   1def0:	01713423          	sd	s7,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1067
#ifndef _NO_POS_ARGS
				is_pos_arg = old_is_pos_arg;
#endif
				if (prec < 0)
   1def4:	9804de63          	bgez	s1,1d090 <_vfiprintf_r+0x1c8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1068
					prec = -1;
   1def8:	fff00493          	li	s1,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1018
			 * ``A negative field width argument is taken as a
			 * - flag followed by a positive field width.''
			 *	-- ANSI X3J11
			 * They don't exclude field widths read from args.
			 */
			width = GET_ARG (n, ap, int);
   1defc:	000b0813          	mv	a6,s6
   1df00:	954ff06f          	j	1d054 <_vfiprintf_r+0x18c>
   1df04:	07d103a3          	sb	t4,103(sp)
   1df08:	f44ff06f          	j	1d64c <_vfiprintf_r+0x784>
   1df0c:	07d103a3          	sb	t4,103(sp)
   1df10:	ee0ff06f          	j	1d5f0 <_vfiprintf_r+0x728>
   1df14:	07d103a3          	sb	t4,103(sp)
   1df18:	fb0ff06f          	j	1d6c8 <_vfiprintf_r+0x800>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1646
			*     -- ANSI X3J11
			*
			* To demonstrate this case, compile and run:
                        *    printf ("%#.0o",0);
			*/
                       else if (base == OCT && (flags & ALT))
   1df1c:	00137793          	andi	a5,t1,1
   1df20:	00078c63          	beqz	a5,1df38 <_vfiprintf_r+0x1070>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1647
                         *--cp = '0';
   1df24:	03000793          	li	a5,48
   1df28:	0af107a3          	sb	a5,175(sp)
   1df2c:	05c12a03          	lw	s4,92(sp)
   1df30:	0af10b93          	addi	s7,sp,175
   1df34:	a60ff06f          	j	1d194 <_vfiprintf_r+0x2cc>
   1df38:	00000a13          	li	s4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1571
			/*
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
   1df3c:	000c8b93          	mv	s7,s9
   1df40:	a54ff06f          	j	1d194 <_vfiprintf_r+0x2cc>
   1df44:	07d103a3          	sb	t4,103(sp)
   1df48:	cfcff06f          	j	1d444 <_vfiprintf_r+0x57c>
   1df4c:	07d103a3          	sb	t4,103(sp)
   1df50:	c90ff06f          	j	1d3e0 <_vfiprintf_r+0x518>
   1df54:	07d103a3          	sb	t4,103(sp)
   1df58:	d94ff06f          	j	1d4ec <_vfiprintf_r+0x624>
   1df5c:	07d103a3          	sb	t4,103(sp)
   1df60:	d64ff06f          	j	1d4c4 <_vfiprintf_r+0x5fc>

000000000001df64 <vfiprintf>:
vfiprintf():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:657
       FILE * fp         _AND
       _CONST char *fmt0 _AND
       va_list ap)
{
  int result;
  result = _VFPRINTF_R (_REENT, fp, fmt0, ap);
   1df64:	00060693          	mv	a3,a2
   1df68:	00058613          	mv	a2,a1
   1df6c:	00050593          	mv	a1,a0
   1df70:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
   1df74:	f55fe06f          	j	1cec8 <_vfiprintf_r>

000000000001df78 <__sbprintf>:
__sbprintf():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:470
	int ret;
	FILE fake;
	unsigned char buf[BUFSIZ];

	/* copy the important variables */
	fake._flags = fp->_flags & ~__SNBF;
   1df78:	0105d783          	lhu	a5,16(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:471
	fake._flags2 = fp->_flags2;
   1df7c:	0ac5ae03          	lw	t3,172(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:472
	fake._file = fp->_file;
   1df80:	0125d303          	lhu	t1,18(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:473
	fake._cookie = fp->_cookie;
   1df84:	0305b883          	ld	a7,48(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:474
	fake._write = fp->_write;
   1df88:	0405b803          	ld	a6,64(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:464
_DEFUN(__sbprintf, (rptr, fp, fmt, ap),
       struct _reent *rptr _AND
       register FILE *fp   _AND
       _CONST char *fmt  _AND
       va_list ap)
{
   1df8c:	b3010113          	addi	sp,sp,-1232
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:470
	int ret;
	FILE fake;
	unsigned char buf[BUFSIZ];

	/* copy the important variables */
	fake._flags = fp->_flags & ~__SNBF;
   1df90:	ffd7f793          	andi	a5,a5,-3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:478
	fake._cookie = fp->_cookie;
	fake._write = fp->_write;

	/* set up the buffer */
	fake._bf._base = fake._p = buf;
	fake._bf._size = fake._w = sizeof (buf);
   1df94:	40000713          	li	a4,1024
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:464
_DEFUN(__sbprintf, (rptr, fp, fmt, ap),
       struct _reent *rptr _AND
       register FILE *fp   _AND
       _CONST char *fmt  _AND
       va_list ap)
{
   1df98:	4c813023          	sd	s0,1216(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:470
	int ret;
	FILE fake;
	unsigned char buf[BUFSIZ];

	/* copy the important variables */
	fake._flags = fp->_flags & ~__SNBF;
   1df9c:	00f11823          	sh	a5,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:464
_DEFUN(__sbprintf, (rptr, fp, fmt, ap),
       struct _reent *rptr _AND
       register FILE *fp   _AND
       _CONST char *fmt  _AND
       va_list ap)
{
   1dfa0:	00058413          	mv	s0,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:477
	fake._file = fp->_file;
	fake._cookie = fp->_cookie;
	fake._write = fp->_write;

	/* set up the buffer */
	fake._bf._base = fake._p = buf;
   1dfa4:	0b010793          	addi	a5,sp,176
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:485
#ifndef __SINGLE_THREAD__
	__lock_init_recursive (fake._lock);
#endif

	/* do the work, then copy any error status */
	ret = _VFPRINTF_R (rptr, &fake, fmt, ap);
   1dfa8:	00010593          	mv	a1,sp
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:464
_DEFUN(__sbprintf, (rptr, fp, fmt, ap),
       struct _reent *rptr _AND
       register FILE *fp   _AND
       _CONST char *fmt  _AND
       va_list ap)
{
   1dfac:	4a913c23          	sd	s1,1208(sp)
   1dfb0:	4b213823          	sd	s2,1200(sp)
   1dfb4:	4c113423          	sd	ra,1224(sp)
   1dfb8:	00050913          	mv	s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:471
	FILE fake;
	unsigned char buf[BUFSIZ];

	/* copy the important variables */
	fake._flags = fp->_flags & ~__SNBF;
	fake._flags2 = fp->_flags2;
   1dfbc:	0bc12623          	sw	t3,172(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:472
	fake._file = fp->_file;
   1dfc0:	00611923          	sh	t1,18(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:473
	fake._cookie = fp->_cookie;
   1dfc4:	03113823          	sd	a7,48(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:474
	fake._write = fp->_write;
   1dfc8:	05013023          	sd	a6,64(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:477

	/* set up the buffer */
	fake._bf._base = fake._p = buf;
   1dfcc:	00f13023          	sd	a5,0(sp)
   1dfd0:	00f13c23          	sd	a5,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:478
	fake._bf._size = fake._w = sizeof (buf);
   1dfd4:	00e12623          	sw	a4,12(sp)
   1dfd8:	02e12023          	sw	a4,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:479
	fake._lbfsize = 0;	/* not actually used, but Just In Case */
   1dfdc:	02012423          	sw	zero,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:485
#ifndef __SINGLE_THREAD__
	__lock_init_recursive (fake._lock);
#endif

	/* do the work, then copy any error status */
	ret = _VFPRINTF_R (rptr, &fake, fmt, ap);
   1dfe0:	ee9fe0ef          	jal	1cec8 <_vfiprintf_r>
   1dfe4:	00050493          	mv	s1,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:486
	if (ret >= 0 && _fflush_r (rptr, &fake))
   1dfe8:	00054a63          	bltz	a0,1dffc <__sbprintf+0x84>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:486 (discriminator 1)
   1dfec:	00010593          	mv	a1,sp
   1dff0:	00090513          	mv	a0,s2
   1dff4:	bd0f80ef          	jal	163c4 <_fflush_r>
   1dff8:	02051c63          	bnez	a0,1e030 <__sbprintf+0xb8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:488
		ret = EOF;
	if (fake._flags & __SERR)
   1dffc:	01015783          	lhu	a5,16(sp)
   1e000:	0407f793          	andi	a5,a5,64
   1e004:	00078863          	beqz	a5,1e014 <__sbprintf+0x9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:489
		fp->_flags |= __SERR;
   1e008:	01045783          	lhu	a5,16(s0)
   1e00c:	0407e793          	ori	a5,a5,64
   1e010:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:495

#ifndef __SINGLE_THREAD__
	__lock_close_recursive (fake._lock);
#endif
	return (ret);
}
   1e014:	4c813083          	ld	ra,1224(sp)
   1e018:	00048513          	mv	a0,s1
   1e01c:	4c013403          	ld	s0,1216(sp)
   1e020:	4b813483          	ld	s1,1208(sp)
   1e024:	4b013903          	ld	s2,1200(sp)
   1e028:	4d010113          	addi	sp,sp,1232
   1e02c:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:487
#endif

	/* do the work, then copy any error status */
	ret = _VFPRINTF_R (rptr, &fake, fmt, ap);
	if (ret >= 0 && _fflush_r (rptr, &fake))
		ret = EOF;
   1e030:	fff00493          	li	s1,-1
   1e034:	fc9ff06f          	j	1dffc <__sbprintf+0x84>

000000000001e038 <_calloc_r>:
_calloc_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3207
  MALLOC_LOCK;
  oldtop = top;
  oldtopsize = chunksize(top);
#endif

  mem = mALLOc (RCALL sz);
   1e038:	02c585b3          	mul	a1,a1,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3188
#if __STD_C
Void_t* cALLOc(RARG size_t n, size_t elem_size)
#else
Void_t* cALLOc(RARG n, elem_size) RDECL size_t n; size_t elem_size;
#endif
{
   1e03c:	ff010113          	addi	sp,sp,-16
   1e040:	00113423          	sd	ra,8(sp)
   1e044:	00813023          	sd	s0,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3207
  MALLOC_LOCK;
  oldtop = top;
  oldtopsize = chunksize(top);
#endif

  mem = mALLOc (RCALL sz);
   1e048:	cc5f20ef          	jal	10d0c <_malloc_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3209

  if (mem == 0) 
   1e04c:	08050c63          	beqz	a0,1e0e4 <_calloc_r+0xac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3244
      csz = oldtopsize;
    }
    MALLOC_UNLOCK;
#endif

    MALLOC_ZERO(mem, csz - SIZE_SZ);
   1e050:	ff853603          	ld	a2,-8(a0)
   1e054:	04800713          	li	a4,72
   1e058:	00050413          	mv	s0,a0
   1e05c:	ffc67613          	andi	a2,a2,-4
   1e060:	ff860613          	addi	a2,a2,-8
   1e064:	04c76e63          	bltu	a4,a2,1e0c0 <_calloc_r+0x88>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3244 (discriminator 1)
   1e068:	02700693          	li	a3,39
   1e06c:	00050793          	mv	a5,a0
   1e070:	02c6f863          	bleu	a2,a3,1e0a0 <_calloc_r+0x68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3244 (discriminator 3)
   1e074:	00053023          	sd	zero,0(a0)
   1e078:	00053423          	sd	zero,8(a0)
   1e07c:	03700793          	li	a5,55
   1e080:	04c7fe63          	bleu	a2,a5,1e0dc <_calloc_r+0xa4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3244 (discriminator 5)
   1e084:	00053823          	sd	zero,16(a0)
   1e088:	00053c23          	sd	zero,24(a0)
   1e08c:	02050793          	addi	a5,a0,32
   1e090:	00e61863          	bne	a2,a4,1e0a0 <_calloc_r+0x68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3244 (discriminator 7)
   1e094:	02053023          	sd	zero,32(a0)
   1e098:	03050793          	addi	a5,a0,48
   1e09c:	02053423          	sd	zero,40(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3244 (discriminator 9)
   1e0a0:	0007b023          	sd	zero,0(a5)
   1e0a4:	0007b423          	sd	zero,8(a5)
   1e0a8:	0007b823          	sd	zero,16(a5)
   1e0ac:	00040513          	mv	a0,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3247
    return mem;
  }
}
   1e0b0:	00813083          	ld	ra,8(sp)
   1e0b4:	00013403          	ld	s0,0(sp)
   1e0b8:	01010113          	addi	sp,sp,16
   1e0bc:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3244 (discriminator 2)
      csz = oldtopsize;
    }
    MALLOC_UNLOCK;
#endif

    MALLOC_ZERO(mem, csz - SIZE_SZ);
   1e0c0:	00000593          	li	a1,0
   1e0c4:	aadf90ef          	jal	17b70 <memset>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3247
    return mem;
  }
}
   1e0c8:	00813083          	ld	ra,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3244
      csz = oldtopsize;
    }
    MALLOC_UNLOCK;
#endif

    MALLOC_ZERO(mem, csz - SIZE_SZ);
   1e0cc:	00040513          	mv	a0,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3247
    return mem;
  }
}
   1e0d0:	00013403          	ld	s0,0(sp)
   1e0d4:	01010113          	addi	sp,sp,16
   1e0d8:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3244
      csz = oldtopsize;
    }
    MALLOC_UNLOCK;
#endif

    MALLOC_ZERO(mem, csz - SIZE_SZ);
   1e0dc:	01050793          	addi	a5,a0,16
   1e0e0:	fc1ff06f          	j	1e0a0 <_calloc_r+0x68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/mallocr.c:3214
  if (mem == 0) 
  {
#if MORECORE_CLEARS
    MALLOC_UNLOCK;
#endif
    return 0;
   1e0e4:	00000513          	li	a0,0
   1e0e8:	fc9ff06f          	j	1e0b0 <_calloc_r+0x78>

000000000001e0ec <_fclose_r>:
_fclose_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:74
      struct _reent *rptr _AND
      register FILE * fp)
{
  int r;

  if (fp == NULL)
   1e0ec:	0e058e63          	beqz	a1,1e1e8 <_fclose_r+0xfc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:71

int
_DEFUN(_fclose_r, (rptr, fp),
      struct _reent *rptr _AND
      register FILE * fp)
{
   1e0f0:	fe010113          	addi	sp,sp,-32
   1e0f4:	00813823          	sd	s0,16(sp)
   1e0f8:	00913423          	sd	s1,8(sp)
   1e0fc:	00113c23          	sd	ra,24(sp)
   1e100:	01213023          	sd	s2,0(sp)
   1e104:	00050493          	mv	s1,a0
   1e108:	00058413          	mv	s0,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:77
  int r;

  if (fp == NULL)
    return (0);			/* on NULL */

  CHECK_INIT (rptr, fp);
   1e10c:	00050663          	beqz	a0,1e118 <_fclose_r+0x2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:77 (discriminator 1)
   1e110:	05052783          	lw	a5,80(a0)
   1e114:	0a078a63          	beqz	a5,1e1c8 <_fclose_r+0xdc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:87
  int __oldcancel;
  pthread_setcancelstate (PTHREAD_CANCEL_DISABLE, &__oldcancel);
#endif
  _flockfile (fp);

  if (fp->_flags == 0)		/* not open! */
   1e118:	01041783          	lh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:75
      register FILE * fp)
{
  int r;

  if (fp == NULL)
    return (0);			/* on NULL */
   1e11c:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:87
  int __oldcancel;
  pthread_setcancelstate (PTHREAD_CANCEL_DISABLE, &__oldcancel);
#endif
  _flockfile (fp);

  if (fp->_flags == 0)		/* not open! */
   1e120:	00079e63          	bnez	a5,1e13c <_fclose_r+0x50>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:125
#ifdef _STDIO_WITH_THREAD_CANCELLATION_SUPPORT
  pthread_setcancelstate (__oldcancel, &__oldcancel);
#endif

  return (r);
}
   1e124:	01813083          	ld	ra,24(sp)
   1e128:	01013403          	ld	s0,16(sp)
   1e12c:	00813483          	ld	s1,8(sp)
   1e130:	00013903          	ld	s2,0(sp)
   1e134:	02010113          	addi	sp,sp,32
   1e138:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:102
  r = (fp->_flags & __SWR) ? __sflush_r (rptr, fp) : 0;
#else
  /* Follow POSIX semantics exactly.  Unconditionally flush to allow
     special handling for seekable read files to reposition file to last
     byte processed as opposed to last byte read ahead into the buffer. */
  r = __sflush_r (rptr, fp);
   1e13c:	00040593          	mv	a1,s0
   1e140:	00048513          	mv	a0,s1
   1e144:	814f80ef          	jal	16158 <__sflush_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:104
#endif
  if (fp->_close != NULL && fp->_close (rptr, fp->_cookie) < 0)
   1e148:	05043783          	ld	a5,80(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:102
  r = (fp->_flags & __SWR) ? __sflush_r (rptr, fp) : 0;
#else
  /* Follow POSIX semantics exactly.  Unconditionally flush to allow
     special handling for seekable read files to reposition file to last
     byte processed as opposed to last byte read ahead into the buffer. */
  r = __sflush_r (rptr, fp);
   1e14c:	00050913          	mv	s2,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:104
#endif
  if (fp->_close != NULL && fp->_close (rptr, fp->_cookie) < 0)
   1e150:	00078a63          	beqz	a5,1e164 <_fclose_r+0x78>
   1e154:	03043583          	ld	a1,48(s0)
   1e158:	00048513          	mv	a0,s1
   1e15c:	000780e7          	jalr	a5
   1e160:	06054863          	bltz	a0,1e1d0 <_fclose_r+0xe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:106
    r = EOF;
  if (fp->_flags & __SMBF)
   1e164:	01045783          	lhu	a5,16(s0)
   1e168:	0807f793          	andi	a5,a5,128
   1e16c:	06079663          	bnez	a5,1e1d8 <_fclose_r+0xec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:108
    _free_r (rptr, (char *) fp->_bf._base);
  if (HASUB (fp))
   1e170:	05843583          	ld	a1,88(s0)
   1e174:	00058c63          	beqz	a1,1e18c <_fclose_r+0xa0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:109
    FREEUB (rptr, fp);
   1e178:	07440793          	addi	a5,s0,116
   1e17c:	00f58663          	beq	a1,a5,1e188 <_fclose_r+0x9c>
   1e180:	00048513          	mv	a0,s1
   1e184:	9b1f80ef          	jal	16b34 <_free_r>
   1e188:	04043c23          	sd	zero,88(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:110
  if (HASLB (fp))
   1e18c:	07843583          	ld	a1,120(s0)
   1e190:	00058863          	beqz	a1,1e1a0 <_fclose_r+0xb4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:111
    FREELB (rptr, fp);
   1e194:	00048513          	mv	a0,s1
   1e198:	99df80ef          	jal	16b34 <_free_r>
   1e19c:	06043c23          	sd	zero,120(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:112
  __sfp_lock_acquire ();
   1e1a0:	de0f80ef          	jal	16780 <__sfp_lock_acquire>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:113
  fp->_flags = 0;		/* release this FILE for reuse */
   1e1a4:	00041823          	sh	zero,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:119
  _funlockfile (fp);
#ifndef __SINGLE_THREAD__
  __lock_close_recursive (fp->_lock);
#endif

  __sfp_lock_release ();
   1e1a8:	ddcf80ef          	jal	16784 <__sfp_lock_release>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:125
#ifdef _STDIO_WITH_THREAD_CANCELLATION_SUPPORT
  pthread_setcancelstate (__oldcancel, &__oldcancel);
#endif

  return (r);
}
   1e1ac:	01813083          	ld	ra,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:119
  _funlockfile (fp);
#ifndef __SINGLE_THREAD__
  __lock_close_recursive (fp->_lock);
#endif

  __sfp_lock_release ();
   1e1b0:	00090513          	mv	a0,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:125
#ifdef _STDIO_WITH_THREAD_CANCELLATION_SUPPORT
  pthread_setcancelstate (__oldcancel, &__oldcancel);
#endif

  return (r);
}
   1e1b4:	01013403          	ld	s0,16(sp)
   1e1b8:	00813483          	ld	s1,8(sp)
   1e1bc:	00013903          	ld	s2,0(sp)
   1e1c0:	02010113          	addi	sp,sp,32
   1e1c4:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:77 (discriminator 2)
  int r;

  if (fp == NULL)
    return (0);			/* on NULL */

  CHECK_INIT (rptr, fp);
   1e1c8:	da8f80ef          	jal	16770 <__sinit>
   1e1cc:	f4dff06f          	j	1e118 <_fclose_r+0x2c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:105
     special handling for seekable read files to reposition file to last
     byte processed as opposed to last byte read ahead into the buffer. */
  r = __sflush_r (rptr, fp);
#endif
  if (fp->_close != NULL && fp->_close (rptr, fp->_cookie) < 0)
    r = EOF;
   1e1d0:	fff00913          	li	s2,-1
   1e1d4:	f91ff06f          	j	1e164 <_fclose_r+0x78>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:107
  if (fp->_flags & __SMBF)
    _free_r (rptr, (char *) fp->_bf._base);
   1e1d8:	01843583          	ld	a1,24(s0)
   1e1dc:	00048513          	mv	a0,s1
   1e1e0:	955f80ef          	jal	16b34 <_free_r>
   1e1e4:	f8dff06f          	j	1e170 <_fclose_r+0x84>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:75
      register FILE * fp)
{
  int r;

  if (fp == NULL)
    return (0);			/* on NULL */
   1e1e8:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:125
#ifdef _STDIO_WITH_THREAD_CANCELLATION_SUPPORT
  pthread_setcancelstate (__oldcancel, &__oldcancel);
#endif

  return (r);
}
   1e1ec:	00008067          	ret

000000000001e1f0 <fclose>:
fclose():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fclose.c:133

int
_DEFUN(fclose, (fp),
       register FILE * fp)
{
  return _fclose_r(_REENT, fp);
   1e1f0:	00050593          	mv	a1,a0
   1e1f4:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
   1e1f8:	ef5ff06f          	j	1e0ec <_fclose_r>

000000000001e1fc <__fputwc>:
__fputwc():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:190
wint_t
_DEFUN(__fputwc, (ptr, wc, fp),
	struct _reent *ptr _AND
	wchar_t wc _AND
	FILE *fp)
{
   1e1fc:	fb010113          	addi	sp,sp,-80
   1e200:	04813023          	sd	s0,64(sp)
   1e204:	03413023          	sd	s4,32(sp)
   1e208:	01513c23          	sd	s5,24(sp)
   1e20c:	04113423          	sd	ra,72(sp)
   1e210:	02913c23          	sd	s1,56(sp)
   1e214:	03213823          	sd	s2,48(sp)
   1e218:	03313423          	sd	s3,40(sp)
   1e21c:	01613823          	sd	s6,16(sp)
   1e220:	00050a93          	mv	s5,a0
   1e224:	00058a13          	mv	s4,a1
   1e228:	00060413          	mv	s0,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:194
  char buf[MB_LEN_MAX];
  size_t i, len;

  if (MB_CUR_MAX == 1 && wc > 0 && wc <= UCHAR_MAX)
   1e22c:	af0f90ef          	jal	1751c <__locale_mb_cur_max>
   1e230:	00100793          	li	a5,1
   1e234:	10f50663          	beq	a0,a5,1e340 <__fputwc+0x144>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:206
      *buf = (unsigned char)wc;
      len = 1;
    }
  else
    {
      if ((len = _wcrtomb_r (ptr, buf, wc, &fp->_mbstate)) == (size_t) -1)
   1e238:	00810493          	addi	s1,sp,8
   1e23c:	0a440693          	addi	a3,s0,164
   1e240:	000a0613          	mv	a2,s4
   1e244:	00048593          	mv	a1,s1
   1e248:	000a8513          	mv	a0,s5
   1e24c:	565010ef          	jal	1ffb0 <_wcrtomb_r>
   1e250:	fff00793          	li	a5,-1
   1e254:	00050993          	mv	s3,a0
   1e258:	08f50e63          	beq	a0,a5,1e2f4 <__fputwc+0xf8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:213
	  fp->_flags |= __SERR;
	  return WEOF;
	}
    }

  for (i = 0; i < len; i++)
   1e25c:	10050263          	beqz	a0,1e360 <__fputwc+0x164>
   1e260:	00814583          	lbu	a1,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:214
    if (__sputc_r (ptr, (unsigned char) buf[i], fp) == EOF)
   1e264:	00c42783          	lw	a5,12(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:202
       * Assume single-byte locale with no special encoding.
       * A more careful test would be to check
       * _CurrentRuneLocale->encoding.
       */
      *buf = (unsigned char)wc;
      len = 1;
   1e268:	00000913          	li	s2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:214
	  return WEOF;
	}
    }

  for (i = 0; i < len; i++)
    if (__sputc_r (ptr, (unsigned char) buf[i], fp) == EOF)
   1e26c:	00a00b13          	li	s6,10
   1e270:	fff7879b          	addiw	a5,a5,-1
   1e274:	00f42623          	sw	a5,12(s0)
   1e278:	0207cc63          	bltz	a5,1e2b0 <__fputwc+0xb4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:214 (discriminator 2)
   1e27c:	00043783          	ld	a5,0(s0)
   1e280:	00b78023          	sb	a1,0(a5)
   1e284:	00043783          	ld	a5,0(s0)
   1e288:	00178793          	addi	a5,a5,1
   1e28c:	00f43023          	sd	a5,0(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:213
	  fp->_flags |= __SERR;
	  return WEOF;
	}
    }

  for (i = 0; i < len; i++)
   1e290:	00190913          	addi	s2,s2,1
   1e294:	00148493          	addi	s1,s1,1
   1e298:	0d397463          	bleu	s3,s2,1e360 <__fputwc+0x164>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:214
    if (__sputc_r (ptr, (unsigned char) buf[i], fp) == EOF)
   1e29c:	00c42783          	lw	a5,12(s0)
   1e2a0:	0004c583          	lbu	a1,0(s1)
   1e2a4:	fff7879b          	addiw	a5,a5,-1
   1e2a8:	00f42623          	sw	a5,12(s0)
   1e2ac:	fc07d8e3          	bgez	a5,1e27c <__fputwc+0x80>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:214 (discriminator 1)
   1e2b0:	02842703          	lw	a4,40(s0)
   1e2b4:	06e7ca63          	blt	a5,a4,1e328 <__fputwc+0x12c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:214 (discriminator 3)
   1e2b8:	00043783          	ld	a5,0(s0)
   1e2bc:	00b78023          	sb	a1,0(a5)
   1e2c0:	00043783          	ld	a5,0(s0)
   1e2c4:	0007c703          	lbu	a4,0(a5)
   1e2c8:	00178793          	addi	a5,a5,1
   1e2cc:	fd6710e3          	bne	a4,s6,1e28c <__fputwc+0x90>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:214 (discriminator 6)
   1e2d0:	00040613          	mv	a2,s0
   1e2d4:	000b0593          	mv	a1,s6
   1e2d8:	000a8513          	mv	a0,s5
   1e2dc:	e08f60ef          	jal	148e4 <__swbuf_r>
   1e2e0:	0015051b          	addiw	a0,a0,1
   1e2e4:	00153513          	seqz	a0,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:214 (discriminator 12)
   1e2e8:	fa0504e3          	beqz	a0,1e290 <__fputwc+0x94>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:215
      return WEOF;
   1e2ec:	fff00513          	li	a0,-1
   1e2f0:	0100006f          	j	1e300 <__fputwc+0x104>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:208
    }
  else
    {
      if ((len = _wcrtomb_r (ptr, buf, wc, &fp->_mbstate)) == (size_t) -1)
	{
	  fp->_flags |= __SERR;
   1e2f4:	01045783          	lhu	a5,16(s0)
   1e2f8:	0407e793          	ori	a5,a5,64
   1e2fc:	00f41823          	sh	a5,16(s0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:218
  for (i = 0; i < len; i++)
    if (__sputc_r (ptr, (unsigned char) buf[i], fp) == EOF)
      return WEOF;

  return (wint_t) wc;
}
   1e300:	04813083          	ld	ra,72(sp)
   1e304:	04013403          	ld	s0,64(sp)
   1e308:	03813483          	ld	s1,56(sp)
   1e30c:	03013903          	ld	s2,48(sp)
   1e310:	02813983          	ld	s3,40(sp)
   1e314:	02013a03          	ld	s4,32(sp)
   1e318:	01813a83          	ld	s5,24(sp)
   1e31c:	01013b03          	ld	s6,16(sp)
   1e320:	05010113          	addi	sp,sp,80
   1e324:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:214 (discriminator 4)
	  return WEOF;
	}
    }

  for (i = 0; i < len; i++)
    if (__sputc_r (ptr, (unsigned char) buf[i], fp) == EOF)
   1e328:	00040613          	mv	a2,s0
   1e32c:	000a8513          	mv	a0,s5
   1e330:	db4f60ef          	jal	148e4 <__swbuf_r>
   1e334:	0015051b          	addiw	a0,a0,1
   1e338:	00153513          	seqz	a0,a0
   1e33c:	fadff06f          	j	1e2e8 <__fputwc+0xec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:194 (discriminator 1)
	FILE *fp)
{
  char buf[MB_LEN_MAX];
  size_t i, len;

  if (MB_CUR_MAX == 1 && wc > 0 && wc <= UCHAR_MAX)
   1e340:	fffa079b          	addiw	a5,s4,-1
   1e344:	0fe00713          	li	a4,254
   1e348:	eef768e3          	bltu	a4,a5,1e238 <__fputwc+0x3c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:201
      /*
       * Assume single-byte locale with no special encoding.
       * A more careful test would be to check
       * _CurrentRuneLocale->encoding.
       */
      *buf = (unsigned char)wc;
   1e34c:	0ffa7593          	andi	a1,s4,255
   1e350:	00b10423          	sb	a1,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:202
      len = 1;
   1e354:	00100993          	li	s3,1
   1e358:	00810493          	addi	s1,sp,8
   1e35c:	f09ff06f          	j	1e264 <__fputwc+0x68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:217

  for (i = 0; i < len; i++)
    if (__sputc_r (ptr, (unsigned char) buf[i], fp) == EOF)
      return WEOF;

  return (wint_t) wc;
   1e360:	000a0513          	mv	a0,s4
   1e364:	f9dff06f          	j	1e300 <__fputwc+0x104>

000000000001e368 <_fputwc_r>:
_fputwc_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:229
	FILE *fp)
{
  wint_t r;

  _newlib_flockfile_start (fp);
  ORIENT(fp, 1);
   1e368:	01061783          	lh	a5,16(a2)
   1e36c:	00002737          	lui	a4,0x2
   1e370:	03279693          	slli	a3,a5,0x32
   1e374:	0006cc63          	bltz	a3,1e38c <_fputwc_r+0x24>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:228 (discriminator 1)
	wchar_t wc _AND
	FILE *fp)
{
  wint_t r;

  _newlib_flockfile_start (fp);
   1e378:	0ac62683          	lw	a3,172(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:229
  ORIENT(fp, 1);
   1e37c:	00e7e7b3          	or	a5,a5,a4
   1e380:	00f61823          	sh	a5,16(a2)
   1e384:	00e6e733          	or	a4,a3,a4
   1e388:	0ae62623          	sw	a4,172(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:230
  r = __fputwc(ptr, wc, fp);
   1e38c:	e71ff06f          	j	1e1fc <__fputwc>

000000000001e390 <fputwc>:
fputwc():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:239

wint_t
_DEFUN(fputwc, (wc, fp),
	wchar_t wc _AND
	FILE *fp)
{
   1e390:	fd010113          	addi	sp,sp,-48
   1e394:	02813023          	sd	s0,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:240
  struct _reent *reent = _REENT;
   1e398:	8101b403          	ld	s0,-2032(gp) # 24450 <_impure_ptr>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:239

wint_t
_DEFUN(fputwc, (wc, fp),
	wchar_t wc _AND
	FILE *fp)
{
   1e39c:	00913c23          	sd	s1,24(sp)
   1e3a0:	02113423          	sd	ra,40(sp)
   1e3a4:	00050493          	mv	s1,a0
   1e3a8:	00058613          	mv	a2,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:242
  struct _reent *reent = _REENT;

  CHECK_INIT(reent, fp);
   1e3ac:	00040663          	beqz	s0,1e3b8 <fputwc+0x28>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:242 (discriminator 1)
   1e3b0:	05042783          	lw	a5,80(s0)
   1e3b4:	04078263          	beqz	a5,1e3f8 <fputwc+0x68>
_fputwc_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:229
	FILE *fp)
{
  wint_t r;

  _newlib_flockfile_start (fp);
  ORIENT(fp, 1);
   1e3b8:	01061783          	lh	a5,16(a2)
   1e3bc:	00002737          	lui	a4,0x2
   1e3c0:	03279693          	slli	a3,a5,0x32
   1e3c4:	0006cc63          	bltz	a3,1e3dc <fputwc+0x4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:228
	wchar_t wc _AND
	FILE *fp)
{
  wint_t r;

  _newlib_flockfile_start (fp);
   1e3c8:	0ac62683          	lw	a3,172(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:229
  ORIENT(fp, 1);
   1e3cc:	00e7e7b3          	or	a5,a5,a4
   1e3d0:	00f61823          	sh	a5,16(a2)
   1e3d4:	00e6e733          	or	a4,a3,a4
   1e3d8:	0ae62623          	sw	a4,172(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:230
  r = __fputwc(ptr, wc, fp);
   1e3dc:	00048593          	mv	a1,s1
   1e3e0:	00040513          	mv	a0,s0
fputwc():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:244
{
  struct _reent *reent = _REENT;

  CHECK_INIT(reent, fp);
  return _fputwc_r (reent, wc, fp);
}
   1e3e4:	02813083          	ld	ra,40(sp)
   1e3e8:	02013403          	ld	s0,32(sp)
   1e3ec:	01813483          	ld	s1,24(sp)
   1e3f0:	03010113          	addi	sp,sp,48
_fputwc_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:230
{
  wint_t r;

  _newlib_flockfile_start (fp);
  ORIENT(fp, 1);
  r = __fputwc(ptr, wc, fp);
   1e3f4:	e09ff06f          	j	1e1fc <__fputwc>
fputwc():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/fputwc.c:242 (discriminator 2)
	wchar_t wc _AND
	FILE *fp)
{
  struct _reent *reent = _REENT;

  CHECK_INIT(reent, fp);
   1e3f8:	00040513          	mv	a0,s0
   1e3fc:	00b13423          	sd	a1,8(sp)
   1e400:	b70f80ef          	jal	16770 <__sinit>
   1e404:	00813603          	ld	a2,8(sp)
   1e408:	fb1ff06f          	j	1e3b8 <fputwc+0x28>

000000000001e40c <rshift>:
rshift():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:82
	__ULong *x, *x1, *xe, y;
	int n;

	x = x1 = b->_x;
	n = k >> kshift;
	if (n < b->_wds) {
   1e40c:	01452703          	lw	a4,20(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:81
{
	__ULong *x, *x1, *xe, y;
	int n;

	x = x1 = b->_x;
	n = k >> kshift;
   1e410:	4055d69b          	sraiw	a3,a1,0x5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:80
	int k)
{
	__ULong *x, *x1, *xe, y;
	int n;

	x = x1 = b->_x;
   1e414:	01850893          	addi	a7,a0,24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:82
	n = k >> kshift;
	if (n < b->_wds) {
   1e418:	08e6d863          	ble	a4,a3,1e4a8 <rshift+0x9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:84
		xe = x + b->_wds;
		x += n;
   1e41c:	00068613          	mv	a2,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:83
	int n;

	x = x1 = b->_x;
	n = k >> kshift;
	if (n < b->_wds) {
		xe = x + b->_wds;
   1e420:	00271713          	slli	a4,a4,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:84
		x += n;
   1e424:	00261613          	slli	a2,a2,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:85
		if (k &= kmask) {
   1e428:	01f5f593          	andi	a1,a1,31
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:83
	int n;

	x = x1 = b->_x;
	n = k >> kshift;
	if (n < b->_wds) {
		xe = x + b->_wds;
   1e42c:	00e88733          	add	a4,a7,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:84
		x += n;
   1e430:	00c88633          	add	a2,a7,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:85
		if (k &= kmask) {
   1e434:	08058063          	beqz	a1,1e4b4 <rshift+0xa8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:87
			n = ULbits - k;
			y = *x++ >> k;
   1e438:	00062783          	lw	a5,0(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:86
	n = k >> kshift;
	if (n < b->_wds) {
		xe = x + b->_wds;
		x += n;
		if (k &= kmask) {
			n = ULbits - k;
   1e43c:	02000e13          	li	t3,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:87
			y = *x++ >> k;
   1e440:	00460693          	addi	a3,a2,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:86
	n = k >> kshift;
	if (n < b->_wds) {
		xe = x + b->_wds;
		x += n;
		if (k &= kmask) {
			n = ULbits - k;
   1e444:	40be0e3b          	subw	t3,t3,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:87
			y = *x++ >> k;
   1e448:	00b7d7bb          	srlw	a5,a5,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:88
			while(x < xe) {
   1e44c:	0ae6f663          	bleu	a4,a3,1e4f8 <rshift+0xec>
   1e450:	00088313          	mv	t1,a7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:89
				*x1++ = (y | (*x << n)) & ALL_ON;
   1e454:	0006a803          	lw	a6,0(a3)
   1e458:	00430313          	addi	t1,t1,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:90
				y = *x++ >> k;
   1e45c:	00468693          	addi	a3,a3,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:89
		x += n;
		if (k &= kmask) {
			n = ULbits - k;
			y = *x++ >> k;
			while(x < xe) {
				*x1++ = (y | (*x << n)) & ALL_ON;
   1e460:	01c8183b          	sllw	a6,a6,t3
   1e464:	00f867b3          	or	a5,a6,a5
   1e468:	fef32e23          	sw	a5,-4(t1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:90
				y = *x++ >> k;
   1e46c:	ffc6a783          	lw	a5,-4(a3)
   1e470:	00b7d7bb          	srlw	a5,a5,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:88
		xe = x + b->_wds;
		x += n;
		if (k &= kmask) {
			n = ULbits - k;
			y = *x++ >> k;
			while(x < xe) {
   1e474:	fee6e0e3          	bltu	a3,a4,1e454 <rshift+0x48>
   1e478:	40c70733          	sub	a4,a4,a2
   1e47c:	ffb70713          	addi	a4,a4,-5 # 1ffb <_ftext-0xe005>
   1e480:	ffc77713          	andi	a4,a4,-4
   1e484:	00470713          	addi	a4,a4,4
   1e488:	00e88733          	add	a4,a7,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:92
				*x1++ = (y | (*x << n)) & ALL_ON;
				y = *x++ >> k;
				}
			if ((*x1 = y) !=0)
   1e48c:	00f72023          	sw	a5,0(a4)
   1e490:	00078463          	beqz	a5,1e498 <rshift+0x8c>
   1e494:	00470713          	addi	a4,a4,4
   1e498:	411707b3          	sub	a5,a4,a7
   1e49c:	4027d793          	srai	a5,a5,0x2
   1e4a0:	0007879b          	sext.w	a5,a5
   1e4a4:	0480006f          	j	1e4ec <rshift+0xe0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:99
			}
		else
			while(x < xe)
				*x1++ = *x++;
		}
	if ((b->_wds = x1 - b->_x) == 0)
   1e4a8:	00052a23          	sw	zero,20(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:100
		b->_x[0] = 0;
   1e4ac:	00052c23          	sw	zero,24(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:101
}
   1e4b0:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:96
				}
			if ((*x1 = y) !=0)
				x1++;
			}
		else
			while(x < xe)
   1e4b4:	00088793          	mv	a5,a7
   1e4b8:	00060693          	mv	a3,a2
   1e4bc:	fee676e3          	bleu	a4,a2,1e4a8 <rshift+0x9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:97
				*x1++ = *x++;
   1e4c0:	00468693          	addi	a3,a3,4
   1e4c4:	ffc6a583          	lw	a1,-4(a3)
   1e4c8:	00478793          	addi	a5,a5,4
   1e4cc:	feb7ae23          	sw	a1,-4(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:96
				}
			if ((*x1 = y) !=0)
				x1++;
			}
		else
			while(x < xe)
   1e4d0:	fee6e8e3          	bltu	a3,a4,1e4c0 <rshift+0xb4>
   1e4d4:	fff64793          	not	a5,a2
   1e4d8:	00e787b3          	add	a5,a5,a4
   1e4dc:	ffc7f793          	andi	a5,a5,-4
   1e4e0:	00478793          	addi	a5,a5,4
   1e4e4:	4027d793          	srai	a5,a5,0x2
   1e4e8:	0007879b          	sext.w	a5,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:99
				*x1++ = *x++;
		}
	if ((b->_wds = x1 - b->_x) == 0)
   1e4ec:	00f52a23          	sw	a5,20(a0)
   1e4f0:	fa078ee3          	beqz	a5,1e4ac <rshift+0xa0>
   1e4f4:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:80
	int k)
{
	__ULong *x, *x1, *xe, y;
	int n;

	x = x1 = b->_x;
   1e4f8:	00088713          	mv	a4,a7
   1e4fc:	f91ff06f          	j	1e48c <rshift+0x80>

000000000001e500 <__gethex>:
__gethex():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:155
	_CONST char **sp _AND
	_CONST FPI *fpi _AND
	Long *exp _AND
	_Bigint **bp _AND
	int sign)
{
   1e500:	f4010113          	addi	sp,sp,-192
   1e504:	00d13c23          	sd	a3,24(sp)
   1e508:	00e13423          	sd	a4,8(sp)
   1e50c:	02f12223          	sw	a5,36(sp)
   1e510:	0a113c23          	sd	ra,184(sp)
   1e514:	0a913423          	sd	s1,168(sp)
   1e518:	0b213023          	sd	s2,160(sp)
   1e51c:	09313c23          	sd	s3,152(sp)
   1e520:	00058913          	mv	s2,a1
   1e524:	09413823          	sd	s4,144(sp)
   1e528:	07713c23          	sd	s7,120(sp)
   1e52c:	00060993          	mv	s3,a2
   1e530:	0a813823          	sd	s0,176(sp)
   1e534:	09513423          	sd	s5,136(sp)
   1e538:	09613023          	sd	s6,128(sp)
   1e53c:	07813823          	sd	s8,112(sp)
   1e540:	07913423          	sd	s9,104(sp)
   1e544:	07a13023          	sd	s10,96(sp)
   1e548:	05b13c23          	sd	s11,88(sp)
   1e54c:	00050a13          	mv	s4,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:162
	_CONST unsigned char *decpt, *s0, *s, *s1;
	int esign, havedig, irv, k, n, nbits, up, zret;
	__ULong L, lostbits, *x;
	Long e, e1;
	unsigned char *decimalpoint = (unsigned char *)
				      _localeconv_r (ptr)->decimal_point;
   1e550:	fe9f80ef          	jal	17538 <_localeconv_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:161
	_Bigint *b;
	_CONST unsigned char *decpt, *s0, *s, *s1;
	int esign, havedig, irv, k, n, nbits, up, zret;
	__ULong L, lostbits, *x;
	Long e, e1;
	unsigned char *decimalpoint = (unsigned char *)
   1e554:	00053483          	ld	s1,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:163
				      _localeconv_r (ptr)->decimal_point;
	size_t decp_len = strlen ((const char *) decimalpoint);
   1e558:	00048513          	mv	a0,s1
   1e55c:	bb4f30ef          	jal	11910 <strlen>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:167
	unsigned char decp_end = decimalpoint[decp_len - 1];

	havedig = 0;
	s0 = *(_CONST unsigned char **)sp + 2;
   1e560:	00093783          	ld	a5,0(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:164
	__ULong L, lostbits, *x;
	Long e, e1;
	unsigned char *decimalpoint = (unsigned char *)
				      _localeconv_r (ptr)->decimal_point;
	size_t decp_len = strlen ((const char *) decimalpoint);
	unsigned char decp_end = decimalpoint[decp_len - 1];
   1e564:	00a486b3          	add	a3,s1,a0
   1e568:	fff6c683          	lbu	a3,-1(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:168

	havedig = 0;
	s0 = *(_CONST unsigned char **)sp + 2;
	while(s0[havedig] == '0')
   1e56c:	0027c703          	lbu	a4,2(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:163
	int esign, havedig, irv, k, n, nbits, up, zret;
	__ULong L, lostbits, *x;
	Long e, e1;
	unsigned char *decimalpoint = (unsigned char *)
				      _localeconv_r (ptr)->decimal_point;
	size_t decp_len = strlen ((const char *) decimalpoint);
   1e570:	00050b93          	mv	s7,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:164
	unsigned char decp_end = decimalpoint[decp_len - 1];
   1e574:	00d13823          	sd	a3,16(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:168

	havedig = 0;
	s0 = *(_CONST unsigned char **)sp + 2;
	while(s0[havedig] == '0')
   1e578:	03000693          	li	a3,48
   1e57c:	5cd71063          	bne	a4,a3,1eb3c <__gethex+0x63c>
   1e580:	00378793          	addi	a5,a5,3
   1e584:	00000b13          	li	s6,0
   1e588:	00070613          	mv	a2,a4
   1e58c:	00078d93          	mv	s11,a5
   1e590:	00178793          	addi	a5,a5,1
   1e594:	fff7c703          	lbu	a4,-1(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:169
		havedig++;
   1e598:	001b0b1b          	addiw	s6,s6,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:168
	size_t decp_len = strlen ((const char *) decimalpoint);
	unsigned char decp_end = decimalpoint[decp_len - 1];

	havedig = 0;
	s0 = *(_CONST unsigned char **)sp + 2;
	while(s0[havedig] == '0')
   1e59c:	fec708e3          	beq	a4,a2,1e58c <__gethex+0x8c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:175
	s0 += havedig;
	s = s0;
	decpt = 0;
	zret = 0;
	e = 0;
	if (!__get_hexdig(*s)) {
   1e5a0:	000218b7          	lui	a7,0x21
   1e5a4:	27888a93          	addi	s5,a7,632 # 21278 <__hexdig>
   1e5a8:	00ea8733          	add	a4,s5,a4
   1e5ac:	00074783          	lbu	a5,0(a4)
   1e5b0:	1e078e63          	beqz	a5,1e7ac <__gethex+0x2ac>
   1e5b4:	000dc783          	lbu	a5,0(s11)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:173
	while(s0[havedig] == '0')
		havedig++;
	s0 += havedig;
	s = s0;
	decpt = 0;
	zret = 0;
   1e5b8:	00000413          	li	s0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:172
	s0 = *(_CONST unsigned char **)sp + 2;
	while(s0[havedig] == '0')
		havedig++;
	s0 += havedig;
	s = s0;
	decpt = 0;
   1e5bc:	00000c93          	li	s9,0
   1e5c0:	00fa87b3          	add	a5,s5,a5
   1e5c4:	0007c783          	lbu	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:190
		if (__get_hexdig(*s))
			zret = 0;
		havedig = 1;
		s0 = s;
		}
	while(__get_hexdig(*s))
   1e5c8:	000d8c13          	mv	s8,s11
   1e5cc:	00078c63          	beqz	a5,1e5e4 <__gethex+0xe4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:191
		s++;
   1e5d0:	001c0c13          	addi	s8,s8,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:190
		if (__get_hexdig(*s))
			zret = 0;
		havedig = 1;
		s0 = s;
		}
	while(__get_hexdig(*s))
   1e5d4:	000c4783          	lbu	a5,0(s8)
   1e5d8:	00fa87b3          	add	a5,s5,a5
   1e5dc:	0007c783          	lbu	a5,0(a5)
   1e5e0:	fe0798e3          	bnez	a5,1e5d0 <__gethex+0xd0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:192
		s++;
	if (strncmp ((const char *) s, (const char *) decimalpoint,
   1e5e4:	000b8613          	mv	a2,s7
   1e5e8:	00048593          	mv	a1,s1
   1e5ec:	000c0513          	mv	a0,s8
   1e5f0:	101000ef          	jal	1eef0 <strncmp>
   1e5f4:	1a050663          	beqz	a0,1e7a0 <__gethex+0x2a0>
   1e5f8:	000c4783          	lbu	a5,0(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:199
	    && !decpt) {
		decpt = (s += decp_len);
		while(__get_hexdig(*s))
			s++;
		}
	if (decpt)
   1e5fc:	500c8a63          	beqz	s9,1eb10 <__gethex+0x610>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:200
		e = -(((Long)(s-decpt)) << 2);
   1e600:	419c0cbb          	subw	s9,s8,s9
   1e604:	002c9c9b          	slliw	s9,s9,0x2
   1e608:	41900cbb          	negw	s9,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:203
 pcheck:
	s1 = s;
	switch(*s) {
   1e60c:	05000713          	li	a4,80
   1e610:	20e78e63          	beq	a5,a4,1e82c <__gethex+0x32c>
   1e614:	07000713          	li	a4,112
   1e618:	000c0d13          	mv	s10,s8
   1e61c:	20e78863          	beq	a5,a4,1e82c <__gethex+0x32c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:225
			e1 = 10*e1 + n - 0x10;
		if (esign)
			e1 = -e1;
		e += e1;
	  }
	*sp = (char*)s;
   1e620:	01893023          	sd	s8,0(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:226
	if (zret)
   1e624:	1a041c63          	bnez	s0,1e7dc <__gethex+0x2dc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:228
		return havedig ? STRTOG_Zero : STRTOG_NoNumber;
	n = s1 - s0 - 1;
   1e628:	41bd07b3          	sub	a5,s10,s11
   1e62c:	fff7879b          	addiw	a5,a5,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:229
	for(k = 0; n > 7; n >>= 1)
   1e630:	00700713          	li	a4,7
   1e634:	00000593          	li	a1,0
   1e638:	00f75863          	ble	a5,a4,1e648 <__gethex+0x148>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:229 (discriminator 3)
   1e63c:	4017d79b          	sraiw	a5,a5,0x1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:230
		k++;
   1e640:	0015859b          	addiw	a1,a1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:229
	  }
	*sp = (char*)s;
	if (zret)
		return havedig ? STRTOG_Zero : STRTOG_NoNumber;
	n = s1 - s0 - 1;
	for(k = 0; n > 7; n >>= 1)
   1e644:	fef74ce3          	blt	a4,a5,1e63c <__gethex+0x13c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:231
		k++;
	b = Balloc(ptr, k);
   1e648:	000a0513          	mv	a0,s4
   1e64c:	e00f90ef          	jal	17c4c <_Balloc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:232
	x = b->_x;
   1e650:	01850913          	addi	s2,a0,24
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:231
	if (zret)
		return havedig ? STRTOG_Zero : STRTOG_NoNumber;
	n = s1 - s0 - 1;
	for(k = 0; n > 7; n >>= 1)
		k++;
	b = Balloc(ptr, k);
   1e654:	00050b13          	mv	s6,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:235
	x = b->_x;
	n = 0;
	L = 0;
	while(s1 > s0) {
   1e658:	00090313          	mv	t1,s2
   1e65c:	00000793          	li	a5,0
   1e660:	05adf863          	bleu	s10,s11,1e6b0 <__gethex+0x1b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:236
		if (*--s1 == decp_end && s1 - decp_len + 1 >= s0
   1e664:	01012403          	lw	s0,16(sp)
   1e668:	00100f13          	li	t5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:235
		k++;
	b = Balloc(ptr, k);
	x = b->_x;
	n = 0;
	L = 0;
	while(s1 > s0) {
   1e66c:	00000c13          	li	s8,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:236
		if (*--s1 == decp_end && s1 - decp_len + 1 >= s0
   1e670:	417f0f33          	sub	t5,t5,s7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:242
		    && strncmp ((const char *) s1 - decp_len + 1,
				(const char *) decimalpoint, decp_len) == 0) {
			s1 -= decp_len - 1; /* Note the --s1 above! */
			continue;
		}
		if (n == 32) {
   1e674:	02000e13          	li	t3,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:236
	b = Balloc(ptr, k);
	x = b->_x;
	n = 0;
	L = 0;
	while(s1 > s0) {
		if (*--s1 == decp_end && s1 - decp_len + 1 >= s0
   1e678:	fffd4703          	lbu	a4,-1(s10)
   1e67c:	fffd0f93          	addi	t6,s10,-1
   1e680:	0a870c63          	beq	a4,s0,1e738 <__gethex+0x238>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:242
		    && strncmp ((const char *) s1 - decp_len + 1,
				(const char *) decimalpoint, decp_len) == 0) {
			s1 -= decp_len - 1; /* Note the --s1 above! */
			continue;
		}
		if (n == 32) {
   1e684:	11cc0263          	beq	s8,t3,1e788 <__gethex+0x288>
   1e688:	000c0613          	mv	a2,s8
   1e68c:	004c0c1b          	addiw	s8,s8,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:247
			*x++ = L;
			L = 0;
			n = 0;
			}
		L |= (__get_hexdig(*s1) & 0x0f) << n;
   1e690:	fffd4683          	lbu	a3,-1(s10)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:236
	b = Balloc(ptr, k);
	x = b->_x;
	n = 0;
	L = 0;
	while(s1 > s0) {
		if (*--s1 == decp_end && s1 - decp_len + 1 >= s0
   1e694:	000f8d13          	mv	s10,t6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:247
		if (n == 32) {
			*x++ = L;
			L = 0;
			n = 0;
			}
		L |= (__get_hexdig(*s1) & 0x0f) << n;
   1e698:	00da86b3          	add	a3,s5,a3
   1e69c:	0006c703          	lbu	a4,0(a3)
   1e6a0:	00f77713          	andi	a4,a4,15
   1e6a4:	00c7173b          	sllw	a4,a4,a2
   1e6a8:	00e7e7b3          	or	a5,a5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:235
		k++;
	b = Balloc(ptr, k);
	x = b->_x;
	n = 0;
	L = 0;
	while(s1 > s0) {
   1e6ac:	fdade6e3          	bltu	s11,s10,1e678 <__gethex+0x178>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:251
			}
		L |= (__get_hexdig(*s1) & 0x0f) << n;
		n += 4;
		}
	*x++ = L;
	b->_wds = n = x - b->_x;
   1e6b0:	00430713          	addi	a4,t1,4
   1e6b4:	41270733          	sub	a4,a4,s2
   1e6b8:	40275713          	srai	a4,a4,0x2
   1e6bc:	0007071b          	sext.w	a4,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:250
			n = 0;
			}
		L |= (__get_hexdig(*s1) & 0x0f) << n;
		n += 4;
		}
	*x++ = L;
   1e6c0:	00f32023          	sw	a5,0(t1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:251
	b->_wds = n = x - b->_x;
   1e6c4:	00eb2a23          	sw	a4,20(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:252
	n = 32*n - hi0bits(L);
   1e6c8:	00078513          	mv	a0,a5
   1e6cc:	0057141b          	slliw	s0,a4,0x5
   1e6d0:	889f90ef          	jal	17f58 <__hi0bits>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:253
	nbits = fpi->nbits;
   1e6d4:	0009a483          	lw	s1,0(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:252
		L |= (__get_hexdig(*s1) & 0x0f) << n;
		n += 4;
		}
	*x++ = L;
	b->_wds = n = x - b->_x;
	n = 32*n - hi0bits(L);
   1e6d8:	40a4053b          	subw	a0,s0,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:256
	nbits = fpi->nbits;
	lostbits = 0;
	x = b->_x;
	if (n > nbits) {
   1e6dc:	3ca4c663          	blt	s1,a0,1eaa8 <__gethex+0x5a8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:254
		}
	*x++ = L;
	b->_wds = n = x - b->_x;
	n = 32*n - hi0bits(L);
	nbits = fpi->nbits;
	lostbits = 0;
   1e6e0:	00000c13          	li	s8,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:270
				}
			}
		rshift(b, n);
		e += n;
		}
	else if (n < nbits) {
   1e6e4:	42954a63          	blt	a0,s1,1eb18 <__gethex+0x618>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:276
		n = nbits - n;
		b = lshift(ptr, b, n);
		e -= n;
		x = b->_x;
		}
	if (e > fpi->emax) {
   1e6e8:	0089a783          	lw	a5,8(s3)
   1e6ec:	2f97ce63          	blt	a5,s9,1e9e8 <__gethex+0x4e8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:283
		Bfree(ptr, b);
		*bp = 0;
		return STRTOG_Infinite | STRTOG_Overflow | STRTOG_Inexhi;
		}
	irv = STRTOG_Normal;
	if (e < fpi->emin) {
   1e6f0:	0049a783          	lw	a5,4(s3)
   1e6f4:	36fcd863          	ble	a5,s9,1ea64 <__gethex+0x564>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:285
		irv = STRTOG_Denormal;
		n = fpi->emin - e;
   1e6f8:	41978cbb          	subw	s9,a5,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:286
		if (n >= nbits) {
   1e6fc:	1c9ccc63          	blt	s9,s1,1e8d4 <__gethex+0x3d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:287
			switch (fpi->rounding) {
   1e700:	00c9a703          	lw	a4,12(s3)
   1e704:	00200693          	li	a3,2
   1e708:	4ad70a63          	beq	a4,a3,1ebbc <__gethex+0x6bc>
   1e70c:	00300693          	li	a3,3
   1e710:	46d70c63          	beq	a4,a3,1eb88 <__gethex+0x688>
   1e714:	00100693          	li	a3,1
   1e718:	4ad70863          	beq	a4,a3,1ebc8 <__gethex+0x6c8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:306
					*bp = b;
					return STRTOG_Denormal | STRTOG_Inexhi
						| STRTOG_Underflow;
					}
			  }
			Bfree(ptr, b);
   1e71c:	000a0513          	mv	a0,s4
   1e720:	000b0593          	mv	a1,s6
   1e724:	dd4f90ef          	jal	17cf8 <_Bfree>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:307
			*bp = 0;
   1e728:	00813783          	ld	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:308
			return STRTOG_Zero | STRTOG_Inexlo | STRTOG_Underflow;
   1e72c:	05000513          	li	a0,80
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:307
					return STRTOG_Denormal | STRTOG_Inexhi
						| STRTOG_Underflow;
					}
			  }
			Bfree(ptr, b);
			*bp = 0;
   1e730:	0007b023          	sd	zero,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:308
			return STRTOG_Zero | STRTOG_Inexlo | STRTOG_Underflow;
   1e734:	0b40006f          	j	1e7e8 <__gethex+0x2e8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:236 (discriminator 1)
	b = Balloc(ptr, k);
	x = b->_x;
	n = 0;
	L = 0;
	while(s1 > s0) {
		if (*--s1 == decp_end && s1 - decp_len + 1 >= s0
   1e738:	01ef8733          	add	a4,t6,t5
   1e73c:	f5b764e3          	bltu	a4,s11,1e684 <__gethex+0x184>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:237
		    && strncmp ((const char *) s1 - decp_len + 1,
   1e740:	00070513          	mv	a0,a4
   1e744:	000b8613          	mv	a2,s7
   1e748:	00048593          	mv	a1,s1
   1e74c:	05c13023          	sd	t3,64(sp)
   1e750:	03e13c23          	sd	t5,56(sp)
   1e754:	02f13823          	sd	a5,48(sp)
   1e758:	02613423          	sd	t1,40(sp)
   1e75c:	00e13823          	sd	a4,16(sp)
   1e760:	05f13423          	sd	t6,72(sp)
   1e764:	78c000ef          	jal	1eef0 <strncmp>
   1e768:	01013703          	ld	a4,16(sp)
   1e76c:	02813303          	ld	t1,40(sp)
   1e770:	03013783          	ld	a5,48(sp)
   1e774:	03813f03          	ld	t5,56(sp)
   1e778:	04013e03          	ld	t3,64(sp)
   1e77c:	28050463          	beqz	a0,1ea04 <__gethex+0x504>
   1e780:	04813f83          	ld	t6,72(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:242
				(const char *) decimalpoint, decp_len) == 0) {
			s1 -= decp_len - 1; /* Note the --s1 above! */
			continue;
		}
		if (n == 32) {
   1e784:	f1cc12e3          	bne	s8,t3,1e688 <__gethex+0x188>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:243
			*x++ = L;
   1e788:	00f32023          	sw	a5,0(t1)
   1e78c:	00400c13          	li	s8,4
   1e790:	00430313          	addi	t1,t1,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:244
			L = 0;
   1e794:	00000793          	li	a5,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:245
			n = 0;
   1e798:	00000613          	li	a2,0
   1e79c:	ef5ff06f          	j	1e690 <__gethex+0x190>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:194
		}
	while(__get_hexdig(*s))
		s++;
	if (strncmp ((const char *) s, (const char *) decimalpoint,
		     decp_len) == 0
	    && !decpt) {
   1e7a0:	3a0c8863          	beqz	s9,1eb50 <__gethex+0x650>
   1e7a4:	000c4783          	lbu	a5,0(s8)
   1e7a8:	e59ff06f          	j	1e600 <__gethex+0x100>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:177
	decpt = 0;
	zret = 0;
	e = 0;
	if (!__get_hexdig(*s)) {
		zret = 1;
		if (strncmp ((const char *) s, (const char *) decimalpoint,
   1e7ac:	000b8613          	mv	a2,s7
   1e7b0:	00048593          	mv	a1,s1
   1e7b4:	000d8513          	mv	a0,s11
   1e7b8:	738000ef          	jal	1eef0 <strncmp>
   1e7bc:	26050063          	beqz	a0,1ea1c <__gethex+0x51c>
   1e7c0:	000dc783          	lbu	a5,0(s11)
   1e7c4:	000d8c13          	mv	s8,s11
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:203
		}
	if (decpt)
		e = -(((Long)(s-decpt)) << 2);
 pcheck:
	s1 = s;
	switch(*s) {
   1e7c8:	05000713          	li	a4,80
   1e7cc:	04e78c63          	beq	a5,a4,1e824 <__gethex+0x324>
   1e7d0:	07000713          	li	a4,112
   1e7d4:	04e78863          	beq	a5,a4,1e824 <__gethex+0x324>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:225
			e1 = 10*e1 + n - 0x10;
		if (esign)
			e1 = -e1;
		e += e1;
	  }
	*sp = (char*)s;
   1e7d8:	01893023          	sd	s8,0(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:227
	if (zret)
		return havedig ? STRTOG_Zero : STRTOG_NoNumber;
   1e7dc:	001b3513          	seqz	a0,s6
   1e7e0:	40a0053b          	negw	a0,a0
   1e7e4:	00657513          	andi	a0,a0,6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:361
			irv |= STRTOG_Inexlo;
		}
	*bp = b;
	*exp = e;
	return irv;
}
   1e7e8:	0b813083          	ld	ra,184(sp)
   1e7ec:	0b013403          	ld	s0,176(sp)
   1e7f0:	0a813483          	ld	s1,168(sp)
   1e7f4:	0a013903          	ld	s2,160(sp)
   1e7f8:	09813983          	ld	s3,152(sp)
   1e7fc:	09013a03          	ld	s4,144(sp)
   1e800:	08813a83          	ld	s5,136(sp)
   1e804:	08013b03          	ld	s6,128(sp)
   1e808:	07813b83          	ld	s7,120(sp)
   1e80c:	07013c03          	ld	s8,112(sp)
   1e810:	06813c83          	ld	s9,104(sp)
   1e814:	06013d03          	ld	s10,96(sp)
   1e818:	05813d83          	ld	s11,88(sp)
   1e81c:	0c010113          	addi	sp,sp,192
   1e820:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:203
		}
	if (decpt)
		e = -(((Long)(s-decpt)) << 2);
 pcheck:
	s1 = s;
	switch(*s) {
   1e824:	00000c93          	li	s9,0
   1e828:	00100413          	li	s0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:207
	  case 'p':
	  case 'P':
		esign = 0;
		switch(*++s) {
   1e82c:	001c4783          	lbu	a5,1(s8)
   1e830:	02b00713          	li	a4,43
   1e834:	26e78663          	beq	a5,a4,1eaa0 <__gethex+0x5a0>
   1e838:	02d00713          	li	a4,45
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:209
		  case '-':
			esign = 1;
   1e83c:	00100593          	li	a1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:207
	s1 = s;
	switch(*s) {
	  case 'p':
	  case 'P':
		esign = 0;
		switch(*++s) {
   1e840:	1ce79863          	bne	a5,a4,1ea10 <__gethex+0x510>
   1e844:	002c4783          	lbu	a5,2(s8)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:212
		  case '-':
			esign = 1;
			/* no break */
		  case '+':
			s++;
   1e848:	002c0513          	addi	a0,s8,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:214
		  }
		if ((n = __get_hexdig(*s)) == 0 || n > 0x19) {
   1e84c:	00fa87b3          	add	a5,s5,a5
   1e850:	0007c783          	lbu	a5,0(a5)
   1e854:	01800e13          	li	t3,24
   1e858:	000c0d13          	mv	s10,s8
   1e85c:	fff7871b          	addiw	a4,a5,-1
   1e860:	0ff77713          	andi	a4,a4,255
   1e864:	daee6ee3          	bltu	t3,a4,1e620 <__gethex+0x120>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:219
			s = s1;
			break;
			}
		e1 = n - 0x10;
		while((n = __get_hexdig(*++s)) !=0 && n <= 0x19)
   1e868:	00154703          	lbu	a4,1(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:218
		  }
		if ((n = __get_hexdig(*s)) == 0 || n > 0x19) {
			s = s1;
			break;
			}
		e1 = n - 0x10;
   1e86c:	ff07879b          	addiw	a5,a5,-16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:219
		while((n = __get_hexdig(*++s)) !=0 && n <= 0x19)
   1e870:	00150513          	addi	a0,a0,1
   1e874:	00ea8733          	add	a4,s5,a4
   1e878:	00074e83          	lbu	t4,0(a4)
   1e87c:	fffe871b          	addiw	a4,t4,-1
   1e880:	0ff77713          	andi	a4,a4,255
   1e884:	02ee6c63          	bltu	t3,a4,1e8bc <__gethex+0x3bc>
   1e888:	00150513          	addi	a0,a0,1
   1e88c:	00054603          	lbu	a2,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:220
			e1 = 10*e1 + n - 0x10;
   1e890:	0017971b          	slliw	a4,a5,0x1
   1e894:	0037979b          	slliw	a5,a5,0x3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:219
		if ((n = __get_hexdig(*s)) == 0 || n > 0x19) {
			s = s1;
			break;
			}
		e1 = n - 0x10;
		while((n = __get_hexdig(*++s)) !=0 && n <= 0x19)
   1e898:	00ca8633          	add	a2,s5,a2
   1e89c:	00064603          	lbu	a2,0(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:220
			e1 = 10*e1 + n - 0x10;
   1e8a0:	00f707bb          	addw	a5,a4,a5
   1e8a4:	01d787bb          	addw	a5,a5,t4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:219
		if ((n = __get_hexdig(*s)) == 0 || n > 0x19) {
			s = s1;
			break;
			}
		e1 = n - 0x10;
		while((n = __get_hexdig(*++s)) !=0 && n <= 0x19)
   1e8a8:	fff6071b          	addiw	a4,a2,-1
   1e8ac:	0ff77713          	andi	a4,a4,255
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:220
			e1 = 10*e1 + n - 0x10;
   1e8b0:	ff07879b          	addiw	a5,a5,-16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:219
		if ((n = __get_hexdig(*s)) == 0 || n > 0x19) {
			s = s1;
			break;
			}
		e1 = n - 0x10;
		while((n = __get_hexdig(*++s)) !=0 && n <= 0x19)
   1e8b4:	00060e93          	mv	t4,a2
   1e8b8:	fcee78e3          	bleu	a4,t3,1e888 <__gethex+0x388>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:221
			e1 = 10*e1 + n - 0x10;
		if (esign)
   1e8bc:	00058463          	beqz	a1,1e8c4 <__gethex+0x3c4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:222
			e1 = -e1;
   1e8c0:	40f007bb          	negw	a5,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:223
		e += e1;
   1e8c4:	000c0d13          	mv	s10,s8
   1e8c8:	00fc8cbb          	addw	s9,s9,a5
   1e8cc:	00050c13          	mv	s8,a0
   1e8d0:	d51ff06f          	j	1e620 <__gethex+0x120>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:310
			  }
			Bfree(ptr, b);
			*bp = 0;
			return STRTOG_Zero | STRTOG_Inexlo | STRTOG_Underflow;
			}
		k = n - 1;
   1e8d4:	fffc841b          	addiw	s0,s9,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:311
		if (lostbits)
   1e8d8:	2a0c1463          	bnez	s8,1eb80 <__gethex+0x680>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:313
			lostbits = 1;
		else if (k > 0)
   1e8dc:	00040a63          	beqz	s0,1e8f0 <__gethex+0x3f0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:314
			lostbits = any_on(b,k);
   1e8e0:	00040593          	mv	a1,s0
   1e8e4:	000b0513          	mv	a0,s6
   1e8e8:	b44fa0ef          	jal	18c2c <__any_on>
   1e8ec:	00050c13          	mv	s8,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:315
		if (x[k>>kshift] & 1 << (k & kmask))
   1e8f0:	4054579b          	sraiw	a5,s0,0x5
   1e8f4:	00279793          	slli	a5,a5,0x2
   1e8f8:	00f907b3          	add	a5,s2,a5
   1e8fc:	0007a783          	lw	a5,0(a5)
   1e900:	00100713          	li	a4,1
   1e904:	0087173b          	sllw	a4,a4,s0
   1e908:	00f777b3          	and	a5,a4,a5
   1e90c:	00078463          	beqz	a5,1e914 <__gethex+0x414>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:316
			lostbits |= 2;
   1e910:	002c6c13          	ori	s8,s8,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:318
		nbits -= n;
		rshift(b,n);
   1e914:	000c8593          	mv	a1,s9
   1e918:	000b0513          	mv	a0,s6
   1e91c:	af1ff0ef          	jal	1e40c <rshift>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:317
			lostbits = 1;
		else if (k > 0)
			lostbits = any_on(b,k);
		if (x[k>>kshift] & 1 << (k & kmask))
			lostbits |= 2;
		nbits -= n;
   1e920:	419484bb          	subw	s1,s1,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:319
		rshift(b,n);
		e = fpi->emin;
   1e924:	0049ac83          	lw	s9,4(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:284
		*bp = 0;
		return STRTOG_Infinite | STRTOG_Overflow | STRTOG_Inexhi;
		}
	irv = STRTOG_Normal;
	if (e < fpi->emin) {
		irv = STRTOG_Denormal;
   1e928:	00200413          	li	s0,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:321
			lostbits |= 2;
		nbits -= n;
		rshift(b,n);
		e = fpi->emin;
		}
	if (lostbits) {
   1e92c:	140c0e63          	beqz	s8,1ea88 <__gethex+0x588>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:323
		up = 0;
		switch(fpi->rounding) {
   1e930:	00c9a783          	lw	a5,12(s3)
   1e934:	00200713          	li	a4,2
   1e938:	12e78a63          	beq	a5,a4,1ea6c <__gethex+0x56c>
   1e93c:	00300713          	li	a4,3
   1e940:	12e78e63          	beq	a5,a4,1ea7c <__gethex+0x57c>
   1e944:	00100713          	li	a4,1
   1e948:	12e79e63          	bne	a5,a4,1ea84 <__gethex+0x584>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:327
		  case FPI_Round_zero:
			break;
		  case FPI_Round_near:
		    if ((lostbits & 2)
   1e94c:	002c7793          	andi	a5,s8,2
   1e950:	12078a63          	beqz	a5,1ea84 <__gethex+0x584>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:328
			    && ((lostbits & 1) | (x[0] & 1)))
   1e954:	00092783          	lw	a5,0(s2)
   1e958:	00fc67b3          	or	a5,s8,a5
   1e95c:	00e7f7b3          	and	a5,a5,a4
   1e960:	12078263          	beqz	a5,1ea84 <__gethex+0x584>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:338
			break;
		  case FPI_Round_down:
			up = sign;
		  }
		if (up) {
			k = b->_wds;
   1e964:	014b2c03          	lw	s8,20(s6)
increment():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:114
	_Bigint *b1;
#ifdef Pack_16
	__ULong carry = 1, y;
#endif

	x = b->_x;
   1e968:	00090793          	mv	a5,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:118
	xe = x + b->_wds;
#ifdef Pack_32
	do {
		if (*x < (__ULong)0xffffffffL) {
   1e96c:	fff00693          	li	a3,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:115
#ifdef Pack_16
	__ULong carry = 1, y;
#endif

	x = b->_x;
	xe = x + b->_wds;
   1e970:	002c1b93          	slli	s7,s8,0x2
   1e974:	01790633          	add	a2,s2,s7
   1e978:	0100006f          	j	1e988 <__gethex+0x488>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:122
	do {
		if (*x < (__ULong)0xffffffffL) {
			++*x;
			return b;
			}
		*x++ = 0;
   1e97c:	00478793          	addi	a5,a5,4
   1e980:	fe07ae23          	sw	zero,-4(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:123
		} while(x < xe);
   1e984:	26c7f263          	bleu	a2,a5,1ebe8 <__gethex+0x6e8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:118

	x = b->_x;
	xe = x + b->_wds;
#ifdef Pack_32
	do {
		if (*x < (__ULong)0xffffffffL) {
   1e988:	0007a703          	lw	a4,0(a5)
   1e98c:	fed708e3          	beq	a4,a3,1e97c <__gethex+0x47c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:119
			++*x;
   1e990:	0017071b          	addiw	a4,a4,1
   1e994:	00e7a023          	sw	a4,0(a5)
__gethex():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:341
		  }
		if (up) {
			k = b->_wds;
			b = increment(ptr, b);
			x = b->_x;
			if (irv == STRTOG_Denormal) {
   1e998:	00200793          	li	a5,2
   1e99c:	26f40c63          	beq	s0,a5,1ec14 <__gethex+0x714>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:346
				if (nbits == fpi->nbits - 1
				 && x[nbits >> kshift] & 1 << (nbits & kmask))
					irv =  STRTOG_Normal;
				}
			else if ((b->_wds > k)
   1e9a0:	014b2783          	lw	a5,20(s6)
   1e9a4:	02fc4463          	blt	s8,a5,1e9cc <__gethex+0x4cc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:347
			 || ((n = nbits & kmask) !=0
   1e9a8:	01f4f493          	andi	s1,s1,31
   1e9ac:	02100413          	li	s0,33
   1e9b0:	0c048c63          	beqz	s1,1ea88 <__gethex+0x588>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:348
			     && (hi0bits(x[k-1]) < 32-n))) {
   1e9b4:	01790933          	add	s2,s2,s7
   1e9b8:	ffc92503          	lw	a0,-4(s2)
   1e9bc:	d9cf90ef          	jal	17f58 <__hi0bits>
   1e9c0:	02000793          	li	a5,32
   1e9c4:	409784bb          	subw	s1,a5,s1
   1e9c8:	0c955063          	ble	s1,a0,1ea88 <__gethex+0x588>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:349
				rshift(b,1);
   1e9cc:	00100593          	li	a1,1
   1e9d0:	000b0513          	mv	a0,s6
   1e9d4:	a39ff0ef          	jal	1e40c <rshift>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:350
				if (++e > fpi->emax)
   1e9d8:	0089a783          	lw	a5,8(s3)
   1e9dc:	001c8c9b          	addiw	s9,s9,1
   1e9e0:	02100413          	li	s0,33
   1e9e4:	0b97d263          	ble	s9,a5,1ea88 <__gethex+0x588>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:278
		e -= n;
		x = b->_x;
		}
	if (e > fpi->emax) {
 ovfl:
		Bfree(ptr, b);
   1e9e8:	000a0513          	mv	a0,s4
   1e9ec:	000b0593          	mv	a1,s6
   1e9f0:	b08f90ef          	jal	17cf8 <_Bfree>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:279
		*bp = 0;
   1e9f4:	00813783          	ld	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:280
		return STRTOG_Infinite | STRTOG_Overflow | STRTOG_Inexhi;
   1e9f8:	0a300513          	li	a0,163
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:279
		x = b->_x;
		}
	if (e > fpi->emax) {
 ovfl:
		Bfree(ptr, b);
		*bp = 0;
   1e9fc:	0007b023          	sd	zero,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:280
		return STRTOG_Infinite | STRTOG_Overflow | STRTOG_Inexhi;
   1ea00:	de9ff06f          	j	1e7e8 <__gethex+0x2e8>
   1ea04:	00070d13          	mv	s10,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:235
		k++;
	b = Balloc(ptr, k);
	x = b->_x;
	n = 0;
	L = 0;
	while(s1 > s0) {
   1ea08:	c7ade8e3          	bltu	s11,s10,1e678 <__gethex+0x178>
   1ea0c:	ca5ff06f          	j	1e6b0 <__gethex+0x1b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:207
	s1 = s;
	switch(*s) {
	  case 'p':
	  case 'P':
		esign = 0;
		switch(*++s) {
   1ea10:	001c0513          	addi	a0,s8,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:206
 pcheck:
	s1 = s;
	switch(*s) {
	  case 'p':
	  case 'P':
		esign = 0;
   1ea14:	00000593          	li	a1,0
   1ea18:	e35ff06f          	j	1e84c <__gethex+0x34c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:180
	if (!__get_hexdig(*s)) {
		zret = 1;
		if (strncmp ((const char *) s, (const char *) decimalpoint,
			     decp_len) != 0)
			goto pcheck;
		decpt = (s += decp_len);
   1ea1c:	017d8c33          	add	s8,s11,s7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:181
		if (!__get_hexdig(*s))
   1ea20:	000c4703          	lbu	a4,0(s8)
   1ea24:	00ea87b3          	add	a5,s5,a4
   1ea28:	0007c783          	lbu	a5,0(a5)
   1ea2c:	10078e63          	beqz	a5,1eb48 <__gethex+0x648>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:183
			goto pcheck;
		while(*s == '0')
   1ea30:	03000693          	li	a3,48
   1ea34:	000c0d93          	mv	s11,s8
   1ea38:	00d71e63          	bne	a4,a3,1ea54 <__gethex+0x554>
   1ea3c:	00070793          	mv	a5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:184
			s++;
   1ea40:	001d8d93          	addi	s11,s11,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:183
			     decp_len) != 0)
			goto pcheck;
		decpt = (s += decp_len);
		if (!__get_hexdig(*s))
			goto pcheck;
		while(*s == '0')
   1ea44:	000dc703          	lbu	a4,0(s11)
   1ea48:	fef70ce3          	beq	a4,a5,1ea40 <__gethex+0x540>
   1ea4c:	00ea87b3          	add	a5,s5,a4
   1ea50:	0007c783          	lbu	a5,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:186
			s++;
		if (__get_hexdig(*s))
			zret = 0;
   1ea54:	0017b413          	seqz	s0,a5
   1ea58:	000c0c93          	mv	s9,s8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:187
		havedig = 1;
   1ea5c:	00100b13          	li	s6,1
   1ea60:	b69ff06f          	j	1e5c8 <__gethex+0xc8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:282
 ovfl:
		Bfree(ptr, b);
		*bp = 0;
		return STRTOG_Infinite | STRTOG_Overflow | STRTOG_Inexhi;
		}
	irv = STRTOG_Normal;
   1ea64:	00100413          	li	s0,1
   1ea68:	ec5ff06f          	j	1e92c <__gethex+0x42c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:332
		    if ((lostbits & 2)
			    && ((lostbits & 1) | (x[0] & 1)))
				up = 1;
			break;
		  case FPI_Round_up:
			up = 1 - sign;
   1ea6c:	02412703          	lw	a4,36(sp)
   1ea70:	00100793          	li	a5,1
   1ea74:	40e787bb          	subw	a5,a5,a4
   1ea78:	02f12223          	sw	a5,36(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:337
			break;
		  case FPI_Round_down:
			up = sign;
		  }
		if (up) {
   1ea7c:	02412783          	lw	a5,36(sp)
   1ea80:	ee0792e3          	bnez	a5,1e964 <__gethex+0x464>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:356
					goto ovfl;
				}
			irv |= STRTOG_Inexhi;
			}
		else
			irv |= STRTOG_Inexlo;
   1ea84:	01046413          	ori	s0,s0,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:358
		}
	*bp = b;
   1ea88:	00813783          	ld	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:360
	*exp = e;
	return irv;
   1ea8c:	00040513          	mv	a0,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:358
			irv |= STRTOG_Inexhi;
			}
		else
			irv |= STRTOG_Inexlo;
		}
	*bp = b;
   1ea90:	0167b023          	sd	s6,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:359
	*exp = e;
   1ea94:	01813783          	ld	a5,24(sp)
   1ea98:	0197a023          	sw	s9,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:360
	return irv;
   1ea9c:	d4dff06f          	j	1e7e8 <__gethex+0x2e8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:206
 pcheck:
	s1 = s;
	switch(*s) {
	  case 'p':
	  case 'P':
		esign = 0;
   1eaa0:	00000593          	li	a1,0
   1eaa4:	da1ff06f          	j	1e844 <__gethex+0x344>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:257
	n = 32*n - hi0bits(L);
	nbits = fpi->nbits;
	lostbits = 0;
	x = b->_x;
	if (n > nbits) {
		n -= nbits;
   1eaa8:	4095043b          	subw	s0,a0,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:258
		if (any_on(b,n)) {
   1eaac:	00040593          	mv	a1,s0
   1eab0:	000b0513          	mv	a0,s6
   1eab4:	978fa0ef          	jal	18c2c <__any_on>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:254
		}
	*x++ = L;
	b->_wds = n = x - b->_x;
	n = 32*n - hi0bits(L);
	nbits = fpi->nbits;
	lostbits = 0;
   1eab8:	00000c13          	li	s8,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:258
	x = b->_x;
	if (n > nbits) {
		n -= nbits;
		if (any_on(b,n)) {
   1eabc:	04050063          	beqz	a0,1eafc <__gethex+0x5fc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:260
			lostbits = 1;
			k = n - 1;
   1eac0:	fff4071b          	addiw	a4,s0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:261
			if (x[k>>kshift] & 1 << (k & kmask)) {
   1eac4:	4057579b          	sraiw	a5,a4,0x5
   1eac8:	00279793          	slli	a5,a5,0x2
   1eacc:	00f907b3          	add	a5,s2,a5
   1ead0:	0007a783          	lw	a5,0(a5)
   1ead4:	00100c13          	li	s8,1
   1ead8:	00ec16bb          	sllw	a3,s8,a4
   1eadc:	00f6f7b3          	and	a5,a3,a5
   1eae0:	00078e63          	beqz	a5,1eafc <__gethex+0x5fc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:263
				lostbits = 2;
				if (k > 1 && any_on(b,k-1))
   1eae4:	0cec5863          	ble	a4,s8,1ebb4 <__gethex+0x6b4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:263 (discriminator 1)
   1eae8:	ffe4059b          	addiw	a1,s0,-2
   1eaec:	000b0513          	mv	a0,s6
   1eaf0:	93cfa0ef          	jal	18c2c <__any_on>
   1eaf4:	0c050063          	beqz	a0,1ebb4 <__gethex+0x6b4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:264
					lostbits = 3;
   1eaf8:	00300c13          	li	s8,3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:267
				}
			}
		rshift(b, n);
   1eafc:	00040593          	mv	a1,s0
   1eb00:	000b0513          	mv	a0,s6
   1eb04:	909ff0ef          	jal	1e40c <rshift>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:268
		e += n;
   1eb08:	008c8cbb          	addw	s9,s9,s0
   1eb0c:	bddff06f          	j	1e6e8 <__gethex+0x1e8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:174
		havedig++;
	s0 += havedig;
	s = s0;
	decpt = 0;
	zret = 0;
	e = 0;
   1eb10:	00000c93          	li	s9,0
   1eb14:	af9ff06f          	j	1e60c <__gethex+0x10c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:271
			}
		rshift(b, n);
		e += n;
		}
	else if (n < nbits) {
		n = nbits - n;
   1eb18:	40a4843b          	subw	s0,s1,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:272
		b = lshift(ptr, b, n);
   1eb1c:	000b0593          	mv	a1,s6
   1eb20:	00040613          	mv	a2,s0
   1eb24:	000a0513          	mv	a0,s4
   1eb28:	8bdf90ef          	jal	183e4 <__lshift>
   1eb2c:	00050b13          	mv	s6,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:273
		e -= n;
   1eb30:	408c8cbb          	subw	s9,s9,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:274
		x = b->_x;
   1eb34:	01850913          	addi	s2,a0,24
   1eb38:	bb1ff06f          	j	1e6e8 <__gethex+0x1e8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:168
	size_t decp_len = strlen ((const char *) decimalpoint);
	unsigned char decp_end = decimalpoint[decp_len - 1];

	havedig = 0;
	s0 = *(_CONST unsigned char **)sp + 2;
	while(s0[havedig] == '0')
   1eb3c:	00278d93          	addi	s11,a5,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:166
	unsigned char *decimalpoint = (unsigned char *)
				      _localeconv_r (ptr)->decimal_point;
	size_t decp_len = strlen ((const char *) decimalpoint);
	unsigned char decp_end = decimalpoint[decp_len - 1];

	havedig = 0;
   1eb40:	00000b13          	li	s6,0
   1eb44:	a5dff06f          	j	1e5a0 <__gethex+0xa0>
   1eb48:	00070793          	mv	a5,a4
   1eb4c:	c7dff06f          	j	1e7c8 <__gethex+0x2c8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:195
	while(__get_hexdig(*s))
		s++;
	if (strncmp ((const char *) s, (const char *) decimalpoint,
		     decp_len) == 0
	    && !decpt) {
		decpt = (s += decp_len);
   1eb50:	017c0cb3          	add	s9,s8,s7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:196
		while(__get_hexdig(*s))
   1eb54:	000cc783          	lbu	a5,0(s9)
   1eb58:	000c8c13          	mv	s8,s9
   1eb5c:	00fa8733          	add	a4,s5,a5
   1eb60:	00074703          	lbu	a4,0(a4)
   1eb64:	a8070ee3          	beqz	a4,1e600 <__gethex+0x100>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:197
			s++;
   1eb68:	001c0c13          	addi	s8,s8,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:196
		s++;
	if (strncmp ((const char *) s, (const char *) decimalpoint,
		     decp_len) == 0
	    && !decpt) {
		decpt = (s += decp_len);
		while(__get_hexdig(*s))
   1eb6c:	000c4783          	lbu	a5,0(s8)
   1eb70:	00fa8733          	add	a4,s5,a5
   1eb74:	00074703          	lbu	a4,0(a4)
   1eb78:	fe0718e3          	bnez	a4,1eb68 <__gethex+0x668>
   1eb7c:	a85ff06f          	j	1e600 <__gethex+0x100>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:312
			*bp = 0;
			return STRTOG_Zero | STRTOG_Inexlo | STRTOG_Underflow;
			}
		k = n - 1;
		if (lostbits)
			lostbits = 1;
   1eb80:	00100c13          	li	s8,1
   1eb84:	d6dff06f          	j	1e8f0 <__gethex+0x3f0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:297
			  case FPI_Round_up:
				if (!sign)
					goto one_bit;
				break;
			  case FPI_Round_down:
				if (sign) {
   1eb88:	02412703          	lw	a4,36(sp)
   1eb8c:	b80708e3          	beqz	a4,1e71c <__gethex+0x21c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:299
 one_bit:
					*exp = fpi->emin;
   1eb90:	01813703          	ld	a4,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:302
					x[0] = b->_wds = 1;
					*bp = b;
					return STRTOG_Denormal | STRTOG_Inexhi
   1eb94:	06200513          	li	a0,98
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:299
					goto one_bit;
				break;
			  case FPI_Round_down:
				if (sign) {
 one_bit:
					*exp = fpi->emin;
   1eb98:	00f72023          	sw	a5,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:300
					x[0] = b->_wds = 1;
   1eb9c:	00100793          	li	a5,1
   1eba0:	00fb2a23          	sw	a5,20(s6)
   1eba4:	00f92023          	sw	a5,0(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:301
					*bp = b;
   1eba8:	00813783          	ld	a5,8(sp)
   1ebac:	0167b023          	sd	s6,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:302
					return STRTOG_Denormal | STRTOG_Inexhi
   1ebb0:	c39ff06f          	j	1e7e8 <__gethex+0x2e8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:262
		n -= nbits;
		if (any_on(b,n)) {
			lostbits = 1;
			k = n - 1;
			if (x[k>>kshift] & 1 << (k & kmask)) {
				lostbits = 2;
   1ebb4:	00200c13          	li	s8,2
   1ebb8:	f45ff06f          	j	1eafc <__gethex+0x5fc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:293
			  case FPI_Round_near:
				if (n == nbits && (n < 2 || any_on(b,n-1)))
					goto one_bit;
				break;
			  case FPI_Round_up:
				if (!sign)
   1ebbc:	02412703          	lw	a4,36(sp)
   1ebc0:	fc0708e3          	beqz	a4,1eb90 <__gethex+0x690>
   1ebc4:	b59ff06f          	j	1e71c <__gethex+0x21c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:289
		irv = STRTOG_Denormal;
		n = fpi->emin - e;
		if (n >= nbits) {
			switch (fpi->rounding) {
			  case FPI_Round_near:
				if (n == nbits && (n < 2 || any_on(b,n-1)))
   1ebc8:	b5949ae3          	bne	s1,s9,1e71c <__gethex+0x21c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:289 (discriminator 1)
   1ebcc:	fc9752e3          	ble	s1,a4,1eb90 <__gethex+0x690>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:289 (discriminator 2)
   1ebd0:	fff4859b          	addiw	a1,s1,-1
   1ebd4:	000b0513          	mv	a0,s6
   1ebd8:	854fa0ef          	jal	18c2c <__any_on>
   1ebdc:	b40500e3          	beqz	a0,1e71c <__gethex+0x21c>
   1ebe0:	0049a783          	lw	a5,4(s3)
   1ebe4:	fadff06f          	j	1eb90 <__gethex+0x690>
increment():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:135
			return b;
		} while(x < xe);
	if (carry)
#endif
	{
		if (b->_wds >= b->_maxwds) {
   1ebe8:	014b2703          	lw	a4,20(s6)
   1ebec:	00cb2783          	lw	a5,12(s6)
   1ebf0:	04f75c63          	ble	a5,a4,1ec48 <__gethex+0x748>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:141
			b1 = Balloc(ptr, b->_k+1);
			Bcopy(b1, b);
			Bfree(ptr, b);
			b = b1;
			}
		b->_x[b->_wds++] = 1;
   1ebf4:	00470793          	addi	a5,a4,4
   1ebf8:	00279793          	slli	a5,a5,0x2
   1ebfc:	0017071b          	addiw	a4,a4,1
   1ec00:	00eb2a23          	sw	a4,20(s6)
   1ec04:	00fb07b3          	add	a5,s6,a5
   1ec08:	00100713          	li	a4,1
   1ec0c:	00e7a423          	sw	a4,8(a5)
   1ec10:	d89ff06f          	j	1e998 <__gethex+0x498>
__gethex():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:342
		if (up) {
			k = b->_wds;
			b = increment(ptr, b);
			x = b->_x;
			if (irv == STRTOG_Denormal) {
				if (nbits == fpi->nbits - 1
   1ec14:	0009a783          	lw	a5,0(s3)
   1ec18:	02200413          	li	s0,34
   1ec1c:	fff7879b          	addiw	a5,a5,-1
   1ec20:	e6f494e3          	bne	s1,a5,1ea88 <__gethex+0x588>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:343
				 && x[nbits >> kshift] & 1 << (nbits & kmask))
   1ec24:	4054d79b          	sraiw	a5,s1,0x5
   1ec28:	00279793          	slli	a5,a5,0x2
   1ec2c:	00f90933          	add	s2,s2,a5
   1ec30:	00092503          	lw	a0,0(s2)
   1ec34:	02200793          	li	a5,34
   1ec38:	0095553b          	srlw	a0,a0,s1
   1ec3c:	00157413          	andi	s0,a0,1
   1ec40:	4087843b          	subw	s0,a5,s0
   1ec44:	e45ff06f          	j	1ea88 <__gethex+0x588>
increment():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:136
		} while(x < xe);
	if (carry)
#endif
	{
		if (b->_wds >= b->_maxwds) {
			b1 = Balloc(ptr, b->_k+1);
   1ec48:	008b2583          	lw	a1,8(s6)
   1ec4c:	000a0513          	mv	a0,s4
   1ec50:	0015859b          	addiw	a1,a1,1
   1ec54:	ff9f80ef          	jal	17c4c <_Balloc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:137
			Bcopy(b1, b);
   1ec58:	014b2603          	lw	a2,20(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:136
		} while(x < xe);
	if (carry)
#endif
	{
		if (b->_wds >= b->_maxwds) {
			b1 = Balloc(ptr, b->_k+1);
   1ec5c:	00050d13          	mv	s10,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:137
			Bcopy(b1, b);
   1ec60:	010b0593          	addi	a1,s6,16
   1ec64:	00260613          	addi	a2,a2,2
   1ec68:	00261613          	slli	a2,a2,0x2
   1ec6c:	01050513          	addi	a0,a0,16
   1ec70:	d65f10ef          	jal	109d4 <memcpy>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-gethex.c:138
			Bfree(ptr, b);
   1ec74:	000b0593          	mv	a1,s6
   1ec78:	000a0513          	mv	a0,s4
   1ec7c:	87cf90ef          	jal	17cf8 <_Bfree>
   1ec80:	014d2703          	lw	a4,20(s10)
   1ec84:	018d0913          	addi	s2,s10,24
   1ec88:	000d0b13          	mv	s6,s10
   1ec8c:	f69ff06f          	j	1ebf4 <__gethex+0x6f4>

000000000001ec90 <__hexnan>:
__hexnan():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:69
int
_DEFUN (hexnan, (sp, fpi, x0),
	_CONST char **sp _AND
	_CONST FPI *fpi _AND
	__ULong *x0)
{
   1ec90:	fd010113          	addi	sp,sp,-48
   1ec94:	01213c23          	sd	s2,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:74
	__ULong c, h, *x, *x1, *xe;
	_CONST char *s;
	int havedig, hd0, i, nbits;

	nbits = fpi->nbits;
   1ec98:	0005a903          	lw	s2,0(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:69
int
_DEFUN (hexnan, (sp, fpi, x0),
	_CONST char **sp _AND
	_CONST FPI *fpi _AND
	__ULong *x0)
{
   1ec9c:	02913023          	sd	s1,32(sp)
   1eca0:	02813423          	sd	s0,40(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:75
	__ULong c, h, *x, *x1, *xe;
	_CONST char *s;
	int havedig, hd0, i, nbits;

	nbits = fpi->nbits;
	x = x0 + (nbits >> kshift);
   1eca4:	4059549b          	sraiw	s1,s2,0x5
   1eca8:	00249493          	slli	s1,s1,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:69
int
_DEFUN (hexnan, (sp, fpi, x0),
	_CONST char **sp _AND
	_CONST FPI *fpi _AND
	__ULong *x0)
{
   1ecac:	01313823          	sd	s3,16(sp)
   1ecb0:	01413423          	sd	s4,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:76
	_CONST char *s;
	int havedig, hd0, i, nbits;

	nbits = fpi->nbits;
	x = x0 + (nbits >> kshift);
	if (nbits & kmask)
   1ecb4:	01f97913          	andi	s2,s2,31
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:75
	__ULong c, h, *x, *x1, *xe;
	_CONST char *s;
	int havedig, hd0, i, nbits;

	nbits = fpi->nbits;
	x = x0 + (nbits >> kshift);
   1ecb8:	009604b3          	add	s1,a2,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:76
	if (nbits & kmask)
   1ecbc:	00090463          	beqz	s2,1ecc4 <__hexnan+0x34>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:77
		x++;
   1ecc0:	00448493          	addi	s1,s1,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:81
	*--x = 0;
	x1 = xe = x;
	havedig = hd0 = i = 0;
	s = *sp;
   1ecc4:	00053683          	ld	a3,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:78

	nbits = fpi->nbits;
	x = x0 + (nbits >> kshift);
	if (nbits & kmask)
		x++;
	*--x = 0;
   1ecc8:	ffc48313          	addi	t1,s1,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:83
	x1 = xe = x;
	havedig = hd0 = i = 0;
	s = *sp;
	while((c = *(_CONST unsigned char*)++s)) {
		if (!(h = __get_hexdig(c))) {
   1eccc:	00021fb7          	lui	t6,0x21
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:78

	nbits = fpi->nbits;
	x = x0 + (nbits >> kshift);
	if (nbits & kmask)
		x++;
	*--x = 0;
   1ecd0:	fe04ae23          	sw	zero,-4(s1)
   1ecd4:	00030f13          	mv	t5,t1
   1ecd8:	00030593          	mv	a1,t1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:80
	x1 = xe = x;
	havedig = hd0 = i = 0;
   1ecdc:	00000813          	li	a6,0
   1ece0:	00000293          	li	t0,0
   1ece4:	00000e93          	li	t4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:83
	s = *sp;
	while((c = *(_CONST unsigned char*)++s)) {
		if (!(h = __get_hexdig(c))) {
   1ece8:	278f8f93          	addi	t6,t6,632 # 21278 <__hexdig>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:106
				break;
				}
			return STRTOG_NaN;
			}
		havedig++;
		if (++i > 8) {
   1ecec:	00800413          	li	s0,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:84
	x1 = xe = x;
	havedig = hd0 = i = 0;
	s = *sp;
	while((c = *(_CONST unsigned char*)++s)) {
		if (!(h = __get_hexdig(c))) {
			if (c <= ' ') {
   1ecf0:	02000393          	li	t2,32
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:86
				if (hd0 < havedig) {
					if (x < x1 && i < 8)
   1ecf4:	00700993          	li	s3,7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:82
		x++;
	*--x = 0;
	x1 = xe = x;
	havedig = hd0 = i = 0;
	s = *sp;
	while((c = *(_CONST unsigned char*)++s)) {
   1ecf8:	00168693          	addi	a3,a3,1
   1ecfc:	0006c703          	lbu	a4,0(a3)
   1ed00:	08070263          	beqz	a4,1ed84 <__hexnan+0xf4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:83
		if (!(h = __get_hexdig(c))) {
   1ed04:	02071793          	slli	a5,a4,0x20
   1ed08:	0207d793          	srli	a5,a5,0x20
   1ed0c:	01f787b3          	add	a5,a5,t6
   1ed10:	0007c783          	lbu	a5,0(a5)
   1ed14:	0e079263          	bnez	a5,1edf8 <__hexnan+0x168>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:84
			if (c <= ' ') {
   1ed18:	10e3ea63          	bltu	t2,a4,1ee2c <__hexnan+0x19c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:85
				if (hd0 < havedig) {
   1ed1c:	fdd2dee3          	ble	t4,t0,1ecf8 <__hexnan+0x68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:86
					if (x < x1 && i < 8)
   1ed20:	03e5fe63          	bleu	t5,a1,1ed5c <__hexnan+0xcc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:86 (discriminator 1)
   1ed24:	0309cc63          	blt	s3,a6,1ed5c <__hexnan+0xcc>
L_shift():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:55
	__ULong *x1 _AND
	int i)
{
	int j;

	i = 8 - i;
   1ed28:	4104083b          	subw	a6,s0,a6
   1ed2c:	0005a883          	lw	a7,0(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:56
	i <<= 2;
   1ed30:	0028181b          	slliw	a6,a6,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:57
	j = ULbits - i;
   1ed34:	41038a3b          	subw	s4,t2,a6
   1ed38:	00058793          	mv	a5,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:59
	do {
		*x |= x[1] << j;
   1ed3c:	0047ae03          	lw	t3,4(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:61
		x[1] >>= i;
		} while(++x < x1);
   1ed40:	00478793          	addi	a5,a5,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:59

	i = 8 - i;
	i <<= 2;
	j = ULbits - i;
	do {
		*x |= x[1] << j;
   1ed44:	014e173b          	sllw	a4,t3,s4
   1ed48:	01176733          	or	a4,a4,a7
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:60
		x[1] >>= i;
   1ed4c:	010e58bb          	srlw	a7,t3,a6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:59

	i = 8 - i;
	i <<= 2;
	j = ULbits - i;
	do {
		*x |= x[1] << j;
   1ed50:	fee7ae23          	sw	a4,-4(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:60
		x[1] >>= i;
   1ed54:	0117a023          	sw	a7,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:61
		} while(++x < x1);
   1ed58:	ffe7e2e3          	bltu	a5,t5,1ed3c <__hexnan+0xac>
__hexnan():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:89
			if (c <= ' ') {
				if (hd0 < havedig) {
					if (x < x1 && i < 8)
						L_shift(x, x1, i);
					if (x <= x0) {
						i = 8;
   1ed5c:	00800813          	li	a6,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:88
		if (!(h = __get_hexdig(c))) {
			if (c <= ' ') {
				if (hd0 < havedig) {
					if (x < x1 && i < 8)
						L_shift(x, x1, i);
					if (x <= x0) {
   1ed60:	f8b67ce3          	bleu	a1,a2,1ecf8 <__hexnan+0x68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:93
						i = 8;
						continue;
						}
					hd0 = havedig;
					*--x = 0;
   1ed64:	fe05ae23          	sw	zero,-4(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:82
		x++;
	*--x = 0;
	x1 = xe = x;
	havedig = hd0 = i = 0;
	s = *sp;
	while((c = *(_CONST unsigned char*)++s)) {
   1ed68:	00168693          	addi	a3,a3,1
   1ed6c:	0006c703          	lbu	a4,0(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:93
					if (x <= x0) {
						i = 8;
						continue;
						}
					hd0 = havedig;
					*--x = 0;
   1ed70:	ffc58f13          	addi	t5,a1,-4
   1ed74:	000e8293          	mv	t0,t4
   1ed78:	000f0593          	mv	a1,t5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:95
					x1 = x;
					i = 0;
   1ed7c:	00000813          	li	a6,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:82
		x++;
	*--x = 0;
	x1 = xe = x;
	havedig = hd0 = i = 0;
	s = *sp;
	while((c = *(_CONST unsigned char*)++s)) {
   1ed80:	f80712e3          	bnez	a4,1ed04 <__hexnan+0x74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:114
			i = 1;
			*--x = 0;
			}
		*x = ((*x << 4) | (h & 0xf));
		}
	if (!havedig)
   1ed84:	0a0e8863          	beqz	t4,1ee34 <__hexnan+0x1a4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:116
		return STRTOG_NaN;
	if (x < x1 && i < 8)
   1ed88:	01e5f663          	bleu	t5,a1,1ed94 <__hexnan+0x104>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:116 (discriminator 1)
   1ed8c:	00700793          	li	a5,7
   1ed90:	1307d063          	ble	a6,a5,1eeb0 <__hexnan+0x220>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:118
		L_shift(x, x1, i);
	if (x > x0) {
   1ed94:	0cb67063          	bleu	a1,a2,1ee54 <__hexnan+0x1c4>
   1ed98:	00060793          	mv	a5,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:120 (discriminator 1)
		x1 = x0;
		do *x1++ = *x++;
   1ed9c:	00458593          	addi	a1,a1,4
   1eda0:	ffc5a703          	lw	a4,-4(a1)
   1eda4:	00478793          	addi	a5,a5,4
   1eda8:	fee7ae23          	sw	a4,-4(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:121
			while(x <= xe);
   1edac:	feb378e3          	bleu	a1,t1,1ed9c <__hexnan+0x10c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:122
		do *x1++ = 0;
   1edb0:	00478793          	addi	a5,a5,4
   1edb4:	fe07ae23          	sw	zero,-4(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:123
			while(x1 <= xe);
   1edb8:	fef37ce3          	bleu	a5,t1,1edb0 <__hexnan+0x120>
   1edbc:	ffc4a783          	lw	a5,-4(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:138
		if (x1 == x0) {
			*x1 = 1;
			break;
			}
		}
	return STRTOG_NaNbits;
   1edc0:	00500513          	li	a0,5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:131
		/* truncate high-order word if necessary */
		if ( (i = nbits & (ULbits-1)) !=0)
			*xe &= ((__ULong)0xffffffff) >> (ULbits - i);
		}
	for(x1 = xe;; --x1) {
		if (*x1 != 0)
   1edc4:	06079a63          	bnez	a5,1ee38 <__hexnan+0x1a8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:133
			break;
		if (x1 == x0) {
   1edc8:	0a660863          	beq	a2,t1,1ee78 <__hexnan+0x1e8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:130
	else {
		/* truncate high-order word if necessary */
		if ( (i = nbits & (ULbits-1)) !=0)
			*xe &= ((__ULong)0xffffffff) >> (ULbits - i);
		}
	for(x1 = xe;; --x1) {
   1edcc:	ffc30313          	addi	t1,t1,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:131
		if (*x1 != 0)
   1edd0:	00032783          	lw	a5,0(t1)
   1edd4:	fe078ae3          	beqz	a5,1edc8 <__hexnan+0x138>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:138
		if (x1 == x0) {
			*x1 = 1;
			break;
			}
		}
	return STRTOG_NaNbits;
   1edd8:	00500513          	li	a0,5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:139
}
   1eddc:	02813403          	ld	s0,40(sp)
   1ede0:	02013483          	ld	s1,32(sp)
   1ede4:	01813903          	ld	s2,24(sp)
   1ede8:	01013983          	ld	s3,16(sp)
   1edec:	00813a03          	ld	s4,8(sp)
   1edf0:	03010113          	addi	sp,sp,48
   1edf4:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:106
				break;
				}
			return STRTOG_NaN;
			}
		havedig++;
		if (++i > 8) {
   1edf8:	0018081b          	addiw	a6,a6,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:105
				*sp = s + 1;
				break;
				}
			return STRTOG_NaN;
			}
		havedig++;
   1edfc:	001e8e9b          	addiw	t4,t4,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:106
		if (++i > 8) {
   1ee00:	01045a63          	ble	a6,s0,1ee14 <__hexnan+0x184>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:107
			if (x <= x0)
   1ee04:	eeb67ae3          	bleu	a1,a2,1ecf8 <__hexnan+0x68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:110
				continue;
			i = 1;
			*--x = 0;
   1ee08:	fe05ae23          	sw	zero,-4(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:109
			}
		havedig++;
		if (++i > 8) {
			if (x <= x0)
				continue;
			i = 1;
   1ee0c:	00100813          	li	a6,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:110
			*--x = 0;
   1ee10:	ffc58593          	addi	a1,a1,-4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:112
			}
		*x = ((*x << 4) | (h & 0xf));
   1ee14:	0005a703          	lw	a4,0(a1)
   1ee18:	00f7f793          	andi	a5,a5,15
   1ee1c:	0047171b          	slliw	a4,a4,0x4
   1ee20:	00f767b3          	or	a5,a4,a5
   1ee24:	00f5a023          	sw	a5,0(a1)
   1ee28:	ed1ff06f          	j	1ecf8 <__hexnan+0x68>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:99
					x1 = x;
					i = 0;
					}
				continue;
				}
			if (/*(*/ c == ')') {
   1ee2c:	02900793          	li	a5,41
   1ee30:	06f70863          	beq	a4,a5,1eea0 <__hexnan+0x210>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:103
				*sp = s + 1;
				break;
				}
			return STRTOG_NaN;
   1ee34:	00400513          	li	a0,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:139
			*x1 = 1;
			break;
			}
		}
	return STRTOG_NaNbits;
}
   1ee38:	02813403          	ld	s0,40(sp)
   1ee3c:	02013483          	ld	s1,32(sp)
   1ee40:	01813903          	ld	s2,24(sp)
   1ee44:	01013983          	ld	s3,16(sp)
   1ee48:	00813a03          	ld	s4,8(sp)
   1ee4c:	03010113          	addi	sp,sp,48
   1ee50:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:128
			while(x1 <= xe);
		}
	else {
		/* truncate high-order word if necessary */
		if ( (i = nbits & (ULbits-1)) !=0)
			*xe &= ((__ULong)0xffffffff) >> (ULbits - i);
   1ee54:	ffc4a783          	lw	a5,-4(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:127
		do *x1++ = 0;
			while(x1 <= xe);
		}
	else {
		/* truncate high-order word if necessary */
		if ( (i = nbits & (ULbits-1)) !=0)
   1ee58:	f60904e3          	beqz	s2,1edc0 <__hexnan+0x130>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:128
			*xe &= ((__ULong)0xffffffff) >> (ULbits - i);
   1ee5c:	02000713          	li	a4,32
   1ee60:	4127093b          	subw	s2,a4,s2
   1ee64:	fff00713          	li	a4,-1
   1ee68:	0127573b          	srlw	a4,a4,s2
   1ee6c:	00f777b3          	and	a5,a4,a5
   1ee70:	fef4ae23          	sw	a5,-4(s1)
   1ee74:	f4dff06f          	j	1edc0 <__hexnan+0x130>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:134
		}
	for(x1 = xe;; --x1) {
		if (*x1 != 0)
			break;
		if (x1 == x0) {
			*x1 = 1;
   1ee78:	00100793          	li	a5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:138
			break;
			}
		}
	return STRTOG_NaNbits;
   1ee7c:	00500513          	li	a0,5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:139
}
   1ee80:	02813403          	ld	s0,40(sp)
   1ee84:	02013483          	ld	s1,32(sp)
   1ee88:	01813903          	ld	s2,24(sp)
   1ee8c:	01013983          	ld	s3,16(sp)
   1ee90:	00813a03          	ld	s4,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:134
		}
	for(x1 = xe;; --x1) {
		if (*x1 != 0)
			break;
		if (x1 == x0) {
			*x1 = 1;
   1ee94:	00f32023          	sw	a5,0(t1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:139
			break;
			}
		}
	return STRTOG_NaNbits;
}
   1ee98:	03010113          	addi	sp,sp,48
   1ee9c:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:100
					i = 0;
					}
				continue;
				}
			if (/*(*/ c == ')') {
				*sp = s + 1;
   1eea0:	00168693          	addi	a3,a3,1
   1eea4:	00d53023          	sd	a3,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:114
			i = 1;
			*--x = 0;
			}
		*x = ((*x << 4) | (h & 0xf));
		}
	if (!havedig)
   1eea8:	ee0e90e3          	bnez	t4,1ed88 <__hexnan+0xf8>
   1eeac:	f89ff06f          	j	1ee34 <__hexnan+0x1a4>
L_shift():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:55
	__ULong *x1 _AND
	int i)
{
	int j;

	i = 8 - i;
   1eeb0:	00800793          	li	a5,8
   1eeb4:	4107883b          	subw	a6,a5,a6
   1eeb8:	0005a683          	lw	a3,0(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:56
	i <<= 2;
   1eebc:	0028181b          	slliw	a6,a6,0x2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:57
	j = ULbits - i;
   1eec0:	02000893          	li	a7,32
   1eec4:	410888bb          	subw	a7,a7,a6
   1eec8:	00058793          	mv	a5,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:59
	do {
		*x |= x[1] << j;
   1eecc:	0047a503          	lw	a0,4(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:61
		x[1] >>= i;
		} while(++x < x1);
   1eed0:	00478793          	addi	a5,a5,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:59

	i = 8 - i;
	i <<= 2;
	j = ULbits - i;
	do {
		*x |= x[1] << j;
   1eed4:	0115173b          	sllw	a4,a0,a7
   1eed8:	00d76733          	or	a4,a4,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:60
		x[1] >>= i;
   1eedc:	010556bb          	srlw	a3,a0,a6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:59

	i = 8 - i;
	i <<= 2;
	j = ULbits - i;
	do {
		*x |= x[1] << j;
   1eee0:	fee7ae23          	sw	a4,-4(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:60
		x[1] >>= i;
   1eee4:	00d7a023          	sw	a3,0(a5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/gdtoa-hexnan.c:61
		} while(++x < x1);
   1eee8:	ffe7e2e3          	bltu	a5,t5,1eecc <__hexnan+0x23c>
   1eeec:	ea9ff06f          	j	1ed94 <__hexnan+0x104>

000000000001eef0 <strncmp>:
strncmp():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:84
  return (*(unsigned char *) s1) - (*(unsigned char *) s2);
#else
  unsigned long *a1;
  unsigned long *a2;

  if (n == 0)
   1eef0:	0c060263          	beqz	a2,1efb4 <strncmp+0xc4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:88
    return 0;

  /* If s1 or s2 are unaligned, then compare bytes. */
  if (!UNALIGNED (s1, s2))
   1eef4:	00b567b3          	or	a5,a0,a1
   1eef8:	0077f793          	andi	a5,a5,7
   1eefc:	06079e63          	bnez	a5,1ef78 <strncmp+0x88>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:93
    {
      /* If s1 and s2 are word-aligned, compare them a word at a time. */
      a1 = (unsigned long*)s1;
      a2 = (unsigned long*)s2;
      while (n >= sizeof (long) && *a1 == *a2)
   1ef00:	00700893          	li	a7,7
   1ef04:	06c8fa63          	bleu	a2,a7,1ef78 <strncmp+0x88>
   1ef08:	00053783          	ld	a5,0(a0)
   1ef0c:	0005b703          	ld	a4,0(a1)
   1ef10:	06e79463          	bne	a5,a4,1ef78 <strncmp+0x88>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:95
        {
          n -= sizeof (long);
   1ef14:	ff860613          	addi	a2,a2,-8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:99

          /* If we've run out of bytes or hit a null, return zero
	     since we already know *a1 == *a2.  */
          if (n == 0 || DETECTNULL (*a1))
   1ef18:	08060e63          	beqz	a2,1efb4 <strncmp+0xc4>
   1ef1c:	00024737          	lui	a4,0x24
   1ef20:	4e873e03          	ld	t3,1256(a4) # 244e8 <mask+0x50>
   1ef24:	00024737          	lui	a4,0x24
   1ef28:	4f073303          	ld	t1,1264(a4) # 244f0 <mask+0x58>
   1ef2c:	fff7c713          	not	a4,a5
   1ef30:	01c787b3          	add	a5,a5,t3
   1ef34:	00f777b3          	and	a5,a4,a5
   1ef38:	0067f7b3          	and	a5,a5,t1
   1ef3c:	02078863          	beqz	a5,1ef6c <strncmp+0x7c>
   1ef40:	0740006f          	j	1efb4 <strncmp+0xc4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:93 (discriminator 1)
  if (!UNALIGNED (s1, s2))
    {
      /* If s1 and s2 are word-aligned, compare them a word at a time. */
      a1 = (unsigned long*)s1;
      a2 = (unsigned long*)s2;
      while (n >= sizeof (long) && *a1 == *a2)
   1ef44:	00053703          	ld	a4,0(a0)
   1ef48:	0005b683          	ld	a3,0(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:99
        {
          n -= sizeof (long);

          /* If we've run out of bytes or hit a null, return zero
	     since we already know *a1 == *a2.  */
          if (n == 0 || DETECTNULL (*a1))
   1ef4c:	01c70833          	add	a6,a4,t3
   1ef50:	fff74793          	not	a5,a4
   1ef54:	00f877b3          	and	a5,a6,a5
   1ef58:	0067f7b3          	and	a5,a5,t1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:93
  if (!UNALIGNED (s1, s2))
    {
      /* If s1 and s2 are word-aligned, compare them a word at a time. */
      a1 = (unsigned long*)s1;
      a2 = (unsigned long*)s2;
      while (n >= sizeof (long) && *a1 == *a2)
   1ef5c:	00d71e63          	bne	a4,a3,1ef78 <strncmp+0x88>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:95
        {
          n -= sizeof (long);
   1ef60:	ff860613          	addi	a2,a2,-8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:99

          /* If we've run out of bytes or hit a null, return zero
	     since we already know *a1 == *a2.  */
          if (n == 0 || DETECTNULL (*a1))
   1ef64:	04060863          	beqz	a2,1efb4 <strncmp+0xc4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:99 (discriminator 1)
   1ef68:	04079663          	bnez	a5,1efb4 <strncmp+0xc4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:102
	    return 0;

          a1++;
   1ef6c:	00850513          	addi	a0,a0,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:103
          a2++;
   1ef70:	00858593          	addi	a1,a1,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:93
  if (!UNALIGNED (s1, s2))
    {
      /* If s1 and s2 are word-aligned, compare them a word at a time. */
      a1 = (unsigned long*)s1;
      a2 = (unsigned long*)s2;
      while (n >= sizeof (long) && *a1 == *a2)
   1ef74:	fcc8e8e3          	bltu	a7,a2,1ef44 <strncmp+0x54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:111
      /* A difference was detected in last few bytes of s1, so search bytewise */
      s1 = (char*)a1;
      s2 = (char*)a2;
    }

  while (n-- > 0 && *s1 == *s2)
   1ef78:	00054703          	lbu	a4,0(a0)
   1ef7c:	0005c783          	lbu	a5,0(a1)
   1ef80:	fff60613          	addi	a2,a2,-1
   1ef84:	02e79c63          	bne	a5,a4,1efbc <strncmp+0xcc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:115
    {
      /* If we've run out of bytes or hit a null, return zero
	 since we already know *s1 == *s2.  */
      if (n == 0 || *s1 == '\0')
   1ef88:	02060663          	beqz	a2,1efb4 <strncmp+0xc4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:115 (discriminator 1)
   1ef8c:	02078463          	beqz	a5,1efb4 <strncmp+0xc4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:117
	return 0;
      s1++;
   1ef90:	00150513          	addi	a0,a0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:118
      s2++;
   1ef94:	00158593          	addi	a1,a1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:111
      /* A difference was detected in last few bytes of s1, so search bytewise */
      s1 = (char*)a1;
      s2 = (char*)a2;
    }

  while (n-- > 0 && *s1 == *s2)
   1ef98:	00054783          	lbu	a5,0(a0)
   1ef9c:	0005c703          	lbu	a4,0(a1)
   1efa0:	fff60613          	addi	a2,a2,-1
   1efa4:	fee782e3          	beq	a5,a4,1ef88 <strncmp+0x98>
   1efa8:	00070513          	mv	a0,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:120
      if (n == 0 || *s1 == '\0')
	return 0;
      s1++;
      s2++;
    }
  return (*(unsigned char *) s1) - (*(unsigned char *) s2);
   1efac:	40a7853b          	subw	a0,a5,a0
   1efb0:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:85
#else
  unsigned long *a1;
  unsigned long *a2;

  if (n == 0)
    return 0;
   1efb4:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:122
      s1++;
      s2++;
    }
  return (*(unsigned char *) s1) - (*(unsigned char *) s2);
#endif /* not PREFER_SIZE_OVER_SPEED */
}
   1efb8:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/string/strncmp.c:111
      /* A difference was detected in last few bytes of s1, so search bytewise */
      s1 = (char*)a1;
      s2 = (char*)a2;
    }

  while (n-- > 0 && *s1 == *s2)
   1efbc:	00078513          	mv	a0,a5
   1efc0:	00070793          	mv	a5,a4
   1efc4:	fe9ff06f          	j	1efac <strncmp+0xbc>

000000000001efc8 <__ssprint_r>:
__ssprint_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:283
	register _CONST char *p = NULL;

	iov = uio->uio_iov;
	len = 0;

	if (uio->uio_resid == 0) {
   1efc8:	01063783          	ld	a5,16(a2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:274
int
_DEFUN(__ssprint_r, (ptr, fp, uio),
       struct _reent *ptr _AND
       FILE *fp _AND
       register struct __suio *uio)
{
   1efcc:	fa010113          	addi	sp,sp,-96
   1efd0:	03413823          	sd	s4,48(sp)
   1efd4:	04113c23          	sd	ra,88(sp)
   1efd8:	04813823          	sd	s0,80(sp)
   1efdc:	04913423          	sd	s1,72(sp)
   1efe0:	05213023          	sd	s2,64(sp)
   1efe4:	03313c23          	sd	s3,56(sp)
   1efe8:	03513423          	sd	s5,40(sp)
   1efec:	03613023          	sd	s6,32(sp)
   1eff0:	01713c23          	sd	s7,24(sp)
   1eff4:	01813823          	sd	s8,16(sp)
   1eff8:	01913423          	sd	s9,8(sp)
   1effc:	01a13023          	sd	s10,0(sp)
   1f000:	00060a13          	mv	s4,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:283
	register _CONST char *p = NULL;

	iov = uio->uio_iov;
	len = 0;

	if (uio->uio_resid == 0) {
   1f004:	06078a63          	beqz	a5,1f078 <__ssprint_r+0xb0>
   1f008:	00050a93          	mv	s5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:280
	register size_t len;
	register int w;
	register struct __siov *iov;
	register _CONST char *p = NULL;

	iov = uio->uio_iov;
   1f00c:	00063b83          	ld	s7,0(a2)
   1f010:	0005b503          	ld	a0,0(a1)
   1f014:	00c5a403          	lw	s0,12(a1)
   1f018:	00058993          	mv	s3,a1
   1f01c:	00000c13          	li	s8,0
   1f020:	00000493          	li	s1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:289
		uio->uio_iovcnt = 0;
		return (0);
	}

        do {
		while (len == 0) {
   1f024:	08048a63          	beqz	s1,1f0b8 <__ssprint_r+0xf0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:295
			p = iov->iov_base;
			len = iov->iov_len;
			iov++;
		}
		w = fp->_w;
		if (len >= w && fp->_flags & (__SMBF | __SOPT)) {
   1f028:	00040b13          	mv	s6,s0
   1f02c:	0884fe63          	bleu	s0,s1,1f0c8 <__ssprint_r+0x100>
   1f030:	0004841b          	sext.w	s0,s1
   1f034:	00040913          	mv	s2,s0
   1f038:	00090b13          	mv	s6,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:342
			w = len;
			fp->_w = newsize - curpos;
		}
		if (len < w)
			w = len;
		(void)memmove ((_PTR) fp->_p, (_PTR) p, (size_t) (w));
   1f03c:	000c0593          	mv	a1,s8
   1f040:	000b0613          	mv	a2,s6
   1f044:	a0df80ef          	jal	17a50 <memmove>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:343
		fp->_w -= w;
   1f048:	00c9a703          	lw	a4,12(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:344
		fp->_p += w;
   1f04c:	0009b503          	ld	a0,0(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:348
		w = len;          /* pretend we copied all */
		p += w;
		len -= w;
        } while ((uio->uio_resid -= w) != 0);
   1f050:	010a3783          	ld	a5,16(s4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:343
			fp->_w = newsize - curpos;
		}
		if (len < w)
			w = len;
		(void)memmove ((_PTR) fp->_p, (_PTR) p, (size_t) (w));
		fp->_w -= w;
   1f054:	4087043b          	subw	s0,a4,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:344
		fp->_p += w;
   1f058:	01650533          	add	a0,a0,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:343
			fp->_w = newsize - curpos;
		}
		if (len < w)
			w = len;
		(void)memmove ((_PTR) fp->_p, (_PTR) p, (size_t) (w));
		fp->_w -= w;
   1f05c:	0089a623          	sw	s0,12(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:344
		fp->_p += w;
   1f060:	00a9b023          	sd	a0,0(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:348
		w = len;          /* pretend we copied all */
		p += w;
		len -= w;
        } while ((uio->uio_resid -= w) != 0);
   1f064:	412787b3          	sub	a5,a5,s2
   1f068:	00fa3823          	sd	a5,16(s4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:346
			w = len;
		(void)memmove ((_PTR) fp->_p, (_PTR) p, (size_t) (w));
		fp->_w -= w;
		fp->_p += w;
		w = len;          /* pretend we copied all */
		p += w;
   1f06c:	012c0c33          	add	s8,s8,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:347
		len -= w;
   1f070:	412484b3          	sub	s1,s1,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:348
        } while ((uio->uio_resid -= w) != 0);
   1f074:	fa0798e3          	bnez	a5,1f024 <__ssprint_r+0x5c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:284

	iov = uio->uio_iov;
	len = 0;

	if (uio->uio_resid == 0) {
		uio->uio_iovcnt = 0;
   1f078:	000a2423          	sw	zero,8(s4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:285
		return (0);
   1f07c:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:359
err:
  fp->_flags |= __SERR;
  uio->uio_resid = 0;
  uio->uio_iovcnt = 0;
  return EOF;
}
   1f080:	05813083          	ld	ra,88(sp)
   1f084:	05013403          	ld	s0,80(sp)
   1f088:	04813483          	ld	s1,72(sp)
   1f08c:	04013903          	ld	s2,64(sp)
   1f090:	03813983          	ld	s3,56(sp)
   1f094:	03013a03          	ld	s4,48(sp)
   1f098:	02813a83          	ld	s5,40(sp)
   1f09c:	02013b03          	ld	s6,32(sp)
   1f0a0:	01813b83          	ld	s7,24(sp)
   1f0a4:	01013c03          	ld	s8,16(sp)
   1f0a8:	00813c83          	ld	s9,8(sp)
   1f0ac:	00013d03          	ld	s10,0(sp)
   1f0b0:	06010113          	addi	sp,sp,96
   1f0b4:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:290
		return (0);
	}

        do {
		while (len == 0) {
			p = iov->iov_base;
   1f0b8:	000bbc03          	ld	s8,0(s7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:291
			len = iov->iov_len;
   1f0bc:	008bb483          	ld	s1,8(s7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:292
			iov++;
   1f0c0:	010b8b93          	addi	s7,s7,16
   1f0c4:	f61ff06f          	j	1f024 <__ssprint_r+0x5c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:295 (discriminator 1)
		}
		w = fp->_w;
		if (len >= w && fp->_flags & (__SMBF | __SOPT)) {
   1f0c8:	0109d703          	lhu	a4,16(s3)
   1f0cc:	0004891b          	sext.w	s2,s1
   1f0d0:	48077793          	andi	a5,a4,1152
   1f0d4:	f60784e3          	beqz	a5,1f03c <__ssprint_r+0x74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:306
			 * than (1+sqrt(5))/2 to accomodate malloc
		 	 * overhead. asprintf EXPECTS us to overallocate, so
		 	 * that it can add a trailing \0 without
		 	 * reallocating.  The new allocation should thus be
		 	 * max(prev_size*1.5, curpos+len+1). */
			int newsize = fp->_bf._size * 3 / 2;
   1f0d8:	0209ab03          	lw	s6,32(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:298
		}
		w = fp->_w;
		if (len >= w && fp->_flags & (__SMBF | __SOPT)) {
			/* must be asprintf family */
			unsigned char *str;
			int curpos = (fp->_p - fp->_bf._base);
   1f0dc:	0189b583          	ld	a1,24(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:307
		 	 * overhead. asprintf EXPECTS us to overallocate, so
		 	 * that it can add a trailing \0 without
		 	 * reallocating.  The new allocation should thus be
		 	 * max(prev_size*1.5, curpos+len+1). */
			int newsize = fp->_bf._size * 3 / 2;
			if (newsize < curpos + len + 1)
   1f0e0:	00148693          	addi	a3,s1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:306
			 * than (1+sqrt(5))/2 to accomodate malloc
		 	 * overhead. asprintf EXPECTS us to overallocate, so
		 	 * that it can add a trailing \0 without
		 	 * reallocating.  The new allocation should thus be
		 	 * max(prev_size*1.5, curpos+len+1). */
			int newsize = fp->_bf._size * 3 / 2;
   1f0e4:	001b179b          	slliw	a5,s6,0x1
   1f0e8:	01678b3b          	addw	s6,a5,s6
   1f0ec:	01fb579b          	srliw	a5,s6,0x1f
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:298
		}
		w = fp->_w;
		if (len >= w && fp->_flags & (__SMBF | __SOPT)) {
			/* must be asprintf family */
			unsigned char *str;
			int curpos = (fp->_p - fp->_bf._base);
   1f0f0:	40b50533          	sub	a0,a0,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:306
			 * than (1+sqrt(5))/2 to accomodate malloc
		 	 * overhead. asprintf EXPECTS us to overallocate, so
		 	 * that it can add a trailing \0 without
		 	 * reallocating.  The new allocation should thus be
		 	 * max(prev_size*1.5, curpos+len+1). */
			int newsize = fp->_bf._size * 3 / 2;
   1f0f4:	01678b3b          	addw	s6,a5,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:298
		}
		w = fp->_w;
		if (len >= w && fp->_flags & (__SMBF | __SOPT)) {
			/* must be asprintf family */
			unsigned char *str;
			int curpos = (fp->_p - fp->_bf._base);
   1f0f8:	00050c9b          	sext.w	s9,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:306
			 * than (1+sqrt(5))/2 to accomodate malloc
		 	 * overhead. asprintf EXPECTS us to overallocate, so
		 	 * that it can add a trailing \0 without
		 	 * reallocating.  The new allocation should thus be
		 	 * max(prev_size*1.5, curpos+len+1). */
			int newsize = fp->_bf._size * 3 / 2;
   1f0fc:	401b5b1b          	sraiw	s6,s6,0x1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:307
			if (newsize < curpos + len + 1)
   1f100:	000c8913          	mv	s2,s9
   1f104:	000b0613          	mv	a2,s6
   1f108:	012687b3          	add	a5,a3,s2
   1f10c:	00f67863          	bleu	a5,a2,1f11c <__ssprint_r+0x154>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:308
				newsize = curpos + len + 1;
   1f110:	00148b1b          	addiw	s6,s1,1
   1f114:	019b0b3b          	addw	s6,s6,s9
   1f118:	000b0613          	mv	a2,s6
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:309
			if (fp->_flags & __SOPT)
   1f11c:	40077713          	andi	a4,a4,1024
   1f120:	06070063          	beqz	a4,1f180 <__ssprint_r+0x1b8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:312
			{
				/* asnprintf leaves original buffer alone.  */
				str = (unsigned char *)_malloc_r (ptr, newsize);
   1f124:	00060593          	mv	a1,a2
   1f128:	000a8513          	mv	a0,s5
   1f12c:	be1f10ef          	jal	10d0c <_malloc_r>
   1f130:	00050d13          	mv	s10,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:313
				if (!str)
   1f134:	06050463          	beqz	a0,1f19c <__ssprint_r+0x1d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:318
				{
					ptr->_errno = ENOMEM;
					goto err;
				}
				memcpy (str, fp->_bf._base, curpos);
   1f138:	0189b583          	ld	a1,24(s3)
   1f13c:	00090613          	mv	a2,s2
   1f140:	895f10ef          	jal	109d4 <memcpy>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:319
				fp->_flags = (fp->_flags & ~__SOPT) | __SMBF;
   1f144:	0109d783          	lhu	a5,16(s3)
   1f148:	b7f7f793          	andi	a5,a5,-1153
   1f14c:	0807e793          	ori	a5,a5,128
   1f150:	00f99823          	sh	a5,16(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:337
				}
			}
			fp->_bf._base = str;
			fp->_p = str + curpos;
			fp->_bf._size = newsize;
			w = len;
   1f154:	0004841b          	sext.w	s0,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:335
					ptr->_errno = ENOMEM;
					goto err;
				}
			}
			fp->_bf._base = str;
			fp->_p = str + curpos;
   1f158:	012d0533          	add	a0,s10,s2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:338
			fp->_bf._size = newsize;
			w = len;
			fp->_w = newsize - curpos;
   1f15c:	419b0cbb          	subw	s9,s6,s9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:336
					goto err;
				}
			}
			fp->_bf._base = str;
			fp->_p = str + curpos;
			fp->_bf._size = newsize;
   1f160:	0369a023          	sw	s6,32(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:334
					 * changed it.  */
					ptr->_errno = ENOMEM;
					goto err;
				}
			}
			fp->_bf._base = str;
   1f164:	01a9bc23          	sd	s10,24(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:335
			fp->_p = str + curpos;
   1f168:	00a9b023          	sd	a0,0(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:338
			fp->_bf._size = newsize;
			w = len;
			fp->_w = newsize - curpos;
   1f16c:	0199a623          	sw	s9,12(s3)
   1f170:	00040913          	mv	s2,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:340
		}
		if (len < w)
   1f174:	00040b13          	mv	s6,s0
   1f178:	ed24f2e3          	bleu	s2,s1,1f03c <__ssprint_r+0x74>
   1f17c:	ebdff06f          	j	1f038 <__ssprint_r+0x70>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:323
				memcpy (str, fp->_bf._base, curpos);
				fp->_flags = (fp->_flags & ~__SOPT) | __SMBF;
			}
			else
			{
				str = (unsigned char *)_realloc_r (ptr, fp->_bf._base,
   1f180:	000a8513          	mv	a0,s5
   1f184:	b2df90ef          	jal	18cb0 <_realloc_r>
   1f188:	00050d13          	mv	s10,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:325
						newsize);
				if (!str) {
   1f18c:	fc0514e3          	bnez	a0,1f154 <__ssprint_r+0x18c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:327
					/* Free unneeded buffer.  */
					_free_r (ptr, fp->_bf._base);
   1f190:	0189b583          	ld	a1,24(s3)
   1f194:	000a8513          	mv	a0,s5
   1f198:	99df70ef          	jal	16b34 <_free_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:330
					/* Ensure correct errno, even if free
					 * changed it.  */
					ptr->_errno = ENOMEM;
   1f19c:	00c00793          	li	a5,12
   1f1a0:	00faa023          	sw	a5,0(s5)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:355
	uio->uio_resid = 0;
	uio->uio_iovcnt = 0;
	return 0;

err:
  fp->_flags |= __SERR;
   1f1a4:	0109d783          	lhu	a5,16(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:358
  uio->uio_resid = 0;
  uio->uio_iovcnt = 0;
  return EOF;
   1f1a8:	fff00513          	li	a0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:355
	uio->uio_resid = 0;
	uio->uio_iovcnt = 0;
	return 0;

err:
  fp->_flags |= __SERR;
   1f1ac:	0407e793          	ori	a5,a5,64
   1f1b0:	00f99823          	sh	a5,16(s3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:356
  uio->uio_resid = 0;
   1f1b4:	000a3823          	sd	zero,16(s4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:357
  uio->uio_iovcnt = 0;
   1f1b8:	000a2423          	sw	zero,8(s4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:358
  return EOF;
   1f1bc:	ec5ff06f          	j	1f080 <__ssprint_r+0xb8>

000000000001f1c0 <_svfiprintf_r>:
_svfiprintf_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:880
		return (__sbprintf (data, fp, fmt0, ap));
	}
#endif
#else /* STRING_ONLY */
        /* Create initial buffer if we are called by asprintf family.  */
        if (fp->_flags & __SMBF && !fp->_bf._base)
   1f1c0:	0105d783          	lhu	a5,16(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:668
_DEFUN(_VFPRINTF_R, (data, fp, fmt0, ap),
       struct _reent *data _AND
       FILE * fp           _AND
       _CONST char *fmt0   _AND
       va_list ap)
{
   1f1c4:	e7010113          	addi	sp,sp,-400
   1f1c8:	16913c23          	sd	s1,376(sp)
   1f1cc:	15613823          	sd	s6,336(sp)
   1f1d0:	15713423          	sd	s7,328(sp)
   1f1d4:	18113423          	sd	ra,392(sp)
   1f1d8:	18813023          	sd	s0,384(sp)
   1f1dc:	17213823          	sd	s2,368(sp)
   1f1e0:	17313423          	sd	s3,360(sp)
   1f1e4:	17413023          	sd	s4,352(sp)
   1f1e8:	15513c23          	sd	s5,344(sp)
   1f1ec:	15813023          	sd	s8,320(sp)
   1f1f0:	13913c23          	sd	s9,312(sp)
   1f1f4:	13a13823          	sd	s10,304(sp)
   1f1f8:	13b13423          	sd	s11,296(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:880
		return (__sbprintf (data, fp, fmt0, ap));
	}
#endif
#else /* STRING_ONLY */
        /* Create initial buffer if we are called by asprintf family.  */
        if (fp->_flags & __SMBF && !fp->_bf._base)
   1f1fc:	0807f793          	andi	a5,a5,128
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:668
_DEFUN(_VFPRINTF_R, (data, fp, fmt0, ap),
       struct _reent *data _AND
       FILE * fp           _AND
       _CONST char *fmt0   _AND
       va_list ap)
{
   1f200:	02d13023          	sd	a3,32(sp)
   1f204:	00058b13          	mv	s6,a1
   1f208:	00050b93          	mv	s7,a0
   1f20c:	00060493          	mv	s1,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:880
		return (__sbprintf (data, fp, fmt0, ap));
	}
#endif
#else /* STRING_ONLY */
        /* Create initial buffer if we are called by asprintf family.  */
        if (fp->_flags & __SMBF && !fp->_bf._base)
   1f210:	00078663          	beqz	a5,1f21c <_svfiprintf_r+0x5c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:880 (discriminator 1)
   1f214:	0185b783          	ld	a5,24(a1)
   1f218:	440786e3          	beqz	a5,1fe64 <_svfiprintf_r+0xca4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:894
        }
#endif /* STRING_ONLY */

	fmt = (char *)fmt0;
#ifdef _FVWRITE_IN_STREAMIO
	uio.uio_iov = iovp = iov;
   1f21c:	0a010993          	addi	s3,sp,160
   1f220:	09f10793          	addi	a5,sp,159
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   1f224:	000216b7          	lui	a3,0x21
   1f228:	40f98733          	sub	a4,s3,a5
   1f22c:	37868693          	addi	a3,a3,888 # 21378 <__hexdig+0x100>
   1f230:	00021937          	lui	s2,0x21
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:894
        }
#endif /* STRING_ONLY */

	fmt = (char *)fmt0;
#ifdef _FVWRITE_IN_STREAMIO
	uio.uio_iov = iovp = iov;
   1f234:	07313023          	sd	s3,96(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:895
	uio.uio_resid = 0;
   1f238:	06013823          	sd	zero,112(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:896
	uio.uio_iovcnt = 0;
   1f23c:	06012423          	sw	zero,104(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:894
        }
#endif /* STRING_ONLY */

	fmt = (char *)fmt0;
#ifdef _FVWRITE_IN_STREAMIO
	uio.uio_iov = iovp = iov;
   1f240:	00098793          	mv	a5,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:718
	u_quad_t _uquad;	/* integer arguments %[diouxX] */
	enum { OCT, DEC, HEX } base;/* base for [diouxX] conversion */
	int dprec;		/* a copy of prec if [diouxX], 0 otherwise */
	int realsz;		/* field size expanded by dprec */
	int size;		/* size of converted field or string */
	char *xdigs = NULL;	/* digits for [xX] conversion */
   1f244:	02013823          	sd	zero,48(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:898
#ifdef _FVWRITE_IN_STREAMIO
	uio.uio_iov = iovp = iov;
	uio.uio_resid = 0;
	uio.uio_iovcnt = 0;
#endif
	ret = 0;
   1f248:	00012e23          	sw	zero,28(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   1f24c:	02d13423          	sd	a3,40(sp)
   1f250:	4e090913          	addi	s2,s2,1248 # 214e0 <blanks.4122>
   1f254:	04e12623          	sw	a4,76(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:925
                    else if (wc == '%')
                        break;
                    fmt += n;
		}
#else
                while (*fmt != '\0' && *fmt != '%')
   1f258:	0004c703          	lbu	a4,0(s1)
   1f25c:	080704e3          	beqz	a4,1fae4 <_svfiprintf_r+0x924>
   1f260:	02500693          	li	a3,37
   1f264:	00048413          	mv	s0,s1
   1f268:	00d71663          	bne	a4,a3,1f274 <_svfiprintf_r+0xb4>
   1f26c:	0580006f          	j	1f2c4 <_svfiprintf_r+0x104>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:925 (discriminator 1)
   1f270:	00d70863          	beq	a4,a3,1f280 <_svfiprintf_r+0xc0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:926
                    fmt += 1;
   1f274:	00140413          	addi	s0,s0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:925
                    else if (wc == '%')
                        break;
                    fmt += n;
		}
#else
                while (*fmt != '\0' && *fmt != '%')
   1f278:	00044703          	lbu	a4,0(s0)
   1f27c:	fe071ae3          	bnez	a4,1f270 <_svfiprintf_r+0xb0>
   1f280:	40940a3b          	subw	s4,s0,s1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:928
                    fmt += 1;
#endif
		if ((m = fmt - cp) != 0) {
   1f284:	040a0063          	beqz	s4,1f2c4 <_svfiprintf_r+0x104>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:929
			PRINT (cp, m);
   1f288:	07013683          	ld	a3,112(sp)
   1f28c:	06812703          	lw	a4,104(sp)
   1f290:	000a0613          	mv	a2,s4
   1f294:	00c686b3          	add	a3,a3,a2
   1f298:	0017071b          	addiw	a4,a4,1
   1f29c:	0097b023          	sd	s1,0(a5)
   1f2a0:	00c7b423          	sd	a2,8(a5)
   1f2a4:	06d13823          	sd	a3,112(sp)
   1f2a8:	06e12423          	sw	a4,104(sp)
   1f2ac:	00700693          	li	a3,7
   1f2b0:	01078793          	addi	a5,a5,16
   1f2b4:	1ae6c4e3          	blt	a3,a4,1fc5c <_svfiprintf_r+0xa9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:930
			ret += m;
   1f2b8:	01c12703          	lw	a4,28(sp)
   1f2bc:	0147073b          	addw	a4,a4,s4
   1f2c0:	00e12e23          	sw	a4,28(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:936
		}
#ifdef _MB_CAPABLE
		if (n <= 0)
                    goto done;
#else
                if (*fmt == '\0')
   1f2c4:	00044703          	lbu	a4,0(s0)
   1f2c8:	020702e3          	beqz	a4,1faec <_svfiprintf_r+0x92c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:940
                    goto done;
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */
   1f2cc:	00140493          	addi	s1,s0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:946

		flags = 0;
		dprec = 0;
		width = 0;
		prec = -1;
		sign = '\0';
   1f2d0:	04010ba3          	sb	zero,87(sp)
   1f2d4:	00000513          	li	a0,0
   1f2d8:	00000813          	li	a6,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:945
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
		width = 0;
		prec = -1;
   1f2dc:	fff00413          	li	s0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:944
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
		width = 0;
   1f2e0:	00012a23          	sw	zero,20(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:942
                    goto done;
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
   1f2e4:	00000a93          	li	s5,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   1f2e8:	05800613          	li	a2,88
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1092
		case '5': case '6': case '7': case '8': case '9':
			n = 0;
			do {
				n = 10 * n + to_digit (ch);
				ch = *fmt++;
			} while (is_digit (ch));
   1f2ec:	00900593          	li	a1,9
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1033
			goto rflag;
		case '+':
			sign = '+';
			goto rflag;
		case '.':
			if ((ch = *fmt++) == '*') {
   1f2f0:	02a00893          	li	a7,42
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:958
#ifndef _NO_POS_ARGS
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
   1f2f4:	0004c683          	lbu	a3,0(s1)
   1f2f8:	00148493          	addi	s1,s1,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
reswitch:	switch (ch) {
   1f2fc:	fe06871b          	addiw	a4,a3,-32
   1f300:	1ee66263          	bltu	a2,a4,1f4e4 <_svfiprintf_r+0x324>
   1f304:	02813303          	ld	t1,40(sp)
   1f308:	02071713          	slli	a4,a4,0x20
   1f30c:	01e75713          	srli	a4,a4,0x1e
   1f310:	00670733          	add	a4,a4,t1
   1f314:	00072703          	lw	a4,0(a4)
   1f318:	00070067          	jr	a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1130
			} else
#endif
				flags |= LONGINT;
			goto rflag;
		case 'q': /* extension */
			flags |= QUADINT;
   1f31c:	010aea93          	ori	s5,s5,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1131
			goto rflag;
   1f320:	fd5ff06f          	j	1f2f4 <_svfiprintf_r+0x134>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1018
			 * ``A negative field width argument is taken as a
			 * - flag followed by a positive field width.''
			 *	-- ANSI X3J11
			 * They don't exclude field widths read from args.
			 */
			width = GET_ARG (n, ap, int);
   1f324:	02013703          	ld	a4,32(sp)
   1f328:	00072683          	lw	a3,0(a4)
   1f32c:	00870713          	addi	a4,a4,8
   1f330:	02e13023          	sd	a4,32(sp)
   1f334:	00d12a23          	sw	a3,20(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1022
#ifndef _NO_POS_ARGS
			is_pos_arg = old_is_pos_arg;
#endif
			if (width >= 0)
   1f338:	fa06dee3          	bgez	a3,1f2f4 <_svfiprintf_r+0x134>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1024
				goto rflag;
			width = -width;
   1f33c:	40d0073b          	negw	a4,a3
   1f340:	00e12a23          	sw	a4,20(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1027
			/* FALLTHROUGH */
		case '-':
			flags |= LADJUST;
   1f344:	004aea93          	ori	s5,s5,4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1028
			goto rflag;
   1f348:	fadff06f          	j	1f2f4 <_svfiprintf_r+0x134>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1430
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
			flags |= HEXPREFIX;
			ox[0] = '0';
   1f34c:	03000713          	li	a4,48
   1f350:	04e10c23          	sb	a4,88(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1431
			ox[1] = ch = 'x';
   1f354:	07800713          	li	a4,120
   1f358:	04e10ca3          	sb	a4,89(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1426
			 * of printable characters, in an implementation-
			 * defined manner.''
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
   1f35c:	02013703          	ld	a4,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1f360:	04010ba3          	sb	zero,87(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1429
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
			flags |= HEXPREFIX;
   1f364:	002ae613          	ori	a2,s5,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1426
			 * of printable characters, in an implementation-
			 * defined manner.''
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
   1f368:	00870693          	addi	a3,a4,8
   1f36c:	00073703          	ld	a4,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1f370:	280442e3          	bltz	s0,1fdf4 <_svfiprintf_r+0xc34>
   1f374:	f7fafa93          	andi	s5,s5,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1426
			 * of printable characters, in an implementation-
			 * defined manner.''
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
   1f378:	02d13023          	sd	a3,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
				flags &= ~ZEROPAD;
   1f37c:	002aea93          	ori	s5,s5,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1f380:	1c070ee3          	beqz	a4,1fd5c <_svfiprintf_r+0xb9c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
   1f384:	000226b7          	lui	a3,0x22
   1f388:	bd068693          	addi	a3,a3,-1072 # 21bd0 <zeroes.4123+0x6e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1f38c:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
   1f390:	02d13823          	sd	a3,48(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572 (discriminator 1)
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1f394:	00098d13          	mv	s10,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1626
					} while (_uquad != 0);
					break;

				case HEX:
					do {
						*--cp = xdigs[_uquad & 15];
   1f398:	03013583          	ld	a1,48(sp)
   1f39c:	00f77693          	andi	a3,a4,15
   1f3a0:	fffd0d13          	addi	s10,s10,-1
   1f3a4:	00d586b3          	add	a3,a1,a3
   1f3a8:	0006c683          	lbu	a3,0(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1627
						_uquad >>= 4;
   1f3ac:	00475713          	srli	a4,a4,0x4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1626
					} while (_uquad != 0);
					break;

				case HEX:
					do {
						*--cp = xdigs[_uquad & 15];
   1f3b0:	00dd0023          	sb	a3,0(s10)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1628
						_uquad >>= 4;
					} while (_uquad);
   1f3b4:	fe0712e3          	bnez	a4,1f398 <_svfiprintf_r+0x1d8>
   1f3b8:	41a98c33          	sub	s8,s3,s10
   1f3bc:	01812c23          	sw	s8,24(sp)
   1f3c0:	0d00006f          	j	1f490 <_svfiprintf_r+0x2d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   1f3c4:	00100513          	li	a0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1030
			/* FALLTHROUGH */
		case '-':
			flags |= LADJUST;
			goto rflag;
		case '+':
			sign = '+';
   1f3c8:	02b00813          	li	a6,43
   1f3cc:	f29ff06f          	j	1f2f4 <_svfiprintf_r+0x134>
   1f3d0:	380514e3          	bnez	a0,1ff58 <_svfiprintf_r+0xd98>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   1f3d4:	010af713          	andi	a4,s5,16
   1f3d8:	44070863          	beqz	a4,1f828 <_svfiprintf_r+0x668>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411 (discriminator 1)
   1f3dc:	02013703          	ld	a4,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1f3e0:	04010ba3          	sb	zero,87(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   1f3e4:	00870693          	addi	a3,a4,8
   1f3e8:	00073703          	ld	a4,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1f3ec:	44044c63          	bltz	s0,1f844 <_svfiprintf_r+0x684>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   1f3f0:	02d13023          	sd	a3,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
				flags &= ~ZEROPAD;
   1f3f4:	f7fafa93          	andi	s5,s5,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1f3f8:	10070ee3          	beqz	a4,1fd14 <_svfiprintf_r+0xb54>
   1f3fc:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572 (discriminator 1)
   1f400:	00098d13          	mv	s10,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1581
				 * a variable; hence this switch.
				 */
				switch (base) {
				case OCT:
					do {
						*--cp = to_char (_uquad & 7);
   1f404:	00777693          	andi	a3,a4,7
   1f408:	fffd0d13          	addi	s10,s10,-1
   1f40c:	0306869b          	addiw	a3,a3,48
   1f410:	00dd0023          	sb	a3,0(s10)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1582
						_uquad >>= 3;
   1f414:	00375713          	srli	a4,a4,0x3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1583
					} while (_uquad);
   1f418:	fe0716e3          	bnez	a4,1f404 <_svfiprintf_r+0x244>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1585
					/* handle octal leading 0 */
					if (flags & ALT && *cp != '0')
   1f41c:	001af713          	andi	a4,s5,1
   1f420:	f8070ce3          	beqz	a4,1f3b8 <_svfiprintf_r+0x1f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1585 (discriminator 1)
   1f424:	03000713          	li	a4,48
   1f428:	f8e688e3          	beq	a3,a4,1f3b8 <_svfiprintf_r+0x1f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1586
						*--cp = '0';
   1f42c:	fffd0693          	addi	a3,s10,-1
   1f430:	40d98c33          	sub	s8,s3,a3
   1f434:	feed0fa3          	sb	a4,-1(s10)
   1f438:	01812c23          	sw	s8,24(sp)
   1f43c:	00068d13          	mv	s10,a3
   1f440:	0500006f          	j	1f490 <_svfiprintf_r+0x2d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:979
			 */
			if (!sign)
				sign = ' ';
			goto rflag;
		case '#':
			flags |= ALT;
   1f444:	001aea93          	ori	s5,s5,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:980
			goto rflag;
   1f448:	eadff06f          	j	1f2f4 <_svfiprintf_r+0x134>
   1f44c:	34051ee3          	bnez	a0,1ffa8 <_svfiprintf_r+0xde8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1195
				size = 1;
			}
			sign = '\0';
			break;
		case 'D':  /* extension */
			flags |= LONGINT;
   1f450:	010aea93          	ori	s5,s5,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199
			/*FALLTHROUGH*/
		case 'd':
		case 'i':
			_uquad = SARG ();
   1f454:	010af713          	andi	a4,s5,16
   1f458:	080702e3          	beqz	a4,1fcdc <_svfiprintf_r+0xb1c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199 (discriminator 1)
   1f45c:	02013683          	ld	a3,32(sp)
   1f460:	0006b703          	ld	a4,0(a3)
   1f464:	00868693          	addi	a3,a3,8
   1f468:	02d13023          	sd	a3,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1203 (discriminator 8)
#ifndef _NO_LONGLONG
			if ((quad_t)_uquad < 0)
#else
			if ((long) _uquad < 0)
   1f46c:	080746e3          	bltz	a4,1fcf8 <_svfiprintf_r+0xb38>
   1f470:	05714603          	lbu	a2,87(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1f474:	38044c63          	bltz	s0,1f80c <_svfiprintf_r+0x64c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   1f478:	f7fafa93          	andi	s5,s5,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1f47c:	22071a63          	bnez	a4,1f6b0 <_svfiprintf_r+0x4f0>
   1f480:	14041ce3          	bnez	s0,1fdd8 <_svfiprintf_r+0xc18>
   1f484:	00000413          	li	s0,0
   1f488:	00012c23          	sw	zero,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1571
			/*
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
   1f48c:	00098d13          	mv	s10,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1678
		 * If flags&FPT, ch must be in [aAeEfg].
		 *
		 * Compute actual size, so we know how much to pad.
		 * size excludes decimal prec; realsz includes it.
		 */
		realsz = dprec > size ? dprec : size;
   1f490:	01812703          	lw	a4,24(sp)
   1f494:	00040c93          	mv	s9,s0
   1f498:	00e45463          	ble	a4,s0,1f4a0 <_svfiprintf_r+0x2e0>
   1f49c:	00070c93          	mv	s9,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1680
		if (sign)
			realsz++;
   1f4a0:	00c03633          	snez	a2,a2
   1f4a4:	00cc8cbb          	addw	s9,s9,a2
   1f4a8:	05c0006f          	j	1f504 <_svfiprintf_r+0x344>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959 (discriminator 1)
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   1f4ac:	00012a23          	sw	zero,20(sp)
   1f4b0:	fd06871b          	addiw	a4,a3,-48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1090
			goto rflag;
		case '1': case '2': case '3': case '4':
		case '5': case '6': case '7': case '8': case '9':
			n = 0;
			do {
				n = 10 * n + to_digit (ch);
   1f4b4:	01412e03          	lw	t3,20(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1091
				ch = *fmt++;
   1f4b8:	00148493          	addi	s1,s1,1
   1f4bc:	fff4c683          	lbu	a3,-1(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1090
			goto rflag;
		case '1': case '2': case '3': case '4':
		case '5': case '6': case '7': case '8': case '9':
			n = 0;
			do {
				n = 10 * n + to_digit (ch);
   1f4c0:	001e131b          	slliw	t1,t3,0x1
   1f4c4:	003e1a1b          	slliw	s4,t3,0x3
   1f4c8:	01430a3b          	addw	s4,t1,s4
   1f4cc:	0147073b          	addw	a4,a4,s4
   1f4d0:	00e12a23          	sw	a4,20(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1092
				ch = *fmt++;
			} while (is_digit (ch));
   1f4d4:	fd06871b          	addiw	a4,a3,-48
   1f4d8:	fce5fee3          	bleu	a4,a1,1f4b4 <_svfiprintf_r+0x2f4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:959
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
reswitch:	switch (ch) {
   1f4dc:	fe06871b          	addiw	a4,a3,-32
   1f4e0:	e2e672e3          	bleu	a4,a2,1f304 <_svfiprintf_r+0x144>
   1f4e4:	260516e3          	bnez	a0,1ff50 <_svfiprintf_r+0xd90>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1653

			size = buf + BUF - cp;
		skipsize:
			break;
		default:	/* "%?" prints ?, unless ? is NUL */
			if (ch == '\0')
   1f4e8:	60068263          	beqz	a3,1faec <_svfiprintf_r+0x92c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1660
			/* pretend it was %c with argument ch */
			cp = buf;
			*cp = ch;
			size = 1;
			sign = '\0';
			break;
   1f4ec:	00100c93          	li	s9,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1657
		default:	/* "%?" prints ?, unless ? is NUL */
			if (ch == '\0')
				goto done;
			/* pretend it was %c with argument ch */
			cp = buf;
			*cp = ch;
   1f4f0:	06d10c23          	sb	a3,120(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1659
			size = 1;
			sign = '\0';
   1f4f4:	04010ba3          	sb	zero,87(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1658
			if (ch == '\0')
				goto done;
			/* pretend it was %c with argument ch */
			cp = buf;
			*cp = ch;
			size = 1;
   1f4f8:	01912c23          	sw	s9,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1656
			break;
		default:	/* "%?" prints ?, unless ? is NUL */
			if (ch == '\0')
				goto done;
			/* pretend it was %c with argument ch */
			cp = buf;
   1f4fc:	07810d13          	addi	s10,sp,120
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1f500:	00000413          	li	s0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1681
		 * size excludes decimal prec; realsz includes it.
		 */
		realsz = dprec > size ? dprec : size;
		if (sign)
			realsz++;
		if (flags & HEXPREFIX)
   1f504:	002af713          	andi	a4,s5,2
   1f508:	02e12c23          	sw	a4,56(sp)
   1f50c:	00070463          	beqz	a4,1f514 <_svfiprintf_r+0x354>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1682
			realsz+= 2;
   1f510:	002c8c9b          	addiw	s9,s9,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1685

		/* right-adjusting blank padding */
		if ((flags & (LADJUST|ZEROPAD)) == 0)
   1f514:	084af713          	andi	a4,s5,132
   1f518:	04e12423          	sw	a4,72(sp)
   1f51c:	38071463          	bnez	a4,1f8a4 <_svfiprintf_r+0x6e4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
			PAD (width - realsz, blanks);
   1f520:	01412703          	lw	a4,20(sp)
   1f524:	41970dbb          	subw	s11,a4,s9
   1f528:	37b05e63          	blez	s11,1f8a4 <_svfiprintf_r+0x6e4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 5)
   1f52c:	01000713          	li	a4,16
   1f530:	07013683          	ld	a3,112(sp)
   1f534:	19b752e3          	ble	s11,a4,1feb8 <_svfiprintf_r+0xcf8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
   1f538:	01000c13          	li	s8,16
   1f53c:	06812703          	lw	a4,104(sp)
   1f540:	05213023          	sd	s2,64(sp)
   1f544:	00700e13          	li	t3,7
   1f548:	000c0a13          	mv	s4,s8
   1f54c:	00c0006f          	j	1f558 <_svfiprintf_r+0x398>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 4)
   1f550:	ff0d8d9b          	addiw	s11,s11,-16
   1f554:	05ba5a63          	ble	s11,s4,1f5a8 <_svfiprintf_r+0x3e8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 6)
   1f558:	01068693          	addi	a3,a3,16
   1f55c:	0017071b          	addiw	a4,a4,1
   1f560:	0127b023          	sd	s2,0(a5)
   1f564:	0187b423          	sd	s8,8(a5)
   1f568:	06d13823          	sd	a3,112(sp)
   1f56c:	06e12423          	sw	a4,104(sp)
   1f570:	01078793          	addi	a5,a5,16
   1f574:	fcee5ee3          	ble	a4,t3,1f550 <_svfiprintf_r+0x390>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 1)
   1f578:	06010613          	addi	a2,sp,96
   1f57c:	000b0593          	mv	a1,s6
   1f580:	000b8513          	mv	a0,s7
   1f584:	01c13423          	sd	t3,8(sp)
   1f588:	a41ff0ef          	jal	1efc8 <__ssprint_r>
   1f58c:	56051c63          	bnez	a0,1fb04 <_svfiprintf_r+0x944>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
   1f590:	ff0d8d9b          	addiw	s11,s11,-16
   1f594:	07013683          	ld	a3,112(sp)
   1f598:	06812703          	lw	a4,104(sp)
   1f59c:	00098793          	mv	a5,s3
   1f5a0:	00813e03          	ld	t3,8(sp)
   1f5a4:	fbba4ae3          	blt	s4,s11,1f558 <_svfiprintf_r+0x398>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 7)
   1f5a8:	04013603          	ld	a2,64(sp)
   1f5ac:	00dd86b3          	add	a3,s11,a3
   1f5b0:	0017071b          	addiw	a4,a4,1
   1f5b4:	00c7b023          	sd	a2,0(a5)
   1f5b8:	01b7b423          	sd	s11,8(a5)
   1f5bc:	06d13823          	sd	a3,112(sp)
   1f5c0:	06e12423          	sw	a4,104(sp)
   1f5c4:	00700613          	li	a2,7
   1f5c8:	01078793          	addi	a5,a5,16
   1f5cc:	2ee65063          	ble	a4,a2,1f8ac <_svfiprintf_r+0x6ec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686 (discriminator 8)
   1f5d0:	06010613          	addi	a2,sp,96
   1f5d4:	000b0593          	mv	a1,s6
   1f5d8:	000b8513          	mv	a0,s7
   1f5dc:	9edff0ef          	jal	1efc8 <__ssprint_r>
   1f5e0:	52051263          	bnez	a0,1fb04 <_svfiprintf_r+0x944>
   1f5e4:	07013683          	ld	a3,112(sp)
   1f5e8:	06812703          	lw	a4,104(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1686
   1f5ec:	00098793          	mv	a5,s3
   1f5f0:	2bc0006f          	j	1f8ac <_svfiprintf_r+0x6ec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1084
			/*
			 * ``Note that 0 is taken as a flag, not as the
			 * beginning of a field width.''
			 *	-- ANSI X3J11
			 */
			flags |= ZEROPAD;
   1f5f4:	080aea93          	ori	s5,s5,128
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1085
			goto rflag;
   1f5f8:	cfdff06f          	j	1f2f4 <_svfiprintf_r+0x134>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1033
			goto rflag;
		case '+':
			sign = '+';
			goto rflag;
		case '.':
			if ((ch = *fmt++) == '*') {
   1f5fc:	0004c683          	lbu	a3,0(s1)
   1f600:	00148493          	addi	s1,s1,1
   1f604:	131688e3          	beq	a3,a7,1ff34 <_svfiprintf_r+0xd74>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1072
				if (prec < 0)
					prec = -1;
				goto rflag;
			}
			n = 0;
			while (is_digit (ch)) {
   1f608:	fd06871b          	addiw	a4,a3,-48
   1f60c:	00000413          	li	s0,0
   1f610:	cee5e6e3          	bltu	a1,a4,1f2fc <_svfiprintf_r+0x13c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1074
				n = 10 * n + to_digit (ch);
				ch = *fmt++;
   1f614:	00148493          	addi	s1,s1,1
   1f618:	fff4c683          	lbu	a3,-1(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1073
					prec = -1;
				goto rflag;
			}
			n = 0;
			while (is_digit (ch)) {
				n = 10 * n + to_digit (ch);
   1f61c:	0014131b          	slliw	t1,s0,0x1
   1f620:	0034141b          	slliw	s0,s0,0x3
   1f624:	0083043b          	addw	s0,t1,s0
   1f628:	00e4043b          	addw	s0,s0,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1072
				if (prec < 0)
					prec = -1;
				goto rflag;
			}
			n = 0;
			while (is_digit (ch)) {
   1f62c:	fd06871b          	addiw	a4,a3,-48
   1f630:	fee5f2e3          	bleu	a4,a1,1f614 <_svfiprintf_r+0x454>
   1f634:	cc0454e3          	bgez	s0,1f2fc <_svfiprintf_r+0x13c>
   1f638:	fff00413          	li	s0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1077
				n = 10 * n + to_digit (ch);
				ch = *fmt++;
			}
			prec = n < 0 ? -1 : n;
			goto reswitch;
   1f63c:	cc1ff06f          	j	1f2fc <_svfiprintf_r+0x13c>
   1f640:	140514e3          	bnez	a0,1ff88 <_svfiprintf_r+0xdc8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1396
#ifndef _NO_LONGLONG
			if (flags & QUADINT)
				*GET_ARG (N, ap, quad_ptr_t) = ret;
			else
#endif
			if (flags & LONGINT)
   1f644:	010af713          	andi	a4,s5,16
   1f648:	76071a63          	bnez	a4,1fdbc <_svfiprintf_r+0xbfc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1399
				*GET_ARG (N, ap, long_ptr_t) = ret;
			else if (flags & SHORTINT)
				*GET_ARG (N, ap, short_ptr_t) = ret;
   1f64c:	02013683          	ld	a3,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1398
				*GET_ARG (N, ap, quad_ptr_t) = ret;
			else
#endif
			if (flags & LONGINT)
				*GET_ARG (N, ap, long_ptr_t) = ret;
			else if (flags & SHORTINT)
   1f650:	040afa93          	andi	s5,s5,64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1399
				*GET_ARG (N, ap, short_ptr_t) = ret;
   1f654:	0006b703          	ld	a4,0(a3)
   1f658:	00868693          	addi	a3,a3,8
   1f65c:	02d13023          	sd	a3,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1398
				*GET_ARG (N, ap, quad_ptr_t) = ret;
			else
#endif
			if (flags & LONGINT)
				*GET_ARG (N, ap, long_ptr_t) = ret;
			else if (flags & SHORTINT)
   1f660:	7c0a8c63          	beqz	s5,1fe38 <_svfiprintf_r+0xc78>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1399
				*GET_ARG (N, ap, short_ptr_t) = ret;
   1f664:	01c15683          	lhu	a3,28(sp)
   1f668:	00d71023          	sh	a3,0(a4)
   1f66c:	bedff06f          	j	1f258 <_svfiprintf_r+0x98>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:975
			/*
			 * ``If the space and + flags both appear, the space
			 * flag will be ignored.''
			 *	-- ANSI X3J11
			 */
			if (!sign)
   1f670:	c80812e3          	bnez	a6,1f2f4 <_svfiprintf_r+0x134>
   1f674:	00100513          	li	a0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:976
				sign = ' ';
   1f678:	02000813          	li	a6,32
   1f67c:	c79ff06f          	j	1f2f4 <_svfiprintf_r+0x134>
   1f680:	100518e3          	bnez	a0,1ff90 <_svfiprintf_r+0xdd0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1f684:	010af713          	andi	a4,s5,16
   1f688:	16070063          	beqz	a4,1f7e8 <_svfiprintf_r+0x628>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536 (discriminator 1)
   1f68c:	02013703          	ld	a4,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1f690:	04010ba3          	sb	zero,87(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1f694:	00870693          	addi	a3,a4,8
   1f698:	00073703          	ld	a4,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1f69c:	16044463          	bltz	s0,1f804 <_svfiprintf_r+0x644>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1f6a0:	02d13023          	sd	a3,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
				flags &= ~ZEROPAD;
   1f6a4:	f7fafa93          	andi	s5,s5,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1f6a8:	00000613          	li	a2,0
   1f6ac:	dc070ae3          	beqz	a4,1f480 <_svfiprintf_r+0x2c0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1591
						*--cp = '0';
					break;

				case DEC:
					/* many numbers are 1 digit */
					if (_uquad < 10) {
   1f6b0:	00900693          	li	a3,9
   1f6b4:	00098d13          	mv	s10,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1599
					}
#ifdef _WANT_IO_C99_FORMATS
					ndig = 0;
#endif
					do {
					  *--cp = to_char (_uquad % 10);
   1f6b8:	00a00593          	li	a1,10
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1591
						*--cp = '0';
					break;

				case DEC:
					/* many numbers are 1 digit */
					if (_uquad < 10) {
   1f6bc:	72e6f063          	bleu	a4,a3,1fddc <_svfiprintf_r+0xc1c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1599 (discriminator 1)
					}
#ifdef _WANT_IO_C99_FORMATS
					ndig = 0;
#endif
					do {
					  *--cp = to_char (_uquad % 10);
   1f6c0:	02b776b3          	remu	a3,a4,a1
   1f6c4:	fffd0d13          	addi	s10,s10,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1620
					       next cases. */
					    if (grouping[1] != '\0')
					      grouping++;
					  }
#endif
					  _uquad /= 10;
   1f6c8:	02b75733          	divu	a4,a4,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1599
					}
#ifdef _WANT_IO_C99_FORMATS
					ndig = 0;
#endif
					do {
					  *--cp = to_char (_uquad % 10);
   1f6cc:	0306869b          	addiw	a3,a3,48
   1f6d0:	00dd0023          	sb	a3,0(s10)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1621
					    if (grouping[1] != '\0')
					      grouping++;
					  }
#endif
					  _uquad /= 10;
					} while (_uquad != 0);
   1f6d4:	ce0702e3          	beqz	a4,1f3b8 <_svfiprintf_r+0x1f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1599
					}
#ifdef _WANT_IO_C99_FORMATS
					ndig = 0;
#endif
					do {
					  *--cp = to_char (_uquad % 10);
   1f6d8:	02b776b3          	remu	a3,a4,a1
   1f6dc:	fffd0d13          	addi	s10,s10,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1620
					       next cases. */
					    if (grouping[1] != '\0')
					      grouping++;
					  }
#endif
					  _uquad /= 10;
   1f6e0:	02b75733          	divu	a4,a4,a1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1599
					}
#ifdef _WANT_IO_C99_FORMATS
					ndig = 0;
#endif
					do {
					  *--cp = to_char (_uquad % 10);
   1f6e4:	0306869b          	addiw	a3,a3,48
   1f6e8:	00dd0023          	sb	a3,0(s10)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1621
					    if (grouping[1] != '\0')
					      grouping++;
					  }
#endif
					  _uquad /= 10;
					} while (_uquad != 0);
   1f6ec:	fc071ae3          	bnez	a4,1f6c0 <_svfiprintf_r+0x500>
   1f6f0:	cc9ff06f          	j	1f3b8 <_svfiprintf_r+0x1f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   1f6f4:	02013703          	ld	a4,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1441
#ifdef _GLIBC_EXTENSION
string:
#endif
			sign = '\0';
   1f6f8:	04010ba3          	sb	zero,87(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   1f6fc:	00073d03          	ld	s10,0(a4)
   1f700:	00870d93          	addi	s11,a4,8
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1447
#ifndef __OPTIMIZE_SIZE__
			/* Behavior is undefined if the user passed a
			   NULL string when precision is not 0.
			   However, if we are not optimizing for size,
			   we might as well mirror glibc behavior.  */
			if (cp == NULL) {
   1f704:	780d0063          	beqz	s10,1fe84 <_svfiprintf_r+0xcc4>
   1f708:	00f13423          	sd	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1516
				}
				cp[size] = '\0';
			}
			else
#endif /* _MB_CAPABLE */
			if (prec >= 0) {
   1f70c:	72044c63          	bltz	s0,1fe44 <_svfiprintf_r+0xc84>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1522
				/*
				 * can't use strlen; can only look for the
				 * NUL in the first `prec' characters, and
				 * strlen () will go further.
				 */
				char *p = memchr (cp, 0, prec);
   1f710:	00040613          	mv	a2,s0
   1f714:	00000593          	li	a1,0
   1f718:	000d0513          	mv	a0,s10
   1f71c:	a4cf80ef          	jal	17968 <memchr>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1524

				if (p != NULL)
   1f720:	00813783          	ld	a5,8(sp)
   1f724:	7e050a63          	beqz	a0,1ff18 <_svfiprintf_r+0xd58>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1525
					size = p - cp;
   1f728:	41a50533          	sub	a0,a0,s10
   1f72c:	00a12c23          	sw	a0,24(sp)
   1f730:	05714603          	lbu	a2,87(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   1f734:	03b13023          	sd	s11,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1f738:	00000413          	li	s0,0
   1f73c:	d55ff06f          	j	1f490 <_svfiprintf_r+0x2d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1189
				}
			}
			else
#endif /* _MB_CAPABLE */
			{
				*cp = GET_ARG (N, ap, int);
   1f740:	02013683          	ld	a3,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1193
				size = 1;
			}
			sign = '\0';
			break;
   1f744:	00100c93          	li	s9,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1192
#endif /* _MB_CAPABLE */
			{
				*cp = GET_ARG (N, ap, int);
				size = 1;
			}
			sign = '\0';
   1f748:	04010ba3          	sb	zero,87(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1189
				}
			}
			else
#endif /* _MB_CAPABLE */
			{
				*cp = GET_ARG (N, ap, int);
   1f74c:	0006a703          	lw	a4,0(a3)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1190
				size = 1;
   1f750:	01912c23          	sw	s9,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1173
		    flags |= QUADINT;
		  goto rflag;
		case 'C':
#endif /* _WANT_IO_C99_FORMATS */
		case 'c':
			cp = buf;
   1f754:	07810d13          	addi	s10,sp,120
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1189
				}
			}
			else
#endif /* _MB_CAPABLE */
			{
				*cp = GET_ARG (N, ap, int);
   1f758:	06e10c23          	sb	a4,120(sp)
   1f75c:	00868713          	addi	a4,a3,8
   1f760:	02e13023          	sd	a4,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1193
				size = 1;
			}
			sign = '\0';
			break;
   1f764:	d9dff06f          	j	1f500 <_svfiprintf_r+0x340>
   1f768:	020518e3          	bnez	a0,1ff98 <_svfiprintf_r+0xdd8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1540
		case 'u':
			_uquad = UARG ();
			base = DEC;
			goto nosign;
		case 'X':
			xdigs = "0123456789ABCDEF";
   1f76c:	00022737          	lui	a4,0x22
   1f770:	bb870713          	addi	a4,a4,-1096 # 21bb8 <zeroes.4123+0x6c8>
   1f774:	02e13823          	sd	a4,48(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
hex:			_uquad = UARG ();
   1f778:	010af713          	andi	a4,s5,16
   1f77c:	0e070863          	beqz	a4,1f86c <_svfiprintf_r+0x6ac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544 (discriminator 1)
   1f780:	02013603          	ld	a2,32(sp)
   1f784:	00063703          	ld	a4,0(a2)
   1f788:	00860613          	addi	a2,a2,8
   1f78c:	02c13023          	sd	a2,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1547 (discriminator 8)
			base = HEX;
			/* leading 0x/X only if non-zero */
			if (flags & ALT && _uquad != 0) {
   1f790:	001af613          	andi	a2,s5,1
   1f794:	0e060c63          	beqz	a2,1f88c <_svfiprintf_r+0x6cc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1547 (discriminator 1)
   1f798:	52070463          	beqz	a4,1fcc0 <_svfiprintf_r+0xb00>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1548
				ox[0] = '0';
   1f79c:	03000613          	li	a2,48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1549
				ox[1] = ch;
   1f7a0:	04d10ca3          	sb	a3,89(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1548
			xdigs = "0123456789abcdef";
hex:			_uquad = UARG ();
			base = HEX;
			/* leading 0x/X only if non-zero */
			if (flags & ALT && _uquad != 0) {
				ox[0] = '0';
   1f7a4:	04c10c23          	sb	a2,88(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1f7a8:	04010ba3          	sb	zero,87(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1550
			base = HEX;
			/* leading 0x/X only if non-zero */
			if (flags & ALT && _uquad != 0) {
				ox[0] = '0';
				ox[1] = ch;
				flags |= HEXPREFIX;
   1f7ac:	002ae693          	ori	a3,s5,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1f7b0:	74044063          	bltz	s0,1fef0 <_svfiprintf_r+0xd30>
   1f7b4:	f7fafa93          	andi	s5,s5,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   1f7b8:	002aea93          	ori	s5,s5,2
   1f7bc:	00000613          	li	a2,0
   1f7c0:	bd5ff06f          	j	1f394 <_svfiprintf_r+0x1d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1118
			if (*fmt == 'h') {
				fmt++;
				flags |= CHARINT;
			} else
#endif
				flags |= SHORTINT;
   1f7c4:	040aea93          	ori	s5,s5,64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1119
			goto rflag;
   1f7c8:	b2dff06f          	j	1f2f4 <_svfiprintf_r+0x134>
   1f7cc:	c80504e3          	beqz	a0,1f454 <_svfiprintf_r+0x294>
   1f7d0:	05010ba3          	sb	a6,87(sp)
   1f7d4:	c81ff06f          	j	1f454 <_svfiprintf_r+0x294>
   1f7d8:	78051463          	bnez	a0,1ff60 <_svfiprintf_r+0xda0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1533
			} else
				size = strlen (cp);

			break;
		case 'U': /* extension */
			flags |= LONGINT;
   1f7dc:	010aea93          	ori	s5,s5,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1f7e0:	010af713          	andi	a4,s5,16
   1f7e4:	ea0714e3          	bnez	a4,1f68c <_svfiprintf_r+0x4cc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536 (discriminator 2)
   1f7e8:	040af713          	andi	a4,s5,64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1f7ec:	04010ba3          	sb	zero,87(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1f7f0:	58070c63          	beqz	a4,1fd88 <_svfiprintf_r+0xbc8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536 (discriminator 4)
   1f7f4:	02013703          	ld	a4,32(sp)
   1f7f8:	00870693          	addi	a3,a4,8
   1f7fc:	00075703          	lhu	a4,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1f800:	ea0450e3          	bgez	s0,1f6a0 <_svfiprintf_r+0x4e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1f804:	02d13023          	sd	a3,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1f808:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1f80c:	ea0712e3          	bnez	a4,1f6b0 <_svfiprintf_r+0x4f0>
   1f810:	00100713          	li	a4,1
   1f814:	6000006f          	j	1fe14 <_svfiprintf_r+0xc54>
   1f818:	74051a63          	bnez	a0,1ff6c <_svfiprintf_r+0xdac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1408
#endif
			else
				*GET_ARG (N, ap, int_ptr_t) = ret;
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
   1f81c:	010aea93          	ori	s5,s5,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   1f820:	010af713          	andi	a4,s5,16
   1f824:	ba071ce3          	bnez	a4,1f3dc <_svfiprintf_r+0x21c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411 (discriminator 2)
   1f828:	040af713          	andi	a4,s5,64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1f82c:	04010ba3          	sb	zero,87(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   1f830:	54070263          	beqz	a4,1fd74 <_svfiprintf_r+0xbb4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411 (discriminator 4)
   1f834:	02013703          	ld	a4,32(sp)
   1f838:	00870693          	addi	a3,a4,8
   1f83c:	00075703          	lhu	a4,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1f840:	ba0458e3          	bgez	s0,1f3f0 <_svfiprintf_r+0x230>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   1f844:	02d13023          	sd	a3,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1f848:	00000613          	li	a2,0
   1f84c:	ba071ae3          	bnez	a4,1f400 <_svfiprintf_r+0x240>
   1f850:	5c40006f          	j	1fe14 <_svfiprintf_r+0xc54>
   1f854:	74051663          	bnez	a0,1ffa0 <_svfiprintf_r+0xde0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1543
			goto nosign;
		case 'X':
			xdigs = "0123456789ABCDEF";
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
   1f858:	00022737          	lui	a4,0x22
   1f85c:	bd070713          	addi	a4,a4,-1072 # 21bd0 <zeroes.4123+0x6e0>
   1f860:	02e13823          	sd	a4,48(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544
hex:			_uquad = UARG ();
   1f864:	010af713          	andi	a4,s5,16
   1f868:	f0071ce3          	bnez	a4,1f780 <_svfiprintf_r+0x5c0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544 (discriminator 2)
   1f86c:	040af713          	andi	a4,s5,64
   1f870:	02013603          	ld	a2,32(sp)
   1f874:	52070463          	beqz	a4,1fd9c <_svfiprintf_r+0xbdc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544 (discriminator 4)
   1f878:	00065703          	lhu	a4,0(a2)
   1f87c:	00860613          	addi	a2,a2,8
   1f880:	02c13023          	sd	a2,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1547
			base = HEX;
			/* leading 0x/X only if non-zero */
			if (flags & ALT && _uquad != 0) {
   1f884:	001af613          	andi	a2,s5,1
   1f888:	f00618e3          	bnez	a2,1f798 <_svfiprintf_r+0x5d8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1f88c:	04010ba3          	sb	zero,87(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1f890:	56044c63          	bltz	s0,1fe08 <_svfiprintf_r+0xc48>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   1f894:	f7fafa93          	andi	s5,s5,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1f898:	42070a63          	beqz	a4,1fccc <_svfiprintf_r+0xb0c>
   1f89c:	00000613          	li	a2,0
   1f8a0:	af5ff06f          	j	1f394 <_svfiprintf_r+0x1d4>
   1f8a4:	07013683          	ld	a3,112(sp)
   1f8a8:	06812703          	lw	a4,104(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1689
		/* right-adjusting blank padding */
		if ((flags & (LADJUST|ZEROPAD)) == 0)
			PAD (width - realsz, blanks);

		/* prefix */
		if (sign)
   1f8ac:	05714603          	lbu	a2,87(sp)
   1f8b0:	02060863          	beqz	a2,1f8e0 <_svfiprintf_r+0x720>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1690
			PRINT (&sign, 1);
   1f8b4:	05710613          	addi	a2,sp,87
   1f8b8:	00c7b023          	sd	a2,0(a5)
   1f8bc:	00168693          	addi	a3,a3,1
   1f8c0:	00100613          	li	a2,1
   1f8c4:	0017071b          	addiw	a4,a4,1
   1f8c8:	00c7b423          	sd	a2,8(a5)
   1f8cc:	06d13823          	sd	a3,112(sp)
   1f8d0:	06e12423          	sw	a4,104(sp)
   1f8d4:	00700613          	li	a2,7
   1f8d8:	01078793          	addi	a5,a5,16
   1f8dc:	38e64e63          	blt	a2,a4,1fc78 <_svfiprintf_r+0xab8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1691
		if (flags & HEXPREFIX)
   1f8e0:	03812603          	lw	a2,56(sp)
   1f8e4:	02060863          	beqz	a2,1f914 <_svfiprintf_r+0x754>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1692
			PRINT (ox, 2);
   1f8e8:	05810613          	addi	a2,sp,88
   1f8ec:	00c7b023          	sd	a2,0(a5)
   1f8f0:	00268693          	addi	a3,a3,2
   1f8f4:	00200613          	li	a2,2
   1f8f8:	0017071b          	addiw	a4,a4,1
   1f8fc:	00c7b423          	sd	a2,8(a5)
   1f900:	06d13823          	sd	a3,112(sp)
   1f904:	06e12423          	sw	a4,104(sp)
   1f908:	00700613          	li	a2,7
   1f90c:	01078793          	addi	a5,a5,16
   1f910:	38e64663          	blt	a2,a4,1fc9c <_svfiprintf_r+0xadc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1695

		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
   1f914:	04812583          	lw	a1,72(sp)
   1f918:	08000613          	li	a2,128
   1f91c:	22c58a63          	beq	a1,a2,1fb50 <_svfiprintf_r+0x990>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699
			PAD (width - realsz, zeroes);

		/* leading zeroes from decimal precision */
		PAD (dprec - size, zeroes);
   1f920:	01812603          	lw	a2,24(sp)
   1f924:	40c4043b          	subw	s0,s0,a2
   1f928:	0c805063          	blez	s0,1f9e8 <_svfiprintf_r+0x828>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 5)
   1f92c:	01000613          	li	a2,16
   1f930:	4e865e63          	ble	s0,a2,1fe2c <_svfiprintf_r+0xc6c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 6)
   1f934:	01000a13          	li	s4,16
   1f938:	00021637          	lui	a2,0x21
   1f93c:	4f060d93          	addi	s11,a2,1264 # 214f0 <zeroes.4123>
   1f940:	00700e13          	li	t3,7
   1f944:	000a0c13          	mv	s8,s4
   1f948:	00c0006f          	j	1f954 <_svfiprintf_r+0x794>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 4)
   1f94c:	ff04041b          	addiw	s0,s0,-16
   1f950:	048c5a63          	ble	s0,s8,1f9a4 <_svfiprintf_r+0x7e4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 6)
   1f954:	01068693          	addi	a3,a3,16
   1f958:	0017071b          	addiw	a4,a4,1
   1f95c:	01b7b023          	sd	s11,0(a5)
   1f960:	0147b423          	sd	s4,8(a5)
   1f964:	06d13823          	sd	a3,112(sp)
   1f968:	06e12423          	sw	a4,104(sp)
   1f96c:	01078793          	addi	a5,a5,16
   1f970:	fcee5ee3          	ble	a4,t3,1f94c <_svfiprintf_r+0x78c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 1)
   1f974:	06010613          	addi	a2,sp,96
   1f978:	000b0593          	mv	a1,s6
   1f97c:	000b8513          	mv	a0,s7
   1f980:	01c13423          	sd	t3,8(sp)
   1f984:	e44ff0ef          	jal	1efc8 <__ssprint_r>
   1f988:	16051e63          	bnez	a0,1fb04 <_svfiprintf_r+0x944>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699
   1f98c:	ff04041b          	addiw	s0,s0,-16
   1f990:	07013683          	ld	a3,112(sp)
   1f994:	06812703          	lw	a4,104(sp)
   1f998:	00098793          	mv	a5,s3
   1f99c:	00813e03          	ld	t3,8(sp)
   1f9a0:	fa8c4ae3          	blt	s8,s0,1f954 <_svfiprintf_r+0x794>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 7)
   1f9a4:	008686b3          	add	a3,a3,s0
   1f9a8:	0017071b          	addiw	a4,a4,1
   1f9ac:	01b7b023          	sd	s11,0(a5)
   1f9b0:	0087b423          	sd	s0,8(a5)
   1f9b4:	06d13823          	sd	a3,112(sp)
   1f9b8:	06e12423          	sw	a4,104(sp)
   1f9bc:	00700613          	li	a2,7
   1f9c0:	01078793          	addi	a5,a5,16
   1f9c4:	02e65263          	ble	a4,a2,1f9e8 <_svfiprintf_r+0x828>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699 (discriminator 8)
   1f9c8:	06010613          	addi	a2,sp,96
   1f9cc:	000b0593          	mv	a1,s6
   1f9d0:	000b8513          	mv	a0,s7
   1f9d4:	df4ff0ef          	jal	1efc8 <__ssprint_r>
   1f9d8:	12051663          	bnez	a0,1fb04 <_svfiprintf_r+0x944>
   1f9dc:	07013683          	ld	a3,112(sp)
   1f9e0:	06812703          	lw	a4,104(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1699
   1f9e4:	00098793          	mv	a5,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1765
					PRINT (cp, 1);
				PRINT (expstr, expsize);
			}
		}
#else /* !FLOATING_POINT */
		PRINT (cp, size);
   1f9e8:	01812c03          	lw	s8,24(sp)
   1f9ec:	0017071b          	addiw	a4,a4,1
   1f9f0:	01a7b023          	sd	s10,0(a5)
   1f9f4:	00dc06b3          	add	a3,s8,a3
   1f9f8:	0187b423          	sd	s8,8(a5)
   1f9fc:	06d13823          	sd	a3,112(sp)
   1fa00:	06e12423          	sw	a4,104(sp)
   1fa04:	00700613          	li	a2,7
   1fa08:	01078793          	addi	a5,a5,16
   1fa0c:	20e64c63          	blt	a2,a4,1fc24 <_svfiprintf_r+0xa64>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1768
#endif
		/* left-adjusting padding (always blank) */
		if (flags & LADJUST)
   1fa10:	004afa93          	andi	s5,s5,4
   1fa14:	0a0a8263          	beqz	s5,1fab8 <_svfiprintf_r+0x8f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769
			PAD (width - realsz, blanks);
   1fa18:	01412703          	lw	a4,20(sp)
   1fa1c:	4197043b          	subw	s0,a4,s9
   1fa20:	08805c63          	blez	s0,1fab8 <_svfiprintf_r+0x8f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 5)
   1fa24:	01000713          	li	a4,16
   1fa28:	4c875c63          	ble	s0,a4,1ff00 <_svfiprintf_r+0xd40>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769
   1fa2c:	01000a93          	li	s5,16
   1fa30:	06812703          	lw	a4,104(sp)
   1fa34:	05213023          	sd	s2,64(sp)
   1fa38:	00700c13          	li	s8,7
   1fa3c:	000a8d13          	mv	s10,s5
   1fa40:	00c0006f          	j	1fa4c <_svfiprintf_r+0x88c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 4)
   1fa44:	ff04041b          	addiw	s0,s0,-16
   1fa48:	048d5663          	ble	s0,s10,1fa94 <_svfiprintf_r+0x8d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 6)
   1fa4c:	01068693          	addi	a3,a3,16
   1fa50:	0017071b          	addiw	a4,a4,1
   1fa54:	0127b023          	sd	s2,0(a5)
   1fa58:	0157b423          	sd	s5,8(a5)
   1fa5c:	06d13823          	sd	a3,112(sp)
   1fa60:	06e12423          	sw	a4,104(sp)
   1fa64:	01078793          	addi	a5,a5,16
   1fa68:	fcec5ee3          	ble	a4,s8,1fa44 <_svfiprintf_r+0x884>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 1)
   1fa6c:	06010613          	addi	a2,sp,96
   1fa70:	000b0593          	mv	a1,s6
   1fa74:	000b8513          	mv	a0,s7
   1fa78:	d50ff0ef          	jal	1efc8 <__ssprint_r>
   1fa7c:	08051463          	bnez	a0,1fb04 <_svfiprintf_r+0x944>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769
   1fa80:	ff04041b          	addiw	s0,s0,-16
   1fa84:	07013683          	ld	a3,112(sp)
   1fa88:	06812703          	lw	a4,104(sp)
   1fa8c:	00098793          	mv	a5,s3
   1fa90:	fa8d4ee3          	blt	s10,s0,1fa4c <_svfiprintf_r+0x88c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 7)
   1fa94:	04013603          	ld	a2,64(sp)
   1fa98:	008686b3          	add	a3,a3,s0
   1fa9c:	0017071b          	addiw	a4,a4,1
   1faa0:	00c7b023          	sd	a2,0(a5)
   1faa4:	0087b423          	sd	s0,8(a5)
   1faa8:	06d13823          	sd	a3,112(sp)
   1faac:	06e12423          	sw	a4,104(sp)
   1fab0:	00700793          	li	a5,7
   1fab4:	28e7c663          	blt	a5,a4,1fd40 <_svfiprintf_r+0xb80>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1772

		/* finally, adjust ret */
		ret += width > realsz ? width : realsz;
   1fab8:	01412a03          	lw	s4,20(sp)
   1fabc:	019a5463          	ble	s9,s4,1fac4 <_svfiprintf_r+0x904>
   1fac0:	000c8a13          	mv	s4,s9
   1fac4:	01c12783          	lw	a5,28(sp)
   1fac8:	014787bb          	addw	a5,a5,s4
   1facc:	00f12e23          	sw	a5,28(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1774

		FLUSH ();	/* copy out the I/O vectors */
   1fad0:	16069a63          	bnez	a3,1fc44 <_svfiprintf_r+0xa84>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:925
                    else if (wc == '%')
                        break;
                    fmt += n;
		}
#else
                while (*fmt != '\0' && *fmt != '%')
   1fad4:	0004c703          	lbu	a4,0(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1774
			PAD (width - realsz, blanks);

		/* finally, adjust ret */
		ret += width > realsz ? width : realsz;

		FLUSH ();	/* copy out the I/O vectors */
   1fad8:	06012423          	sw	zero,104(sp)
   1fadc:	00098793          	mv	a5,s3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:925
                    else if (wc == '%')
                        break;
                    fmt += n;
		}
#else
                while (*fmt != '\0' && *fmt != '%')
   1fae0:	f8071063          	bnez	a4,1f260 <_svfiprintf_r+0xa0>
   1fae4:	00048413          	mv	s0,s1
   1fae8:	fdcff06f          	j	1f2c4 <_svfiprintf_r+0x104>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1782
			_free_r (data, malloc_buf);
			malloc_buf = NULL;
		}
	}
done:
	FLUSH ();
   1faec:	07013783          	ld	a5,112(sp)
   1faf0:	00078a63          	beqz	a5,1fb04 <_svfiprintf_r+0x944>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1782 (discriminator 1)
   1faf4:	06010613          	addi	a2,sp,96
   1faf8:	000b0593          	mv	a1,s6
   1fafc:	000b8513          	mv	a0,s7
   1fb00:	cc8ff0ef          	jal	1efc8 <__ssprint_r>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1789
	if (malloc_buf != NULL)
		_free_r (data, malloc_buf);
#ifndef STRING_ONLY
	_newlib_flockfile_end (fp);
#endif
	return (__sferror (fp) ? EOF : ret);
   1fb04:	010b5783          	lhu	a5,16(s6)
   1fb08:	01c12503          	lw	a0,28(sp)
   1fb0c:	0407f793          	andi	a5,a5,64
   1fb10:	3a079a63          	bnez	a5,1fec4 <_svfiprintf_r+0xd04>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1791
	/* NOTREACHED */
}
   1fb14:	18813083          	ld	ra,392(sp)
   1fb18:	18013403          	ld	s0,384(sp)
   1fb1c:	17813483          	ld	s1,376(sp)
   1fb20:	17013903          	ld	s2,368(sp)
   1fb24:	16813983          	ld	s3,360(sp)
   1fb28:	16013a03          	ld	s4,352(sp)
   1fb2c:	15813a83          	ld	s5,344(sp)
   1fb30:	15013b03          	ld	s6,336(sp)
   1fb34:	14813b83          	ld	s7,328(sp)
   1fb38:	14013c03          	ld	s8,320(sp)
   1fb3c:	13813c83          	ld	s9,312(sp)
   1fb40:	13013d03          	ld	s10,304(sp)
   1fb44:	12813d83          	ld	s11,296(sp)
   1fb48:	19010113          	addi	sp,sp,400
   1fb4c:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
		if (flags & HEXPREFIX)
			PRINT (ox, 2);

		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
			PAD (width - realsz, zeroes);
   1fb50:	01412603          	lw	a2,20(sp)
   1fb54:	41960a3b          	subw	s4,a2,s9
   1fb58:	dd4054e3          	blez	s4,1f920 <_svfiprintf_r+0x760>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 5)
   1fb5c:	01000613          	li	a2,16
   1fb60:	3b465663          	ble	s4,a2,1ff0c <_svfiprintf_r+0xd4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 6)
   1fb64:	01000e13          	li	t3,16
   1fb68:	00021637          	lui	a2,0x21
   1fb6c:	4f060d93          	addi	s11,a2,1264 # 214f0 <zeroes.4123>
   1fb70:	00700e93          	li	t4,7
   1fb74:	000e0c13          	mv	s8,t3
   1fb78:	00c0006f          	j	1fb84 <_svfiprintf_r+0x9c4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 4)
   1fb7c:	ff0a0a1b          	addiw	s4,s4,-16
   1fb80:	054c5e63          	ble	s4,s8,1fbdc <_svfiprintf_r+0xa1c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 6)
   1fb84:	01068693          	addi	a3,a3,16
   1fb88:	0017071b          	addiw	a4,a4,1
   1fb8c:	01b7b023          	sd	s11,0(a5)
   1fb90:	01c7b423          	sd	t3,8(a5)
   1fb94:	06d13823          	sd	a3,112(sp)
   1fb98:	06e12423          	sw	a4,104(sp)
   1fb9c:	01078793          	addi	a5,a5,16
   1fba0:	fceedee3          	ble	a4,t4,1fb7c <_svfiprintf_r+0x9bc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 1)
   1fba4:	06010613          	addi	a2,sp,96
   1fba8:	000b0593          	mv	a1,s6
   1fbac:	000b8513          	mv	a0,s7
   1fbb0:	03d13c23          	sd	t4,56(sp)
   1fbb4:	01c13423          	sd	t3,8(sp)
   1fbb8:	c10ff0ef          	jal	1efc8 <__ssprint_r>
   1fbbc:	f40514e3          	bnez	a0,1fb04 <_svfiprintf_r+0x944>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
   1fbc0:	ff0a0a1b          	addiw	s4,s4,-16
   1fbc4:	07013683          	ld	a3,112(sp)
   1fbc8:	06812703          	lw	a4,104(sp)
   1fbcc:	00098793          	mv	a5,s3
   1fbd0:	03813e83          	ld	t4,56(sp)
   1fbd4:	00813e03          	ld	t3,8(sp)
   1fbd8:	fb4c46e3          	blt	s8,s4,1fb84 <_svfiprintf_r+0x9c4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 7)
   1fbdc:	014686b3          	add	a3,a3,s4
   1fbe0:	0017071b          	addiw	a4,a4,1
   1fbe4:	01b7b023          	sd	s11,0(a5)
   1fbe8:	0147b423          	sd	s4,8(a5)
   1fbec:	06d13823          	sd	a3,112(sp)
   1fbf0:	06e12423          	sw	a4,104(sp)
   1fbf4:	00700613          	li	a2,7
   1fbf8:	01078793          	addi	a5,a5,16
   1fbfc:	d2e652e3          	ble	a4,a2,1f920 <_svfiprintf_r+0x760>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696 (discriminator 8)
   1fc00:	06010613          	addi	a2,sp,96
   1fc04:	000b0593          	mv	a1,s6
   1fc08:	000b8513          	mv	a0,s7
   1fc0c:	bbcff0ef          	jal	1efc8 <__ssprint_r>
   1fc10:	ee051ae3          	bnez	a0,1fb04 <_svfiprintf_r+0x944>
   1fc14:	07013683          	ld	a3,112(sp)
   1fc18:	06812703          	lw	a4,104(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1696
   1fc1c:	00098793          	mv	a5,s3
   1fc20:	d01ff06f          	j	1f920 <_svfiprintf_r+0x760>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1765 (discriminator 1)
					PRINT (cp, 1);
				PRINT (expstr, expsize);
			}
		}
#else /* !FLOATING_POINT */
		PRINT (cp, size);
   1fc24:	06010613          	addi	a2,sp,96
   1fc28:	000b0593          	mv	a1,s6
   1fc2c:	000b8513          	mv	a0,s7
   1fc30:	b98ff0ef          	jal	1efc8 <__ssprint_r>
   1fc34:	ec0518e3          	bnez	a0,1fb04 <_svfiprintf_r+0x944>
   1fc38:	07013683          	ld	a3,112(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1765
   1fc3c:	00098793          	mv	a5,s3
   1fc40:	dd1ff06f          	j	1fa10 <_svfiprintf_r+0x850>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1774 (discriminator 1)
			PAD (width - realsz, blanks);

		/* finally, adjust ret */
		ret += width > realsz ? width : realsz;

		FLUSH ();	/* copy out the I/O vectors */
   1fc44:	06010613          	addi	a2,sp,96
   1fc48:	000b0593          	mv	a1,s6
   1fc4c:	000b8513          	mv	a0,s7
   1fc50:	b78ff0ef          	jal	1efc8 <__ssprint_r>
   1fc54:	e80500e3          	beqz	a0,1fad4 <_svfiprintf_r+0x914>
   1fc58:	eadff06f          	j	1fb04 <_svfiprintf_r+0x944>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:929
#else
                while (*fmt != '\0' && *fmt != '%')
                    fmt += 1;
#endif
		if ((m = fmt - cp) != 0) {
			PRINT (cp, m);
   1fc5c:	06010613          	addi	a2,sp,96
   1fc60:	000b0593          	mv	a1,s6
   1fc64:	000b8513          	mv	a0,s7
   1fc68:	b60ff0ef          	jal	1efc8 <__ssprint_r>
   1fc6c:	e8051ce3          	bnez	a0,1fb04 <_svfiprintf_r+0x944>
   1fc70:	00098793          	mv	a5,s3
   1fc74:	e44ff06f          	j	1f2b8 <_svfiprintf_r+0xf8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1690 (discriminator 1)
		if ((flags & (LADJUST|ZEROPAD)) == 0)
			PAD (width - realsz, blanks);

		/* prefix */
		if (sign)
			PRINT (&sign, 1);
   1fc78:	06010613          	addi	a2,sp,96
   1fc7c:	000b0593          	mv	a1,s6
   1fc80:	000b8513          	mv	a0,s7
   1fc84:	b44ff0ef          	jal	1efc8 <__ssprint_r>
   1fc88:	e6051ee3          	bnez	a0,1fb04 <_svfiprintf_r+0x944>
   1fc8c:	07013683          	ld	a3,112(sp)
   1fc90:	06812703          	lw	a4,104(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1690
   1fc94:	00098793          	mv	a5,s3
   1fc98:	c49ff06f          	j	1f8e0 <_svfiprintf_r+0x720>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1692 (discriminator 1)
		if (flags & HEXPREFIX)
			PRINT (ox, 2);
   1fc9c:	06010613          	addi	a2,sp,96
   1fca0:	000b0593          	mv	a1,s6
   1fca4:	000b8513          	mv	a0,s7
   1fca8:	b20ff0ef          	jal	1efc8 <__ssprint_r>
   1fcac:	e4051ce3          	bnez	a0,1fb04 <_svfiprintf_r+0x944>
   1fcb0:	07013683          	ld	a3,112(sp)
   1fcb4:	06812703          	lw	a4,104(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1692
   1fcb8:	00098793          	mv	a5,s3
   1fcbc:	c59ff06f          	j	1f914 <_svfiprintf_r+0x754>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1557

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
   1fcc0:	04010ba3          	sb	zero,87(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1fcc4:	22044263          	bltz	s0,1fee8 <_svfiprintf_r+0xd28>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   1fcc8:	f7fafa93          	andi	s5,s5,-129
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1fccc:	00000613          	li	a2,0
   1fcd0:	fa040a63          	beqz	s0,1f484 <_svfiprintf_r+0x2c4>
   1fcd4:	00000713          	li	a4,0
   1fcd8:	ebcff06f          	j	1f394 <_svfiprintf_r+0x1d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199 (discriminator 2)
		case 'D':  /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'd':
		case 'i':
			_uquad = SARG ();
   1fcdc:	040af713          	andi	a4,s5,64
   1fce0:	02013683          	ld	a3,32(sp)
   1fce4:	0c070463          	beqz	a4,1fdac <_svfiprintf_r+0xbec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199 (discriminator 4)
   1fce8:	00069703          	lh	a4,0(a3)
   1fcec:	00868693          	addi	a3,a3,8
   1fcf0:	02d13023          	sd	a3,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1203
#ifndef _NO_LONGLONG
			if ((quad_t)_uquad < 0)
#else
			if ((long) _uquad < 0)
   1fcf4:	f6075e63          	bgez	a4,1f470 <_svfiprintf_r+0x2b0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1208
#endif
			{

				_uquad = -_uquad;
				sign = '-';
   1fcf8:	02d00693          	li	a3,45
   1fcfc:	04d10ba3          	sb	a3,87(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1207
#else
			if ((long) _uquad < 0)
#endif
			{

				_uquad = -_uquad;
   1fd00:	40e00733          	neg	a4,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1fd04:	1c044463          	bltz	s0,1fecc <_svfiprintf_r+0xd0c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1564
				flags &= ~ZEROPAD;
   1fd08:	f7fafa93          	andi	s5,s5,-129
   1fd0c:	02d00613          	li	a2,45
   1fd10:	9a1ff06f          	j	1f6b0 <_svfiprintf_r+0x4f0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1fd14:	00000613          	li	a2,0
   1fd18:	00000713          	li	a4,0
   1fd1c:	ee041263          	bnez	s0,1f400 <_svfiprintf_r+0x240>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1646
			*     -- ANSI X3J11
			*
			* To demonstrate this case, compile and run:
                        *    printf ("%#.0o",0);
			*/
                       else if (base == OCT && (flags & ALT))
   1fd20:	001af713          	andi	a4,s5,1
   1fd24:	18070463          	beqz	a4,1feac <_svfiprintf_r+0xcec>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1647
                         *--cp = '0';
   1fd28:	03000713          	li	a4,48
   1fd2c:	08e10fa3          	sb	a4,159(sp)
   1fd30:	04c12703          	lw	a4,76(sp)
   1fd34:	09f10d13          	addi	s10,sp,159
   1fd38:	00e12c23          	sw	a4,24(sp)
   1fd3c:	f54ff06f          	j	1f490 <_svfiprintf_r+0x2d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1769 (discriminator 8)
#else /* !FLOATING_POINT */
		PRINT (cp, size);
#endif
		/* left-adjusting padding (always blank) */
		if (flags & LADJUST)
			PAD (width - realsz, blanks);
   1fd40:	06010613          	addi	a2,sp,96
   1fd44:	000b0593          	mv	a1,s6
   1fd48:	000b8513          	mv	a0,s7
   1fd4c:	a7cff0ef          	jal	1efc8 <__ssprint_r>
   1fd50:	da051ae3          	bnez	a0,1fb04 <_svfiprintf_r+0x944>
   1fd54:	07013683          	ld	a3,112(sp)
   1fd58:	d61ff06f          	j	1fab8 <_svfiprintf_r+0x8f8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
   1fd5c:	00022737          	lui	a4,0x22
   1fd60:	bd070713          	addi	a4,a4,-1072 # 21bd0 <zeroes.4123+0x6e0>
   1fd64:	02e13823          	sd	a4,48(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1fd68:	00000613          	li	a2,0
   1fd6c:	f60414e3          	bnez	s0,1fcd4 <_svfiprintf_r+0xb14>
   1fd70:	f14ff06f          	j	1f484 <_svfiprintf_r+0x2c4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1411 (discriminator 5)
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
   1fd74:	02013703          	ld	a4,32(sp)
   1fd78:	00870693          	addi	a3,a4,8
   1fd7c:	00076703          	lwu	a4,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1fd80:	e6045863          	bgez	s0,1f3f0 <_svfiprintf_r+0x230>
   1fd84:	ac1ff06f          	j	1f844 <_svfiprintf_r+0x684>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1536
			break;
		case 'U': /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
   1fd88:	02013703          	ld	a4,32(sp)
   1fd8c:	00870693          	addi	a3,a4,8
   1fd90:	00076703          	lwu	a4,0(a4)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1fd94:	900456e3          	bgez	s0,1f6a0 <_svfiprintf_r+0x4e0>
   1fd98:	a6dff06f          	j	1f804 <_svfiprintf_r+0x644>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1544
		case 'X':
			xdigs = "0123456789ABCDEF";
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
hex:			_uquad = UARG ();
   1fd9c:	00066703          	lwu	a4,0(a2)
   1fda0:	00860613          	addi	a2,a2,8
   1fda4:	02c13023          	sd	a2,32(sp)
   1fda8:	9e9ff06f          	j	1f790 <_svfiprintf_r+0x5d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1199
		case 'D':  /* extension */
			flags |= LONGINT;
			/*FALLTHROUGH*/
		case 'd':
		case 'i':
			_uquad = SARG ();
   1fdac:	0006a703          	lw	a4,0(a3)
   1fdb0:	00868693          	addi	a3,a3,8
   1fdb4:	02d13023          	sd	a3,32(sp)
   1fdb8:	eb4ff06f          	j	1f46c <_svfiprintf_r+0x2ac>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1397
			if (flags & QUADINT)
				*GET_ARG (N, ap, quad_ptr_t) = ret;
			else
#endif
			if (flags & LONGINT)
				*GET_ARG (N, ap, long_ptr_t) = ret;
   1fdbc:	02013603          	ld	a2,32(sp)
   1fdc0:	01c12683          	lw	a3,28(sp)
   1fdc4:	00063703          	ld	a4,0(a2)
   1fdc8:	00860613          	addi	a2,a2,8
   1fdcc:	02c13023          	sd	a2,32(sp)
   1fdd0:	00d73023          	sd	a3,0(a4)
   1fdd4:	c84ff06f          	j	1f258 <_svfiprintf_r+0x98>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1fdd8:	00000713          	li	a4,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1592
					break;

				case DEC:
					/* many numbers are 1 digit */
					if (_uquad < 10) {
						*--cp = to_char(_uquad);
   1fddc:	0307071b          	addiw	a4,a4,48
   1fde0:	08e10fa3          	sb	a4,159(sp)
   1fde4:	04c12703          	lw	a4,76(sp)
   1fde8:	09f10d13          	addi	s10,sp,159
   1fdec:	00e12c23          	sw	a4,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1593
						break;
   1fdf0:	ea0ff06f          	j	1f490 <_svfiprintf_r+0x2d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1426
			 * of printable characters, in an implementation-
			 * defined manner.''
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
   1fdf4:	02d13023          	sd	a3,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			base = HEX;
			xdigs = "0123456789abcdef";
   1fdf8:	000226b7          	lui	a3,0x22
   1fdfc:	bd068693          	addi	a3,a3,-1072 # 21bd0 <zeroes.4123+0x6e0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1429
			flags |= HEXPREFIX;
   1fe00:	00060a93          	mv	s5,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1428
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
			base = HEX;
			xdigs = "0123456789abcdef";
   1fe04:	02d13823          	sd	a3,48(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1572
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
			if (_uquad != 0 || prec != 0) {
   1fe08:	00000613          	li	a2,0
   1fe0c:	d8071463          	bnez	a4,1f394 <_svfiprintf_r+0x1d4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1545
			xdigs = "0123456789ABCDEF";
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
hex:			_uquad = UARG ();
			base = HEX;
   1fe10:	00200713          	li	a4,2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1578
				/*
				 * Unsigned mod is hard, and unsigned mod
				 * by a constant is easier than that by
				 * a variable; hence this switch.
				 */
				switch (base) {
   1fe14:	00100693          	li	a3,1
   1fe18:	fcd700e3          	beq	a4,a3,1fdd8 <_svfiprintf_r+0xc18>
   1fe1c:	00200693          	li	a3,2
   1fe20:	ead70ae3          	beq	a4,a3,1fcd4 <_svfiprintf_r+0xb14>
   1fe24:	00000713          	li	a4,0
   1fe28:	dd8ff06f          	j	1f400 <_svfiprintf_r+0x240>
   1fe2c:	00021637          	lui	a2,0x21
   1fe30:	4f060d93          	addi	s11,a2,1264 # 214f0 <zeroes.4123>
   1fe34:	b71ff06f          	j	1f9a4 <_svfiprintf_r+0x7e4>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1405
#ifdef _WANT_IO_C99_FORMATS
			else if (flags & CHARINT)
				*GET_ARG (N, ap, char_ptr_t) = ret;
#endif
			else
				*GET_ARG (N, ap, int_ptr_t) = ret;
   1fe38:	01c12683          	lw	a3,28(sp)
   1fe3c:	00d72023          	sw	a3,0(a4)
   1fe40:	c18ff06f          	j	1f258 <_svfiprintf_r+0x98>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1529
				if (p != NULL)
					size = p - cp;
				else
					size = prec;
			} else
				size = strlen (cp);
   1fe44:	000d0513          	mv	a0,s10
   1fe48:	ac9f10ef          	jal	11910 <strlen>
   1fe4c:	00a12c23          	sw	a0,24(sp)
   1fe50:	05714603          	lbu	a2,87(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   1fe54:	03b13023          	sd	s11,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1fe58:	00000413          	li	s0,0
   1fe5c:	00813783          	ld	a5,8(sp)
   1fe60:	e30ff06f          	j	1f490 <_svfiprintf_r+0x2d0>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:882
#endif
#else /* STRING_ONLY */
        /* Create initial buffer if we are called by asprintf family.  */
        if (fp->_flags & __SMBF && !fp->_bf._base)
        {
		fp->_bf._base = fp->_p = _malloc_r (data, 64);
   1fe64:	04000593          	li	a1,64
   1fe68:	ea5f00ef          	jal	10d0c <_malloc_r>
   1fe6c:	00ab3023          	sd	a0,0(s6)
   1fe70:	00ab3c23          	sd	a0,24(s6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:883
		if (!fp->_p)
   1fe74:	10050263          	beqz	a0,1ff78 <_svfiprintf_r+0xdb8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:888
		{
			data->_errno = ENOMEM;
			return EOF;
		}
		fp->_bf._size = 64;
   1fe78:	04000793          	li	a5,64
   1fe7c:	02fb2023          	sw	a5,32(s6)
   1fe80:	b9cff06f          	j	1f21c <_svfiprintf_r+0x5c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1449
			   NULL string when precision is not 0.
			   However, if we are not optimizing for size,
			   we might as well mirror glibc behavior.  */
			if (cp == NULL) {
				cp = "(null)";
				size = ((unsigned) prec > 6U) ? 6 : prec;
   1fe84:	00600713          	li	a4,6
   1fe88:	00877463          	bleu	s0,a4,1fe90 <_svfiprintf_r+0xcd0>
   1fe8c:	00070413          	mv	s0,a4
   1fe90:	00812c23          	sw	s0,24(sp)
   1fe94:	00040c93          	mv	s9,s0
   1fe98:	08044a63          	bltz	s0,1ff2c <_svfiprintf_r+0xd6c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1448
			/* Behavior is undefined if the user passed a
			   NULL string when precision is not 0.
			   However, if we are not optimizing for size,
			   we might as well mirror glibc behavior.  */
			if (cp == NULL) {
				cp = "(null)";
   1fe9c:	000228b7          	lui	a7,0x22
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   1fea0:	03b13023          	sd	s11,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1448
			/* Behavior is undefined if the user passed a
			   NULL string when precision is not 0.
			   However, if we are not optimizing for size,
			   we might as well mirror glibc behavior.  */
			if (cp == NULL) {
				cp = "(null)";
   1fea4:	be888d13          	addi	s10,a7,-1048 # 21be8 <zeroes.4123+0x6f8>
   1fea8:	e58ff06f          	j	1f500 <_svfiprintf_r+0x340>
   1feac:	00012c23          	sw	zero,24(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1571
			/*
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
   1feb0:	00098d13          	mv	s10,s3
   1feb4:	ddcff06f          	j	1f490 <_svfiprintf_r+0x2d0>
   1feb8:	06812703          	lw	a4,104(sp)
   1febc:	05213023          	sd	s2,64(sp)
   1fec0:	ee8ff06f          	j	1f5a8 <_svfiprintf_r+0x3e8>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1789
	if (malloc_buf != NULL)
		_free_r (data, malloc_buf);
#ifndef STRING_ONLY
	_newlib_flockfile_end (fp);
#endif
	return (__sferror (fp) ? EOF : ret);
   1fec4:	fff00513          	li	a0,-1
   1fec8:	c4dff06f          	j	1fb14 <_svfiprintf_r+0x954>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1fecc:	02d00613          	li	a2,45
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1210
			{

				_uquad = -_uquad;
				sign = '-';
			}
			base = DEC;
   1fed0:	00100693          	li	a3,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1578
				/*
				 * Unsigned mod is hard, and unsigned mod
				 * by a constant is easier than that by
				 * a variable; hence this switch.
				 */
				switch (base) {
   1fed4:	00100593          	li	a1,1
   1fed8:	fcb68c63          	beq	a3,a1,1f6b0 <_svfiprintf_r+0x4f0>
   1fedc:	00200593          	li	a1,2
   1fee0:	cab68a63          	beq	a3,a1,1f394 <_svfiprintf_r+0x1d4>
   1fee4:	d1cff06f          	j	1f400 <_svfiprintf_r+0x240>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1fee8:	00000613          	li	a2,0
   1feec:	f25ff06f          	j	1fe10 <_svfiprintf_r+0xc50>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1550
			base = HEX;
			/* leading 0x/X only if non-zero */
			if (flags & ALT && _uquad != 0) {
				ox[0] = '0';
				ox[1] = ch;
				flags |= HEXPREFIX;
   1fef0:	00068a93          	mv	s5,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1563
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
   1fef4:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1545
			xdigs = "0123456789ABCDEF";
			goto hex;
		case 'x':
			xdigs = "0123456789abcdef";
hex:			_uquad = UARG ();
			base = HEX;
   1fef8:	00200693          	li	a3,2
   1fefc:	fd9ff06f          	j	1fed4 <_svfiprintf_r+0xd14>
   1ff00:	06812703          	lw	a4,104(sp)
   1ff04:	05213023          	sd	s2,64(sp)
   1ff08:	b8dff06f          	j	1fa94 <_svfiprintf_r+0x8d4>
   1ff0c:	00021637          	lui	a2,0x21
   1ff10:	4f060d93          	addi	s11,a2,1264 # 214f0 <zeroes.4123>
   1ff14:	cc9ff06f          	j	1fbdc <_svfiprintf_r+0xa1c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1524
				 * NUL in the first `prec' characters, and
				 * strlen () will go further.
				 */
				char *p = memchr (cp, 0, prec);

				if (p != NULL)
   1ff18:	00812c23          	sw	s0,24(sp)
   1ff1c:	05714603          	lbu	a2,87(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1437
			goto nosign;
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
   1ff20:	03b13023          	sd	s11,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:943
#endif
		fmt_anchor = fmt;
		fmt++;		/* skip over '%' */

		flags = 0;
		dprec = 0;
   1ff24:	00000413          	li	s0,0
   1ff28:	d68ff06f          	j	1f490 <_svfiprintf_r+0x2d0>
   1ff2c:	00000c93          	li	s9,0
   1ff30:	f6dff06f          	j	1fe9c <_svfiprintf_r+0xcdc>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1063
						fmt = old_fmt;
						goto rflag;
					}
				}
#endif /* !_NO_POS_ARGS */
				prec = GET_ARG (n, ap, int);
   1ff34:	02013703          	ld	a4,32(sp)
   1ff38:	00072403          	lw	s0,0(a4)
   1ff3c:	00870d93          	addi	s11,a4,8
   1ff40:	03b13023          	sd	s11,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1067
#ifndef _NO_POS_ARGS
				is_pos_arg = old_is_pos_arg;
#endif
				if (prec < 0)
   1ff44:	ba045863          	bgez	s0,1f2f4 <_svfiprintf_r+0x134>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1068
					prec = -1;
   1ff48:	fff00413          	li	s0,-1
   1ff4c:	ba8ff06f          	j	1f2f4 <_svfiprintf_r+0x134>
   1ff50:	05010ba3          	sb	a6,87(sp)
   1ff54:	d94ff06f          	j	1f4e8 <_svfiprintf_r+0x328>
   1ff58:	05010ba3          	sb	a6,87(sp)
   1ff5c:	c78ff06f          	j	1f3d4 <_svfiprintf_r+0x214>
   1ff60:	05010ba3          	sb	a6,87(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1533
			} else
				size = strlen (cp);

			break;
		case 'U': /* extension */
			flags |= LONGINT;
   1ff64:	010aea93          	ori	s5,s5,16
   1ff68:	879ff06f          	j	1f7e0 <_svfiprintf_r+0x620>
   1ff6c:	05010ba3          	sb	a6,87(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:1408
#endif
			else
				*GET_ARG (N, ap, int_ptr_t) = ret;
			continue;	/* no output */
		case 'O': /* extension */
			flags |= LONGINT;
   1ff70:	010aea93          	ori	s5,s5,16
   1ff74:	8adff06f          	j	1f820 <_svfiprintf_r+0x660>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:885
        if (fp->_flags & __SMBF && !fp->_bf._base)
        {
		fp->_bf._base = fp->_p = _malloc_r (data, 64);
		if (!fp->_p)
		{
			data->_errno = ENOMEM;
   1ff78:	00c00793          	li	a5,12
   1ff7c:	00fba023          	sw	a5,0(s7)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdio/vfprintf.c:886
			return EOF;
   1ff80:	fff00513          	li	a0,-1
   1ff84:	b91ff06f          	j	1fb14 <_svfiprintf_r+0x954>
   1ff88:	05010ba3          	sb	a6,87(sp)
   1ff8c:	eb8ff06f          	j	1f644 <_svfiprintf_r+0x484>
   1ff90:	05010ba3          	sb	a6,87(sp)
   1ff94:	ef0ff06f          	j	1f684 <_svfiprintf_r+0x4c4>
   1ff98:	05010ba3          	sb	a6,87(sp)
   1ff9c:	fd0ff06f          	j	1f76c <_svfiprintf_r+0x5ac>
   1ffa0:	05010ba3          	sb	a6,87(sp)
   1ffa4:	8b5ff06f          	j	1f858 <_svfiprintf_r+0x698>
   1ffa8:	05010ba3          	sb	a6,87(sp)
   1ffac:	ca4ff06f          	j	1f450 <_svfiprintf_r+0x290>

000000000001ffb0 <_wcrtomb_r>:
_wcrtomb_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:15
_DEFUN (_wcrtomb_r, (ptr, s, wc, ps),
	struct _reent *ptr _AND
	char *s _AND
	wchar_t wc _AND
	mbstate_t *ps)
{
   1ffb0:	fc010113          	addi	sp,sp,-64
   1ffb4:	02913423          	sd	s1,40(sp)
   1ffb8:	03213023          	sd	s2,32(sp)
   1ffbc:	02113c23          	sd	ra,56(sp)
   1ffc0:	02813823          	sd	s0,48(sp)
   1ffc4:	01313c23          	sd	s3,24(sp)
   1ffc8:	01413823          	sd	s4,16(sp)
   1ffcc:	00050493          	mv	s1,a0
   1ffd0:	00068913          	mv	s2,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:27
      _REENT_CHECK_MISC(ptr);
      ps = &(_REENT_WCRTOMB_STATE(ptr));
    }
#endif

  if (s == NULL)
   1ffd4:	06058663          	beqz	a1,20040 <_wcrtomb_r+0x90>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:30
    retval = __wctomb (ptr, buf, L'\0', __locale_charset (), ps);
  else
    retval = __wctomb (ptr, s, wc, __locale_charset (), ps);
   1ffd8:	8401ba03          	ld	s4,-1984(gp) # 24480 <__wctomb>
   1ffdc:	00058413          	mv	s0,a1
   1ffe0:	00060993          	mv	s3,a2
   1ffe4:	d2cf70ef          	jal	17510 <__locale_charset>
   1ffe8:	00050693          	mv	a3,a0
   1ffec:	00090713          	mv	a4,s2
   1fff0:	00098613          	mv	a2,s3
   1fff4:	00040593          	mv	a1,s0
   1fff8:	00048513          	mv	a0,s1
   1fffc:	000a00e7          	jalr	s4
   20000:	00050793          	mv	a5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:32

  if (retval == -1)
   20004:	fff00713          	li	a4,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:39
      ps->__count = 0;
      ptr->_errno = EILSEQ;
      return (size_t)(-1);
    }
  else
    return (size_t)retval;
   20008:	00078513          	mv	a0,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:32
  if (s == NULL)
    retval = __wctomb (ptr, buf, L'\0', __locale_charset (), ps);
  else
    retval = __wctomb (ptr, s, wc, __locale_charset (), ps);

  if (retval == -1)
   2000c:	00e79a63          	bne	a5,a4,20020 <_wcrtomb_r+0x70>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:34
    {
      ps->__count = 0;
   20010:	00092023          	sw	zero,0(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:35
      ptr->_errno = EILSEQ;
   20014:	08a00793          	li	a5,138
   20018:	00f4a023          	sw	a5,0(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:36
      return (size_t)(-1);
   2001c:	fff00513          	li	a0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:40
    }
  else
    return (size_t)retval;
}
   20020:	03813083          	ld	ra,56(sp)
   20024:	03013403          	ld	s0,48(sp)
   20028:	02813483          	ld	s1,40(sp)
   2002c:	02013903          	ld	s2,32(sp)
   20030:	01813983          	ld	s3,24(sp)
   20034:	01013a03          	ld	s4,16(sp)
   20038:	04010113          	addi	sp,sp,64
   2003c:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:28
      ps = &(_REENT_WCRTOMB_STATE(ptr));
    }
#endif

  if (s == NULL)
    retval = __wctomb (ptr, buf, L'\0', __locale_charset (), ps);
   20040:	8401b403          	ld	s0,-1984(gp) # 24480 <__wctomb>
   20044:	cccf70ef          	jal	17510 <__locale_charset>
   20048:	00050693          	mv	a3,a0
   2004c:	00090713          	mv	a4,s2
   20050:	00000613          	li	a2,0
   20054:	00010593          	mv	a1,sp
   20058:	00048513          	mv	a0,s1
   2005c:	000400e7          	jalr	s0
   20060:	00050793          	mv	a5,a0
   20064:	fa1ff06f          	j	20004 <_wcrtomb_r+0x54>

0000000000020068 <wcrtomb>:
wcrtomb():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:48
size_t
_DEFUN (wcrtomb, (s, wc, ps),
	char *__restrict s _AND
	wchar_t wc _AND
	mbstate_t *__restrict ps)
{
   20068:	fc010113          	addi	sp,sp,-64
   2006c:	02913423          	sd	s1,40(sp)
   20070:	03213023          	sd	s2,32(sp)
   20074:	02113c23          	sd	ra,56(sp)
   20078:	02813823          	sd	s0,48(sp)
   2007c:	01313c23          	sd	s3,24(sp)
   20080:	01413823          	sd	s4,16(sp)
   20084:	00060913          	mv	s2,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:53
#if defined(PREFER_SIZE_OVER_SPEED) || defined(__OPTIMIZE_SIZE__)
  return _wcrtomb_r (_REENT, s, wc, ps);
#else
  int retval = 0;
  struct _reent *reent = _REENT;
   20088:	8101b483          	ld	s1,-2032(gp) # 24450 <_impure_ptr>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:64
      _REENT_CHECK_MISC(reent);
      ps = &(_REENT_WCRTOMB_STATE(reent));
    }
#endif

  if (s == NULL)
   2008c:	06050663          	beqz	a0,200f8 <wcrtomb+0x90>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:67
    retval = __wctomb (reent, buf, L'\0', __locale_charset (), ps);
  else
    retval = __wctomb (reent, s, wc, __locale_charset (), ps);
   20090:	8401ba03          	ld	s4,-1984(gp) # 24480 <__wctomb>
   20094:	00058993          	mv	s3,a1
   20098:	00050413          	mv	s0,a0
   2009c:	c74f70ef          	jal	17510 <__locale_charset>
   200a0:	00050693          	mv	a3,a0
   200a4:	00090713          	mv	a4,s2
   200a8:	00098613          	mv	a2,s3
   200ac:	00040593          	mv	a1,s0
   200b0:	00048513          	mv	a0,s1
   200b4:	000a00e7          	jalr	s4
   200b8:	00050793          	mv	a5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:69

  if (retval == -1)
   200bc:	fff00713          	li	a4,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:76
      ps->__count = 0;
      reent->_errno = EILSEQ;
      return (size_t)(-1);
    }
  else
    return (size_t)retval;
   200c0:	00078513          	mv	a0,a5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:69
  if (s == NULL)
    retval = __wctomb (reent, buf, L'\0', __locale_charset (), ps);
  else
    retval = __wctomb (reent, s, wc, __locale_charset (), ps);

  if (retval == -1)
   200c4:	00e79a63          	bne	a5,a4,200d8 <wcrtomb+0x70>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:71
    {
      ps->__count = 0;
   200c8:	00092023          	sw	zero,0(s2)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:72
      reent->_errno = EILSEQ;
   200cc:	08a00793          	li	a5,138
   200d0:	00f4a023          	sw	a5,0(s1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:73
      return (size_t)(-1);
   200d4:	fff00513          	li	a0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:78
    }
  else
    return (size_t)retval;
#endif /* not PREFER_SIZE_OVER_SPEED */
}
   200d8:	03813083          	ld	ra,56(sp)
   200dc:	03013403          	ld	s0,48(sp)
   200e0:	02813483          	ld	s1,40(sp)
   200e4:	02013903          	ld	s2,32(sp)
   200e8:	01813983          	ld	s3,24(sp)
   200ec:	01013a03          	ld	s4,16(sp)
   200f0:	04010113          	addi	sp,sp,64
   200f4:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wcrtomb.c:65
      ps = &(_REENT_WCRTOMB_STATE(reent));
    }
#endif

  if (s == NULL)
    retval = __wctomb (reent, buf, L'\0', __locale_charset (), ps);
   200f8:	8401b403          	ld	s0,-1984(gp) # 24480 <__wctomb>
   200fc:	c14f70ef          	jal	17510 <__locale_charset>
   20100:	00050693          	mv	a3,a0
   20104:	00090713          	mv	a4,s2
   20108:	00000613          	li	a2,0
   2010c:	00010593          	mv	a1,sp
   20110:	00048513          	mv	a0,s1
   20114:	000400e7          	jalr	s0
   20118:	00050793          	mv	a5,a0
   2011c:	fa1ff06f          	j	200bc <wcrtomb+0x54>

0000000000020120 <__ascii_wctomb>:
__ascii_wctomb():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wctomb_r.c:41
  /* Avoids compiler warnings about comparisons that are always false
     due to limited range when sizeof(wchar_t) is 2 but sizeof(wint_t)
     is 4, as is the case on cygwin.  */
  wint_t wchar = _wchar;

  if (s == NULL)
   20120:	00058c63          	beqz	a1,20138 <__ascii_wctomb+0x18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wctomb_r.c:47
    return 0;
 
#ifdef __CYGWIN__
  if ((size_t)wchar >= 0x80)
#else
  if ((size_t)wchar >= 0x100)
   20124:	0ff00793          	li	a5,255
   20128:	00c7ec63          	bltu	a5,a2,20140 <__ascii_wctomb+0x20>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wctomb_r.c:54
    {
      r->_errno = EILSEQ;
      return -1;
    }

  *s = (char) wchar;
   2012c:	00c58023          	sb	a2,0(a1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wctomb_r.c:55
  return 1;
   20130:	00100513          	li	a0,1
   20134:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wctomb_r.c:42
     due to limited range when sizeof(wchar_t) is 2 but sizeof(wint_t)
     is 4, as is the case on cygwin.  */
  wint_t wchar = _wchar;

  if (s == NULL)
    return 0;
   20138:	00000513          	li	a0,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wctomb_r.c:56
      return -1;
    }

  *s = (char) wchar;
  return 1;
}
   2013c:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wctomb_r.c:50
  if ((size_t)wchar >= 0x80)
#else
  if ((size_t)wchar >= 0x100)
#endif
    {
      r->_errno = EILSEQ;
   20140:	08a00793          	li	a5,138
   20144:	00f52023          	sw	a5,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wctomb_r.c:51
      return -1;
   20148:	fff00513          	li	a0,-1
   2014c:	00008067          	ret

0000000000020150 <_wctomb_r>:
_wctomb_r():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wctomb_r.c:24
_DEFUN (_wctomb_r, (r, s, wchar, state),
        struct _reent *r     _AND 
        char          *s     _AND
        wchar_t        _wchar _AND
        mbstate_t     *state)
{
   20150:	fd010113          	addi	sp,sp,-48
   20154:	02813023          	sd	s0,32(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wctomb_r.c:25
  return __wctomb (r, s, _wchar, __locale_charset (), state);
   20158:	8401b403          	ld	s0,-1984(gp) # 24480 <__wctomb>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wctomb_r.c:24
_DEFUN (_wctomb_r, (r, s, wchar, state),
        struct _reent *r     _AND 
        char          *s     _AND
        wchar_t        _wchar _AND
        mbstate_t     *state)
{
   2015c:	02113423          	sd	ra,40(sp)
   20160:	00913c23          	sd	s1,24(sp)
   20164:	01213823          	sd	s2,16(sp)
   20168:	01313423          	sd	s3,8(sp)
   2016c:	01413023          	sd	s4,0(sp)
   20170:	00050493          	mv	s1,a0
   20174:	00068a13          	mv	s4,a3
   20178:	00058913          	mv	s2,a1
   2017c:	00060993          	mv	s3,a2
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wctomb_r.c:25
  return __wctomb (r, s, _wchar, __locale_charset (), state);
   20180:	b90f70ef          	jal	17510 <__locale_charset>
   20184:	000a0713          	mv	a4,s4
   20188:	00050693          	mv	a3,a0
   2018c:	00098613          	mv	a2,s3
   20190:	00090593          	mv	a1,s2
   20194:	00048513          	mv	a0,s1
   20198:	00040313          	mv	t1,s0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wctomb_r.c:26
}
   2019c:	02813083          	ld	ra,40(sp)
   201a0:	02013403          	ld	s0,32(sp)
   201a4:	01813483          	ld	s1,24(sp)
   201a8:	01013903          	ld	s2,16(sp)
   201ac:	00813983          	ld	s3,8(sp)
   201b0:	00013a03          	ld	s4,0(sp)
   201b4:	03010113          	addi	sp,sp,48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/wctomb_r.c:25
        struct _reent *r     _AND 
        char          *s     _AND
        wchar_t        _wchar _AND
        mbstate_t     *state)
{
  return __wctomb (r, s, _wchar, __locale_charset (), state);
   201b8:	00030067          	jr	t1

00000000000201bc <__syscall_error>:
__syscall_error():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:95

#define syscall_errno(n, a, b, c, d) \
        __internal_syscall(n, (long)(a), (long)(b), (long)(c), (long)(d))

long __syscall_error(long a0)
{
   201bc:	ff010113          	addi	sp,sp,-16
   201c0:	00113423          	sd	ra,8(sp)
   201c4:	00813023          	sd	s0,0(sp)
   201c8:	00050413          	mv	s0,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:96
  errno = -a0;
   201cc:	3c4000ef          	jal	20590 <__errno>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:98
  return -1;
}
   201d0:	00813083          	ld	ra,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:96
#define syscall_errno(n, a, b, c, d) \
        __internal_syscall(n, (long)(a), (long)(b), (long)(c), (long)(d))

long __syscall_error(long a0)
{
  errno = -a0;
   201d4:	408007bb          	negw	a5,s0
   201d8:	00f52023          	sw	a5,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:98
  return -1;
}
   201dc:	00013403          	ld	s0,0(sp)
   201e0:	fff00513          	li	a0,-1
   201e4:	01010113          	addi	sp,sp,16
   201e8:	00008067          	ret

00000000000201ec <open>:
__internal_syscall():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:52
__internal_syscall(long n, long _a0, long _a1, long _a2, long _a3)
{
  register long a0 asm("a0") = _a0;
  register long a1 asm("a1") = _a1;
  register long a2 asm("a2") = _a2;
  register long a3 asm("a3") = _a3;
   201ec:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
  register long a7 asm("a7") = n;
   201f0:	40000893          	li	a7,1024
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   201f4:	00000073          	ecall
   201f8:	fc0542e3          	bltz	a0,201bc <__syscall_error>
open():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:103

int open(const char* name, int flags, int mode)
{
  return syscall_errno(SYS_open, name, flags, mode, 0);
}
   201fc:	0005051b          	sext.w	a0,a0
   20200:	00008067          	ret

0000000000020204 <openat>:
__internal_syscall():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
{
  register long a0 asm("a0") = _a0;
  register long a1 asm("a1") = _a1;
  register long a2 asm("a2") = _a2;
  register long a3 asm("a3") = _a3;
  register long a7 asm("a7") = n;
   20204:	03800893          	li	a7,56
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   20208:	00000073          	ecall
   2020c:	fa0548e3          	bltz	a0,201bc <__syscall_error>
openat():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:112
//------------------------------------------------------------------------
// Open file relative to given directory
int openat(int dirfd, const char* name, int flags, int mode)
{
  return syscall_errno(SYS_openat, dirfd, name, flags, mode);
}
   20210:	0005051b          	sext.w	a0,a0
   20214:	00008067          	ret

0000000000020218 <lseek>:
__internal_syscall():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:52
__internal_syscall(long n, long _a0, long _a1, long _a2, long _a3)
{
  register long a0 asm("a0") = _a0;
  register long a1 asm("a1") = _a1;
  register long a2 asm("a2") = _a2;
  register long a3 asm("a3") = _a3;
   20218:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
  register long a7 asm("a7") = n;
   2021c:	03e00893          	li	a7,62
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   20220:	00000073          	ecall
   20224:	f8054ce3          	bltz	a0,201bc <__syscall_error>
lseek():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:122
// Set position in a file.

off_t lseek(int file, off_t ptr, int dir)
{
  return syscall_errno(SYS_lseek, file, ptr, dir, 0);
}
   20228:	00008067          	ret

000000000002022c <read>:
__internal_syscall():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:52
__internal_syscall(long n, long _a0, long _a1, long _a2, long _a3)
{
  register long a0 asm("a0") = _a0;
  register long a1 asm("a1") = _a1;
  register long a2 asm("a2") = _a2;
  register long a3 asm("a3") = _a3;
   2022c:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
  register long a7 asm("a7") = n;
   20230:	03f00893          	li	a7,63
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   20234:	00000073          	ecall
   20238:	f80542e3          	bltz	a0,201bc <__syscall_error>
read():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:132
// Read from a file.

ssize_t read(int file, void* ptr, size_t len)
{
  return syscall_errno(SYS_read, file, ptr, len, 0);
}
   2023c:	00008067          	ret

0000000000020240 <write>:
__internal_syscall():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:52
__internal_syscall(long n, long _a0, long _a1, long _a2, long _a3)
{
  register long a0 asm("a0") = _a0;
  register long a1 asm("a1") = _a1;
  register long a2 asm("a2") = _a2;
  register long a3 asm("a3") = _a3;
   20240:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
  register long a7 asm("a7") = n;
   20244:	04000893          	li	a7,64
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   20248:	00000073          	ecall
   2024c:	f60548e3          	bltz	a0,201bc <__syscall_error>
write():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:142
// Write to a file.

ssize_t write(int file, const void* ptr, size_t len)
{
  return syscall_errno(SYS_write, file, ptr, len, 0);
}
   20250:	00008067          	ret

0000000000020254 <fstat>:
__internal_syscall():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:51
static inline long
__internal_syscall(long n, long _a0, long _a1, long _a2, long _a3)
{
  register long a0 asm("a0") = _a0;
  register long a1 asm("a1") = _a1;
  register long a2 asm("a2") = _a2;
   20254:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:52
  register long a3 asm("a3") = _a3;
   20258:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
  register long a7 asm("a7") = n;
   2025c:	05000893          	li	a7,80
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   20260:	00000073          	ecall
   20264:	f4054ce3          	bltz	a0,201bc <__syscall_error>
fstat():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:153
// distributed in the include subdirectory for this C library.

int fstat(int file, struct stat* st)
{
  return syscall_errno(SYS_fstat, file, st, 0, 0);
}
   20268:	0005051b          	sext.w	a0,a0
   2026c:	00008067          	ret

0000000000020270 <stat>:
__internal_syscall():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:51
static inline long
__internal_syscall(long n, long _a0, long _a1, long _a2, long _a3)
{
  register long a0 asm("a0") = _a0;
  register long a1 asm("a1") = _a1;
  register long a2 asm("a2") = _a2;
   20270:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:52
  register long a3 asm("a3") = _a3;
   20274:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
  register long a7 asm("a7") = n;
   20278:	40e00893          	li	a7,1038
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   2027c:	00000073          	ecall
   20280:	f2054ee3          	bltz	a0,201bc <__syscall_error>
stat():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:163
// Status of a file (by name).

int stat(const char* file, struct stat* st)
{
  return syscall_errno(SYS_stat, file, st, 0, 0);
}
   20284:	0005051b          	sext.w	a0,a0
   20288:	00008067          	ret

000000000002028c <lstat>:
__internal_syscall():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:51
static inline long
__internal_syscall(long n, long _a0, long _a1, long _a2, long _a3)
{
  register long a0 asm("a0") = _a0;
  register long a1 asm("a1") = _a1;
  register long a2 asm("a2") = _a2;
   2028c:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:52
  register long a3 asm("a3") = _a3;
   20290:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
  register long a7 asm("a7") = n;
   20294:	40f00893          	li	a7,1039
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   20298:	00000073          	ecall
   2029c:	f20540e3          	bltz	a0,201bc <__syscall_error>
lstat():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:173
// Status of a link (by name).

int lstat(const char* file, struct stat* st)
{
  return syscall_errno(SYS_lstat, file, st, 0, 0);
}
   202a0:	0005051b          	sext.w	a0,a0
   202a4:	00008067          	ret

00000000000202a8 <fstatat>:
__internal_syscall():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
{
  register long a0 asm("a0") = _a0;
  register long a1 asm("a1") = _a1;
  register long a2 asm("a2") = _a2;
  register long a3 asm("a3") = _a3;
  register long a7 asm("a7") = n;
   202a8:	04f00893          	li	a7,79
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   202ac:	00000073          	ecall
   202b0:	f00546e3          	bltz	a0,201bc <__syscall_error>
fstatat():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:183
// Status of a file (by name) in a given directory.

int fstatat(int dirfd, const char* file, struct stat* st, int flags)
{
  return syscall_errno(SYS_fstatat, dirfd, file, st, flags);
}
   202b4:	0005051b          	sext.w	a0,a0
   202b8:	00008067          	ret

00000000000202bc <access>:
__internal_syscall():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:51
static inline long
__internal_syscall(long n, long _a0, long _a1, long _a2, long _a3)
{
  register long a0 asm("a0") = _a0;
  register long a1 asm("a1") = _a1;
  register long a2 asm("a2") = _a2;
   202bc:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:52
  register long a3 asm("a3") = _a3;
   202c0:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
  register long a7 asm("a7") = n;
   202c4:	40900893          	li	a7,1033
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   202c8:	00000073          	ecall
   202cc:	ee0548e3          	bltz	a0,201bc <__syscall_error>
access():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:193
// Permissions of a file (by name).

int access(const char* file, int mode)
{
  return syscall_errno(SYS_access, file, mode, 0, 0);
}
   202d0:	0005051b          	sext.w	a0,a0
   202d4:	00008067          	ret

00000000000202d8 <faccessat>:
__internal_syscall():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
{
  register long a0 asm("a0") = _a0;
  register long a1 asm("a1") = _a1;
  register long a2 asm("a2") = _a2;
  register long a3 asm("a3") = _a3;
  register long a7 asm("a7") = n;
   202d8:	03000893          	li	a7,48
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   202dc:	00000073          	ecall
   202e0:	ec054ee3          	bltz	a0,201bc <__syscall_error>
faccessat():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:203
// Permissions of a file (by name) in a given directory.

int faccessat(int dirfd, const char* file, int mode, int flags)
{
  return syscall_errno(SYS_faccessat, dirfd, file, mode, flags);
}
   202e4:	0005051b          	sext.w	a0,a0
   202e8:	00008067          	ret

00000000000202ec <close>:
__internal_syscall():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:50

static inline long
__internal_syscall(long n, long _a0, long _a1, long _a2, long _a3)
{
  register long a0 asm("a0") = _a0;
  register long a1 asm("a1") = _a1;
   202ec:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:51
  register long a2 asm("a2") = _a2;
   202f0:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:52
  register long a3 asm("a3") = _a3;
   202f4:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
  register long a7 asm("a7") = n;
   202f8:	03900893          	li	a7,57
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   202fc:	00000073          	ecall
   20300:	ea054ee3          	bltz	a0,201bc <__syscall_error>
close():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:213
// Close a file.

int close(int file) 
{
  return syscall_errno(SYS_close, file, 0, 0, 0);
}
   20304:	0005051b          	sext.w	a0,a0
   20308:	00008067          	ret

000000000002030c <link>:
__internal_syscall():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:51
static inline long
__internal_syscall(long n, long _a0, long _a1, long _a2, long _a3)
{
  register long a0 asm("a0") = _a0;
  register long a1 asm("a1") = _a1;
  register long a2 asm("a2") = _a2;
   2030c:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:52
  register long a3 asm("a3") = _a3;
   20310:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
  register long a7 asm("a7") = n;
   20314:	40100893          	li	a7,1025
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   20318:	00000073          	ecall
   2031c:	ea0540e3          	bltz	a0,201bc <__syscall_error>
link():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:223
// Establish a new name for an existing file.

int link(const char* old_name, const char* new_name)
{
  return syscall_errno(SYS_link, old_name, new_name, 0, 0);
}
   20320:	0005051b          	sext.w	a0,a0
   20324:	00008067          	ret

0000000000020328 <unlink>:
__internal_syscall():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:50

static inline long
__internal_syscall(long n, long _a0, long _a1, long _a2, long _a3)
{
  register long a0 asm("a0") = _a0;
  register long a1 asm("a1") = _a1;
   20328:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:51
  register long a2 asm("a2") = _a2;
   2032c:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:52
  register long a3 asm("a3") = _a3;
   20330:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
  register long a7 asm("a7") = n;
   20334:	40200893          	li	a7,1026
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   20338:	00000073          	ecall
   2033c:	e80540e3          	bltz	a0,201bc <__syscall_error>
unlink():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:233
// Remove a file's directory entry.

int unlink(const char* name)
{
  return syscall_errno(SYS_unlink, name, 0, 0, 0);
}
   20340:	0005051b          	sext.w	a0,a0
   20344:	00008067          	ret

0000000000020348 <execve>:
execve():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:242
//------------------------------------------------------------------------
// Transfer control to a new process. Minimal implementation for a
// system without processes from newlib documentation.

int execve(const char* name, char* const argv[], char* const env[])
{
   20348:	ff010113          	addi	sp,sp,-16
   2034c:	00113423          	sd	ra,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:243
  errno = ENOMEM;
   20350:	240000ef          	jal	20590 <__errno>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:245
  return -1;
}
   20354:	00813083          	ld	ra,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:243
// Transfer control to a new process. Minimal implementation for a
// system without processes from newlib documentation.

int execve(const char* name, char* const argv[], char* const env[])
{
  errno = ENOMEM;
   20358:	00c00793          	li	a5,12
   2035c:	00f52023          	sw	a5,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:245
  return -1;
}
   20360:	01010113          	addi	sp,sp,16
   20364:	fff00513          	li	a0,-1
   20368:	00008067          	ret

000000000002036c <fork>:
fork():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:254
//------------------------------------------------------------------------
// Create a new process. Minimal implementation for a system without
// processes from newlib documentation.

int fork() 
{
   2036c:	ff010113          	addi	sp,sp,-16
   20370:	00113423          	sd	ra,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:255
  errno = EAGAIN;
   20374:	21c000ef          	jal	20590 <__errno>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:257
  return -1;
}
   20378:	00813083          	ld	ra,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:255
// Create a new process. Minimal implementation for a system without
// processes from newlib documentation.

int fork() 
{
  errno = EAGAIN;
   2037c:	00b00793          	li	a5,11
   20380:	00f52023          	sw	a5,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:257
  return -1;
}
   20384:	01010113          	addi	sp,sp,16
   20388:	fff00513          	li	a0,-1
   2038c:	00008067          	ret

0000000000020390 <getpid>:
getpid():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:269
// system without processes just returns 1.

int getpid() 
{
  return 1;
}
   20390:	00100513          	li	a0,1
   20394:	00008067          	ret

0000000000020398 <kill>:
kill():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:278
//------------------------------------------------------------------------
// Send a signal. Minimal implementation for a system without processes
// just causes an error.

int kill(int pid, int sig)
{
   20398:	ff010113          	addi	sp,sp,-16
   2039c:	00113423          	sd	ra,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:279
  errno = EINVAL;
   203a0:	1f0000ef          	jal	20590 <__errno>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:281
  return -1;
}
   203a4:	00813083          	ld	ra,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:279
// Send a signal. Minimal implementation for a system without processes
// just causes an error.

int kill(int pid, int sig)
{
  errno = EINVAL;
   203a8:	01600793          	li	a5,22
   203ac:	00f52023          	sw	a5,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:281
  return -1;
}
   203b0:	01010113          	addi	sp,sp,16
   203b4:	fff00513          	li	a0,-1
   203b8:	00008067          	ret

00000000000203bc <wait>:
wait():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:290
//------------------------------------------------------------------------
// Wait for a child process. Minimal implementation for a system without
// processes just causes an error.

int wait(int* status)
{
   203bc:	ff010113          	addi	sp,sp,-16
   203c0:	00113423          	sd	ra,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:291
  errno = ECHILD;
   203c4:	1cc000ef          	jal	20590 <__errno>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:293
  return -1;
}
   203c8:	00813083          	ld	ra,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:291
// Wait for a child process. Minimal implementation for a system without
// processes just causes an error.

int wait(int* status)
{
  errno = ECHILD;
   203cc:	00a00793          	li	a5,10
   203d0:	00f52023          	sw	a5,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:293
  return -1;
}
   203d4:	01010113          	addi	sp,sp,16
   203d8:	fff00513          	li	a0,-1
   203dc:	00008067          	ret

00000000000203e0 <isatty>:
isatty():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:303
// Query whether output stream is a terminal. For consistency with the
// other minimal implementations, which only support output to stdout,
// this minimal implementation is suggested by the newlib docs.

int isatty(int file)
{
   203e0:	f8010113          	addi	sp,sp,-128
__internal_syscall():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:50

static inline long
__internal_syscall(long n, long _a0, long _a1, long _a2, long _a3)
{
  register long a0 asm("a0") = _a0;
  register long a1 asm("a1") = _a1;
   203e4:	00010593          	mv	a1,sp
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:51
  register long a2 asm("a2") = _a2;
   203e8:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:52
  register long a3 asm("a3") = _a3;
   203ec:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
  register long a7 asm("a7") = n;
   203f0:	05000893          	li	a7,80
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   203f4:	00000073          	ecall
   203f8:	dc0542e3          	bltz	a0,201bc <__syscall_error>
isatty():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:306
  struct stat s;
  int ret = fstat(file,&s);
  return ret == -1 ? -1 : !!(s.st_mode & S_IFCHR);
   203fc:	fff00793          	li	a5,-1
fstat():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:152
// Status of an open file. The sys/stat.h header file required is
// distributed in the include subdirectory for this C library.

int fstat(int file, struct stat* st)
{
  return syscall_errno(SYS_fstat, file, st, 0, 0);
   20400:	0005051b          	sext.w	a0,a0
isatty():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:306

int isatty(int file)
{
  struct stat s;
  int ret = fstat(file,&s);
  return ret == -1 ? -1 : !!(s.st_mode & S_IFCHR);
   20404:	00f50863          	beq	a0,a5,20414 <isatty+0x34>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:306 (discriminator 1)
   20408:	01012503          	lw	a0,16(sp)
   2040c:	40d5551b          	sraiw	a0,a0,0xd
   20410:	00157513          	andi	a0,a0,1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:307 (discriminator 4)
}
   20414:	08010113          	addi	sp,sp,128
   20418:	00008067          	ret

000000000002041c <times>:
times():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:329

clock_t times(struct tms* buf)
{
  // when called for the first time, initialize t0
  static struct timeval t0;
  if(t0.tv_sec == 0)
   2041c:	99018313          	addi	t1,gp,-1648 # 245d0 <t0.2343>
   20420:	00033703          	ld	a4,0(t1)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:326
// children's times to zero. Eventually we might want to separately
// account for user vs system time, but for now we just return the total
// number of cycles since starting the program.

clock_t times(struct tms* buf)
{
   20424:	ff010113          	addi	sp,sp,-16
   20428:	00050813          	mv	a6,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:329
  // when called for the first time, initialize t0
  static struct timeval t0;
  if(t0.tv_sec == 0)
   2042c:	02071063          	bnez	a4,2044c <times+0x30>
__internal_syscall():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:49
#define SYS_dup 23

static inline long
__internal_syscall(long n, long _a0, long _a1, long _a2, long _a3)
{
  register long a0 asm("a0") = _a0;
   20430:	99018513          	addi	a0,gp,-1648 # 245d0 <t0.2343>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:50
  register long a1 asm("a1") = _a1;
   20434:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:51
  register long a2 asm("a2") = _a2;
   20438:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:52
  register long a3 asm("a3") = _a3;
   2043c:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
  register long a7 asm("a7") = n;
   20440:	0a900893          	li	a7,169
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   20444:	00000073          	ecall
   20448:	d6054ae3          	bltz	a0,201bc <__syscall_error>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:49
#define SYS_dup 23

static inline long
__internal_syscall(long n, long _a0, long _a1, long _a2, long _a3)
{
  register long a0 asm("a0") = _a0;
   2044c:	00010513          	mv	a0,sp
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:50
  register long a1 asm("a1") = _a1;
   20450:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:51
  register long a2 asm("a2") = _a2;
   20454:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:52
  register long a3 asm("a3") = _a3;
   20458:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
  register long a7 asm("a7") = n;
   2045c:	0a900893          	li	a7,169
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   20460:	00000073          	ecall
   20464:	d4054ce3          	bltz	a0,201bc <__syscall_error>
times():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:336

  struct timeval t;
  gettimeofday(&t,0);

  long long utime = (t.tv_sec-t0.tv_sec)*1000000 + (t.tv_usec-t0.tv_usec);
  buf->tms_utime = utime*CLOCKS_PER_SEC/1000000;
   20468:	00033703          	ld	a4,0(t1)
   2046c:	00013783          	ld	a5,0(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:340
  buf->tms_stime = buf->tms_cstime = buf->tms_cutime = 0;
  
  return -1;
}
   20470:	fff00513          	li	a0,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:337
  struct timeval t;
  gettimeofday(&t,0);

  long long utime = (t.tv_sec-t0.tv_sec)*1000000 + (t.tv_usec-t0.tv_usec);
  buf->tms_utime = utime*CLOCKS_PER_SEC/1000000;
  buf->tms_stime = buf->tms_cstime = buf->tms_cutime = 0;
   20474:	00083823          	sd	zero,16(a6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:336

  struct timeval t;
  gettimeofday(&t,0);

  long long utime = (t.tv_sec-t0.tv_sec)*1000000 + (t.tv_usec-t0.tv_usec);
  buf->tms_utime = utime*CLOCKS_PER_SEC/1000000;
   20478:	40e786b3          	sub	a3,a5,a4
   2047c:	000f47b7          	lui	a5,0xf4
   20480:	24078793          	addi	a5,a5,576 # f4240 <_end+0xcd428>
   20484:	02f68733          	mul	a4,a3,a5
   20488:	00833683          	ld	a3,8(t1)
   2048c:	00813783          	ld	a5,8(sp)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:337
  buf->tms_stime = buf->tms_cstime = buf->tms_cutime = 0;
   20490:	00083c23          	sd	zero,24(a6)
   20494:	00083423          	sd	zero,8(a6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:336

  struct timeval t;
  gettimeofday(&t,0);

  long long utime = (t.tv_sec-t0.tv_sec)*1000000 + (t.tv_usec-t0.tv_usec);
  buf->tms_utime = utime*CLOCKS_PER_SEC/1000000;
   20498:	40d787b3          	sub	a5,a5,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:340
  buf->tms_stime = buf->tms_cstime = buf->tms_cutime = 0;
  
  return -1;
}
   2049c:	01010113          	addi	sp,sp,16
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:336

  struct timeval t;
  gettimeofday(&t,0);

  long long utime = (t.tv_sec-t0.tv_sec)*1000000 + (t.tv_usec-t0.tv_usec);
  buf->tms_utime = utime*CLOCKS_PER_SEC/1000000;
   204a0:	00f707b3          	add	a5,a4,a5
   204a4:	00f83023          	sd	a5,0(a6)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:340
  buf->tms_stime = buf->tms_cstime = buf->tms_cutime = 0;
  
  return -1;
}
   204a8:	00008067          	ret

00000000000204ac <gettimeofday>:
__internal_syscall():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:50

static inline long
__internal_syscall(long n, long _a0, long _a1, long _a2, long _a3)
{
  register long a0 asm("a0") = _a0;
  register long a1 asm("a1") = _a1;
   204ac:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:51
  register long a2 asm("a2") = _a2;
   204b0:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:52
  register long a3 asm("a3") = _a3;
   204b4:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
  register long a7 asm("a7") = n;
   204b8:	0a900893          	li	a7,169
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   204bc:	00000073          	ecall
   204c0:	ce054ee3          	bltz	a0,201bc <__syscall_error>
gettimeofday():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:350
// Get the current time.  Only relatively correct.

int gettimeofday(struct timeval* tp, void* tzp)
{
  return syscall_errno(SYS_gettimeofday, tp, 0, 0, 0);
}
   204c4:	0005051b          	sext.w	a0,a0
   204c8:	00008067          	ret

00000000000204cc <ftime>:
ftime():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:359
//----------------------------------------------------------------------
// Get the current time.  Only relatively correct.

int ftime(struct timeb* tp)
{
  tp->time = tp->millitm = 0;
   204cc:	00051423          	sh	zero,8(a0)
   204d0:	00053023          	sd	zero,0(a0)
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:361
  return 0;
}
   204d4:	00000513          	li	a0,0
   204d8:	00008067          	ret

00000000000204dc <utime>:
utime():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:371
// Stub.

int utime(const char* path, const struct utimbuf* times)
{
  return -1;
}
   204dc:	fff00513          	li	a0,-1
   204e0:	00008067          	ret

00000000000204e4 <chown>:
chown():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:381
// Stub.

int chown(const char* path, uid_t owner, gid_t group)
{
  return -1;
}
   204e4:	fff00513          	li	a0,-1
   204e8:	00008067          	ret

00000000000204ec <chmod>:
chmod():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:391
// Stub.

int chmod(const char* path, mode_t mode)
{
  return -1;
}
   204ec:	fff00513          	li	a0,-1
   204f0:	00008067          	ret

00000000000204f4 <chdir>:
chdir():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:401
// Stub.

int chdir(const char* path)
{
  return -1;
}
   204f4:	fff00513          	li	a0,-1
   204f8:	00008067          	ret

00000000000204fc <getcwd>:
getcwd():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:411
// Stub.

char* getcwd(char* buf, size_t size)
{
  return NULL;
}
   204fc:	00000513          	li	a0,0
   20500:	00008067          	ret

0000000000020504 <sysconf>:
sysconf():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:420
//----------------------------------------------------------------------
// Get configurable system variables

long sysconf(int name)
{
  switch(name)
   20504:	00200793          	li	a5,2
   20508:	00f51863          	bne	a0,a5,20518 <sysconf+0x14>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:423
  {
    case _SC_CLK_TCK:
      return CLOCKS_PER_SEC;
   2050c:	000f4537          	lui	a0,0xf4
   20510:	24050513          	addi	a0,a0,576 # f4240 <_end+0xcd428>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:427
  }

  return -1;
}
   20514:	00008067          	ret
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:426
  {
    case _SC_CLK_TCK:
      return CLOCKS_PER_SEC;
  }

  return -1;
   20518:	fff00513          	li	a0,-1
   2051c:	00008067          	ret

0000000000020520 <sbrk>:
sbrk():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:442
void* sbrk(ptrdiff_t incr)
{
  extern unsigned char _end[]; // Defined by linker
  static unsigned long heap_end;

  if (heap_end == 0)
   20520:	9281b703          	ld	a4,-1752(gp) # 24568 <heap_end.2381>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:438
// on this, it is useful to have a working implementation. The following
// is suggested by the newlib docs and suffices for a standalone
// system.

void* sbrk(ptrdiff_t incr)
{
   20524:	00050793          	mv	a5,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:442
  extern unsigned char _end[]; // Defined by linker
  static unsigned long heap_end;

  if (heap_end == 0)
   20528:	00071863          	bnez	a4,20538 <sbrk+0x18>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:443
    heap_end = (long)_end;
   2052c:	00027737          	lui	a4,0x27
   20530:	e1870713          	addi	a4,a4,-488 # 26e18 <_end>
   20534:	92e1b423          	sd	a4,-1752(gp) # 24568 <heap_end.2381>
__internal_syscall():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:49
#define SYS_dup 23

static inline long
__internal_syscall(long n, long _a0, long _a1, long _a2, long _a3)
{
  register long a0 asm("a0") = _a0;
   20538:	00e78533          	add	a0,a5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:50
  register long a1 asm("a1") = _a1;
   2053c:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:51
  register long a2 asm("a2") = _a2;
   20540:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:52
  register long a3 asm("a3") = _a3;
   20544:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
  register long a7 asm("a7") = n;
   20548:	0d600893          	li	a7,214
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   2054c:	00000073          	ecall
   20550:	c60546e3          	bltz	a0,201bc <__syscall_error>
sbrk():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:444
  if (syscall_errno(SYS_brk, heap_end + incr, 0, 0, 0) != heap_end + incr)
   20554:	9281b683          	ld	a3,-1752(gp) # 24568 <heap_end.2381>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:445
    return (void*)-1;
   20558:	fff00713          	li	a4,-1
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:444
  extern unsigned char _end[]; // Defined by linker
  static unsigned long heap_end;

  if (heap_end == 0)
    heap_end = (long)_end;
  if (syscall_errno(SYS_brk, heap_end + incr, 0, 0, 0) != heap_end + incr)
   2055c:	00d787b3          	add	a5,a5,a3
   20560:	00f51663          	bne	a0,a5,2056c <sbrk+0x4c>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:447
    return (void*)-1;

  heap_end += incr;
   20564:	92a1b423          	sd	a0,-1752(gp) # 24568 <heap_end.2381>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:448
  return heap_end - incr;
   20568:	00068713          	mv	a4,a3
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/syscalls.c:449
}
   2056c:	00070513          	mv	a0,a4
   20570:	00008067          	ret

0000000000020574 <_exit>:
__internal_syscall():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:50

static inline long
__internal_syscall(long n, long _a0, long _a1, long _a2, long _a3)
{
  register long a0 asm("a0") = _a0;
  register long a1 asm("a1") = _a1;
   20574:	00000593          	li	a1,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:51
  register long a2 asm("a2") = _a2;
   20578:	00000613          	li	a2,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:52
  register long a3 asm("a3") = _a3;
   2057c:	00000693          	li	a3,0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:53
  register long a7 asm("a7") = n;
   20580:	05d00893          	li	a7,93
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/libgloss/riscv/machine/syscall.h:55

  asm volatile ("scall\n"
   20584:	00000073          	ecall
   20588:	c2054ae3          	bltz	a0,201bc <__syscall_error>
   2058c:	0000006f          	j	2058c <_exit+0x18>

0000000000020590 <__errno>:
__errno():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/errno/errno.c:14

int *
__errno ()
{
  return &_REENT->_errno;
}
   20590:	8101b503          	ld	a0,-2032(gp) # 24450 <_impure_ptr>
   20594:	00008067          	ret

0000000000020598 <sulp>:
sulp():
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:163
{
        U u;
        double rv;
        int i;

        rv = ulp(dval(x));
   20598:	f2050553          	fmv.d.x	fa0,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:158
#ifdef Avoid_Underflow /*{*/
 static double
_DEFUN (sulp, (x, scale),
       	U x _AND
	int scale)
{
   2059c:	fe010113          	addi	sp,sp,-32
   205a0:	00913423          	sd	s1,8(sp)
   205a4:	00058493          	mv	s1,a1
   205a8:	00813823          	sd	s0,16(sp)
   205ac:	00113c23          	sd	ra,24(sp)
   205b0:	00050413          	mv	s0,a0
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:163
        U u;
        double rv;
        int i;

        rv = ulp(dval(x));
   205b4:	a00f80ef          	jal	187b4 <__ulp>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:164
        if (!scale || (i = 2*P + 1 - ((dword0(x) & Exp_mask) >> Exp_shift)) <= 0)
   205b8:	02048a63          	beqz	s1,205ec <sulp+0x54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:164 (discriminator 1)
   205bc:	42045413          	srai	s0,s0,0x20
   205c0:	02141413          	slli	s0,s0,0x21
   205c4:	03545413          	srli	s0,s0,0x35
   205c8:	06b00793          	li	a5,107
   205cc:	408787bb          	subw	a5,a5,s0
   205d0:	00f05e63          	blez	a5,205ec <sulp+0x54>
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:166
                return rv; /* Is there an example where i <= 0 ? */
        dword0(u) = Exp_1 + ((__int32_t)i << Exp_shift);
   205d4:	0147979b          	slliw	a5,a5,0x14
   205d8:	3ff00737          	lui	a4,0x3ff00
   205dc:	00e787bb          	addw	a5,a5,a4
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:168
#ifndef _DOUBLE_IS_32BITS
        dword1(u) = 0;
   205e0:	02079793          	slli	a5,a5,0x20
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:170
#endif
        return rv * u.d;
   205e4:	f20787d3          	fmv.d.x	fa5,a5
   205e8:	12f57553          	fmul.d	fa0,fa0,fa5
/home/nancy/riscv-tools/riscv-gnu-toolchain/build/src/newlib-gcc/newlib/libc/stdlib/strtod.c:171
        }
   205ec:	01813083          	ld	ra,24(sp)
   205f0:	01013403          	ld	s0,16(sp)
   205f4:	00813483          	ld	s1,8(sp)
   205f8:	02010113          	addi	sp,sp,32
   205fc:	00008067          	ret
